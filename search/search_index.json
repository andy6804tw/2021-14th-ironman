{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u63ed\u958b\u9ed1\u7bb1\u6a21\u578b\uff1a\u63a2\u7d22\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167 \u7b2c15\u5c46iT\u90a6\u5e6b\u5fd9\u9435\u4eba\u8cfd \u672c\u7cfb\u5217\u5c07\u5f9e XAI \u7684\u57fa\u790e\u77e5\u8b58\u51fa\u767c\uff0c\u6df1\u5165\u63a2\u8a0e\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u5728\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528\u3001\u6848\u4f8b\u548c\u6311\u6230\uff0c\u4ee5\u53ca\u672a\u4f86\u767c\u5c55\u65b9\u5411\u3002\u5e0c\u671b\u900f\u904e\u9019\u500b\u7cfb\u5217\uff0c\u5e6b\u52a9\u8b80\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u61c9\u7528\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u6280\u8853\uff0c\u4fc3\u9032\u53ef\u4fe1\u3001\u900f\u660e\u3001\u8ca0\u8cac\u4efb\u7684\u4eba\u5de5\u667a\u6167\u767c\u5c55\u3002 \u56de\u5831\u932f\u8aa4\u8207\u5efa\u8b70 \u672c\u7cfb\u5217\u6587\u7ae0\u82e5\u6709\u554f\u984c\u6216\u662f\u5167\u5bb9\u5efa\u8b70\u90fd\u53ef\u4ee5\u4f86 GitHub \u4e2d\u7684 issue \u63d0\u51fa\u3002\u6b61\u8fce\u5927\u5bb6\u4e00\u540c\u8ca2\u737b\u70ba\u9019\u7cfb\u5217\u6587\u7ae0\u6709\u66f4\u597d\u7684\u95b1\u8b80\u54c1\u8cea\u3002 \u6b61\u8fce\u5927\u5bb6\u8a02\u95b1\u6211\u7684 YouTube \u983b\u9053\u3002","title":"\u63ed\u958b\u9ed1\u7bb1\u6a21\u578b\uff1a\u63a2\u7d22\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167"},{"location":"#_1","text":"\u7b2c15\u5c46iT\u90a6\u5e6b\u5fd9\u9435\u4eba\u8cfd \u672c\u7cfb\u5217\u5c07\u5f9e XAI \u7684\u57fa\u790e\u77e5\u8b58\u51fa\u767c\uff0c\u6df1\u5165\u63a2\u8a0e\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u5728\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528\u3001\u6848\u4f8b\u548c\u6311\u6230\uff0c\u4ee5\u53ca\u672a\u4f86\u767c\u5c55\u65b9\u5411\u3002\u5e0c\u671b\u900f\u904e\u9019\u500b\u7cfb\u5217\uff0c\u5e6b\u52a9\u8b80\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u61c9\u7528\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u6280\u8853\uff0c\u4fc3\u9032\u53ef\u4fe1\u3001\u900f\u660e\u3001\u8ca0\u8cac\u4efb\u7684\u4eba\u5de5\u667a\u6167\u767c\u5c55\u3002","title":"\u63ed\u958b\u9ed1\u7bb1\u6a21\u578b\uff1a\u63a2\u7d22\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167"},{"location":"#_2","text":"\u672c\u7cfb\u5217\u6587\u7ae0\u82e5\u6709\u554f\u984c\u6216\u662f\u5167\u5bb9\u5efa\u8b70\u90fd\u53ef\u4ee5\u4f86 GitHub \u4e2d\u7684 issue \u63d0\u51fa\u3002\u6b61\u8fce\u5927\u5bb6\u4e00\u540c\u8ca2\u737b\u70ba\u9019\u7cfb\u5217\u6587\u7ae0\u6709\u66f4\u597d\u7684\u95b1\u8b80\u54c1\u8cea\u3002 \u6b61\u8fce\u5927\u5bb6\u8a02\u95b1\u6211\u7684 YouTube \u983b\u9053\u3002","title":"\u56de\u5831\u932f\u8aa4\u8207\u5efa\u8b70"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/","text":"[Day 1] \u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17\uff1a\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981\uff1f \u4eba\u5de5\u667a\u6167\u7684\u767c\u5c55\u5df2\u7d93\u9032\u5165\u4e86\u4e00\u500b\u65b0\u7684\u968e\u6bb5\uff0c\u4f5c\u70baAI\u7684\u91cd\u8981\u5206\u652f\u300c\u6a5f\u5668\u5b78\u7fd2\u300d\uff0c\u5df2\u7d93\u88ab\u5ee3\u6cdb\u61c9\u7528\u65bc\u5404\u500b\u9818\u57df\uff0c\u4f8b\u5982\u8a9e\u97f3\u8b58\u5225\u3001\u5716\u50cf\u5206\u985e\u3001\u81ea\u7136\u8a9e\u8a00\u8655\u7406......\u7b49\u3002\u7136\u800c\u96a8\u8457\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u7684\u767c\u5c55\uff0c\u7279\u5225\u662f\u6a21\u578b\u300c\u9ed1\u7bb1\u300d\u7279\u6027\uff0c\u4f7f\u5f97\u5176\u6c7a\u7b56\u904e\u7a0b\u8b8a\u5f97\u8d8a\u4f86\u8d8a\u4e0d\u900f\u660e\uff0c\u4e14\u7f3a\u4e4f\u5c0d\u5916\u90e8\u4eba\u54e1\u7684\u89e3\u91cb\u548c\u7406\u89e3\uff0c\u9019\u4e5f\u4f7f\u5f97\u6a5f\u5668\u5b78\u7fd2\u5728\u4e00\u4e9b\u95dc\u9375\u9818\u57df\u96e3\u4ee5\u5f97\u5230\u61c9\u7528\u3002\u56e0\u6b64\u9019\u5c31\u5f15\u51fa\u4e86\u4e00\u500b\u91cd\u8981\u7684\u8b70\u984c\uff1a\u6211\u5011\u8a72\u5982\u4f55\u78ba\u4fdd\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff1f\u70ba\u6b64\uff0c\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff08Explainable AI\uff0cXAI\uff09\u7684\u51fa\u73fe\u6210\u70ba\u4e86\u4e00\u500b\u91cd\u8981\u7684\u7814\u7a76\u65b9\u5411\u3002 XAI \u65e8\u5728\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff0c\u4f7f\u4eba\u5011\u80fd\u5920\u7406\u89e3\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9032\u4e00\u6b65\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002 \u70ba\u4f55\u9700\u8981\u89e3\u91cb\u6a21\u578b\uff1f \u5728\u4eba\u5de5\u667a\u6167\u9818\u57df\u4e2d\uff0c\u6a21\u578b\u89e3\u91cb\u6027\u5df2\u7d93\u6210\u70ba\u4e00\u500b\u91cd\u8981\u7684\u8ab2\u984c\u3002\u904e\u53bb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u88ab\u8996\u70ba\u4e00\u500b\u9ed1\u7bb1\uff0c\u56e0\u70ba\u5b83\u5011\u7684\u6c7a\u7b56\u904e\u7a0b\u5f80\u5f80\u904e\u65bc\u8907\u96dc\u800c\u96e3\u4ee5\u89e3\u91cb\u3002\u9019\u500b\u554f\u984c\u5df2\u7d93\u5f15\u8d77\u4e86\u95dc\u6ce8\uff0c\u5c0d\u65bc\u90a3\u4e9b\u9700\u8981\u7406\u89e3\u6a21\u578b\u80cc\u5f8c\u7684\u908f\u8f2f\u548c\u6c7a\u7b56\u904e\u7a0b\u7684\u4eba\u4f86\u8aaa\uff0c\u9ed1\u7bb1\u6a21\u578b\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002 \u7c21\u55ae\u4f86\u8aaa\uff0c\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17\u53ef\u4ee5\u8b93\u4eba\u5011\u7406\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u5982\u4f55\u9032\u884c\u9810\u6e2c\u548c\u6c7a\u7b56\u3002\u9019\u7a2e\u7406\u89e3\u5c0d\u65bc\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u9760\u6027\u548c\u53ef\u4fe1\u5ea6\u81f3\u95dc\u91cd\u8981\u3002 XAI \u6240\u626e\u6f14\u7684\u89d2\u8272 \u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u6a21\u578b\uff0c\u7528\u65bc\u5206\u985e\u5716\u50cf\u4e2d\u7684\u7269\u9ad4\u7a2e\u985e\u3002\u7576\u6211\u5011\u8f38\u5165\u4e00\u5f35\u7167\u7247\u7d66\u6a21\u578b\u6642\uff0c\u6a21\u578b\u6703\u7d66\u51fa\u4e00\u500b\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u544a\u8a34\u6211\u5011\u7167\u7247\u4e2d\u7684\u7269\u9ad4\u7a2e\u985e\u662f\u4ec0\u9ebc\u3002\u4f46\u662f\u7576\u6a21\u578b\u7d66\u51fa\u932f\u8aa4\u7684\u9810\u6e2c\u6642\uff0c\u6211\u5011\u7121\u6cd5\u4e86\u89e3\u6a21\u578b\u70ba\u4f55\u505a\u51fa\u9019\u6a23\u7684\u6c7a\u7b56\u3002\u9019\u6642\u5019\u6a21\u578b\u89e3\u91cb\u7684\u6280\u8853\u5c31\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4f8b\u5982\u54ea\u4e9b\u5340\u57df\u5c0d\u9810\u6e2c\u7d50\u679c\u6709\u8f03\u5927\u7684\u5f71\u97ff\uff0c\u54ea\u4e9b\u7279\u5fb5\u5c0d\u9810\u6e2c\u7d50\u679c\u8ca2\u737b\u8f03\u5927\u7b49\u7b49\u3002\u4ee5\u4e0b\u8209\u4e00\u500b\u7d93\u5178\u7684\u5f71\u50cf\u5206\u985e\u6848\u4f8b\uff0c\u4e5f\u5c31\u662f\u5927\u5bb6\u6240\u719f\u77e5\u7684\u8c93\u72d7\u5206\u985e\u3002\u66fe\u7d93\u7684\u6211\u4ee5\u70ba\u5df2\u7d93\u8a13\u7df4\u4e86\u4e00\u500b\u8fa8\u8b58\u80fd\u529b\u6975\u9ad8\u7684\u8c93\u72d7\u5206\u985e\u5668\uff0c\u4f46\u662f\u5728\u5be6\u969b\u9a57\u8b49\u96c6\u8cc7\u6599\u4e2d\u7684\u6e96\u78ba\u7387\u4e0d\u5230\u4e00\u534a\uff0c\u9019\u5f88\u660e\u986f\u662f\u6a21\u578b \u904e\u64ec\u5408 \u7684\u7d50\u679c\u3002\u6700\u5f8c\u4f7f\u7528\u53ef\u89e3\u91cb\u7684\u6280\u8853\u5c0d\u6a21\u578b\u9032\u884c\u89e3\u6790\uff0c\u767c\u73fe\u6a21\u578b\u4e26\u975e\u771f\u7684\u5b78\u5230\u8fa8\u8b58\u8c93\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u3002\u7f6a\u9b41\u798d\u9996\u7adf\u7136\u662f\u56e0\u70ba\u8a13\u7df4\u96c6\u4e2d\u6709\u8a31\u591a\u7684\u8c93\u54aa\u7167\u7247\u90fd\u6234\u8457\u9234\u943a\u9805\u5708\uff0c\u5c0e\u81f4\u6a21\u578b\u8aa4\u8a8d\u9805\u5708\u70ba\u8fa8\u8b58\u8c93\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u3002\u9019\u500b\u6848\u4f8b\u986f\u793a\u4e86\u6a21\u578b\u89e3\u91cb\u7684\u91cd\u8981\u6027\uff0c\u56e0\u70ba\u5982\u679c\u7121\u6cd5\u7406\u89e3\u6a21\u578b\u80cc\u5f8c\u7684\u908f\u8f2f\u548c\u6c7a\u7b56\u904e\u7a0b\uff0c\u90a3\u9ebc\u6a21\u578b\u7684\u6548\u80fd\u53ef\u80fd\u6703\u53d7\u5230\u8ca0\u9762\u7684\u5f71\u97ff\u3002 \u4e0a\u8ff0\u662f\u4e00\u500b\u7d93\u5178\u7684\u5f71\u50cf\u8fa8\u8b58 XAI \u6280\u8853\u7684\u6848\u4f8b\uff0c\u5f9e\u4e2d\u53ef\u4ee5\u767c\u73fe\u8a13\u7df4\u4e00\u500b\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u6240\u4f7f\u7528\u7684\u8cc7\u6599\u54c1\u8cea\u6975\u70ba\u91cd\u8981\u3002Landing.ai \u57f7\u884c\u9577\u5433\u6069\u9054\u66fe\u5728\u67d0\u5834\u6f14\u8b1b\u4e2d\u63d0\u5230\uff0c\u900f\u904e\u8cc7\u6599\u7684\u6539\u5584\u6240\u5e36\u4f86\u7684\u6700\u7d42\u5f71\u97ff\u9060\u5927\u65bc\u6539\u5584\u6a21\u578b\u672c\u8eab\uff0c\u56e0\u70ba\u8cc7\u6599\u6a19\u8a3b\u6240\u5e36\u4f86\u7684\u504f\u5dee\u5f80\u5f80\u662f\u5f71\u97ff\u6a21\u578b\u8a13\u7df4\u7684\u95dc\u9375\u56e0\u7d20\u4e4b\u4e00\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a The Future of Data-Centric AI XAI \u7684\u91cd\u8981\u6027\u548c\u512a\u9ede \u900f\u904e XAI \u63d0\u9ad8\u6a21\u578b\u53ef\u9760\u6027\u548c\u89e3\u91cb\u6027\uff0c\u4f7f\u6a5f\u5668\u5b78\u7fd2\u6210\u679c\u80fd\u5920\u88ab\u66f4\u5ee3\u6cdb\u7684\u4eba\u7406\u89e3\u548c\u63a5\u53d7\u3002\u6b64\u5916\u900f\u904e\u89e3\u91cb\u4e0d\u540c\u7684\u7279\u5fb5\u5c0d\u6a21\u578b\u6c7a\u7b56\u7684\u5f71\u97ff\uff0c\u5e6b\u52a9\u8cc7\u6599\u79d1\u5b78\u5bb6\u6539\u9032\u548c\u512a\u5316\u6a21\u578b\u3002 - XAI \u80fd\u5920\u5e6b\u52a9\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u66f4\u597d\u5730\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b - \u9019\u5c0d\u65bc\u78ba\u5b9a\u6a21\u578b\u7684\u5f31\u9ede\u548c\u63d0\u9ad8\u5176\u6027\u80fd\u81f3\u95dc\u91cd\u8981\u3002\u900f\u904e XAI \u6280\u8853\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u5982\u4f55\u4f5c\u51fa\u6c7a\u7b56\uff0c\u5f9e\u800c\u767c\u73fe\u5176\u7f3a\u9677\u548c\u6f5b\u5728\u7684\u504f\u898b\u3002 XAI \u80fd\u5920\u6539\u5584\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002 \u7576\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u8b8a\u5f97\u900f\u660e\u6642\uff0c\u4f7f\u7528\u8005\u548c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u958b\u767c\u8005\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u6a21\u578b\u7684\u8868\u73fe\u548c\u5f31\u9ede\uff0c\u9032\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002 XAI \u80fd\u5920\u4fc3\u9032\u4eba\u6a5f\u5171\u5b78 \u5c07\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u8a2d\u8a08\u70ba\u53ef\u89e3\u91cb\u7684\uff0c\u6709\u52a9\u65bc\u4eba\u985e\u66f4\u597d\u5730\u7406\u89e3\u5176\u6c7a\u7b56\u4e26\u8207\u5176\u5408\u4f5c\u3002\u9019\u6a23\u53ef\u4ee5\u4f7f\u4eba\u5de5\u667a\u6167\u5728\u66f4\u591a\u7684\u9818\u57df\u5f97\u5230\u61c9\u7528\uff0c\u5f9e\u800c\u70ba\u4eba\u985e\u5275\u9020\u66f4\u591a\u7684\u50f9\u503c\u3002 XAI \u80fd\u5920\u4f7f\u6a21\u578b\u6d88\u9664\u504f\u898b \u53ef\u5e6b\u52a9\u78ba\u5b9a\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u504f\u898b\u548c\u6b67\u8996\uff0c\u9032\u800c\u8abf\u6574\u8a13\u7df4\u6578\u64da\u548c\u6a21\u578b\u67b6\u69cb\uff0c\u6d88\u9664\u9019\u4e9b\u504f\u898b\u3002 XAI \u7684\u61c9\u7528\u9818\u57df XAI \u7684\u61c9\u7528\u9818\u57df\u5341\u5206\u5ee3\u6cdb\uff0c\u4f8b\u5982\u5728\u667a\u6167\u88fd\u9020\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u5de5\u7a0b\u5e2b\u5c0d\u65bc\u6a5f\u53f0\u7570\u5e38\u72c0\u6cc1\u6216\u53c3\u6578\u6700\u4f73\u5316\u9032\u4e00\u6b65\u5206\u6790\uff0c\u4e26\u63d0\u9ad8\u7522\u80fd\uff1b\u5728\u91d1\u878d\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u5206\u6790\u5e2b\u5c0d\u91d1\u878d\u7522\u54c1\u9032\u884c\u5206\u6790\uff0c\u63d0\u9ad8\u91d1\u878d\u98a8\u96aa\u7ba1\u7406\u7684\u6548\u7387\u548c\u6e96\u78ba\u6027\uff1b\u5728\u91ab\u7642\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u91ab\u751f\u66f4\u597d\u5730\u7406\u89e3\u75be\u75c5\u548c\u6cbb\u7642\u65b9\u6848\uff0c\u63d0\u9ad8\u60a3\u8005\u7684\u91ab\u7642\u670d\u52d9\u8cea\u91cf\u548c\u5b89\u5168\u6027\uff1b\u5728\u81ea\u52d5\u99d5\u99db\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u99d5\u99db\u66f4\u597d\u5730\u7406\u89e3\u81ea\u52d5\u99d5\u99db\u7cfb\u7d71\u7684\u6c7a\u7b56\uff0c\u63d0\u9ad8\u99d5\u99db\u5b89\u5168\u6027\u3002 XAI \u7684\u51fa\u73fe\u4f7f\u5f97\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u80fd\u5920\u66f4\u597d\u5730\u61c9\u7528\u65bc\u5404\u500b\u9818\u57df\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u9760\u6027\u548c\u900f\u660e\u5ea6\uff0c\u540c\u6642\u4e5f\u80fd\u5920\u63d0\u9ad8\u61c9\u7528\u5834\u666f\u7684\u5b89\u5168\u6027\u548c\u96b1\u79c1\u6027\u3002\u7e3d\u4e4b\uff0c\u5728\u9019\u4e09\u5341\u5929\u7576\u4e2d\u5c07\u6703\u9010\u4e00\u5730\u4ecb\u7d39\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u4e2d\u5e38\u898b\u7684\u6a21\u578b\u89e3\u91cb\u6280\u5de7\u3002\u8acb\u5404\u4f4d\u76e1\u8acb\u671f\u5f85\uff01 Reference XAI| \u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u91cd\u8981 \u589e\u52a0\u5167\u5bb9\u53c3\u8003","title":"[Day 1] \u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17\uff1a\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981\uff1f"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#day-1-xai","text":"\u4eba\u5de5\u667a\u6167\u7684\u767c\u5c55\u5df2\u7d93\u9032\u5165\u4e86\u4e00\u500b\u65b0\u7684\u968e\u6bb5\uff0c\u4f5c\u70baAI\u7684\u91cd\u8981\u5206\u652f\u300c\u6a5f\u5668\u5b78\u7fd2\u300d\uff0c\u5df2\u7d93\u88ab\u5ee3\u6cdb\u61c9\u7528\u65bc\u5404\u500b\u9818\u57df\uff0c\u4f8b\u5982\u8a9e\u97f3\u8b58\u5225\u3001\u5716\u50cf\u5206\u985e\u3001\u81ea\u7136\u8a9e\u8a00\u8655\u7406......\u7b49\u3002\u7136\u800c\u96a8\u8457\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u7684\u767c\u5c55\uff0c\u7279\u5225\u662f\u6a21\u578b\u300c\u9ed1\u7bb1\u300d\u7279\u6027\uff0c\u4f7f\u5f97\u5176\u6c7a\u7b56\u904e\u7a0b\u8b8a\u5f97\u8d8a\u4f86\u8d8a\u4e0d\u900f\u660e\uff0c\u4e14\u7f3a\u4e4f\u5c0d\u5916\u90e8\u4eba\u54e1\u7684\u89e3\u91cb\u548c\u7406\u89e3\uff0c\u9019\u4e5f\u4f7f\u5f97\u6a5f\u5668\u5b78\u7fd2\u5728\u4e00\u4e9b\u95dc\u9375\u9818\u57df\u96e3\u4ee5\u5f97\u5230\u61c9\u7528\u3002\u56e0\u6b64\u9019\u5c31\u5f15\u51fa\u4e86\u4e00\u500b\u91cd\u8981\u7684\u8b70\u984c\uff1a\u6211\u5011\u8a72\u5982\u4f55\u78ba\u4fdd\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff1f\u70ba\u6b64\uff0c\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff08Explainable AI\uff0cXAI\uff09\u7684\u51fa\u73fe\u6210\u70ba\u4e86\u4e00\u500b\u91cd\u8981\u7684\u7814\u7a76\u65b9\u5411\u3002 XAI \u65e8\u5728\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff0c\u4f7f\u4eba\u5011\u80fd\u5920\u7406\u89e3\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9032\u4e00\u6b65\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002","title":"[Day 1] \u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17\uff1a\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981\uff1f"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#_1","text":"\u5728\u4eba\u5de5\u667a\u6167\u9818\u57df\u4e2d\uff0c\u6a21\u578b\u89e3\u91cb\u6027\u5df2\u7d93\u6210\u70ba\u4e00\u500b\u91cd\u8981\u7684\u8ab2\u984c\u3002\u904e\u53bb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u88ab\u8996\u70ba\u4e00\u500b\u9ed1\u7bb1\uff0c\u56e0\u70ba\u5b83\u5011\u7684\u6c7a\u7b56\u904e\u7a0b\u5f80\u5f80\u904e\u65bc\u8907\u96dc\u800c\u96e3\u4ee5\u89e3\u91cb\u3002\u9019\u500b\u554f\u984c\u5df2\u7d93\u5f15\u8d77\u4e86\u95dc\u6ce8\uff0c\u5c0d\u65bc\u90a3\u4e9b\u9700\u8981\u7406\u89e3\u6a21\u578b\u80cc\u5f8c\u7684\u908f\u8f2f\u548c\u6c7a\u7b56\u904e\u7a0b\u7684\u4eba\u4f86\u8aaa\uff0c\u9ed1\u7bb1\u6a21\u578b\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002 \u7c21\u55ae\u4f86\u8aaa\uff0c\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17\u53ef\u4ee5\u8b93\u4eba\u5011\u7406\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u5982\u4f55\u9032\u884c\u9810\u6e2c\u548c\u6c7a\u7b56\u3002\u9019\u7a2e\u7406\u89e3\u5c0d\u65bc\u63d0\u9ad8\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u9760\u6027\u548c\u53ef\u4fe1\u5ea6\u81f3\u95dc\u91cd\u8981\u3002","title":"\u70ba\u4f55\u9700\u8981\u89e3\u91cb\u6a21\u578b\uff1f"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#xai","text":"\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u6a21\u578b\uff0c\u7528\u65bc\u5206\u985e\u5716\u50cf\u4e2d\u7684\u7269\u9ad4\u7a2e\u985e\u3002\u7576\u6211\u5011\u8f38\u5165\u4e00\u5f35\u7167\u7247\u7d66\u6a21\u578b\u6642\uff0c\u6a21\u578b\u6703\u7d66\u51fa\u4e00\u500b\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u544a\u8a34\u6211\u5011\u7167\u7247\u4e2d\u7684\u7269\u9ad4\u7a2e\u985e\u662f\u4ec0\u9ebc\u3002\u4f46\u662f\u7576\u6a21\u578b\u7d66\u51fa\u932f\u8aa4\u7684\u9810\u6e2c\u6642\uff0c\u6211\u5011\u7121\u6cd5\u4e86\u89e3\u6a21\u578b\u70ba\u4f55\u505a\u51fa\u9019\u6a23\u7684\u6c7a\u7b56\u3002\u9019\u6642\u5019\u6a21\u578b\u89e3\u91cb\u7684\u6280\u8853\u5c31\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4f8b\u5982\u54ea\u4e9b\u5340\u57df\u5c0d\u9810\u6e2c\u7d50\u679c\u6709\u8f03\u5927\u7684\u5f71\u97ff\uff0c\u54ea\u4e9b\u7279\u5fb5\u5c0d\u9810\u6e2c\u7d50\u679c\u8ca2\u737b\u8f03\u5927\u7b49\u7b49\u3002\u4ee5\u4e0b\u8209\u4e00\u500b\u7d93\u5178\u7684\u5f71\u50cf\u5206\u985e\u6848\u4f8b\uff0c\u4e5f\u5c31\u662f\u5927\u5bb6\u6240\u719f\u77e5\u7684\u8c93\u72d7\u5206\u985e\u3002\u66fe\u7d93\u7684\u6211\u4ee5\u70ba\u5df2\u7d93\u8a13\u7df4\u4e86\u4e00\u500b\u8fa8\u8b58\u80fd\u529b\u6975\u9ad8\u7684\u8c93\u72d7\u5206\u985e\u5668\uff0c\u4f46\u662f\u5728\u5be6\u969b\u9a57\u8b49\u96c6\u8cc7\u6599\u4e2d\u7684\u6e96\u78ba\u7387\u4e0d\u5230\u4e00\u534a\uff0c\u9019\u5f88\u660e\u986f\u662f\u6a21\u578b \u904e\u64ec\u5408 \u7684\u7d50\u679c\u3002\u6700\u5f8c\u4f7f\u7528\u53ef\u89e3\u91cb\u7684\u6280\u8853\u5c0d\u6a21\u578b\u9032\u884c\u89e3\u6790\uff0c\u767c\u73fe\u6a21\u578b\u4e26\u975e\u771f\u7684\u5b78\u5230\u8fa8\u8b58\u8c93\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u3002\u7f6a\u9b41\u798d\u9996\u7adf\u7136\u662f\u56e0\u70ba\u8a13\u7df4\u96c6\u4e2d\u6709\u8a31\u591a\u7684\u8c93\u54aa\u7167\u7247\u90fd\u6234\u8457\u9234\u943a\u9805\u5708\uff0c\u5c0e\u81f4\u6a21\u578b\u8aa4\u8a8d\u9805\u5708\u70ba\u8fa8\u8b58\u8c93\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u3002\u9019\u500b\u6848\u4f8b\u986f\u793a\u4e86\u6a21\u578b\u89e3\u91cb\u7684\u91cd\u8981\u6027\uff0c\u56e0\u70ba\u5982\u679c\u7121\u6cd5\u7406\u89e3\u6a21\u578b\u80cc\u5f8c\u7684\u908f\u8f2f\u548c\u6c7a\u7b56\u904e\u7a0b\uff0c\u90a3\u9ebc\u6a21\u578b\u7684\u6548\u80fd\u53ef\u80fd\u6703\u53d7\u5230\u8ca0\u9762\u7684\u5f71\u97ff\u3002 \u4e0a\u8ff0\u662f\u4e00\u500b\u7d93\u5178\u7684\u5f71\u50cf\u8fa8\u8b58 XAI \u6280\u8853\u7684\u6848\u4f8b\uff0c\u5f9e\u4e2d\u53ef\u4ee5\u767c\u73fe\u8a13\u7df4\u4e00\u500b\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u6240\u4f7f\u7528\u7684\u8cc7\u6599\u54c1\u8cea\u6975\u70ba\u91cd\u8981\u3002Landing.ai \u57f7\u884c\u9577\u5433\u6069\u9054\u66fe\u5728\u67d0\u5834\u6f14\u8b1b\u4e2d\u63d0\u5230\uff0c\u900f\u904e\u8cc7\u6599\u7684\u6539\u5584\u6240\u5e36\u4f86\u7684\u6700\u7d42\u5f71\u97ff\u9060\u5927\u65bc\u6539\u5584\u6a21\u578b\u672c\u8eab\uff0c\u56e0\u70ba\u8cc7\u6599\u6a19\u8a3b\u6240\u5e36\u4f86\u7684\u504f\u5dee\u5f80\u5f80\u662f\u5f71\u97ff\u6a21\u578b\u8a13\u7df4\u7684\u95dc\u9375\u56e0\u7d20\u4e4b\u4e00\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a The Future of Data-Centric AI","title":"XAI \u6240\u626e\u6f14\u7684\u89d2\u8272"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#xai_1","text":"\u900f\u904e XAI \u63d0\u9ad8\u6a21\u578b\u53ef\u9760\u6027\u548c\u89e3\u91cb\u6027\uff0c\u4f7f\u6a5f\u5668\u5b78\u7fd2\u6210\u679c\u80fd\u5920\u88ab\u66f4\u5ee3\u6cdb\u7684\u4eba\u7406\u89e3\u548c\u63a5\u53d7\u3002\u6b64\u5916\u900f\u904e\u89e3\u91cb\u4e0d\u540c\u7684\u7279\u5fb5\u5c0d\u6a21\u578b\u6c7a\u7b56\u7684\u5f71\u97ff\uff0c\u5e6b\u52a9\u8cc7\u6599\u79d1\u5b78\u5bb6\u6539\u9032\u548c\u512a\u5316\u6a21\u578b\u3002 - XAI \u80fd\u5920\u5e6b\u52a9\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u66f4\u597d\u5730\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b - \u9019\u5c0d\u65bc\u78ba\u5b9a\u6a21\u578b\u7684\u5f31\u9ede\u548c\u63d0\u9ad8\u5176\u6027\u80fd\u81f3\u95dc\u91cd\u8981\u3002\u900f\u904e XAI \u6280\u8853\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u5982\u4f55\u4f5c\u51fa\u6c7a\u7b56\uff0c\u5f9e\u800c\u767c\u73fe\u5176\u7f3a\u9677\u548c\u6f5b\u5728\u7684\u504f\u898b\u3002 XAI \u80fd\u5920\u6539\u5584\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002 \u7576\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u8b8a\u5f97\u900f\u660e\u6642\uff0c\u4f7f\u7528\u8005\u548c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u958b\u767c\u8005\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u6a21\u578b\u7684\u8868\u73fe\u548c\u5f31\u9ede\uff0c\u9032\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u9760\u6027\u3002 XAI \u80fd\u5920\u4fc3\u9032\u4eba\u6a5f\u5171\u5b78 \u5c07\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u8a2d\u8a08\u70ba\u53ef\u89e3\u91cb\u7684\uff0c\u6709\u52a9\u65bc\u4eba\u985e\u66f4\u597d\u5730\u7406\u89e3\u5176\u6c7a\u7b56\u4e26\u8207\u5176\u5408\u4f5c\u3002\u9019\u6a23\u53ef\u4ee5\u4f7f\u4eba\u5de5\u667a\u6167\u5728\u66f4\u591a\u7684\u9818\u57df\u5f97\u5230\u61c9\u7528\uff0c\u5f9e\u800c\u70ba\u4eba\u985e\u5275\u9020\u66f4\u591a\u7684\u50f9\u503c\u3002 XAI \u80fd\u5920\u4f7f\u6a21\u578b\u6d88\u9664\u504f\u898b \u53ef\u5e6b\u52a9\u78ba\u5b9a\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u504f\u898b\u548c\u6b67\u8996\uff0c\u9032\u800c\u8abf\u6574\u8a13\u7df4\u6578\u64da\u548c\u6a21\u578b\u67b6\u69cb\uff0c\u6d88\u9664\u9019\u4e9b\u504f\u898b\u3002","title":"XAI \u7684\u91cd\u8981\u6027\u548c\u512a\u9ede"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#xai_2","text":"XAI \u7684\u61c9\u7528\u9818\u57df\u5341\u5206\u5ee3\u6cdb\uff0c\u4f8b\u5982\u5728\u667a\u6167\u88fd\u9020\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u5de5\u7a0b\u5e2b\u5c0d\u65bc\u6a5f\u53f0\u7570\u5e38\u72c0\u6cc1\u6216\u53c3\u6578\u6700\u4f73\u5316\u9032\u4e00\u6b65\u5206\u6790\uff0c\u4e26\u63d0\u9ad8\u7522\u80fd\uff1b\u5728\u91d1\u878d\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u5206\u6790\u5e2b\u5c0d\u91d1\u878d\u7522\u54c1\u9032\u884c\u5206\u6790\uff0c\u63d0\u9ad8\u91d1\u878d\u98a8\u96aa\u7ba1\u7406\u7684\u6548\u7387\u548c\u6e96\u78ba\u6027\uff1b\u5728\u91ab\u7642\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u91ab\u751f\u66f4\u597d\u5730\u7406\u89e3\u75be\u75c5\u548c\u6cbb\u7642\u65b9\u6848\uff0c\u63d0\u9ad8\u60a3\u8005\u7684\u91ab\u7642\u670d\u52d9\u8cea\u91cf\u548c\u5b89\u5168\u6027\uff1b\u5728\u81ea\u52d5\u99d5\u99db\u9818\u57df\u4e2d\uff0cXAI \u80fd\u5920\u5e6b\u52a9\u99d5\u99db\u66f4\u597d\u5730\u7406\u89e3\u81ea\u52d5\u99d5\u99db\u7cfb\u7d71\u7684\u6c7a\u7b56\uff0c\u63d0\u9ad8\u99d5\u99db\u5b89\u5168\u6027\u3002 XAI \u7684\u51fa\u73fe\u4f7f\u5f97\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u80fd\u5920\u66f4\u597d\u5730\u61c9\u7528\u65bc\u5404\u500b\u9818\u57df\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u9760\u6027\u548c\u900f\u660e\u5ea6\uff0c\u540c\u6642\u4e5f\u80fd\u5920\u63d0\u9ad8\u61c9\u7528\u5834\u666f\u7684\u5b89\u5168\u6027\u548c\u96b1\u79c1\u6027\u3002\u7e3d\u4e4b\uff0c\u5728\u9019\u4e09\u5341\u5929\u7576\u4e2d\u5c07\u6703\u9010\u4e00\u5730\u4ecb\u7d39\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u4e2d\u5e38\u898b\u7684\u6a21\u578b\u89e3\u91cb\u6280\u5de7\u3002\u8acb\u5404\u4f4d\u76e1\u8acb\u671f\u5f85\uff01","title":"XAI \u7684\u61c9\u7528\u9818\u57df"},{"location":"1.\u63ed\u958b\u6a21\u578b\u7684\u795e\u79d8\u9762\u7d17:\u70ba\u4f55XAI\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5982\u6b64\u91cd\u8981/#reference","text":"XAI| \u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u91cd\u8981 \u589e\u52a0\u5167\u5bb9\u53c3\u8003","title":"Reference"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/","text":"[Day 10] Permutation Importance\uff1a\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5168\u5c40\u6a21\u578b\u89e3\u91cb\u662f\u8a66\u5716\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u5c0d\u55ae\u500b\u9810\u6e2c\u9032\u884c\u89e3\u91cb\u3002Permutation importance \u65b9\u6cd5\u5c31\u662f\u4e00\u7a2e\u5ee3\u6cdb\u7528\u65bc\u8a55\u4f30\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7279\u5fb5\u91cd\u8981\u6027\u7684\u6280\u8853\u4e4b\u4e00\uff0c\u800c\u4e14\u5b83\u662f\u4e00\u7a2e\u8207\u6a21\u578b\u7121\u95dc\u7684\u53ef\u89e3\u91cb\u6280\u8853\u3002 \u6b64\u6a21\u578b\u89e3\u91cb\u65b9\u6cd5\u901a\u5e38\u6703\u8fd4\u56de\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u5206\u6578\uff0c\u5206\u6578\u8d8a\u9ad8\u5247\u8a72\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u5f71\u97ff\u6027\u8d8a\u5927\u3002\u56e0\u6b64\u7576\u6211\u5011\u5c0d\u5176\u4e2d\u4e00\u500b\u7279\u5fb5\u6578\u503c\u4fee\u6539\u5f8c\u5c0d\u6574\u9ad4\u9810\u6e2c\u7d50\u679c\u8b8a\u52d5\u5f88\u5927\uff0c\u53ef\u4ee5\u63a8\u8ad6\u8a72\u7279\u5fb5\u53ef\u80fd\u662f\u91cd\u8981\u7684\u3002\u5177\u9ad4\u4f86\u8aaa\u5c31\u662f\u628a\u4e00\u500b\u7279\u5fb5\u7684\u67d0\u500b\u503c\u66ff\u63db\u6210\u53e6\u4e00\u500b\u503c\u4e4b\u5f8c\uff0c\u5230\u5e95\u6703\u5c0d\u9810\u6e2c error \u6709\u591a\u5927\u7684\u5f71\u97ff\u3002\u4ee5\u9810\u6e2c\u5340\u57df\u623f\u50f9\u70ba\u4f8b\uff0cPermutation importance \u7b97\u51fa\u4f86\u7d50\u679c\u8d8a\u5c0f\u7684\u8a71\u4ee3\u8868\u8a72\u7279\u5fb5\u4e00\u9ede\u90fd\u4e0d\u91cd\u8981\uff0c\u6709\u7121\u5b83\u90fd\u6c92\u95dc\u4fc2\u3002\u800c\u8a08\u7b97\u51fa\u4f86\u8d8a\u5927\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u6536\u5165\u5c0d\u65bc\u8a72\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u662f\u6709\u5f88\u5927\u7684\u8ca2\u737b\u3002 \u6f14\u7b97\u6cd5\u6d41\u7a0b Permutation importance \u7684\u57fa\u672c\u6982\u5ff5\u662f\u5c07\u8cc7\u6599\u96c6\u4e2d\u7684\u6bcf\u500b\u7279\u5fb5\u9032\u884c\u96a8\u6a5f\u91cd\u6392\uff0c\u7136\u5f8c\u6e2c\u8a66\u6a21\u578b\u5728\u91cd\u6392\u5f8c\u6578\u64da\u4e0a\u7684\u63a8\u8ad6\u8b8a\u5316\u3002\u5982\u679c\u67d0\u500b\u7279\u5fb5\u96a8\u6a5f\u6392\u5217\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u7522\u751f\u4e86\u986f\u8457\u7684\u5f71\u97ff\uff0c\u5247\u53ef\u4ee5\u63a8\u65b7\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u91cd\u8981\u6027\u8f03\u9ad8\u3002 \u5be6\u969b\u6b65\u9a5f\u5982\u4e0b\uff1a\u9996\u5148\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u63a5\u8457\u7528\u6e2c\u8a66\u8cc7\u6599\u53ca\u5c0d\u6bcf\u7b46\u8cc7\u6599\u505a\u9810\u6e2c\u4e26\u8a08\u7b97\u4e00\u500b\u5206\u6578\u3002R2 \u5206\u6578\u662f\u8a55\u4f30\u4e00\u500b\u8ff4\u6b78\u6a21\u578b\u6709\u591a\u597d\uff0c\u6240\u4ee5 1-R2 \u4ee3\u8868\u9810\u6e2c\u7d50\u679c\u6709\u591a\u4e0d\u597d\u3002\u800c AUC \u662f\u8861\u91cf\u5206\u985e\u554f\u984c\u7684\u6307\u6a19\u8d8a\u63a5\u8fd1 1 \u8d8a\u597d\uff0c\u56e0\u6b64 1-AUC \u53ef\u4ee5\u8996\u70ba\u8a72\u6a21\u578b\u9810\u6e2c\u591a\u9ebc\u4e0d\u597d\uff0c\u985e\u4f3c\u65bc Error \u7684\u611f\u89ba\u3002\u7576\u7136\u5206\u985e\u554f\u984c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e96\u78ba\u7387\u3002\u63a5\u8457\u5982\u679c\u6211\u5011\u8981\u5c0d\u7279\u5fb5 x \u4f86\u67e5\u770b\u6709\u591a\u91cd\u8981\uff0c\u5c31\u662f\u96a8\u6a5f\u7684\u5c0d x \u7279\u5fb5\u66ff\u63db\u6389\u5176\u4ed6\u7684\u6578\u503c\u6700\u5f8c\u518d\u8a08\u7b97\u9019\u500b Error \u6709\u591a\u5927\u3002\u56e0\u6b64 Permutation importance \u8a08\u7b97\u67d0\u7279\u5fb5\u7684\u91cd\u8981\u7a0b\u5ea6\u516c\u5f0f\u70ba\uff0c\u6417\u4e82\u4e4b\u5f8c\u7684error/\u539f\u59cb\u4e7e\u6de8\u8cc7\u6599\u96c6\u7684error\uff0c\u53c8\u6216\u662f\u5169\u500b\u5206\u6578\u76f8\u6e1b\u3002 \u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u500b\u57fa\u6e96\u7684\u8a55\u4f30\u6307\u6a19\uff0c\u4f8b\u5982\u6e96\u78ba\u7387\u6216 R2 \u7b49\u3002 \u4f7f\u7528\u6e2c\u8a66\u8cc7\u6599\u96c6\u5c0d\u6bcf\u7b46\u8cc7\u6599\u505a\u9810\u6e2c\u4e26\u8a08\u7b97\u4e00\u500berror\u5206\u6578\u3002 \u8ff4\u6b78\u6a21\u578b\uff1a 1-R2 \u5206\u985e\u6a21\u578b\uff1a1-Accuracy \u96a8\u6a5f\u7684\u5c0d x \u7279\u5fb5\u5167\u7684\u6240\u6709\u6578\u503c\u66ff\u63db\u6389\uff0c\u4e26\u7b97\u51faerror\u3002 \u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u91cd\u8981\u6027 \u6417\u4e82\u4e4b\u5f8c\u7684error-\u539f\u59cb\u4e7e\u6de8\u8cc7\u6599\u96c6\u7684error \u91cd\u89072\u30013\u6b65\u9a5f\u76f4\u5230\u6240\u6709\u7279\u5fb5\u90fd\u57f7\u884c\u904e\u4e00\u904d\u3002 \u4f7f\u7528 eli5 \u5be6\u4f5c Permutation Importance eli5 \u662f\u4e00\u500b\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684 Python \u5957\u4ef6\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86 Permutation Importance \u7684\u65b9\u6cd5\u3002\u5b83\u53ef\u4ee5\u8a08\u7b97\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u4e26\u5c07\u5176\u53ef\u8996\u5316\u70ba\u4e00\u500b\u9577\u689d\u71b1\u5716\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u6bd4\u8f03\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002\u9996\u5148\u900f\u904e pip \u5b89\u88dd eli5 \u5957\u4ef6\uff1a pip install eli5 \u63a5\u8457\u8f09\u5165\u4eca\u5929\u7684\u7bc4\u4f8b\u6e2c\u8a66\u96c6\u3002 fetch_california_housing \u662f sklearn \u4e2d\u7684\u4e00\u500b\u5167\u5efa\u8cc7\u6599\u96c6\uff0c\u7528\u4f86\u9810\u6e2c\u52a0\u5dde\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 8 \u500b\u7279\u5fb5\uff0c\u5206\u5225\u662f\uff1a MedInc\uff1a\u8a72\u5340\u57df\u5167\u5bb6\u5ead\u6536\u5165\u7684\u4e2d\u4f4d\u6578 HouseAge\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9f61 AveRooms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9593\u6578 AveBedrms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u81e5\u5ba4\u6578 Population\uff1a\u8a72\u5340\u57df\u5167\u4eba\u53e3\u6578 AveOccup\uff1a\u8a72\u5340\u57df\u5167\u5e73\u5747\u6bcf\u500b\u623f\u5c4b\u7684\u5c45\u4f4f\u4eba\u6578 Latitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7def\u5ea6 Longitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7d93\u5ea6 \u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 20640 \u7b46\u6a23\u672c\uff0c\u6bcf\u500b\u6a23\u672c\u90fd\u6709\u4e0a\u8ff0 8 \u500b\u7279\u5fb5\u4ee5\u53ca\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u4f5c\u70ba\u76ee\u6a19\u8b8a\u6578\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor import numpy as np # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 42 ) # \u8a13\u7df4\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b model = RandomForestRegressor ( random_state = 0 ) . fit ( X_train , y_train ) \u672c\u7bc4\u4f8b\u8a13\u7df4\u4e00\u500b\u96a8\u6a5f\u68ee\u6797\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u4e86 eli5 \u5957\u4ef6\u4e2d\u7684 PermutationImportance \u65b9\u6cd5\uff0c\u7528\u65bc\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5728\u6a21\u578b\u4e2d\u7684\u91cd\u8981\u6027\u3002\u7a0b\u5f0f\u78bc\u4e2d\u7684 model \u662f\u6307\u5efa\u7acb\u597d\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u800c X_test \u548c y_test \u5247\u662f\u6e2c\u8a66\u8cc7\u6599\u96c6\u3002 import eli5 from eli5.sklearn import PermutationImportance perm = PermutationImportance ( model , random_state = 42 ) . fit ( X_test , y_test ) eli5 . show_weights ( perm , feature_names = feature_names , top = 8 ) \u4e0a\u8ff0\u7a0b\u5f0f\u78bc\u4e2d\u4f7f\u7528 PermutationImportance \u65b9\u6cd5\u4f86\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u4e26\u5c07\u7d50\u679c\u5b58\u5165 perm \u8b8a\u6578\u4e2d\u3002\u5728\u8a08\u7b97\u904e\u7a0b\u4e2d\uff0crandom_state \u53c3\u6578\u7528\u65bc\u78ba\u4fdd\u7d50\u679c\u7684\u518d\u73fe\u6027\u3002\u63a5\u8457\u4f7f\u7528 eli5.show_weights \u65b9\u6cd5\u5c07\u7d50\u679c\u53ef\u8996\u5316\u3002feature_names \u53c3\u6578\u662f\u7279\u5fb5\u7684\u540d\u7a31\u5217\u8868\uff0ctop \u53c3\u6578\u5247\u7528\u65bc\u6307\u5b9a\u8981\u986f\u793a\u7684\u91cd\u8981\u6027\u6392\u540d\u524d\u5e7e\u7684\u7279\u5fb5\u3002\u9019\u500b\u65b9\u6cd5\u5c07\u6703\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u7684\u540d\u7a31\u4ee5\u53ca\u5176\u5c0d\u61c9\u7684\u91cd\u8981\u6027\u5206\u6578\uff0c\u5206\u6578\u8d8a\u9ad8\u8868\u793a\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\u8d8a\u5927\u3002 \u4e0a\u9762\u7684\u7d50\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u91cd\u8981\u7684\u7279\u5fb5\u662f\u8a72\u5730\u5340\u7684\u6536\u5165\u4e2d\u4f4d\u6578\uff0c\u78ba\u5be6\u633a\u5408\u7406\u7684\u3002\u82e5\u51fa\u73fe\u7d05\u8272\u8ca0\u6578\u7684\u5206\u6578\u5176\u5be6\u90fd\u53ef\u4ee5\u8996\u4f5c\u5e7e\u4e4e\u4e0d\u91cd\u8981\u7684\u8b8a\u6578\u3002 \u5c0f\u7d50 Permutation importance \u7684\u512a\u9ede\u662f\u53ef\u4ee5\u7528\u65bc\u4efb\u4f55\u6a21\u578b\u6f14\u7b97\u6cd5\u548c\u4efb\u4f55\u8cc7\u6599\u96c6\uff0c\u4e26\u4e14\u53ef\u4ee5\u63d0\u4f9b\u95dc\u65bc\u6bcf\u500b\u7279\u5fb5\u7684\u76f4\u89c0\u89e3\u91cb\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8a72\u65b9\u6cd5\u5ffd\u7565\u4e86\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u5373\u7279\u5fb5\u4e4b\u9593\u53ef\u80fd\u5b58\u5728\u4f9d\u8cf4\u95dc\u4fc2\uff0c\u67d0\u4e9b\u7279\u5fb5\u5728\u55ae\u7368\u8003\u616e\u6642\u770b\u4f3c\u4e0d\u91cd\u8981\uff0c\u4f46\u5728\u8207\u5176\u4ed6\u7279\u5fb5\u7d50\u5408\u5f8c\u53ef\u80fd\u6703\u7522\u751f\u91cd\u8981\u7684\u5f71\u97ff\u3002\u56e0\u6b64\uff0cPermutation importance \u65b9\u6cd5\u4e0d\u80fd\u5b8c\u5168\u4ee3\u8868\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\uff0c\u800c\u61c9\u7576\u7d50\u5408\u9818\u57df\u77e5\u8b58\u3001\u6a21\u578b\u5167\u90e8\u89e3\u91cb\u7b49\u591a\u7a2e\u65b9\u6cd5\u9032\u884c\u7d9c\u5408\u8a55\u4f30\u3002\u53e6\u5916\u5b83\u7684\u7f3a\u9ede\u662f\u8a08\u7b97\u91cf\u8f03\u5927\uff0c\u7279\u5225\u662f\u5728\u8cc7\u6599\u96c6\u8f03\u5927\u3001\u7279\u5fb5\u8f03\u591a\u7684\u6642\u5019\u3002\u82e5\u60f3\u540c\u6642\u8003\u616e\u5230\u5169\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u8a72\u600e\u8fa6\uff1f\u660e\u5929\u5c31\u6703\u4f86\u8ddf\u5927\u5bb6\u4ecb\u7d39\u53e6\u4e00\u7a2e Model Agnostic \u5168\u5c40\u89e3\u91cb\u7684\u65b9\u6cd5 Partial Dependence\u3002 Reference \u5177\u6709\u591a\u91cd\u5171\u7dda\u6027\u6216\u76f8\u95dc\u7279\u5fb5\u7684\u7f6e\u63db\u91cd\u8981\u6027 \uff08\u6a5f\u5668\u5b78\u7fd2\uff09\u53ef\u89e3\u91cb\u6027(2) Permutation Importance","title":"[Day 10] Permutation Importance\uff1a\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/#day-10-permutation-importance","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5168\u5c40\u6a21\u578b\u89e3\u91cb\u662f\u8a66\u5716\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u5c0d\u55ae\u500b\u9810\u6e2c\u9032\u884c\u89e3\u91cb\u3002Permutation importance \u65b9\u6cd5\u5c31\u662f\u4e00\u7a2e\u5ee3\u6cdb\u7528\u65bc\u8a55\u4f30\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7279\u5fb5\u91cd\u8981\u6027\u7684\u6280\u8853\u4e4b\u4e00\uff0c\u800c\u4e14\u5b83\u662f\u4e00\u7a2e\u8207\u6a21\u578b\u7121\u95dc\u7684\u53ef\u89e3\u91cb\u6280\u8853\u3002 \u6b64\u6a21\u578b\u89e3\u91cb\u65b9\u6cd5\u901a\u5e38\u6703\u8fd4\u56de\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u5206\u6578\uff0c\u5206\u6578\u8d8a\u9ad8\u5247\u8a72\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u5f71\u97ff\u6027\u8d8a\u5927\u3002\u56e0\u6b64\u7576\u6211\u5011\u5c0d\u5176\u4e2d\u4e00\u500b\u7279\u5fb5\u6578\u503c\u4fee\u6539\u5f8c\u5c0d\u6574\u9ad4\u9810\u6e2c\u7d50\u679c\u8b8a\u52d5\u5f88\u5927\uff0c\u53ef\u4ee5\u63a8\u8ad6\u8a72\u7279\u5fb5\u53ef\u80fd\u662f\u91cd\u8981\u7684\u3002\u5177\u9ad4\u4f86\u8aaa\u5c31\u662f\u628a\u4e00\u500b\u7279\u5fb5\u7684\u67d0\u500b\u503c\u66ff\u63db\u6210\u53e6\u4e00\u500b\u503c\u4e4b\u5f8c\uff0c\u5230\u5e95\u6703\u5c0d\u9810\u6e2c error \u6709\u591a\u5927\u7684\u5f71\u97ff\u3002\u4ee5\u9810\u6e2c\u5340\u57df\u623f\u50f9\u70ba\u4f8b\uff0cPermutation importance \u7b97\u51fa\u4f86\u7d50\u679c\u8d8a\u5c0f\u7684\u8a71\u4ee3\u8868\u8a72\u7279\u5fb5\u4e00\u9ede\u90fd\u4e0d\u91cd\u8981\uff0c\u6709\u7121\u5b83\u90fd\u6c92\u95dc\u4fc2\u3002\u800c\u8a08\u7b97\u51fa\u4f86\u8d8a\u5927\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u6536\u5165\u5c0d\u65bc\u8a72\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u662f\u6709\u5f88\u5927\u7684\u8ca2\u737b\u3002","title":"[Day 10] Permutation Importance\uff1a\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/#_1","text":"Permutation importance \u7684\u57fa\u672c\u6982\u5ff5\u662f\u5c07\u8cc7\u6599\u96c6\u4e2d\u7684\u6bcf\u500b\u7279\u5fb5\u9032\u884c\u96a8\u6a5f\u91cd\u6392\uff0c\u7136\u5f8c\u6e2c\u8a66\u6a21\u578b\u5728\u91cd\u6392\u5f8c\u6578\u64da\u4e0a\u7684\u63a8\u8ad6\u8b8a\u5316\u3002\u5982\u679c\u67d0\u500b\u7279\u5fb5\u96a8\u6a5f\u6392\u5217\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u7522\u751f\u4e86\u986f\u8457\u7684\u5f71\u97ff\uff0c\u5247\u53ef\u4ee5\u63a8\u65b7\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u91cd\u8981\u6027\u8f03\u9ad8\u3002 \u5be6\u969b\u6b65\u9a5f\u5982\u4e0b\uff1a\u9996\u5148\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u63a5\u8457\u7528\u6e2c\u8a66\u8cc7\u6599\u53ca\u5c0d\u6bcf\u7b46\u8cc7\u6599\u505a\u9810\u6e2c\u4e26\u8a08\u7b97\u4e00\u500b\u5206\u6578\u3002R2 \u5206\u6578\u662f\u8a55\u4f30\u4e00\u500b\u8ff4\u6b78\u6a21\u578b\u6709\u591a\u597d\uff0c\u6240\u4ee5 1-R2 \u4ee3\u8868\u9810\u6e2c\u7d50\u679c\u6709\u591a\u4e0d\u597d\u3002\u800c AUC \u662f\u8861\u91cf\u5206\u985e\u554f\u984c\u7684\u6307\u6a19\u8d8a\u63a5\u8fd1 1 \u8d8a\u597d\uff0c\u56e0\u6b64 1-AUC \u53ef\u4ee5\u8996\u70ba\u8a72\u6a21\u578b\u9810\u6e2c\u591a\u9ebc\u4e0d\u597d\uff0c\u985e\u4f3c\u65bc Error \u7684\u611f\u89ba\u3002\u7576\u7136\u5206\u985e\u554f\u984c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e96\u78ba\u7387\u3002\u63a5\u8457\u5982\u679c\u6211\u5011\u8981\u5c0d\u7279\u5fb5 x \u4f86\u67e5\u770b\u6709\u591a\u91cd\u8981\uff0c\u5c31\u662f\u96a8\u6a5f\u7684\u5c0d x \u7279\u5fb5\u66ff\u63db\u6389\u5176\u4ed6\u7684\u6578\u503c\u6700\u5f8c\u518d\u8a08\u7b97\u9019\u500b Error \u6709\u591a\u5927\u3002\u56e0\u6b64 Permutation importance \u8a08\u7b97\u67d0\u7279\u5fb5\u7684\u91cd\u8981\u7a0b\u5ea6\u516c\u5f0f\u70ba\uff0c\u6417\u4e82\u4e4b\u5f8c\u7684error/\u539f\u59cb\u4e7e\u6de8\u8cc7\u6599\u96c6\u7684error\uff0c\u53c8\u6216\u662f\u5169\u500b\u5206\u6578\u76f8\u6e1b\u3002 \u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u500b\u57fa\u6e96\u7684\u8a55\u4f30\u6307\u6a19\uff0c\u4f8b\u5982\u6e96\u78ba\u7387\u6216 R2 \u7b49\u3002 \u4f7f\u7528\u6e2c\u8a66\u8cc7\u6599\u96c6\u5c0d\u6bcf\u7b46\u8cc7\u6599\u505a\u9810\u6e2c\u4e26\u8a08\u7b97\u4e00\u500berror\u5206\u6578\u3002 \u8ff4\u6b78\u6a21\u578b\uff1a 1-R2 \u5206\u985e\u6a21\u578b\uff1a1-Accuracy \u96a8\u6a5f\u7684\u5c0d x \u7279\u5fb5\u5167\u7684\u6240\u6709\u6578\u503c\u66ff\u63db\u6389\uff0c\u4e26\u7b97\u51faerror\u3002 \u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u91cd\u8981\u6027 \u6417\u4e82\u4e4b\u5f8c\u7684error-\u539f\u59cb\u4e7e\u6de8\u8cc7\u6599\u96c6\u7684error \u91cd\u89072\u30013\u6b65\u9a5f\u76f4\u5230\u6240\u6709\u7279\u5fb5\u90fd\u57f7\u884c\u904e\u4e00\u904d\u3002","title":"\u6f14\u7b97\u6cd5\u6d41\u7a0b"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/#eli5-permutation-importance","text":"eli5 \u662f\u4e00\u500b\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684 Python \u5957\u4ef6\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86 Permutation Importance \u7684\u65b9\u6cd5\u3002\u5b83\u53ef\u4ee5\u8a08\u7b97\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u4e26\u5c07\u5176\u53ef\u8996\u5316\u70ba\u4e00\u500b\u9577\u689d\u71b1\u5716\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u6bd4\u8f03\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002\u9996\u5148\u900f\u904e pip \u5b89\u88dd eli5 \u5957\u4ef6\uff1a pip install eli5 \u63a5\u8457\u8f09\u5165\u4eca\u5929\u7684\u7bc4\u4f8b\u6e2c\u8a66\u96c6\u3002 fetch_california_housing \u662f sklearn \u4e2d\u7684\u4e00\u500b\u5167\u5efa\u8cc7\u6599\u96c6\uff0c\u7528\u4f86\u9810\u6e2c\u52a0\u5dde\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 8 \u500b\u7279\u5fb5\uff0c\u5206\u5225\u662f\uff1a MedInc\uff1a\u8a72\u5340\u57df\u5167\u5bb6\u5ead\u6536\u5165\u7684\u4e2d\u4f4d\u6578 HouseAge\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9f61 AveRooms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9593\u6578 AveBedrms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u81e5\u5ba4\u6578 Population\uff1a\u8a72\u5340\u57df\u5167\u4eba\u53e3\u6578 AveOccup\uff1a\u8a72\u5340\u57df\u5167\u5e73\u5747\u6bcf\u500b\u623f\u5c4b\u7684\u5c45\u4f4f\u4eba\u6578 Latitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7def\u5ea6 Longitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7d93\u5ea6 \u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 20640 \u7b46\u6a23\u672c\uff0c\u6bcf\u500b\u6a23\u672c\u90fd\u6709\u4e0a\u8ff0 8 \u500b\u7279\u5fb5\u4ee5\u53ca\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u4f5c\u70ba\u76ee\u6a19\u8b8a\u6578\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor import numpy as np # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 42 ) # \u8a13\u7df4\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b model = RandomForestRegressor ( random_state = 0 ) . fit ( X_train , y_train ) \u672c\u7bc4\u4f8b\u8a13\u7df4\u4e00\u500b\u96a8\u6a5f\u68ee\u6797\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u4e86 eli5 \u5957\u4ef6\u4e2d\u7684 PermutationImportance \u65b9\u6cd5\uff0c\u7528\u65bc\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5728\u6a21\u578b\u4e2d\u7684\u91cd\u8981\u6027\u3002\u7a0b\u5f0f\u78bc\u4e2d\u7684 model \u662f\u6307\u5efa\u7acb\u597d\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u800c X_test \u548c y_test \u5247\u662f\u6e2c\u8a66\u8cc7\u6599\u96c6\u3002 import eli5 from eli5.sklearn import PermutationImportance perm = PermutationImportance ( model , random_state = 42 ) . fit ( X_test , y_test ) eli5 . show_weights ( perm , feature_names = feature_names , top = 8 ) \u4e0a\u8ff0\u7a0b\u5f0f\u78bc\u4e2d\u4f7f\u7528 PermutationImportance \u65b9\u6cd5\u4f86\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u4e26\u5c07\u7d50\u679c\u5b58\u5165 perm \u8b8a\u6578\u4e2d\u3002\u5728\u8a08\u7b97\u904e\u7a0b\u4e2d\uff0crandom_state \u53c3\u6578\u7528\u65bc\u78ba\u4fdd\u7d50\u679c\u7684\u518d\u73fe\u6027\u3002\u63a5\u8457\u4f7f\u7528 eli5.show_weights \u65b9\u6cd5\u5c07\u7d50\u679c\u53ef\u8996\u5316\u3002feature_names \u53c3\u6578\u662f\u7279\u5fb5\u7684\u540d\u7a31\u5217\u8868\uff0ctop \u53c3\u6578\u5247\u7528\u65bc\u6307\u5b9a\u8981\u986f\u793a\u7684\u91cd\u8981\u6027\u6392\u540d\u524d\u5e7e\u7684\u7279\u5fb5\u3002\u9019\u500b\u65b9\u6cd5\u5c07\u6703\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u7684\u540d\u7a31\u4ee5\u53ca\u5176\u5c0d\u61c9\u7684\u91cd\u8981\u6027\u5206\u6578\uff0c\u5206\u6578\u8d8a\u9ad8\u8868\u793a\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\u8d8a\u5927\u3002 \u4e0a\u9762\u7684\u7d50\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u91cd\u8981\u7684\u7279\u5fb5\u662f\u8a72\u5730\u5340\u7684\u6536\u5165\u4e2d\u4f4d\u6578\uff0c\u78ba\u5be6\u633a\u5408\u7406\u7684\u3002\u82e5\u51fa\u73fe\u7d05\u8272\u8ca0\u6578\u7684\u5206\u6578\u5176\u5be6\u90fd\u53ef\u4ee5\u8996\u4f5c\u5e7e\u4e4e\u4e0d\u91cd\u8981\u7684\u8b8a\u6578\u3002","title":"\u4f7f\u7528 eli5 \u5be6\u4f5c Permutation Importance"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/#_2","text":"Permutation importance \u7684\u512a\u9ede\u662f\u53ef\u4ee5\u7528\u65bc\u4efb\u4f55\u6a21\u578b\u6f14\u7b97\u6cd5\u548c\u4efb\u4f55\u8cc7\u6599\u96c6\uff0c\u4e26\u4e14\u53ef\u4ee5\u63d0\u4f9b\u95dc\u65bc\u6bcf\u500b\u7279\u5fb5\u7684\u76f4\u89c0\u89e3\u91cb\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8a72\u65b9\u6cd5\u5ffd\u7565\u4e86\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u5373\u7279\u5fb5\u4e4b\u9593\u53ef\u80fd\u5b58\u5728\u4f9d\u8cf4\u95dc\u4fc2\uff0c\u67d0\u4e9b\u7279\u5fb5\u5728\u55ae\u7368\u8003\u616e\u6642\u770b\u4f3c\u4e0d\u91cd\u8981\uff0c\u4f46\u5728\u8207\u5176\u4ed6\u7279\u5fb5\u7d50\u5408\u5f8c\u53ef\u80fd\u6703\u7522\u751f\u91cd\u8981\u7684\u5f71\u97ff\u3002\u56e0\u6b64\uff0cPermutation importance \u65b9\u6cd5\u4e0d\u80fd\u5b8c\u5168\u4ee3\u8868\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\uff0c\u800c\u61c9\u7576\u7d50\u5408\u9818\u57df\u77e5\u8b58\u3001\u6a21\u578b\u5167\u90e8\u89e3\u91cb\u7b49\u591a\u7a2e\u65b9\u6cd5\u9032\u884c\u7d9c\u5408\u8a55\u4f30\u3002\u53e6\u5916\u5b83\u7684\u7f3a\u9ede\u662f\u8a08\u7b97\u91cf\u8f03\u5927\uff0c\u7279\u5225\u662f\u5728\u8cc7\u6599\u96c6\u8f03\u5927\u3001\u7279\u5fb5\u8f03\u591a\u7684\u6642\u5019\u3002\u82e5\u60f3\u540c\u6642\u8003\u616e\u5230\u5169\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u8a72\u600e\u8fa6\uff1f\u660e\u5929\u5c31\u6703\u4f86\u8ddf\u5927\u5bb6\u4ecb\u7d39\u53e6\u4e00\u7a2e Model Agnostic \u5168\u5c40\u89e3\u91cb\u7684\u65b9\u6cd5 Partial Dependence\u3002","title":"\u5c0f\u7d50"},{"location":"10.Permutation Importance:\u5f9e\u7279\u5fb5\u91cd\u8981\u6027\u89d2\u5ea6\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba/#reference","text":"\u5177\u6709\u591a\u91cd\u5171\u7dda\u6027\u6216\u76f8\u95dc\u7279\u5fb5\u7684\u7f6e\u63db\u91cd\u8981\u6027 \uff08\u6a5f\u5668\u5b78\u7fd2\uff09\u53ef\u89e3\u91cb\u6027(2) Permutation Importance","title":"Reference"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/","text":"[Day 11] Partial Dependence Plot\uff1a\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff \u7bc4\u4f8b\u7a0b\u5f0f\uff1a Partial Dependence Plot\uff08PDP\uff09\u662f\u8981\u89c0\u5bdf\u6bcf\u4e00\u500b\u81ea\u8b8a\u6578\u7684\u8b8a\u5316\u662f\u5982\u4f55\u5f71\u97ff\u9810\u6e2c\u8868\u73fe\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u5730\u5206\u6790\u81ea\u8b8a\u6578\u8207\u76ee\u6a19\u8b8a\u6578\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u800c\u6628\u5929\u6240\u63d0\u7684 Permutation Importance \u662f\u8981\u89c0\u5bdf\u67d0\u500b\u7279\u5fb5\u6703\u6709\u591a\u5927\u7684\u7a0b\u5ea6\u5f71\u97ff\u9810\u6e2c\u7684\u932f\u8aa4\u7387\uff0c\u9032\u800c\u53d6\u5f97\u91cd\u8981\u7a0b\u5ea6\u6392\u5e8f\u3002\u9664\u6b64\u4e4b\u5916 PDP \u4e5f\u80fd\u8003\u616e\u5230\u7279\u5fb5\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u53ef\u4ee5\u540c\u6642\u89c0\u5bdf\u5169\u500b\u6216\u4ee5\u4e0a\u7684\u7279\u5fb5\u5408\u8d77\u4f86\u5982\u4f55\u53bb\u5f71\u97ff\u9810\u6e2c\u7d50\u679c\u3002\u4f46\u4ee5\u5be6\u52d9\u9762\u4f86\u8aaa\u70ba\u4e86\u53ef\u4ee5\u8996\u89ba\u5316\u9810\u6e2c\u7d50\u679c\uff0c\u901a\u5e38 PDP \u6700\u591a\u6703\u540c\u6642\u8003\u616e\u5169\u500b\u7279\u5fb5\uff0c\u56e0\u70ba\u8d85\u904e\u4e09\u500b\u7dad\u5ea6\u5c31\u6bd4\u8f03\u96e3\u7528\u8996\u89ba\u53bb\u5448\u73fe\u7d50\u679c\u3002\u4eca\u5929\u8a0e\u8ad6\u7684\u65b9\u6cd5\u4e5f\u662f\u4e00\u7a2e\u8207\u6a21\u578b\u7121\u95dc\u7684\u53ef\u89e3\u91cb\u6280\u8853\u3002 \u6211\u5011\u518d\u4ee5\u623f\u50f9\u9810\u6e2c\u70ba\u4f8b\uff0c\u53ef\u4ee5\u5f9e\u4e0b\u9762\u9019\u516b\u5f35 Partial Dependence \u5716\u89c0\u5bdf\u54ea\u4e9b\u7279\u5fb5\u662f\u5c0d\u65bc y\uff08\u623f\u50f9\uff09\u7684\u5f71\u97ff\u662f\u6bd4\u8f03\u660e\u986f\u7684\u3002\u5176\u4e2d\u8d8a\u5e73\u5766\u7684\u66f2\u7dda\u4ee3\u8868\u8a72\u7279\u5fb5\u8d8a\u4e0d\u91cd\u8981\uff0c\u9019\u610f\u5473\u8457\u6211\u4e0d\u7ba1\u600e\u6a23\u8b8a\u52d5\u8a72\u7279\u5fb5\u7684\u503c\u5c0d\u65bc\u9810\u6e2c\u7d50\u679c\u90fd\u5dee\u4e0d\u591a\uff0c\u53cd\u4e4b\uff0c\u4e0a\u4e0b\u8d77\u4f0f\u6bd4\u8f03\u660e\u986f\u7684\u7dda\u4ee3\u8868\u8a72\u7279\u5fb5\u6975\u70ba\u91cd\u8981\u3002\u4f8b\u5982\u5de6\u4e0a\u89d2\u7684\u4e2d\u4f4d\u6578\u6536\u5165\uff0c\u5f9e\u4e2d\u6211\u5011\u53ef\u4ee5\u767c\u73fe\uff0c\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u4f86\u8aaa\u53ea\u8981\u7a0d\u5fae\u8b8a\u52d5\u4e00\u500b\u55ae\u4f4d\u5c0d\u65bc\u8f38\u51fa\u7d50\u679c\u6709\u660e\u986f\u7684\u5f71\u97ff\u3002\u540c\u6642\u53ef\u4ee5\u8aaa\u660e\u8a72\u7279\u5fb5\u5f9e\u7f8e\u91d1 1.58 \u5230 7.23 \u842c\u7f8e\u5143\uff0c\u96a8\u8457\u6536\u5165\u9010\u6f38\u5730\u589e\u9577\uff0c\u5f71\u97ff\u8a72\u5730\u5340\u7684\u623f\u50f9\u662f\u6b63\u76f8\u95dc\u7684\u3002 \u6211\u5011\u53ef\u4ee5\u900f\u904e PDP \u9010\u4e00\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u8ddf\u8f38\u51fa\u7684\u95dc\u4fc2\u3002 Partial Dependence \u6f14\u7b97\u6cd5\u6d41\u7a0b \u63a5\u4e0b\u4f86\u8981\u4f86\u8a0e\u8ad6 Partial Dependence \u662f\u5982\u4f55\u88ab\u8a08\u7b97\u51fa\u4f86\u7684\u3002\u9996\u5148\u6211\u5011\u6709\u4e00\u7d44\u8a13\u7df4\u8cc7\u6599\u5171\u6709 d \u500b\u7279\u5fb5\uff0c\u56e0\u6b64\u8a13\u7df4\u4e00\u500b\u6a21\u578b f \u8f38\u5165\u70ba x1~xd\uff0c\u76ee\u6a19\u662f\u8981\u9810\u6e2c y\u3002\u900f\u904e\u8499\u5730\u5361\u7f85\u6cd5\u5e0c\u671b\u53ef\u4ee5\u89c0\u5bdf\u67d0\u500b xj \u7279\u5fb5\u7684\u503c\u5b83\u7684\u76f8\u5c0d\u61c9\u8f38\u51fa\u662f\u591a\u5c11\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5f9e\u8a13\u7df4\u96c6\u4e2d\u62bd\u53d6 m \u7b46\u8cc7\u6599\u6a23\u672c\uff0c\u4e26\u5c07\u8981\u88ab\u89c0\u5bdf\u7684\u7279\u5fb5 xj \u56fa\u5b9a\u4e00\u500b\u6578\u503c t\uff0c\u800c\u5176\u4ed6\u7684\u7279\u5fb5\u5c31\u7528\u525b\u525b\u96a8\u6a5f\u62bd\u51fa\u7684\u6a23\u672c\u4f9d\u5e8f\u5e36\u503c\u9032\u53bb\u3002\u6bcf\u6b21\u5e36\u4e00\u7b46\u9032\u53bb\u5f8c\u90fd\u6703\u8f38\u51fa\u4e00\u500b y\uff0c\u7e3d\u5171\u6703\u5f97\u5230 m \u500b\u7d50\u679c\u6700\u7d42\u5728\u5e73\u5747\u53d6\u4f86\u7684\u6578\u503c\u5c31\u662f xj \u5c0d\u65bc t \u7684\u60c5\u6cc1\u4e0b\u6240\u4f30\u8a08\u7684\u7d50\u679c\u3002 \u5f9e\u6e2c\u8a66\u96c6\u6216\u8cc7\u6599\u96c6\u4e2d\uff0c\u96a8\u6a5f\u53d6\u51fa\u4e00\u500b\u6a23\u672c\ud835\udc67 \u628a\ud835\udc67\u7684\u7279\u5fb5 \ud835\udc65\ud835\udc57 \u6539\u70ba \ud835\udc61\uff0c\u5176\u4ed6\u7279\u5fb5\u4e0d\u8b8a\uff0c\u5f97\u5230\u65b0\u6a23\u672c\ud835\udc67\u2032 \u900f\u904e\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff0c\u5f97\u5230\u65b0\u6a23\u672c\u7684\u9810\u6e2c\u503c \u0177\u2032=\ud835\udc53(\ud835\udc67\u2032) \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f m \u6b21\uff0c\u5f97\u5230 m \u500b\u9810\u6e2c\u503c \u0177\u20321,\u0177\u20322,...,\u0177\u2032m \u8a08\u7b97\u5e73\u5747\u503c\uff0c\u5373\u70ba \ud835\udc53(\ud835\udc65\ud835\udc57=\ud835\udc61) \u7684\u4f30\u8a08\u503c\u3002 \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u5176\u4ed6\u7279\u5fb5\u7684 PDP\u3002 \u81f3\u65bct\u8981\u6709\u5e7e\u500b\u53d6\u6c7a\u65bc\u8a72\u7279\u5fb5\u7684\u4e0a\u4e0b\u754c\uff0c\u4e26\u900f\u904egrid_resolution\u53c3\u6578\u8a2d\u5b9a\u8981\u5728\u9019\u7bc4\u570d\u9593\u53d6\u5f97\u5e7e\u7d44\u505a\u70bat\u3002 \u9019\u88e1\u8209\u500b\u4f8b\u5b50\uff0c\u6211\u5011\u60f3\u8981\u7528\u8eab\u9ad8\u548c\u9ad4\u91cd\u5169\u500b\u7279\u5fb5\u53bb\u9810\u6e2c\u4e00\u500b\u4eba\u7684\u8840\u58d3\u3002\u5047\u8a2d\u6211\u5011\u8981\u89c0\u5bdf\u9ad4\u91cd50\u516c\u65a4\u7684\u8840\u58d3\u662f\u591a\u5c11\uff0c\u6211\u5011\u6703\u5148\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63a1\u6a23 m \u7b46\u8cc7\u6599(\u9019\u88e1\u6709\u56db\u7b46\uff0cm=4)\u3002\u63a5\u8457\u5f9e\u9019\u56db\u7b46\u8cc7\u6599\u4e2d\u56fa\u5b9a\u9ad4\u91cd\u90fd\u6539\u621050\uff0c\u5176\u9918\u8eab\u9ad8\u4fdd\u503c\u4e0d\u8b8a\u4e26\u653e\u5165\u4e8b\u5148\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u9810\u6e2c\u5f97\u5230 \u0177\u3002\u6700\u7d42\u628a\u9019\u56db\u500b\u6a21\u578b\u9810\u6e2c\u7684 \u0177 \u52a0\u7e3d\u505a\u5e73\u5747\u5c31\u53ef\u4ee5\u5f97\u5230\u9810\u6e2c\u9ad4\u91cd 50 \u516c\u65a4\u7684\u4eba\u5e73\u5747\u7684\u8840\u58d3\u662f\u591a\u5c11\u3002\u540c\u6a23\u4ee5\u6b64\u6982\u5ff5\u6211\u5011\u53ef\u4ee5\u5f97\u5230\u96a8\u8457\u9ad4\u91cd\u7684\u8b8a\u5316(60kg, 70kg...)\u6a21\u578b\u9810\u6e2c\u51fa\u4f86\u7684\u8840\u58d3\u61c9\u8a72\u662f\u591a\u5c11\u3002 \u57fa\u65bc Partial Dependence \u7684\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790 \u5728\u4e4b\u524d\u7684\u5167\u5bb9\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u5b78\u5230\u5982\u679c\u4e00\u500b\u7279\u5fb5\u7684 Partial Dependence Plot\uff08PDP\uff09 \u5448\u73fe\u51fa\u300c\u5e73\u5766\u300d\u7684\u66f2\u7dda\uff0c\u4ee3\u8868\u8a72\u7279\u5fb5\u5c0d\u76ee\u6a19\u8b8a\u6578\u7684\u5f71\u97ff\u4e0d\u91cd\u8981\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6e2c\u91cf\u4e00\u500b\u66f2\u7dda\u7684\u300c\u5e73\u5766\u5ea6\u300d\u5462\uff1f\u5176\u4e2d\u4e00\u500b\u65b9\u6cd5\u662f\u4f7f\u7528\u6a19\u6e96\u5dee\u4f86\u8861\u91cf\u5176\u53cd\u5e73\u5766\u5ea6\u3002\u5982\u679c\u6211\u5011\u8a55\u4f30\u4e86\u51fd\u6578 \ud835\udc53j(xj=vk)\uff08\u5176\u4e2dk=1,...,K\uff09\uff0c\u5247\u7279\u5fb5 xj \u7684\u91cd\u8981\u6027\u53ef\u4ee5\u5b9a\u7fa9\u70ba\u5176\u6a19\u6e96\u5dee\u3002\u8a08\u7b97\u5b8c\u6bcf\u500b\u7279\u5fb5\u7684\u6a19\u6e96\u5dee\u5f8c\uff0c\u5176\u6a19\u6e96\u5dee\u8d8a\u5927\u7684\u7279\u5fb5\u6211\u5011\u53ef\u4ee5\u8996\u70ba\u8d8a\u91cd\u8981\u3002 \u4f7f\u7528 PDP \u5c0b\u627e\u91cd\u8981\u7279\u5fb5\u6642\u5fc5\u9808\u8981\u6ce8\u610f\u8cc7\u6599\u7684\u5408\u7406\u6027\uff0c\u600e\u9ebc\u8aaa\u5462\uff1f\u82e5 xj \u8207\u5176\u4ed6\u7279\u5fb5\u5b58\u5728\u67d0\u7a2e\u95dc\u4fc2\uff0c\u6211\u5011\u96a8\u6a5f\u62bd\u53d6\u6a23\u672c\u586b\u5165\u53ef\u80fd\u62bd\u5230\u6975\u4e0d\u5408\u7406\u7684\u7279\u5fb5\u7d44\u5408\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u9810\u6e2c\u8840\u58d3\u4f8b\u5b50\u7576\u4e2d\u53ef\u80fd\u6703\u7522\u751f(\u8eab\u9ad8180cm,\u9ad4\u91cd40kg)\u7684\u6975\u7aef\u7d44\u5408\uff0c\u9019\u7a2e\u60c5\u5f62\u73fe\u5be6\u751f\u6d3b\u4e2d\u8f03\u96e3\u51fa\u73fe\u6b64\u6848\u4f8b\uff0c\u56e0\u6b64\u53ef\u80fd\u932f\u4f30\u7d50\u679c\u3002 PDP \u5c0d\u65bc\u8cc7\u6599\u7570\u8cea\u6027\u7684\u5f71\u97ff \u96d6\u7136 PDP \u6709\u52a9\u65bc\u53ef\u8996\u5316\u9810\u6e2c\u97ff\u61c9\u8207\u4e00\u500b\u6216\u591a\u500b\u7279\u5fb5\u4e4b\u9593\u7684\u5e73\u5747\u90e8\u5206\u76f8\u4f9d\u95dc\u4fc2\u3002\u4f46\u5728\u5b58\u5728\u5be6\u8cea\u4ea4\u4e92\u4f5c\u7528\u5f71\u97ff\u4e0b\uff0c\u90e8\u5206\u97ff\u61c9\u95dc\u4fc2\u53ef\u80fd\u662f\u7570\u8cea\u7684\uff08heterogeneities\uff09\u3002\u56e0\u6b64\u50cf PDP \u9019\u6a23\u7684\u5e73\u5747\u66f2\u7dda\u53ef\u80fd\u6703\u63a9\u84cb\u5efa\u6a21\u95dc\u4fc2\u7684\u8907\u96dc\u6027\u3002\u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u900f\u904e ICE \u5716\u7e6a\u88fd\u500b\u5225\u89c0\u6e2c\u503c\u7684\u9810\u6e2c\u97ff\u61c9\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u51fd\u6578\u95dc\u4fc2\u4f86\u6539\u9032\u90e8\u5206\u76f8\u4f9d\u5716\u3002\u5728\u4e0b\u5716 a \u4e2d\uff0c\u6211\u5011\u7e6a\u88fd\u4e86\u6a23\u672c\u4e2d\u7684 X2 \u8207 Y \u7684\u6563\u9ede\u5716\u3002\u5716 b \u986f\u793a\u4e86\u9810\u6e2c\u7279\u5fb5 X2 \u7684\u64ec\u5408\u6a21\u578b\u7684\u90e8\u5206\u76f8\u4f9d\u5716\u3002PDP \u986f\u793a\u5c31\u5e73\u5747\u800c\u8a00\uff0cX2 \u8207\u9810\u6e2c\u7684 Y \u6c92\u6709\u986f\u8457\u7684\u76f8\u95dc\u6027\u3002\u4f46\u662f\u5f9e\u5716 a \u4e2d\u53ef\u4ee5\u660e\u986f\u770b\u51fa\uff0c\u9019\u500b\u7d50\u8ad6\u662f\u932f\u8aa4\u7684\u3002\u5f88\u660e\u986f X2 \u8207 Y \u6709\u95dc\u806f\uff0c\u53ea\u662f PDP \u4e2d\u7684\u5e73\u5747\u5316\u63a9\u84cb\u4e86\u9019\u4e00\u767c\u73fe\u3002\u56e0\u6b64 PDP \u7684\u7f3a\u9ede\u5728\u65bc\u53ef\u80fd\u63a9\u84cb\u8cc7\u6599\u4e2d\u7684\u7570\u8cea\u6027\u3002\u56e0\u6b64\u9084\u6709\u53e6\u4e00\u7a2e\u8b8a\u5f62\u662f\u500b\u9ad4\u689d\u4ef6\u671f\u671b\u5716\uff08ICE Plot\uff09\uff0c\u5982\u5716 c \u6240\u793a\u3002ICE plot \u53ef\u4ee5\u6e05\u695a\u5730\u986f\u793a\u9810\u6e2c\u503c\u548c\u7279\u5fb5 X2 \u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5f9e\u4e2d\u6211\u5011\u53ef\u4ee5\u767c\u73fe\uff0c\u6b64\u6a21\u578b\u7684\u9810\u6e2c\u503c\u5728\u7279\u5fb5 X2 \u7684\u4e0d\u540c\u5340\u57df\u5167\u5448\u73fe\u8fd1\u4f3c\u7dda\u6027\u589e\u52a0\u6216\u6e1b\u5c11\u7684\u8da8\u52e2\u3002 ICE Plot \u525b\u525b\u7684\u4f8b\u5b50\u4e2d PDP \u5728\u5c55\u793a\u55ae\u4e00\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff\u6642\uff0c\u53ef\u80fd\u6703\u63a9\u84cb\u6389\u7279\u5fb5\u548c\u5176\u4ed6\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u9032\u800c\u9650\u5236\u4e86 PDP \u7684\u89e3\u91cb\u80fd\u529b\u3002\u70ba\u4e86\u514b\u670d\u9019\u500b\u554f\u984c\uff0c\u5728\u7bc7\u8ad6\u6587\uff1a Peeking Inside the Black Box: Visualizing Statistical Learning with Plots of Individual Conditional Expectation \u4f5c\u8005\u63d0\u51fa\u4e86 ICE plot\uff08Individual Conditional Expectation plot\uff09\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5c55\u793a\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\u3002ICE plot \u985e\u4f3c\u65bc PDP\uff0c\u4f46\u662f\u5b83\u7e6a\u88fd\u7684\u662f\u6bcf\u500b\u89c0\u6e2c\u503c\u7684\u500b\u5225\u689d\u7dda\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u597d\u5730\u5448\u73fe\u7279\u5fb5\u4e4b\u9593\u7684\u5dee\u7570\u548c\u4ea4\u4e92\u4f5c\u7528\u3002 \u5f9e\u6e2c\u8a66\u96c6\u6216\u8cc7\u6599\u96c6\u4e2d\uff0c\u96a8\u6a5f\u53d6\u51fa\u4e00\u500b\u6a23\u672c\ud835\udc67 \u628a\ud835\udc67\u7684\u7279\u5fb5 \ud835\udc65\ud835\udc57 \u6539\u70ba \ud835\udc61\uff0c\u5176\u4ed6\u7279\u5fb5\u4e0d\u8b8a\uff0c\u5f97\u5230\u65b0\u6a23\u672c\ud835\udc67\u2032 \u900f\u904e\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff0c\u5f97\u5230\u65b0\u6a23\u672c\u7684\u9810\u6e2c\u503c \u0177\u2032=\ud835\udc53(\ud835\udc67\u2032) \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f m \u6b21\uff0c\u5f97\u5230 m \u500b\u9810\u6e2c\u503c \u0177\u20321,\u0177\u20322,...,\u0177\u2032m \u5c07\u9019 m \u500b\u9810\u6e2c\u503c\u8207\u539f\u59cb\u6a23\u672c\ud835\udc67\u7684\u7279\u5fb5\ud835\udc65\ud835\udc57\u7684\u503c\u4e00\u8d77\u756b\u5728\u5716\u4e0a \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u5176\u4ed6\u7279\u5fb5\u7684 ICE Plot\u3002 sklearn \u5be6\u4f5c Partial Dependence \u5728 sklearn \u4e2d\u6709\u63d0\u4f9b\u5169\u7a2e PDP \u7684 API \u5206\u5225\u70ba partial_dependence \u548c PartialDependenceDisplay\uff0c\u5169\u8005\u662f\u7528\u65bc\u5448\u73fe\u90e8\u5206\u76f8\u4f9d (partial dependence) \u7684\u5de5\u5177\uff0c\u4f46\u5b83\u5011\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u986f\u793a\u6548\u679c\u6709\u6240\u4e0d\u540c\u3002 partial_dependence \u662f\u4e00\u500b\u51fd\u6578\uff0c\u53ef\u7528\u4f86\u8a08\u7b97\u90e8\u5206\u76f8\u4f9d\u503c\u4e26\u8fd4\u56de\u7d50\u679c\u3002 PartialDependenceDisplay \u53ef\u4ee5\u76f4\u63a5\u7e6a\u88fd\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u900f\u904e\u8996\u89ba\u5316\u65b9\u6cd5\u6bd4\u8f03\u4e0d\u540c\u7279\u5fb5\u7684\u5f71\u97ff\u3002 \u672c\u65e5\u7684\u5167\u5bb9\u5efa\u8b70\u5728 Python 3.8 \u548c scikit-learn 1.2.2 \u7248\u672c\u4ee5\u4e0a\u57f7\u884c\u3002 \u53c3\u8003: sklearn.inspection: Inspection \u4eca\u5929\u7684\u7bc4\u4f8b\u5ef6\u7e8c\u6628\u5929\u7684\u623f\u50f9\u9810\u6e2c\u8cc7\u6599\u96c6\uff0c\u4e26\u5148\u8a13\u7df4\u597d\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor import numpy as np import pandas as pd # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 42 ) # \u8a13\u7df4\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b model = RandomForestRegressor ( random_state = 0 ) . fit ( X , y ) \u63a5\u8457\u662f\u672c\u65e5\u5be6\u4f5c\u91cd\u9ede\uff0c\u9019\u88e1\u63a1\u7528 PartialDependenceDisplay \u65b9\u6cd5\u642d\u914d from_estimator \u653e\u5165\u4e8b\u5148\u8a13\u7df4\u597d\u7684 sklearn \u6a21\u578b\uff0c\u4e26\u653e\u5165\u6e2c\u8a66\u8cc7\u6599\u96c6\u9032\u884c\u5168\u57df\u7684\u6a21\u578b\u89e3\u91cb\u3002\u4ee5\u4e0b\u662f\u8a72\u65b9\u6cd5\u5e38\u7528\u5230\u7684\u53c3\u6578\uff0c\u82e5\u60f3\u66f4\u9032\u968e\u4f7f\u7528\u53ef\u4ee5\u53c3\u8003\u5b98\u65b9 \u6587\u4ef6 \u3002 Parameters: - estimator: \u5df2\u8a13\u7df4\u7684\u9810\u6e2c\u5668\u7269\u4ef6\uff0c\u5fc5\u9808\u5be6\u4f5c predict\u3001predict_proba \u6216 decision_function \u65b9\u6cd5\u3002 - X: \u53ef\u653e\u5165\u8a13\u7df4\u8cc7\u6599\u6216\u662f\u6e2c\u8a66\u8cc7\u6599\u96c6\uff0c\u53e6\u5916\u8981\u6ce8\u610f\u662f\u5426\u6709\u524d\u8655\u7406\u3002 - features: \u9700\u8981\u5206\u6790\u7684\u7279\u5fb5\uff0c\u53ef\u4ee5\u70ba\u4e00\u500b\u6216\u591a\u500b\u7279\u5fb5\uff0c\u82e5\u70ba\u4e00\u500b\u5247\u751f\u6210\u55ae\u7279\u5fb5\u7684\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u82e5\u5169\u500b\u5247\u751f\u62102-way\u90e8\u5206\u76f8\u4f9d\u5716\uff08kind='average'\u6642\u624d\u652f\u63f4\uff09\uff0c\u6bcf\u500b\u5143\u7d20\u53ef\u4ee5\u662f\u7279\u5fb5\u7d22\u5f15\u6216\u7279\u5fb5\u540d\u7a31\u6216\u7279\u5fb5\u7d22\u5f15\u6216\u7279\u5fb5\u540d\u7a31\u7684tuple\u3002 - categorical_features: PDP\u4e5f\u652f\u63f4\u985e\u5225\u578b\u7684\u7279\u5fb5\u89e3\u91cb\uff0c\u7528\u6cd5\u8ddf features \u4e00\u6a23\u3002 - feature_names: \u7528\u65bc\u6307\u5b9a\u6bcf\u500b\u7279\u5fb5\u7684\u540d\u7a31\uff0c\u9810\u8a2d\u503c\u70baNone\u3002 - grid_resolution: \u7db2\u683c\u89e3\u6790\u5ea6\uff0c\u6578\u503c\u8d8a\u5927\u8d8a\u80fd\u5448\u73fe\u7279\u5fb5\u8207\u76ee\u6a19\u8b8a\u6578\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u9810\u8a2d\u503c\u70ba100\u3002 - percentiles: \u7528\u65bc\u9650\u5236PDP\u7684X\u8ef8\u4e0a\u4e0b\u754c\uff0c\u4ee5\u767e\u5206\u4f4d\u6578\u8868\u793a\uff0c\u9810\u8a2d\u503c\u70ba(0.05, 0.95)\u3002 - centered: \u662f\u5426\u5c07ICE\u548cPD\u7dda\u7684\u8d77\u59cb\u9ede\u8a2d\u70bay\u8ef8\u539f\u9ede\u5f9e0\u958b\u59cb\uff0c\u9810\u8a2d\u70baFalse\u3002 - kind: \u4ee5\u5b57\u4e32\u683c\u5f0f\u8a2d\u5b9a\uff0c\u63d0\u4f9b\u4e09\u7a2e\u7e6a\u88fd\u5f62\u5f0f 'average' \u5c31\u662f\u55ae\u7d14\u7684PDP\u7e6a\u88fd;'individual' \u7e6a\u88fdICE plot;'both' \u5247\u4ee3\u8868\u540c\u6642\u7e6a\u88fdPD\u8207ICE plot\u3002\u9810\u8a2d\u70ba'average'\u3002 from sklearn.inspection import PartialDependenceDisplay PartialDependenceDisplay . from_estimator ( model , X_test , [ 'MedInc' ], feature_names = feature_names , centered = False , kind = 'average' , percentiles = ( 0 , 1 ), grid_resolution = 100 ) \u8f38\u51fa\u7d50\u679c\uff1a \u8a66\u8457\u5c07\u53c3\u6578\u4fee\u6539 kind='both' \uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u540c\u6642\u5f97\u5230 ICE Plot \u4ee5\u53ca\u4e2d\u9593\u6a58\u8272\u7dda\u689d\u5c31\u662f\u6bcf\u500b\u6a23\u672c\u5e73\u5747\u5f8c\u7684 PDP\u3002 Reference Friedman, Jerome H. \" Greedy function approximation: A gradient boosting machine. \" Annals of statistics (2001): 1189-1232. Alex goldstein. (2014). Peeking Inside the Black Box: Visualizing Statistical Learning with Plots of Individual Conditional Expectation . Arxiv.","title":"[Day 11] Partial Dependence Plot\uff1a\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#day-11-partial-dependence-plot","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a Partial Dependence Plot\uff08PDP\uff09\u662f\u8981\u89c0\u5bdf\u6bcf\u4e00\u500b\u81ea\u8b8a\u6578\u7684\u8b8a\u5316\u662f\u5982\u4f55\u5f71\u97ff\u9810\u6e2c\u8868\u73fe\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u5730\u5206\u6790\u81ea\u8b8a\u6578\u8207\u76ee\u6a19\u8b8a\u6578\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u800c\u6628\u5929\u6240\u63d0\u7684 Permutation Importance \u662f\u8981\u89c0\u5bdf\u67d0\u500b\u7279\u5fb5\u6703\u6709\u591a\u5927\u7684\u7a0b\u5ea6\u5f71\u97ff\u9810\u6e2c\u7684\u932f\u8aa4\u7387\uff0c\u9032\u800c\u53d6\u5f97\u91cd\u8981\u7a0b\u5ea6\u6392\u5e8f\u3002\u9664\u6b64\u4e4b\u5916 PDP \u4e5f\u80fd\u8003\u616e\u5230\u7279\u5fb5\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u53ef\u4ee5\u540c\u6642\u89c0\u5bdf\u5169\u500b\u6216\u4ee5\u4e0a\u7684\u7279\u5fb5\u5408\u8d77\u4f86\u5982\u4f55\u53bb\u5f71\u97ff\u9810\u6e2c\u7d50\u679c\u3002\u4f46\u4ee5\u5be6\u52d9\u9762\u4f86\u8aaa\u70ba\u4e86\u53ef\u4ee5\u8996\u89ba\u5316\u9810\u6e2c\u7d50\u679c\uff0c\u901a\u5e38 PDP \u6700\u591a\u6703\u540c\u6642\u8003\u616e\u5169\u500b\u7279\u5fb5\uff0c\u56e0\u70ba\u8d85\u904e\u4e09\u500b\u7dad\u5ea6\u5c31\u6bd4\u8f03\u96e3\u7528\u8996\u89ba\u53bb\u5448\u73fe\u7d50\u679c\u3002\u4eca\u5929\u8a0e\u8ad6\u7684\u65b9\u6cd5\u4e5f\u662f\u4e00\u7a2e\u8207\u6a21\u578b\u7121\u95dc\u7684\u53ef\u89e3\u91cb\u6280\u8853\u3002 \u6211\u5011\u518d\u4ee5\u623f\u50f9\u9810\u6e2c\u70ba\u4f8b\uff0c\u53ef\u4ee5\u5f9e\u4e0b\u9762\u9019\u516b\u5f35 Partial Dependence \u5716\u89c0\u5bdf\u54ea\u4e9b\u7279\u5fb5\u662f\u5c0d\u65bc y\uff08\u623f\u50f9\uff09\u7684\u5f71\u97ff\u662f\u6bd4\u8f03\u660e\u986f\u7684\u3002\u5176\u4e2d\u8d8a\u5e73\u5766\u7684\u66f2\u7dda\u4ee3\u8868\u8a72\u7279\u5fb5\u8d8a\u4e0d\u91cd\u8981\uff0c\u9019\u610f\u5473\u8457\u6211\u4e0d\u7ba1\u600e\u6a23\u8b8a\u52d5\u8a72\u7279\u5fb5\u7684\u503c\u5c0d\u65bc\u9810\u6e2c\u7d50\u679c\u90fd\u5dee\u4e0d\u591a\uff0c\u53cd\u4e4b\uff0c\u4e0a\u4e0b\u8d77\u4f0f\u6bd4\u8f03\u660e\u986f\u7684\u7dda\u4ee3\u8868\u8a72\u7279\u5fb5\u6975\u70ba\u91cd\u8981\u3002\u4f8b\u5982\u5de6\u4e0a\u89d2\u7684\u4e2d\u4f4d\u6578\u6536\u5165\uff0c\u5f9e\u4e2d\u6211\u5011\u53ef\u4ee5\u767c\u73fe\uff0c\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u4f86\u8aaa\u53ea\u8981\u7a0d\u5fae\u8b8a\u52d5\u4e00\u500b\u55ae\u4f4d\u5c0d\u65bc\u8f38\u51fa\u7d50\u679c\u6709\u660e\u986f\u7684\u5f71\u97ff\u3002\u540c\u6642\u53ef\u4ee5\u8aaa\u660e\u8a72\u7279\u5fb5\u5f9e\u7f8e\u91d1 1.58 \u5230 7.23 \u842c\u7f8e\u5143\uff0c\u96a8\u8457\u6536\u5165\u9010\u6f38\u5730\u589e\u9577\uff0c\u5f71\u97ff\u8a72\u5730\u5340\u7684\u623f\u50f9\u662f\u6b63\u76f8\u95dc\u7684\u3002 \u6211\u5011\u53ef\u4ee5\u900f\u904e PDP \u9010\u4e00\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u8ddf\u8f38\u51fa\u7684\u95dc\u4fc2\u3002","title":"[Day 11] Partial Dependence Plot\uff1a\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#partial-dependence","text":"\u63a5\u4e0b\u4f86\u8981\u4f86\u8a0e\u8ad6 Partial Dependence \u662f\u5982\u4f55\u88ab\u8a08\u7b97\u51fa\u4f86\u7684\u3002\u9996\u5148\u6211\u5011\u6709\u4e00\u7d44\u8a13\u7df4\u8cc7\u6599\u5171\u6709 d \u500b\u7279\u5fb5\uff0c\u56e0\u6b64\u8a13\u7df4\u4e00\u500b\u6a21\u578b f \u8f38\u5165\u70ba x1~xd\uff0c\u76ee\u6a19\u662f\u8981\u9810\u6e2c y\u3002\u900f\u904e\u8499\u5730\u5361\u7f85\u6cd5\u5e0c\u671b\u53ef\u4ee5\u89c0\u5bdf\u67d0\u500b xj \u7279\u5fb5\u7684\u503c\u5b83\u7684\u76f8\u5c0d\u61c9\u8f38\u51fa\u662f\u591a\u5c11\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5f9e\u8a13\u7df4\u96c6\u4e2d\u62bd\u53d6 m \u7b46\u8cc7\u6599\u6a23\u672c\uff0c\u4e26\u5c07\u8981\u88ab\u89c0\u5bdf\u7684\u7279\u5fb5 xj \u56fa\u5b9a\u4e00\u500b\u6578\u503c t\uff0c\u800c\u5176\u4ed6\u7684\u7279\u5fb5\u5c31\u7528\u525b\u525b\u96a8\u6a5f\u62bd\u51fa\u7684\u6a23\u672c\u4f9d\u5e8f\u5e36\u503c\u9032\u53bb\u3002\u6bcf\u6b21\u5e36\u4e00\u7b46\u9032\u53bb\u5f8c\u90fd\u6703\u8f38\u51fa\u4e00\u500b y\uff0c\u7e3d\u5171\u6703\u5f97\u5230 m \u500b\u7d50\u679c\u6700\u7d42\u5728\u5e73\u5747\u53d6\u4f86\u7684\u6578\u503c\u5c31\u662f xj \u5c0d\u65bc t \u7684\u60c5\u6cc1\u4e0b\u6240\u4f30\u8a08\u7684\u7d50\u679c\u3002 \u5f9e\u6e2c\u8a66\u96c6\u6216\u8cc7\u6599\u96c6\u4e2d\uff0c\u96a8\u6a5f\u53d6\u51fa\u4e00\u500b\u6a23\u672c\ud835\udc67 \u628a\ud835\udc67\u7684\u7279\u5fb5 \ud835\udc65\ud835\udc57 \u6539\u70ba \ud835\udc61\uff0c\u5176\u4ed6\u7279\u5fb5\u4e0d\u8b8a\uff0c\u5f97\u5230\u65b0\u6a23\u672c\ud835\udc67\u2032 \u900f\u904e\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff0c\u5f97\u5230\u65b0\u6a23\u672c\u7684\u9810\u6e2c\u503c \u0177\u2032=\ud835\udc53(\ud835\udc67\u2032) \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f m \u6b21\uff0c\u5f97\u5230 m \u500b\u9810\u6e2c\u503c \u0177\u20321,\u0177\u20322,...,\u0177\u2032m \u8a08\u7b97\u5e73\u5747\u503c\uff0c\u5373\u70ba \ud835\udc53(\ud835\udc65\ud835\udc57=\ud835\udc61) \u7684\u4f30\u8a08\u503c\u3002 \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u5176\u4ed6\u7279\u5fb5\u7684 PDP\u3002 \u81f3\u65bct\u8981\u6709\u5e7e\u500b\u53d6\u6c7a\u65bc\u8a72\u7279\u5fb5\u7684\u4e0a\u4e0b\u754c\uff0c\u4e26\u900f\u904egrid_resolution\u53c3\u6578\u8a2d\u5b9a\u8981\u5728\u9019\u7bc4\u570d\u9593\u53d6\u5f97\u5e7e\u7d44\u505a\u70bat\u3002 \u9019\u88e1\u8209\u500b\u4f8b\u5b50\uff0c\u6211\u5011\u60f3\u8981\u7528\u8eab\u9ad8\u548c\u9ad4\u91cd\u5169\u500b\u7279\u5fb5\u53bb\u9810\u6e2c\u4e00\u500b\u4eba\u7684\u8840\u58d3\u3002\u5047\u8a2d\u6211\u5011\u8981\u89c0\u5bdf\u9ad4\u91cd50\u516c\u65a4\u7684\u8840\u58d3\u662f\u591a\u5c11\uff0c\u6211\u5011\u6703\u5148\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63a1\u6a23 m \u7b46\u8cc7\u6599(\u9019\u88e1\u6709\u56db\u7b46\uff0cm=4)\u3002\u63a5\u8457\u5f9e\u9019\u56db\u7b46\u8cc7\u6599\u4e2d\u56fa\u5b9a\u9ad4\u91cd\u90fd\u6539\u621050\uff0c\u5176\u9918\u8eab\u9ad8\u4fdd\u503c\u4e0d\u8b8a\u4e26\u653e\u5165\u4e8b\u5148\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u9810\u6e2c\u5f97\u5230 \u0177\u3002\u6700\u7d42\u628a\u9019\u56db\u500b\u6a21\u578b\u9810\u6e2c\u7684 \u0177 \u52a0\u7e3d\u505a\u5e73\u5747\u5c31\u53ef\u4ee5\u5f97\u5230\u9810\u6e2c\u9ad4\u91cd 50 \u516c\u65a4\u7684\u4eba\u5e73\u5747\u7684\u8840\u58d3\u662f\u591a\u5c11\u3002\u540c\u6a23\u4ee5\u6b64\u6982\u5ff5\u6211\u5011\u53ef\u4ee5\u5f97\u5230\u96a8\u8457\u9ad4\u91cd\u7684\u8b8a\u5316(60kg, 70kg...)\u6a21\u578b\u9810\u6e2c\u51fa\u4f86\u7684\u8840\u58d3\u61c9\u8a72\u662f\u591a\u5c11\u3002","title":"Partial Dependence \u6f14\u7b97\u6cd5\u6d41\u7a0b"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#partial-dependence_1","text":"\u5728\u4e4b\u524d\u7684\u5167\u5bb9\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u5b78\u5230\u5982\u679c\u4e00\u500b\u7279\u5fb5\u7684 Partial Dependence Plot\uff08PDP\uff09 \u5448\u73fe\u51fa\u300c\u5e73\u5766\u300d\u7684\u66f2\u7dda\uff0c\u4ee3\u8868\u8a72\u7279\u5fb5\u5c0d\u76ee\u6a19\u8b8a\u6578\u7684\u5f71\u97ff\u4e0d\u91cd\u8981\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6e2c\u91cf\u4e00\u500b\u66f2\u7dda\u7684\u300c\u5e73\u5766\u5ea6\u300d\u5462\uff1f\u5176\u4e2d\u4e00\u500b\u65b9\u6cd5\u662f\u4f7f\u7528\u6a19\u6e96\u5dee\u4f86\u8861\u91cf\u5176\u53cd\u5e73\u5766\u5ea6\u3002\u5982\u679c\u6211\u5011\u8a55\u4f30\u4e86\u51fd\u6578 \ud835\udc53j(xj=vk)\uff08\u5176\u4e2dk=1,...,K\uff09\uff0c\u5247\u7279\u5fb5 xj \u7684\u91cd\u8981\u6027\u53ef\u4ee5\u5b9a\u7fa9\u70ba\u5176\u6a19\u6e96\u5dee\u3002\u8a08\u7b97\u5b8c\u6bcf\u500b\u7279\u5fb5\u7684\u6a19\u6e96\u5dee\u5f8c\uff0c\u5176\u6a19\u6e96\u5dee\u8d8a\u5927\u7684\u7279\u5fb5\u6211\u5011\u53ef\u4ee5\u8996\u70ba\u8d8a\u91cd\u8981\u3002 \u4f7f\u7528 PDP \u5c0b\u627e\u91cd\u8981\u7279\u5fb5\u6642\u5fc5\u9808\u8981\u6ce8\u610f\u8cc7\u6599\u7684\u5408\u7406\u6027\uff0c\u600e\u9ebc\u8aaa\u5462\uff1f\u82e5 xj \u8207\u5176\u4ed6\u7279\u5fb5\u5b58\u5728\u67d0\u7a2e\u95dc\u4fc2\uff0c\u6211\u5011\u96a8\u6a5f\u62bd\u53d6\u6a23\u672c\u586b\u5165\u53ef\u80fd\u62bd\u5230\u6975\u4e0d\u5408\u7406\u7684\u7279\u5fb5\u7d44\u5408\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u9810\u6e2c\u8840\u58d3\u4f8b\u5b50\u7576\u4e2d\u53ef\u80fd\u6703\u7522\u751f(\u8eab\u9ad8180cm,\u9ad4\u91cd40kg)\u7684\u6975\u7aef\u7d44\u5408\uff0c\u9019\u7a2e\u60c5\u5f62\u73fe\u5be6\u751f\u6d3b\u4e2d\u8f03\u96e3\u51fa\u73fe\u6b64\u6848\u4f8b\uff0c\u56e0\u6b64\u53ef\u80fd\u932f\u4f30\u7d50\u679c\u3002","title":"\u57fa\u65bc Partial Dependence \u7684\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#pdp","text":"\u96d6\u7136 PDP \u6709\u52a9\u65bc\u53ef\u8996\u5316\u9810\u6e2c\u97ff\u61c9\u8207\u4e00\u500b\u6216\u591a\u500b\u7279\u5fb5\u4e4b\u9593\u7684\u5e73\u5747\u90e8\u5206\u76f8\u4f9d\u95dc\u4fc2\u3002\u4f46\u5728\u5b58\u5728\u5be6\u8cea\u4ea4\u4e92\u4f5c\u7528\u5f71\u97ff\u4e0b\uff0c\u90e8\u5206\u97ff\u61c9\u95dc\u4fc2\u53ef\u80fd\u662f\u7570\u8cea\u7684\uff08heterogeneities\uff09\u3002\u56e0\u6b64\u50cf PDP \u9019\u6a23\u7684\u5e73\u5747\u66f2\u7dda\u53ef\u80fd\u6703\u63a9\u84cb\u5efa\u6a21\u95dc\u4fc2\u7684\u8907\u96dc\u6027\u3002\u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u900f\u904e ICE \u5716\u7e6a\u88fd\u500b\u5225\u89c0\u6e2c\u503c\u7684\u9810\u6e2c\u97ff\u61c9\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u51fd\u6578\u95dc\u4fc2\u4f86\u6539\u9032\u90e8\u5206\u76f8\u4f9d\u5716\u3002\u5728\u4e0b\u5716 a \u4e2d\uff0c\u6211\u5011\u7e6a\u88fd\u4e86\u6a23\u672c\u4e2d\u7684 X2 \u8207 Y \u7684\u6563\u9ede\u5716\u3002\u5716 b \u986f\u793a\u4e86\u9810\u6e2c\u7279\u5fb5 X2 \u7684\u64ec\u5408\u6a21\u578b\u7684\u90e8\u5206\u76f8\u4f9d\u5716\u3002PDP \u986f\u793a\u5c31\u5e73\u5747\u800c\u8a00\uff0cX2 \u8207\u9810\u6e2c\u7684 Y \u6c92\u6709\u986f\u8457\u7684\u76f8\u95dc\u6027\u3002\u4f46\u662f\u5f9e\u5716 a \u4e2d\u53ef\u4ee5\u660e\u986f\u770b\u51fa\uff0c\u9019\u500b\u7d50\u8ad6\u662f\u932f\u8aa4\u7684\u3002\u5f88\u660e\u986f X2 \u8207 Y \u6709\u95dc\u806f\uff0c\u53ea\u662f PDP \u4e2d\u7684\u5e73\u5747\u5316\u63a9\u84cb\u4e86\u9019\u4e00\u767c\u73fe\u3002\u56e0\u6b64 PDP \u7684\u7f3a\u9ede\u5728\u65bc\u53ef\u80fd\u63a9\u84cb\u8cc7\u6599\u4e2d\u7684\u7570\u8cea\u6027\u3002\u56e0\u6b64\u9084\u6709\u53e6\u4e00\u7a2e\u8b8a\u5f62\u662f\u500b\u9ad4\u689d\u4ef6\u671f\u671b\u5716\uff08ICE Plot\uff09\uff0c\u5982\u5716 c \u6240\u793a\u3002ICE plot \u53ef\u4ee5\u6e05\u695a\u5730\u986f\u793a\u9810\u6e2c\u503c\u548c\u7279\u5fb5 X2 \u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5f9e\u4e2d\u6211\u5011\u53ef\u4ee5\u767c\u73fe\uff0c\u6b64\u6a21\u578b\u7684\u9810\u6e2c\u503c\u5728\u7279\u5fb5 X2 \u7684\u4e0d\u540c\u5340\u57df\u5167\u5448\u73fe\u8fd1\u4f3c\u7dda\u6027\u589e\u52a0\u6216\u6e1b\u5c11\u7684\u8da8\u52e2\u3002","title":"PDP \u5c0d\u65bc\u8cc7\u6599\u7570\u8cea\u6027\u7684\u5f71\u97ff"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#ice-plot","text":"\u525b\u525b\u7684\u4f8b\u5b50\u4e2d PDP \u5728\u5c55\u793a\u55ae\u4e00\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff\u6642\uff0c\u53ef\u80fd\u6703\u63a9\u84cb\u6389\u7279\u5fb5\u548c\u5176\u4ed6\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u9032\u800c\u9650\u5236\u4e86 PDP \u7684\u89e3\u91cb\u80fd\u529b\u3002\u70ba\u4e86\u514b\u670d\u9019\u500b\u554f\u984c\uff0c\u5728\u7bc7\u8ad6\u6587\uff1a Peeking Inside the Black Box: Visualizing Statistical Learning with Plots of Individual Conditional Expectation \u4f5c\u8005\u63d0\u51fa\u4e86 ICE plot\uff08Individual Conditional Expectation plot\uff09\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5c55\u793a\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\u3002ICE plot \u985e\u4f3c\u65bc PDP\uff0c\u4f46\u662f\u5b83\u7e6a\u88fd\u7684\u662f\u6bcf\u500b\u89c0\u6e2c\u503c\u7684\u500b\u5225\u689d\u7dda\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u597d\u5730\u5448\u73fe\u7279\u5fb5\u4e4b\u9593\u7684\u5dee\u7570\u548c\u4ea4\u4e92\u4f5c\u7528\u3002 \u5f9e\u6e2c\u8a66\u96c6\u6216\u8cc7\u6599\u96c6\u4e2d\uff0c\u96a8\u6a5f\u53d6\u51fa\u4e00\u500b\u6a23\u672c\ud835\udc67 \u628a\ud835\udc67\u7684\u7279\u5fb5 \ud835\udc65\ud835\udc57 \u6539\u70ba \ud835\udc61\uff0c\u5176\u4ed6\u7279\u5fb5\u4e0d\u8b8a\uff0c\u5f97\u5230\u65b0\u6a23\u672c\ud835\udc67\u2032 \u900f\u904e\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff0c\u5f97\u5230\u65b0\u6a23\u672c\u7684\u9810\u6e2c\u503c \u0177\u2032=\ud835\udc53(\ud835\udc67\u2032) \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f m \u6b21\uff0c\u5f97\u5230 m \u500b\u9810\u6e2c\u503c \u0177\u20321,\u0177\u20322,...,\u0177\u2032m \u5c07\u9019 m \u500b\u9810\u6e2c\u503c\u8207\u539f\u59cb\u6a23\u672c\ud835\udc67\u7684\u7279\u5fb5\ud835\udc65\ud835\udc57\u7684\u503c\u4e00\u8d77\u756b\u5728\u5716\u4e0a \u91cd\u8907\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u5176\u4ed6\u7279\u5fb5\u7684 ICE Plot\u3002","title":"ICE Plot"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#sklearn-partial-dependence","text":"\u5728 sklearn \u4e2d\u6709\u63d0\u4f9b\u5169\u7a2e PDP \u7684 API \u5206\u5225\u70ba partial_dependence \u548c PartialDependenceDisplay\uff0c\u5169\u8005\u662f\u7528\u65bc\u5448\u73fe\u90e8\u5206\u76f8\u4f9d (partial dependence) \u7684\u5de5\u5177\uff0c\u4f46\u5b83\u5011\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u986f\u793a\u6548\u679c\u6709\u6240\u4e0d\u540c\u3002 partial_dependence \u662f\u4e00\u500b\u51fd\u6578\uff0c\u53ef\u7528\u4f86\u8a08\u7b97\u90e8\u5206\u76f8\u4f9d\u503c\u4e26\u8fd4\u56de\u7d50\u679c\u3002 PartialDependenceDisplay \u53ef\u4ee5\u76f4\u63a5\u7e6a\u88fd\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u900f\u904e\u8996\u89ba\u5316\u65b9\u6cd5\u6bd4\u8f03\u4e0d\u540c\u7279\u5fb5\u7684\u5f71\u97ff\u3002 \u672c\u65e5\u7684\u5167\u5bb9\u5efa\u8b70\u5728 Python 3.8 \u548c scikit-learn 1.2.2 \u7248\u672c\u4ee5\u4e0a\u57f7\u884c\u3002 \u53c3\u8003: sklearn.inspection: Inspection \u4eca\u5929\u7684\u7bc4\u4f8b\u5ef6\u7e8c\u6628\u5929\u7684\u623f\u50f9\u9810\u6e2c\u8cc7\u6599\u96c6\uff0c\u4e26\u5148\u8a13\u7df4\u597d\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestRegressor import numpy as np import pandas as pd # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , random_state = 42 ) # \u8a13\u7df4\u96a8\u6a5f\u68ee\u6797\u8ff4\u6b78\u6a21\u578b model = RandomForestRegressor ( random_state = 0 ) . fit ( X , y ) \u63a5\u8457\u662f\u672c\u65e5\u5be6\u4f5c\u91cd\u9ede\uff0c\u9019\u88e1\u63a1\u7528 PartialDependenceDisplay \u65b9\u6cd5\u642d\u914d from_estimator \u653e\u5165\u4e8b\u5148\u8a13\u7df4\u597d\u7684 sklearn \u6a21\u578b\uff0c\u4e26\u653e\u5165\u6e2c\u8a66\u8cc7\u6599\u96c6\u9032\u884c\u5168\u57df\u7684\u6a21\u578b\u89e3\u91cb\u3002\u4ee5\u4e0b\u662f\u8a72\u65b9\u6cd5\u5e38\u7528\u5230\u7684\u53c3\u6578\uff0c\u82e5\u60f3\u66f4\u9032\u968e\u4f7f\u7528\u53ef\u4ee5\u53c3\u8003\u5b98\u65b9 \u6587\u4ef6 \u3002 Parameters: - estimator: \u5df2\u8a13\u7df4\u7684\u9810\u6e2c\u5668\u7269\u4ef6\uff0c\u5fc5\u9808\u5be6\u4f5c predict\u3001predict_proba \u6216 decision_function \u65b9\u6cd5\u3002 - X: \u53ef\u653e\u5165\u8a13\u7df4\u8cc7\u6599\u6216\u662f\u6e2c\u8a66\u8cc7\u6599\u96c6\uff0c\u53e6\u5916\u8981\u6ce8\u610f\u662f\u5426\u6709\u524d\u8655\u7406\u3002 - features: \u9700\u8981\u5206\u6790\u7684\u7279\u5fb5\uff0c\u53ef\u4ee5\u70ba\u4e00\u500b\u6216\u591a\u500b\u7279\u5fb5\uff0c\u82e5\u70ba\u4e00\u500b\u5247\u751f\u6210\u55ae\u7279\u5fb5\u7684\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u82e5\u5169\u500b\u5247\u751f\u62102-way\u90e8\u5206\u76f8\u4f9d\u5716\uff08kind='average'\u6642\u624d\u652f\u63f4\uff09\uff0c\u6bcf\u500b\u5143\u7d20\u53ef\u4ee5\u662f\u7279\u5fb5\u7d22\u5f15\u6216\u7279\u5fb5\u540d\u7a31\u6216\u7279\u5fb5\u7d22\u5f15\u6216\u7279\u5fb5\u540d\u7a31\u7684tuple\u3002 - categorical_features: PDP\u4e5f\u652f\u63f4\u985e\u5225\u578b\u7684\u7279\u5fb5\u89e3\u91cb\uff0c\u7528\u6cd5\u8ddf features \u4e00\u6a23\u3002 - feature_names: \u7528\u65bc\u6307\u5b9a\u6bcf\u500b\u7279\u5fb5\u7684\u540d\u7a31\uff0c\u9810\u8a2d\u503c\u70baNone\u3002 - grid_resolution: \u7db2\u683c\u89e3\u6790\u5ea6\uff0c\u6578\u503c\u8d8a\u5927\u8d8a\u80fd\u5448\u73fe\u7279\u5fb5\u8207\u76ee\u6a19\u8b8a\u6578\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u9810\u8a2d\u503c\u70ba100\u3002 - percentiles: \u7528\u65bc\u9650\u5236PDP\u7684X\u8ef8\u4e0a\u4e0b\u754c\uff0c\u4ee5\u767e\u5206\u4f4d\u6578\u8868\u793a\uff0c\u9810\u8a2d\u503c\u70ba(0.05, 0.95)\u3002 - centered: \u662f\u5426\u5c07ICE\u548cPD\u7dda\u7684\u8d77\u59cb\u9ede\u8a2d\u70bay\u8ef8\u539f\u9ede\u5f9e0\u958b\u59cb\uff0c\u9810\u8a2d\u70baFalse\u3002 - kind: \u4ee5\u5b57\u4e32\u683c\u5f0f\u8a2d\u5b9a\uff0c\u63d0\u4f9b\u4e09\u7a2e\u7e6a\u88fd\u5f62\u5f0f 'average' \u5c31\u662f\u55ae\u7d14\u7684PDP\u7e6a\u88fd;'individual' \u7e6a\u88fdICE plot;'both' \u5247\u4ee3\u8868\u540c\u6642\u7e6a\u88fdPD\u8207ICE plot\u3002\u9810\u8a2d\u70ba'average'\u3002 from sklearn.inspection import PartialDependenceDisplay PartialDependenceDisplay . from_estimator ( model , X_test , [ 'MedInc' ], feature_names = feature_names , centered = False , kind = 'average' , percentiles = ( 0 , 1 ), grid_resolution = 100 ) \u8f38\u51fa\u7d50\u679c\uff1a \u8a66\u8457\u5c07\u53c3\u6578\u4fee\u6539 kind='both' \uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u540c\u6642\u5f97\u5230 ICE Plot \u4ee5\u53ca\u4e2d\u9593\u6a58\u8272\u7dda\u689d\u5c31\u662f\u6bcf\u500b\u6a23\u672c\u5e73\u5747\u5f8c\u7684 PDP\u3002","title":"sklearn \u5be6\u4f5c Partial Dependence"},{"location":"11.Partial Dependence Plot:\u63a2\u7d22\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff/#reference","text":"Friedman, Jerome H. \" Greedy function approximation: A gradient boosting machine. \" Annals of statistics (2001): 1189-1232. Alex goldstein. (2014). Peeking Inside the Black Box: Visualizing Statistical Learning with Plots of Individual Conditional Expectation . Arxiv.","title":"Reference"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/","text":"[Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b LIME \u7684\u5168\u540d\u662f Local Interpretable Model-agnostic Explanations \uff0c\u5176\u76ee\u7684\u662f\u53ef\u4ee5\u5206\u6790\u6a21\u578b\u5c0d\u65bc\u67d0\u7b46\u8cc7\u6599\u70ba\u4f55\u505a\u51fa\u7279\u5b9a\u7684\u6c7a\u7b56\uff0c\u4e26\u4e14\u53ef\u4ee5\u61c9\u7528\u65bc\u795e\u7d93\u7db2\u8def\u3001SVM\u3001\u96a8\u6a5f\u68ee\u6797\u3001XGBoost \u7b49\u5404\u7a2e\u6a21\u578b\u3002\u5b83\u53ef\u9069\u7528\u65bc\u8868\u683c\u8cc7\u6599(\u5206\u985e\uff06\u8ff4\u6b78)\u3001\u6587\u5b57\u548c\u5f71\u50cf\uff0c\u4e26\u63d0\u4f9b\u5c0d\u55ae\u7b46\u8cc7\u6599\u7684\u89e3\u91cb\u3002 KDD2016 Conference\u539f\u4f5c\u8005\u4ecb\u7d39LIME \u5f71\u7247 \u539f\u59cb\u8ad6\u6587\uff1a \" Why should i trust you?\" Explaining the predictions of any classifier. \u9996\u5148\u4ee5\u8868\u683c\u8cc7\u6599\u4ee5\u5206\u985e\u4efb\u52d9\u70ba\u4f8b\uff0c\u5c07\u4e00\u7b46\u9867\u5ba2\u8a02\u55ae\u4e1f\u5165\u4ee5\u8a13\u7df4\u597d\u7684\u5206\u985e\u6a21\u578b\u5f8c\u3002\u5373\u53ef\u900f\u904e LIME \u5206\u6790\u662f\u5426\u53ef\u80fd\u5373\u5c07\u6d41\u5931\u3002\u4e26\u4e14\u8aaa\u660e\u54ea\u4e9b\u7279\u5fb5\u662f\u5f71\u97ff\u5ba2\u6236\u6d41\u5931\u7684\u91cd\u8981\u56e0\u5b50\u3002 \u7b2c\u4e8c\u500b\u4f8b\u5b50\u662f\u5f71\u50cf\u5206\u985e\uff0c\u6211\u5011\u5c07\u4e00\u5f35\u5716\u7247\u4e1f\u5165 Google inception \u6a21\u578b\u9032\u884c\u9810\u6e2c\u5f97\u5230\u524d\u4e09\u540d\u7684\u7d50\u679c\u70ba\u96fb\u5409\u4ed6(32%)\u3001\u53e4\u5178\u5409\u4ed6(24%)\u3001\u62c9\u5e03\u62c9\u591a(21%)\u3002\u900f\u904e LIME \u53ef\u4ee5\u505a\u51fa\u70ba\u4f55\u6a21\u578b\u6703\u9810\u6e2c\u67d0\u7a2e\u985e\u5225\u7684\u539f\u56e0\uff0c\u89e3\u91cb\u70ba\u4f55\u5206\u985e\u70ba\u96fb\u5409\u4ed6\u7684\u8b49\u64da\u4ee5\u53ca\u5176\u5b83\u985e\u5225\u50cf\u662f\u62c9\u5e03\u62c9\u591a\u7684\u8b49\u64da\u5728\u54ea\u3002 \u6700\u5f8c\u4e00\u500b\u4f8b\u5b50\u662f\u6a94\u6848\u6587\u4ef6\u5206\u985e\uff0c\u5206\u8fa8\u662f\u7121\u795e\u8ad6\u7684\u6587\u7ae0\u6216\u662f\u57fa\u7763\u6559\u5167\u5bb9\u7684\u6587\u7ae0\u3002\u9019\u908a\u6709\u5169\u7a2e\u6f14\u7b97\u6cd5\u5c0d\u540c\u4e00\u7bc7\u6587\u7ae0\u9032\u884c\u8fa8\u8b58\uff0c\u900f\u904e LIME \u53ef\u4ee5\u5206\u6790\u5169\u7a2e\u6f14\u7b97\u6cd5\u5c0d\u65bc\u8a72\u985e\u9810\u6e2c\u7d50\u679c\u7684\u8b49\u64da\u70ba\u4f55\u3002\u900f\u904e\u7528\u5b57\u9063\u8a5e\u53ef\u4ee5\u78ba\u8a8d\u6a21\u578b\u662f\u5426\u6709\u771f\u7684\u5b78\u5230\u8fa8\u8b58\u7684\u7cbe\u9ad3\uff0c\u800c\u4e0d\u662f\u904e\u64ec\u5408\u3002 LIME \u904b\u4f5c\u539f\u7406 \u9019\u88e1\u6211\u5011\u4f86\u8ac7\u8ac7 LIME \u5982\u4f55\u5be6\u73fe\u3002\u5047\u8a2d\u8cc7\u6599\u6709\u5169\u500b\u7279\u5fb5\uff0c\u7c89\u7d05\u8207\u85cd\u8272\u662f\u900f\u904e\u67d0\u7a2e\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u570d\u51fa\u4f86\u7684\u908a\u754c\u3002\u63a5\u8457\u6211\u5011\u8981\u5206\u6790\u70ba\u4f55+\u88ab\u9810\u6e2c\u70ba\u7c89\u7d05\u7684\u985e\u5225\u3002LIME \u7684\u505a\u6cd5\u662f\u5148\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u4e2d\u96a8\u6a5f\u7684\u63a1\u6a23\u4e00\u4e9b\u8cc7\u6599\u51fa\u4f86\u4e26\u4e1f\u5165\u8a13\u7df4\u597d\u7684\u6a21\u578b(f)\u9032\u884c\u9810\u6e2c\u5f97\u5230\u7d50\u679c\u3002\u9810\u6e2c\u5b8c\u4e4b\u5f8c\u6211\u5011\u62ff\u9019\u4e9b\u63a1\u6a23\u9810\u6e2c\u5f8c\u7684\u7d50\u679c\u8207\u8981\u88ab\u5206\u6790\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599+\u9032\u884c\u8ddd\u96e2\u8a08\u7b97\u3002\u96e2+\u8cc7\u6599\u9ede\u8d8a\u8fd1\u7684\u8cc7\u6599\u91cd\u8981\u6027\u5c31\u8d8a\u9ad8(\u5716\u4e2d+\u548co\u6703\u8d8a\u5927)\u3002\u6700\u7d42\u6703\u751f\u6210\u4e00\u500b\u975e\u5e38\u7c21\u55ae\u4e26\u53ef\u89e3\u91cb\u7684\u6a21\u578bg(\u4f8b\u5982\u7dda\u6027\u6a21\u578b)\uff0c\u5176\u76ee\u6a19\u8a13\u7df4\u4e00\u500b\u7c21\u55ae g \u6a21\u578b\u4f7f\u5f97\u9810\u6e2c\u7d50\u679c\u8d8a\u63a5\u8fd1 f \u6240\u9810\u6e2c\u7684\u7d50\u679c\u8d8a\u597d(\u4e26\u975e ground true)\u3002\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u7684\u524d\u63d0\u662f\u8ddd\u96e2\u88ab\u5206\u6790\u7684\u90a3\u7b46\u8cc7\u6599\u8d8a\u63a5\u8fd1\u7684\u8cc7\u6599\u8981\u8207 f \u9810\u6e2c\u7d50\u679c\u8d8a\u63a5\u8fd1\u8d8a\u597d\u3002\u56e0\u6b64\u5c31\u53ef\u4ee5\u900f\u904e\u4ee5\u8a13\u7df4\u597d\u7684\u7dda\u6027\u6a21\u578b\u5c0d\u8a72\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 LIME\u7684\u904b\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a 1. \u751f\u6210\u4e00\u500b\u65b0\u7684\u6578\u64da\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u7d93\u904e\u6392\u5217\u7684\u6a23\u672c\uff0c\u4e26\u4f7f\u7528\u9ed1\u76d2\u6a21\u578b\u9810\u6e2c\u3002 2. \u5728\u65b0\u7684\u6578\u64da\u96c6\u4e0a\u8a13\u7df4\u4e00\u500b\u53ef\u89e3\u91cb\u6a21\u578b\uff0c\u6839\u64da\u62bd\u6a23\u5be6\u4f8b\u8207\u76ee\u6a19\u5be6\u4f8b\u7684\u63a5\u8fd1\u7a0b\u5ea6\u52a0\u6b0a\u3002 3. \u5c07\u65b0\u7684\u6578\u64da\u96c6\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u3002 LIME \u2013 tablular dataset \u9019\u88e1\u4ee5\u4e00\u500b\u5be6\u969b\u8868\u683c\u8cc7\u6599\u505a\u5c55\u793a\uff0c\u5c0d\u65bc\u8868\u683c\u6578\u64da\uff0cLIME \u7684\u62bd\u6a23\u4f86\u6e90\u901a\u5e38\u4f86\u81ea\u8a13\u7df4\u96c6\u3002\u5047\u8a2d\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63a1\u6a23 N \u7b46\u8cc7\u6599\uff0c\u4e26\u4e1f\u5165\u4ee5\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u9810\u6e2c\u4e26\u5f97\u5230\u6a19\u7c64\u3002x \u662f\u4e00\u7b46\u60f3\u88ab\u5206\u6790\u7684\u6e2c\u8a66\u8cc7\u6599\uff0c\u5c07\u6703\u8207\u525b\u88ab\u63a1\u6a23\u6bcf\u7b46\u53bb\u8a08\u7b97\u8ddd\u96e2\u3002\u7b2c\u4e09\u6b65\u9a5f\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6613\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u5982\u679c x \u96e2\u63a1\u6a23\u7684\u8cc7\u6599\u5f88\u8fd1\u7684\u8a71\u6211\u5011\u671f\u671b\u8981\u8207\u539f\u672c f \u7684\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u8981\u76f8\u8fd1\u3002\u900f\u904e\u8a72\u76ee\u6a19\u51fd\u5f0f\u5b9a\u7fa9\u597d\u5f8c\uff0c\u5c31\u80fd\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7684 g \u6a21\u578b\u3002 LIME \u2013 image dataset \u9996\u5148\u900f\u904e\u5f71\u50cf\u8655\u7406\u6280\u5de7\u5c07\u4e00\u5f35\u5f71\u50cf\u5207\u6210 K \u4efd super-pixels\uff0c\u56e0\u6b64\u540c\u4e00\u500b\u5340\u584a\u53ef\u80fd\u662f\u985e\u4f3c\u7684\u7269\u4ef6\u3002\u63a5\u8457\u7522\u751fN\u500b\u9577\u5ea6\u70baK\u7684\u5411\u91cf\uff0cperturbed image \u7684\u610f\u601d\u5c31\u662f\u7576\u5411\u91cf\u4e2d 0 \u5c31\u4ee3\u8868\u4fdd\u7559\u8a72\u5340\u584a 1 \u53bb\u9664\u8a72\u5340\u584a\u3002\u56e0\u6b64\u6703\u7522\u751f N \u5f35\u4e0d\u540c\u7684\u5f71\u50cf\uff0c\u6bcf\u5f35\u5f71\u50cf\u4e2d\u53ef\u80fd\u90fd\u6709\u5e7e\u500b super-pixels \u70ba\u7a7a\u767d\u3002 \u5c07\u4e00\u5f35\u5716\u7247\u900f\u904e super-pixels \u7522\u751f\u51fa N \u5f35\u4e0d\u540c\u7684\u5716\u7247\uff0c\u5373\u4ee3\u8868\u76ee\u524d\u624b\u4e0a\u6709\u4e86 N \u5f35\u8207\u539f\u5716\u76f8\u4f3c\u7684\u5716\u7247\u3002\u63a5\u8457\u5c07\u9019 N \u5f35\u5716\u7247\u4e1f\u5165\u8a13\u7df4\u597d\u8981\u88ab\u89e3\u91cb\u7684 Google inception \u6a21\u578b\u4e2d\uff0c\u9810\u6e2c\u9019 N \u5f35\u5716\u7247\u7684\u985e\u5225\u3002\u540c\u6642\u5fc5\u9808\u8a08\u7b97\u9019 N \u5f35\u5716\u7247\u8207\u539f\u5716\u6709\u591a\u50cf\uff0c\u7b97\u7684\u65b9\u5f0f\u5c31\u662f\u6bcf\u500b\u5411\u91cf\u8ddf\u5168\u90e8\u662f 0 \u7684\u5411\u91cf(\u4ee3\u8868\u6c92\u6709\u62b9\u9664\u662f\u5b8c\u6574\u5716)\u53bb\u8a08\u7b97\u6b50\u6c0f\u8ddd\u96e2(L2 Distance)\uff0c\u56e0\u6b64\u7b97\u51fa\u4f86\u8d8a\u63a5\u8fd1 1 \u4ee3\u8868\u8207\u539f\u5716\u8d8a\u76f8\u4f3c\u3002\u6700\u5f8c\u5efa\u7acb\u4e00\u500b\u7dda\u6027\u8ff4\u6b78\u6a21\u578b g \u4f7f\u5f97\u8ddf\u539f\u672c\u6a21\u578b f \u9810\u6e2c\u8d8a\u76f8\u8fd1\u8d8a\u597d\u3002\u6700\u7d42\u628a\u7279\u5225\u91cd\u8981\u7684 super-pixels \u79c0\u51fa\u4f86\u3002 \u5c0f\u7d50 LIME\uff08Local Interpretable Model-Agnostic Explanations\uff09\u662f\u4e00\u7a2e\u8207\u300c\u6a21\u578b\u7121\u95dc\u300d\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u88ab\u7528\u65bc\u4efb\u4f55\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u800c\u4e0d\u53d7\u7279\u5b9a\u6a21\u578b\u7b97\u6cd5\u6216\u67b6\u69cb\u7684\u9650\u5236\u3002\u4e26\u4e14\u9069\u7528\u65bc\u8868\u683c\u6578\u64da\u3001\u6587\u5b57\u548c\u5716\u50cf\u3002\u9019\u4f7f\u5f97 LIME \u6210\u70ba\u4e00\u500b\u901a\u7528\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u53ef\u61c9\u7528\u65bc\u4e0d\u540c\u9818\u57df\u548c\u554f\u984c\u5834\u666f\u3002\u6b64\u5916 LIME \u63d0\u4f9b\u7684\u89e3\u91cb\u662f\u57fa\u65bc\u55ae\u500b\u5be6\u4f8b\u7684\uff0c\u9019\u4f7f\u6211\u5011\u80fd\u5920\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u6a21\u578b\u5728\u500b\u5225\u5be6\u4f8b\u4e0a\u7684\u9810\u6e2c\u548c\u6c7a\u7b56\u4f9d\u64da\u3002 Reference Ribeiro, Marco Tulio, Sameer Singh, and Carlos Guestrin. \" \" Why should i trust you?\" Explaining the predictions of any classifier. \" Proceedings of the 22nd ACM SIGKDD international conference on knowledge discovery and data mining. 2016. \u4f7f\u7528 LIME \u89e3\u91cb\u8907\u96dc\u7684\u5206\u985e\u6a21\u578b LIME\u53ef\u89e3\u91cb\u6027\u5206\u6790-ImageNet\u5716\u50cf\u5206\u985e Unboxing the black box using LIME","title":"[Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#day-12-lime","text":"LIME \u7684\u5168\u540d\u662f Local Interpretable Model-agnostic Explanations \uff0c\u5176\u76ee\u7684\u662f\u53ef\u4ee5\u5206\u6790\u6a21\u578b\u5c0d\u65bc\u67d0\u7b46\u8cc7\u6599\u70ba\u4f55\u505a\u51fa\u7279\u5b9a\u7684\u6c7a\u7b56\uff0c\u4e26\u4e14\u53ef\u4ee5\u61c9\u7528\u65bc\u795e\u7d93\u7db2\u8def\u3001SVM\u3001\u96a8\u6a5f\u68ee\u6797\u3001XGBoost \u7b49\u5404\u7a2e\u6a21\u578b\u3002\u5b83\u53ef\u9069\u7528\u65bc\u8868\u683c\u8cc7\u6599(\u5206\u985e\uff06\u8ff4\u6b78)\u3001\u6587\u5b57\u548c\u5f71\u50cf\uff0c\u4e26\u63d0\u4f9b\u5c0d\u55ae\u7b46\u8cc7\u6599\u7684\u89e3\u91cb\u3002 KDD2016 Conference\u539f\u4f5c\u8005\u4ecb\u7d39LIME \u5f71\u7247 \u539f\u59cb\u8ad6\u6587\uff1a \" Why should i trust you?\" Explaining the predictions of any classifier. \u9996\u5148\u4ee5\u8868\u683c\u8cc7\u6599\u4ee5\u5206\u985e\u4efb\u52d9\u70ba\u4f8b\uff0c\u5c07\u4e00\u7b46\u9867\u5ba2\u8a02\u55ae\u4e1f\u5165\u4ee5\u8a13\u7df4\u597d\u7684\u5206\u985e\u6a21\u578b\u5f8c\u3002\u5373\u53ef\u900f\u904e LIME \u5206\u6790\u662f\u5426\u53ef\u80fd\u5373\u5c07\u6d41\u5931\u3002\u4e26\u4e14\u8aaa\u660e\u54ea\u4e9b\u7279\u5fb5\u662f\u5f71\u97ff\u5ba2\u6236\u6d41\u5931\u7684\u91cd\u8981\u56e0\u5b50\u3002 \u7b2c\u4e8c\u500b\u4f8b\u5b50\u662f\u5f71\u50cf\u5206\u985e\uff0c\u6211\u5011\u5c07\u4e00\u5f35\u5716\u7247\u4e1f\u5165 Google inception \u6a21\u578b\u9032\u884c\u9810\u6e2c\u5f97\u5230\u524d\u4e09\u540d\u7684\u7d50\u679c\u70ba\u96fb\u5409\u4ed6(32%)\u3001\u53e4\u5178\u5409\u4ed6(24%)\u3001\u62c9\u5e03\u62c9\u591a(21%)\u3002\u900f\u904e LIME \u53ef\u4ee5\u505a\u51fa\u70ba\u4f55\u6a21\u578b\u6703\u9810\u6e2c\u67d0\u7a2e\u985e\u5225\u7684\u539f\u56e0\uff0c\u89e3\u91cb\u70ba\u4f55\u5206\u985e\u70ba\u96fb\u5409\u4ed6\u7684\u8b49\u64da\u4ee5\u53ca\u5176\u5b83\u985e\u5225\u50cf\u662f\u62c9\u5e03\u62c9\u591a\u7684\u8b49\u64da\u5728\u54ea\u3002 \u6700\u5f8c\u4e00\u500b\u4f8b\u5b50\u662f\u6a94\u6848\u6587\u4ef6\u5206\u985e\uff0c\u5206\u8fa8\u662f\u7121\u795e\u8ad6\u7684\u6587\u7ae0\u6216\u662f\u57fa\u7763\u6559\u5167\u5bb9\u7684\u6587\u7ae0\u3002\u9019\u908a\u6709\u5169\u7a2e\u6f14\u7b97\u6cd5\u5c0d\u540c\u4e00\u7bc7\u6587\u7ae0\u9032\u884c\u8fa8\u8b58\uff0c\u900f\u904e LIME \u53ef\u4ee5\u5206\u6790\u5169\u7a2e\u6f14\u7b97\u6cd5\u5c0d\u65bc\u8a72\u985e\u9810\u6e2c\u7d50\u679c\u7684\u8b49\u64da\u70ba\u4f55\u3002\u900f\u904e\u7528\u5b57\u9063\u8a5e\u53ef\u4ee5\u78ba\u8a8d\u6a21\u578b\u662f\u5426\u6709\u771f\u7684\u5b78\u5230\u8fa8\u8b58\u7684\u7cbe\u9ad3\uff0c\u800c\u4e0d\u662f\u904e\u64ec\u5408\u3002","title":"[Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#lime","text":"\u9019\u88e1\u6211\u5011\u4f86\u8ac7\u8ac7 LIME \u5982\u4f55\u5be6\u73fe\u3002\u5047\u8a2d\u8cc7\u6599\u6709\u5169\u500b\u7279\u5fb5\uff0c\u7c89\u7d05\u8207\u85cd\u8272\u662f\u900f\u904e\u67d0\u7a2e\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u570d\u51fa\u4f86\u7684\u908a\u754c\u3002\u63a5\u8457\u6211\u5011\u8981\u5206\u6790\u70ba\u4f55+\u88ab\u9810\u6e2c\u70ba\u7c89\u7d05\u7684\u985e\u5225\u3002LIME \u7684\u505a\u6cd5\u662f\u5148\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u4e2d\u96a8\u6a5f\u7684\u63a1\u6a23\u4e00\u4e9b\u8cc7\u6599\u51fa\u4f86\u4e26\u4e1f\u5165\u8a13\u7df4\u597d\u7684\u6a21\u578b(f)\u9032\u884c\u9810\u6e2c\u5f97\u5230\u7d50\u679c\u3002\u9810\u6e2c\u5b8c\u4e4b\u5f8c\u6211\u5011\u62ff\u9019\u4e9b\u63a1\u6a23\u9810\u6e2c\u5f8c\u7684\u7d50\u679c\u8207\u8981\u88ab\u5206\u6790\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599+\u9032\u884c\u8ddd\u96e2\u8a08\u7b97\u3002\u96e2+\u8cc7\u6599\u9ede\u8d8a\u8fd1\u7684\u8cc7\u6599\u91cd\u8981\u6027\u5c31\u8d8a\u9ad8(\u5716\u4e2d+\u548co\u6703\u8d8a\u5927)\u3002\u6700\u7d42\u6703\u751f\u6210\u4e00\u500b\u975e\u5e38\u7c21\u55ae\u4e26\u53ef\u89e3\u91cb\u7684\u6a21\u578bg(\u4f8b\u5982\u7dda\u6027\u6a21\u578b)\uff0c\u5176\u76ee\u6a19\u8a13\u7df4\u4e00\u500b\u7c21\u55ae g \u6a21\u578b\u4f7f\u5f97\u9810\u6e2c\u7d50\u679c\u8d8a\u63a5\u8fd1 f \u6240\u9810\u6e2c\u7684\u7d50\u679c\u8d8a\u597d(\u4e26\u975e ground true)\u3002\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u7684\u524d\u63d0\u662f\u8ddd\u96e2\u88ab\u5206\u6790\u7684\u90a3\u7b46\u8cc7\u6599\u8d8a\u63a5\u8fd1\u7684\u8cc7\u6599\u8981\u8207 f \u9810\u6e2c\u7d50\u679c\u8d8a\u63a5\u8fd1\u8d8a\u597d\u3002\u56e0\u6b64\u5c31\u53ef\u4ee5\u900f\u904e\u4ee5\u8a13\u7df4\u597d\u7684\u7dda\u6027\u6a21\u578b\u5c0d\u8a72\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 LIME\u7684\u904b\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a 1. \u751f\u6210\u4e00\u500b\u65b0\u7684\u6578\u64da\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u7d93\u904e\u6392\u5217\u7684\u6a23\u672c\uff0c\u4e26\u4f7f\u7528\u9ed1\u76d2\u6a21\u578b\u9810\u6e2c\u3002 2. \u5728\u65b0\u7684\u6578\u64da\u96c6\u4e0a\u8a13\u7df4\u4e00\u500b\u53ef\u89e3\u91cb\u6a21\u578b\uff0c\u6839\u64da\u62bd\u6a23\u5be6\u4f8b\u8207\u76ee\u6a19\u5be6\u4f8b\u7684\u63a5\u8fd1\u7a0b\u5ea6\u52a0\u6b0a\u3002 3. \u5c07\u65b0\u7684\u6578\u64da\u96c6\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u3002","title":"LIME \u904b\u4f5c\u539f\u7406"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#lime-tablular-dataset","text":"\u9019\u88e1\u4ee5\u4e00\u500b\u5be6\u969b\u8868\u683c\u8cc7\u6599\u505a\u5c55\u793a\uff0c\u5c0d\u65bc\u8868\u683c\u6578\u64da\uff0cLIME \u7684\u62bd\u6a23\u4f86\u6e90\u901a\u5e38\u4f86\u81ea\u8a13\u7df4\u96c6\u3002\u5047\u8a2d\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63a1\u6a23 N \u7b46\u8cc7\u6599\uff0c\u4e26\u4e1f\u5165\u4ee5\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u9810\u6e2c\u4e26\u5f97\u5230\u6a19\u7c64\u3002x \u662f\u4e00\u7b46\u60f3\u88ab\u5206\u6790\u7684\u6e2c\u8a66\u8cc7\u6599\uff0c\u5c07\u6703\u8207\u525b\u88ab\u63a1\u6a23\u6bcf\u7b46\u53bb\u8a08\u7b97\u8ddd\u96e2\u3002\u7b2c\u4e09\u6b65\u9a5f\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6613\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u5982\u679c x \u96e2\u63a1\u6a23\u7684\u8cc7\u6599\u5f88\u8fd1\u7684\u8a71\u6211\u5011\u671f\u671b\u8981\u8207\u539f\u672c f \u7684\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u8981\u76f8\u8fd1\u3002\u900f\u904e\u8a72\u76ee\u6a19\u51fd\u5f0f\u5b9a\u7fa9\u597d\u5f8c\uff0c\u5c31\u80fd\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7684 g \u6a21\u578b\u3002","title":"LIME \u2013 tablular dataset"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#lime-image-dataset","text":"\u9996\u5148\u900f\u904e\u5f71\u50cf\u8655\u7406\u6280\u5de7\u5c07\u4e00\u5f35\u5f71\u50cf\u5207\u6210 K \u4efd super-pixels\uff0c\u56e0\u6b64\u540c\u4e00\u500b\u5340\u584a\u53ef\u80fd\u662f\u985e\u4f3c\u7684\u7269\u4ef6\u3002\u63a5\u8457\u7522\u751fN\u500b\u9577\u5ea6\u70baK\u7684\u5411\u91cf\uff0cperturbed image \u7684\u610f\u601d\u5c31\u662f\u7576\u5411\u91cf\u4e2d 0 \u5c31\u4ee3\u8868\u4fdd\u7559\u8a72\u5340\u584a 1 \u53bb\u9664\u8a72\u5340\u584a\u3002\u56e0\u6b64\u6703\u7522\u751f N \u5f35\u4e0d\u540c\u7684\u5f71\u50cf\uff0c\u6bcf\u5f35\u5f71\u50cf\u4e2d\u53ef\u80fd\u90fd\u6709\u5e7e\u500b super-pixels \u70ba\u7a7a\u767d\u3002 \u5c07\u4e00\u5f35\u5716\u7247\u900f\u904e super-pixels \u7522\u751f\u51fa N \u5f35\u4e0d\u540c\u7684\u5716\u7247\uff0c\u5373\u4ee3\u8868\u76ee\u524d\u624b\u4e0a\u6709\u4e86 N \u5f35\u8207\u539f\u5716\u76f8\u4f3c\u7684\u5716\u7247\u3002\u63a5\u8457\u5c07\u9019 N \u5f35\u5716\u7247\u4e1f\u5165\u8a13\u7df4\u597d\u8981\u88ab\u89e3\u91cb\u7684 Google inception \u6a21\u578b\u4e2d\uff0c\u9810\u6e2c\u9019 N \u5f35\u5716\u7247\u7684\u985e\u5225\u3002\u540c\u6642\u5fc5\u9808\u8a08\u7b97\u9019 N \u5f35\u5716\u7247\u8207\u539f\u5716\u6709\u591a\u50cf\uff0c\u7b97\u7684\u65b9\u5f0f\u5c31\u662f\u6bcf\u500b\u5411\u91cf\u8ddf\u5168\u90e8\u662f 0 \u7684\u5411\u91cf(\u4ee3\u8868\u6c92\u6709\u62b9\u9664\u662f\u5b8c\u6574\u5716)\u53bb\u8a08\u7b97\u6b50\u6c0f\u8ddd\u96e2(L2 Distance)\uff0c\u56e0\u6b64\u7b97\u51fa\u4f86\u8d8a\u63a5\u8fd1 1 \u4ee3\u8868\u8207\u539f\u5716\u8d8a\u76f8\u4f3c\u3002\u6700\u5f8c\u5efa\u7acb\u4e00\u500b\u7dda\u6027\u8ff4\u6b78\u6a21\u578b g \u4f7f\u5f97\u8ddf\u539f\u672c\u6a21\u578b f \u9810\u6e2c\u8d8a\u76f8\u8fd1\u8d8a\u597d\u3002\u6700\u7d42\u628a\u7279\u5225\u91cd\u8981\u7684 super-pixels \u79c0\u51fa\u4f86\u3002","title":"LIME \u2013 image dataset"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#_1","text":"LIME\uff08Local Interpretable Model-Agnostic Explanations\uff09\u662f\u4e00\u7a2e\u8207\u300c\u6a21\u578b\u7121\u95dc\u300d\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u88ab\u7528\u65bc\u4efb\u4f55\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u800c\u4e0d\u53d7\u7279\u5b9a\u6a21\u578b\u7b97\u6cd5\u6216\u67b6\u69cb\u7684\u9650\u5236\u3002\u4e26\u4e14\u9069\u7528\u65bc\u8868\u683c\u6578\u64da\u3001\u6587\u5b57\u548c\u5716\u50cf\u3002\u9019\u4f7f\u5f97 LIME \u6210\u70ba\u4e00\u500b\u901a\u7528\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u53ef\u61c9\u7528\u65bc\u4e0d\u540c\u9818\u57df\u548c\u554f\u984c\u5834\u666f\u3002\u6b64\u5916 LIME \u63d0\u4f9b\u7684\u89e3\u91cb\u662f\u57fa\u65bc\u55ae\u500b\u5be6\u4f8b\u7684\uff0c\u9019\u4f7f\u6211\u5011\u80fd\u5920\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u6a21\u578b\u5728\u500b\u5225\u5be6\u4f8b\u4e0a\u7684\u9810\u6e2c\u548c\u6c7a\u7b56\u4f9d\u64da\u3002","title":"\u5c0f\u7d50"},{"location":"12.LIME\u7406\u8ad6:\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b/#reference","text":"Ribeiro, Marco Tulio, Sameer Singh, and Carlos Guestrin. \" \" Why should i trust you?\" Explaining the predictions of any classifier. \" Proceedings of the 22nd ACM SIGKDD international conference on knowledge discovery and data mining. 2016. \u4f7f\u7528 LIME \u89e3\u91cb\u8907\u96dc\u7684\u5206\u985e\u6a21\u578b LIME\u53ef\u89e3\u91cb\u6027\u5206\u6790-ImageNet\u5716\u50cf\u5206\u985e Unboxing the black box using LIME","title":"Reference"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/","text":"[Day 13] LIME\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u4eca\u5929\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e LIME \u7684\u5be6\u4f5c\u7d30\u7bc0\uff0c\u5305\u62ec\u5982\u4f55\u9078\u64c7\u89e3\u91cb\u6027\u6a21\u578b\u548c\u89e3\u91cb\u7279\u5fb5\uff0c\u4ee5\u53ca\u5982\u4f55\u9078\u64c7\u9130\u57df\u5927\u5c0f\u4f86\u751f\u6210\u89e3\u91cb\u6578\u64da\u3002 \u82e5\u60f3\u4e86\u89e3 LIME \u7684\u6838\u5fc3\u539f\u7406\u53ef\u4ee5\u53c3\u8003\u524d\u4e00\u7bc7\u6587\u7ae0\uff1a [Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b LIME \u7684\u512a\u7f3a\u9ede LIME \u662f\u4e00\u7a2e\u6a5f\u5668\u5b78\u7fd2\u53ef\u89e3\u91cb\u7684\u6280\u8853\uff0c\u5b83\u7684\u57fa\u672c\u539f\u7406\u662f\u5728\u89e3\u91cb\u6a21\u578b\u6642\uff0c\u900f\u904e\u5efa\u7acb\u4e00\u500b\u5c40\u90e8\u89e3\u91cb\u6027\u6a21\u578b\uff0c\u4f86\u8fd1\u4f3c\u9ed1\u76d2\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9019\u8b93\u6211\u5011\u80fd\u5920\u91dd\u5c0d\u7279\u5b9a\u7684\u8f38\u5165\u6a23\u672c\uff0c\u89e3\u91cb\u6a21\u578b\u662f\u5982\u4f55\u9032\u884c\u5224\u65b7\u548c\u9810\u6e2c\u7684\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u7d71\u6574 LIME \u7684\u512a\u7f3a\u9ede\uff1a LIME \u7684\u512a\u9ede\uff1a \u53ef\u4ee5\u89e3\u91cb\u4efb\u4f55\u8907\u96dc\u6a21\u578b\u3002 \u80fd\u5920\u91dd\u5c0d\u67d0\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 \u63d0\u4f9b\u7c21\u55ae\u5bb9\u6613\u7406\u89e3\u7684\u89e3\u91cb\u65b9\u6cd5(\u7dda\u6027\u6a21\u578bex: Ridge Linear Regression)\u3002 LIME \u7684\u7f3a\u9ede\uff1a \u5c0d\u65bc\u9130\u57df\u7684\u5b9a\u7fa9\u4ecd\u7136\u662f\u4e00\u500b\u672a\u89e3\u6c7a\u7684\u554f\u984c\uff08\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5617\u8a66\u4e0d\u540c\u7684\u6838\u51fd\u6578\u8a2d\u7f6e\uff0c\u4e26\u6e2c\u8a66\u54ea\u4e00\u500b\u6548\u679c\u6700\u597d\uff09\u3002 \u8cc7\u6599\u7684\u62bd\u6a23\u65b9\u6cd5\u8207\u6578\u91cf\u7121\u4e00\u5b9a\u7684\u6a19\u6e96\uff0c\u56e0\u6b64\u5bb9\u6613\u5f71\u97ff\u89e3\u91cb\u7d50\u679c\u3002 \u7c21\u55ae\u6a21\u578b\u63a1\u7528\u7dda\u6027\u6613\u5ffd\u7565\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u95dc\u6027\uff0c\u6709\u6642\u53ef\u80fd\u7522\u751f\u4e0d\u5408\u7406\u7684\u89e3\u91cb\u7d50\u679c\u3002 \u8f38\u5165\u7684\u8cc7\u6599\u82e5\u5b58\u5728\u56b4\u91cd\u5171\u7dda\u6027\u554f\u984c\uff0c\u5247\u6703\u4f7f\u8ff4\u6b78\u4f30\u8a08\u4e0d\u51c6\u78ba\u3002 [\u5be6\u4f5c] LIME \u89e3\u91cb\u5206\u985e\u6a21\u578b \u9019\u88e1\u6211\u5011\u6703\u4ee5\u4e00\u500b\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c6\u8a13\u7df4\u4e00\u500b XGBoost \u5206\u985e\u5668\u3002\u63a5\u9019\u900f\u904e LIME LimeTabularExplainer \u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u4e26\u5c0d\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5148\u8f09\u5165\u4eca\u5929\u7bc4\u4f8b\u7684\u8cc7\u6599\u96c6\uff0c\u8a72\u8cc7\u6599\u96c6\u53ef\u4ee5\u5f9e Kaggle \u8cc7\u6599\u79d1\u5b78\u5e73\u53f0 \u53d6\u5f97 \u3002 \u8f09\u5165\u8cc7\u6599\u96c6 import pandas as pd # \u8b80\u53d6\u8cc7\u6599\u96c6 df_train = pd . read_csv ( './diabetes.csv' ) \u8b93\u6211\u5011\u4f86\u77a7\u77a7 df_train \u88e1\u9762\u7684\u5167\u5bb9\u3002\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u8a72\u8cc7\u6599\u96c6\u6709\u7e3d\u5171\u6709 768 \u7b46\u6578\u64da\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u6709\u516b\u500b\u6b04\u4f4d\u8cc7\u8a0a\uff0c\u5176\u4e2d\u5305\u542b\u6a21\u578b\u7684\u8f38\u5165\u8207\u8f38\u51fa\u3002 \u9019\u500b\u8cc7\u6599\u96c6\u4f86\u81ea\u7f8e\u570b\u570b\u5bb6\u7cd6\u5c3f\u75c5\u548c\u6d88\u5316\u548c\u814e\u81df\u75be\u75c5\u7814\u7a76\u6240\u3002\u5176\u76ee\u6a19\u662f\u6839\u64da\u8a3a\u65b7\u6e2c\u91cf\u4f86\u9810\u6e2c\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u8cc7\u6599\u96c6\u7684\u8b8a\u6578\u5982\u4e0b\uff1a Glucose\uff1a\u53e3\u670d\u8461\u8404\u7cd6\u8010\u91cf\u6e2c\u8a66\u4e2d2\u5c0f\u6642\u7684\u8840\u6f3f\u8461\u8404\u7cd6\u6fc3\u5ea6\uff0c\u7528\u65bc\u6e2c\u8a66\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u3002 BloodPressure\uff1a\u8212\u5f35\u58d3(mm Hg)\uff0c\u8840\u58d3\u4e2d\u7684\u4e00\u500b\u53c3\u6578\uff0c\u7528\u65bc\u8861\u91cf\u5fc3\u81df\u5728\u6536\u7e2e\u6642\u7684\u58d3\u529b\u3002 SkinThickness\uff1a\u4e09\u982d\u808c\u76ae\u819a\u8936\u76ba\u539a\u5ea6(mm)\uff0c\u7528\u65bc\u8861\u91cf\u76ae\u819a\u7684\u8102\u80aa\u5c64\u539a\u5ea6\u3002 Insulin\uff1a2\u5c0f\u6642\u8840\u6e05\u80f0\u5cf6\u7d20(mu U/ml)\uff0c\u7528\u65bc\u8a55\u4f30\u80f0\u5cf6\u7d20\u6c34\u5e73\uff0c\u5c0d\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u975e\u5e38\u91cd\u8981\u3002 BMI\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578\uff0c\u8868\u793a\u9ad4\u91cd\u548c\u8eab\u9ad8\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8a55\u4f30\u9ad4\u91cd\u72c0\u6cc1\u3002 DiabetesPedigreeFunction\uff1a\u7cd6\u5c3f\u75c5\u5bb6\u65cf\u907a\u50b3\u51fd\u6578\uff0c\u7528\u65bc\u8861\u91cf\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u5bb6\u65cf\u907a\u50b3\u98a8\u96aa\u3002 Age\uff1a\u75c5\u4eba\u7684\u5e74\u9f61\u3002 Outcome\uff1a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5(\u4f5c\u70ba\u6a21\u578b\u8f38\u51fa)\uff0c\u503c\u70ba0\u8868\u793a\u6c92\u6709\u7cd6\u5c3f\u75c5\uff0c\u503c\u70ba1\u8868\u793a\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002 \u5207\u5272\u8cc7\u6599\u96c6 \u63a5\u4e0b\u4f86\u5f9e\u525b\u525b\u8b80\u53d6\u9032\u4f86\u7684 df_train \u8cc7\u6599\u96c6\u4e2d\uff0c\u5c07\u6240\u6709\u7684\u8f38\u5165\u7279\u5fb5\u8cc7\u6599\u63d0\u53d6\u51fa\u4f86\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u5165 X\u3002\u540c\u6642\uff0c\u6211\u5011\u5f9e df_train \u4e2d\u53d6\u5f97 Outcome \u6b04\u4f4d\u7684\u8cc7\u6599\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u51fa y\uff0c\u7528\u4f86\u8868\u793a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u4e5f\u5c07\u6240\u6709\u8f38\u5165\u7279\u5fb5\u7684\u6b04\u4f4d\u540d\u7a31\u5132\u5b58\u5230 x_feature_names \u8b8a\u6578\u4e2d\uff0c y_label_names \u5247\u662f\u5132\u5b58\u8f38\u51fa\u7684\u6a19\u7c64\u540d\u7a31\uff0c\u9019\u5169\u500b\u500b\u8b8a\u6578\u5c07\u5728\u5f8c\u7e8c LIME \u6a21\u578b\u89e3\u91cb\u7684\u904e\u7a0b\u4e2d\u4f7f\u7528\u3002\u6700\u5f8c\u900f\u904e train_test_split \u65b9\u6cd5\u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split x_feature_names = df_train . drop ([ 'Outcome' ], axis = 1 ) . columns y_label_names = [ 'No' , 'Yes' ] X = df_train . drop ([ 'Outcome' ], axis = 1 ) . values # \u79fb\u9664y\u4e26\u53d6\u5f97\u5269\u4e0b\u6b04\u4f4d\u8cc7\u6599 y = df_train [ 'Outcome' ] . values # \u53d6\u5f97\u75c5\u4eba\u7cd6\u5c3f\u75c5\u7d50\u679c\u4f5c\u70bay X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.01 , random_state = 42 , stratify = y ) \u8a13\u7df4\u6a21\u578b (XGBoost \u5206\u985e\u5668) \u4ee5\u4e0b\u4f7f\u7528 XGBoost \u5206\u985e\u5668\uff08XGBClassifier\uff09\u4f86\u5efa\u7acb\u4e00\u500b\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\uff08X_train, y_train\uff09\u4f86\u8a13\u7df4\u9019\u500b\u6a21\u578b\u3002 from xgboost import XGBClassifier # \u5efa\u7acb XGBClassifier \u6a21\u578b xgboostModel = XGBClassifier () # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b xgboostModel . fit ( X_train , y_train ) LIME \u89e3\u91cb\u6a21\u578b \u518d\u4f86\u662f\u672c\u6587\u7684\u91cd\u982d\u6232\u3002\u9996\u5148\u5927\u5bb6\u53ef\u4ee5\u5728\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd LIME \u5957\u4ef6\uff1a pip install lime LimeTabularExplainer \u7528\u65bc\u89e3\u91cb\u8868\u683c\u6578\u64da\u4e2d\u7684\u6a21\u578b\u9810\u6e2c\uff0c\u6839\u64da\u8a13\u7df4\u6578\u64da\u548c\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u751f\u6210\u89e3\u91cb\u6a21\u578b\uff0c\u4e26\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\u7d50\u679c\u3002\u900f\u904e\u8a2d\u7f6e\u4e0d\u540c\u7684\u53c3\u6578\uff0c\u53ef\u4ee5\u81ea\u5b9a\u7fa9\u89e3\u91cb\u5668\u7684\u884c\u70ba\uff0c\u4ee5\u6eff\u8db3\u4e0d\u540c\u7684\u89e3\u91cb\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a training_data\uff1a\u8a13\u7df4\u96c6\u8cc7\u6599 X\u3002 mode\uff1astr\uff0c\u7528\u65bc\u6307\u5b9a\u662f\u5206\u985e\u9084\u662f\u8ff4\u6b78\u6a21\u578b\uff0c{\"classification\", \"regression\"}\u3002 feature_names\uff1alist of names (strings)\uff0c\u7279\u5fb5\u540d\u7a31\uff0c\u5c0d\u61c9\u65bc\u8a13\u7df4\u6578\u64da\u4e2d\u7684\u5217\u3002 categorical_features\uff1alist of indices (ints)\uff0c\u985e\u5225\u7279\u5fb5\u7684\u7d22\u5f15\u5217\u8868\uff0c\u9019\u4e9b\u7279\u5fb5\u7684\u503c\u5fc5\u9808\u662f\u6574\u6578(OrdinalEncoder\u524d\u8655\u7406)\u3002 categorical_names\uff1amap from int to list of names\uff0c\u985e\u5225\u7279\u5fb5\u7684\u540d\u7a31\u6620\u5c04\uff0c\u5176\u4e2d categorical_names[i][j] \u8868\u793a\u7b2c i \u5217\u4e2d\u7b2c j \u500b\u503c\u7684\u540d\u7a31\u3002 verbose\uff1abool\uff0c\u662f\u5426\u986f\u793aLIME\u5c40\u90e8\u6a21\u578b\u9810\u6e2c\u503c\u3002 class_names\uff1alist of class names\uff0c\u985e\u5225\u540d\u7a31\u5217\u8868\uff0c\u6309\u7167\u5206\u985e\u5668\u4f7f\u7528\u7684\u9806\u5e8f\u6392\u5217\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u985e\u5225\u540d\u7a31\u5c07\u662f '0'\u3001'1' \u7b49\u3002 feature_selection\uff1astr\uff0c\u7279\u5fb5\u9078\u64c7\u65b9\u6cd5\uff0c\u9810\u8a2d\u503c\u70baauto\uff0c{'forward_selection', 'highest_weights', 'lasso_path', 'none', 'auto'}\u3002\u8a73\u7d30\u5167\u5bb9 \u53c3\u8003 random_state: \u4e82\u6578\u7a2e\u5b50\uff0c\u78ba\u4fdd\u6bcf\u6b21\u57f7\u884c\u7d50\u679c\u90fd\u4e00\u6a23\u3002 import lime from lime import lime_tabular lime_explainer = lime_tabular . LimeTabularExplainer ( training_data = X_train , feature_names = feature_names , mode = 'classification' , class_names = y_label_names , verbose = True , feature_selection = 'lasso_path' , feature_selection = 'none' , random_state = 44 ) \u6211\u5011\u525b\u525b\u5df2\u7d93\u5efa\u7acb\u4e86\u4e00\u500b LimeTabularExplainer \u4e26\u4e14\u521d\u59cb\u5316\u89e3\u91cb\u6a21\u578b\u7684\u8a2d\u5b9a\u5f8c\uff0c\u63a5\u4e0b\u4f86\u5c31\u53ef\u4ee5\u8a66\u8457\u4e1f\u4e00\u7b46\u8981\u88ab\u89e3\u91cb\u7684\u8cc7\u6599\u4e26\u900f\u904e LIME \u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7dda\u6027\u6a21\u578b\u4e26\u89e3\u91cb\u3002\u89e3\u91cb\u6bcf\u4e00\u7b46\u9810\u6e2c\u6578\u64da\u5247\u662f\u547c\u53eb explain_instance() \u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a data_row\uff1a\u4e00\u7dadnumpy\uff0c\u5c0d\u61c9\u65bc\u8981\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u3002\u4e5f\u5c31\u662f\u8981\u9032\u884c\u89e3\u91cb\u7684\u7279\u5b9a\u6578\u64da\u6a23\u672c\u3002 predict_fn\uff1a\u5df2\u8a13\u7df4\u7684\u9810\u6e2c\u6a21\u578b\u3002\u5c0d\u65bc\u5206\u985e\u5668\uff0c\u9019\u61c9\u8a72\u662f\u4e00\u500b\u51fd\u6578\uff0c\u63a5\u53d7\u4e00\u500b numpy \u6578\u7d44\u4f5c\u70ba\u8f38\u5165\uff0c\u4e26\u8f38\u51fa\u9810\u6e2c\u6a5f\u7387\u3002\u5c0d\u65bc\u56de\u6b78\u6a21\u578b\uff0c\u9019\u500b\u51fd\u6578\u63a5\u53d7\u4e00\u500b numpy \u6578\u7d44\u4e26\u8fd4\u56de\u9810\u6e2c\u503c\u3002\u5c0d\u65bc ScikitClassifiers\uff0c\u9019\u662f classifier.predict_proba()\u3002\u5c0d\u65bc ScikitRegressors\uff0c\u9019\u662f regressor.predict()\u3002 top_labels\uff1a\u9810\u8a2d\u70baNone\uff0c\u9069\u7528\u65bc\u5206\u985e\u6a21\u578b\u53ef\u4ee5\u8f38\u5165\u8981\u88ab\u89e3\u91cb\u7684\u524dk\u500b\u9810\u6e2c\u6a19\u7c64\u7684\u6a21\u578b\u89e3\u91cb\u3002 num_features\uff1a\u89e3\u91cb\u7684\u7279\u5fb5\u6578\u91cf\u3002\u9019\u500b\u53c3\u6578\u9650\u5236\u4e86\u89e3\u91cb\u7d50\u679c\u4e2d\u6240\u986f\u793a\u7684\u7279\u5fb5\u6578\u91cf\u3002\u9810\u8a2d\u70ba10\u3002 num_samples\uff1a\u7528\u65bc\u5b78\u7fd2\u7dda\u6027\u6a21\u578b\u7684\u9130\u57df\u5927\u5c0f\u3002\u8a72\u53c3\u6578\u63a7\u5236\u4e86\u751f\u6210\u89e3\u91cb\u6240\u9700\u7684\u6a23\u672c\u6578\u91cf\u3002\u9810\u8a2d\u70ba5000\u3002 \u9019\u88e1\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLIME \u5728\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u6642\uff0c\u4f7f\u7528\u7684\u662f Ridge \u7dda\u6027\u6a21\u578b\u3002\u5728\u8a13\u7df4\u904e\u7a0b\u4e2d\uff0c\u6703\u6839\u64da\u4f7f\u7528\u8005\u547c\u53eb explain_instance() \u65b9\u6cd5\u6642\u8a2d\u5b9a\u7684 num_features \u53c3\u6578\uff0c\u5f9e\u8a13\u7df4\u96c6\u4e2d\u6311\u9078\u51fa\u5408\u9069\u7684\u7279\u5fb5\u9032\u884c\u8a13\u7df4\u3002\u800c\u6a21\u578b\u5982\u4f55\u9078\u64c7\u7279\u5fb5\uff0c\u5247\u53d6\u6c7a\u65bc\u5efa\u7acb LimeTabularExplainer \u6642\u6240\u8a2d\u5b9a\u7684 forward_selection \u53c3\u6578\u3002\u82e5\u60f3\u89c0\u5bdf\u6240\u6709\u7279\u5fb5\u7684\u89e3\u91cb\u6027\uff0c\u53ef\u4ee5\u5c07\u8a72\u53c3\u6578\u8a2d\u7f6e\u70ba 'none'\uff0c\u9019\u6a23\u6a21\u578b\u5c31\u6703\u8003\u616e\u6240\u6709\u8f38\u5165 X \u7684\u7279\u5fb5\u3002\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u5f9e\u6e2c\u8a66\u96c6\u4e2d\u62ff\u7b2c\u516d\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\uff0c\u4e26\u4e14\u9078\u64c7\u8981\u89e3\u91cb\u7684\u7279\u5fb5\u8a2d\u5b9a\u70ba\u4e03\u500b\uff0c\u4ee3\u8868 LIME \u6703\u91dd\u5c0d\u6240\u6709\u7279\u5fb5\u9032\u884c\u89e3\u91cb\u3002 lime_exp = lime_explainer . explain_instance ( data_row = X_test [ 5 ], predict_fn = xgboostModel . predict_proba , num_features = 7 ) \u6700\u5f8c\u547c\u53eb show_in_notebook() \u5373\u53ef\u89c0\u5bdf LIME \u5982\u4f55\u5c0d\u8a72\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 lime_exp . show_in_notebook ( show_table = True , show_all = True ) Intercept \u662f\u751f\u6210\u7684\u7dda\u6027\u6a21\u578b\u7684\u622a\u8ddd\u9805\u3002\u5728 LIME \u4e2d\uff0c\u70ba\u4e86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u6703\u4f7f\u7528\u4e00\u500b\u7dda\u6027\u6a21\u578b\u4f86\u8fd1\u4f3c\u539f\u59cb\u9ed1\u76d2\u6a21\u578b\u3002Intercept \u662f\u9019\u500b\u7dda\u6027\u6a21\u578b\u4e2d\u7684\u622a\u8ddd\u9805\uff0c\u8868\u793a\u5728\u6c92\u6709\u4efb\u4f55\u7279\u5fb5\u8ca2\u737b\u7684\u60c5\u6cc1\u4e0b\uff0c\u6a21\u578b\u9810\u6e2c\u7684\u57fa\u672c\u503c\u3002 Prediction_local \u662f\u5f9e\u7dda\u6027\u6a21\u578b\u4e2d\u9810\u6e2c\u7684\u5c40\u90e8\u9810\u6e2c\u7d50\u679c\u3002\u5728 LIME \u4e2d\uff0c\u91dd\u5c0d\u7279\u5b9a\u7684\u4e00\u7b46\u8cc7\u6599\u6a23\u672c\uff0c\u6703\u751f\u6210\u4e00\u500b\u5c40\u90e8\u7684\u7dda\u6027\u6a21\u578b\uff0c\u7528\u4f86\u89e3\u91cb\u8a72\u6a23\u672c\u7684\u9810\u6e2c\u7d50\u679c\u3002Prediction_local \u662f\u9019\u500b\u5c40\u90e8\u7dda\u6027\u6a21\u578b\u5c0d\u65bc\u8a72\u6a23\u672c\u7684\u9810\u6e2c\u503c\u3002 Right \u662f\u5f9e\u88ab\u89e3\u91cb\u7684\u5206\u985e\u5668\uff08XGBoost\uff09\u4e2d\u5f97\u5230\u7684\u9810\u6e2c\u503c\u3002\u5728 LIME \u4e2d\uff0c\u6703\u4f7f\u7528\u4e00\u500b\u5f31\u6a21\u578b\uff08\u5206\u985e\u5668\u6216\u8ff4\u6b78\u5668\uff09\u4f86\u9032\u884c\u89e3\u91cb\uff0c\u8a72\u5f31\u6a21\u578b\u662f\u7528\u4f86\u6a21\u64ec\u539f\u59cb\u9ed1\u76d2\u6a21\u578b\u7684\u9810\u6e2c\u884c\u70ba\u3002 \u6211\u5011\u53ef\u4ee5\u5f9e\u4e0a\u9762\u7684\u7d50\u679c\u5206\u6790\u9019\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9996\u5148\uff0c\u5728\u6c92\u6709\u52a0\u5165\u4efb\u4f55\u7279\u5fb5\u6642\uff0c\u7dda\u6027\u6a21\u578b\u9810\u6e2c\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u70ba 0.21\uff0c\u9019\u662f\u622a\u8ddd\u9805\u7684\u5f71\u97ff\u3002\u63a5\u8457\uff0c\u6211\u5011\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u3002\u4ee5 BMI \u70ba\u4f8b\u8a72\u9805\u7279\u5fb5\u6703\u9020\u6210\u7cd6\u5c3f\u75c5\u6b63\u9762\u7684\u5f71\u97ff\u662f\u56e0\u70ba\u8f38\u5165\u7684\u6578\u503c\u5927\u65bc 36.6 \u9019\u500b\u95be\u503c\uff0c\u5c07\u5176\u8f38\u5165\u503c 43 \u4e58\u4ee5 LIME \u7dda\u6027\u6a21\u578b\u7684 x1 \u4fc2\u6578\uff0c\u5f97\u5230 0.15\u3002\u9019\u8868\u793a BMI \u7279\u5fb5\u7684\u52a0\u5165\u6703\u589e\u52a0\u9810\u6e2c\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u7d04 0.15\u3002\u4f9d\u6b64\u985e\u63a8\uff0c\u6bcf\u500b\u7279\u5fb5\u90fd\u52a0\u5165\u5f8c\uff0c\u6700\u5f8c\u52a0\u7e3d\u8d77\u4f86\u5f97\u5230\u9019\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c\u70ba 0.712\u3002\u5728\u9019\u500b\u4e8c\u5143\u5206\u985e\u7684\u7bc4\u4f8b\u4e2d\uff0c\u9019\u8868\u793a\u6709\u76f8\u7576\u9ad8\u7684\u6a5f\u7387\u88ab\u9810\u6e2c\u70ba\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u800c XGBoost \u6a21\u578b\u9810\u6e2c\u8a72\u7b46\u8cc7\u6599\u7684\u6a5f\u7387\u70ba 0.69\u3002 SP-LIME \u7e3d\u9ad4\u8ca2\u737b \u96d6\u7136\u55ae\u7b46\u9810\u6e2c\u7684\u89e3\u91cb\u53ef\u4ee5\u90e8\u5206\u5730\u8b93\u4f7f\u7528\u8005\u4e86\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u65b9\u5f0f\uff0c\u4f46\u9019\u4e26\u4e0d\u80fd\u5b8c\u6574\u5730\u53cd\u6620\u6a21\u578b\u6574\u9ad4\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\u3002\u82e5\u8981\u5168\u9762\u7684\u7406\u89e3\u6574\u500b\u6a21\u578b\u53ef\u80fd\u9700\u8981\u770b\u5f88\u591a\u7b46\u8cc7\u6599\u7684\u89e3\u91cb\u3002\u4f46\u662f\u8981\u770b\u5e7e\u7b46\u8cc7\u6599\u624d\u8db3\u5920\u591a\u5462\uff1f\u5728\u539f\u59cb\u8ad6\u6587\u4e2d\u63d0\u4f9b\u4e86\u4e00\u500b\u9078\u64c7\u8cc7\u6599\u7b46\u6578\u7684\u6f14\u7b97\u6cd5\u7a31\u4f5c Submodular pick (SP)\u3002 \u5c0f\u7d50 LIME \u63d0\u4f9b\u4e86\u4e00\u7a2e\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u80fd\u5920\u91dd\u5c0d\u9ed1\u76d2\u6a21\u578b\u9032\u884c\u89e3\u91cb\uff0c\u5e6b\u52a9\u6211\u5011\u66f4\u7406\u89e3\u6a21\u578b\u63a8\u8ad6\u7684\u898f\u5247\u3002\u4eca\u5929\u900f\u904e LIME \u89e3\u91cb\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u5f71\u97ff\u8f03\u5927\uff0c\u9032\u800c\u5e6b\u52a9\u6211\u5011\u512a\u5316\u6a21\u578b\uff0c\u63d0\u9ad8\u5176\u6027\u80fd\u548c\u6e96\u78ba\u6027\u3002\u6b64\u5916\u5728\u67d0\u4e9b\u61c9\u7528\u4e2d\uff0c\u6a21\u578b\u7684\u8aa4\u5224\u53ef\u80fd\u5c0e\u81f4\u56b4\u91cd\u7684\u5f8c\u679c\u3002\u900f\u904e LIME \u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u627e\u51fa\u6a21\u578b\u9810\u6e2c\u7684\u8584\u5f31\u74b0\u7bc0\uff0c\u4e26\u9032\u884c\u98a8\u96aa\u8a55\u4f30\u548c\u98a8\u96aa\u7ba1\u7406\u3002\u6240\u4ee5\u6a21\u578b\u7684\u89e3\u91cb\u6027\u81f3\u95dc\u91cd\u8981\uff0c\u56e0\u70ba\u6a21\u578b\u7684\u9810\u6e2c\u53ef\u80fd\u76f4\u63a5\u5f71\u97ff\u6700\u7d42\u6c7a\u7b56\u3002 Reference \u4f7f\u7528 LIME \u89e3\u91cb\u8907\u96dc\u7684\u5206\u985e\u6a21\u578b interpretability-of-deep-learning-models","title":"[Day 13] LIME\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#day-13-limelime","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u4eca\u5929\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e LIME \u7684\u5be6\u4f5c\u7d30\u7bc0\uff0c\u5305\u62ec\u5982\u4f55\u9078\u64c7\u89e3\u91cb\u6027\u6a21\u578b\u548c\u89e3\u91cb\u7279\u5fb5\uff0c\u4ee5\u53ca\u5982\u4f55\u9078\u64c7\u9130\u57df\u5927\u5c0f\u4f86\u751f\u6210\u89e3\u91cb\u6578\u64da\u3002 \u82e5\u60f3\u4e86\u89e3 LIME \u7684\u6838\u5fc3\u539f\u7406\u53ef\u4ee5\u53c3\u8003\u524d\u4e00\u7bc7\u6587\u7ae0\uff1a [Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b","title":"[Day 13] LIME\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#lime","text":"LIME \u662f\u4e00\u7a2e\u6a5f\u5668\u5b78\u7fd2\u53ef\u89e3\u91cb\u7684\u6280\u8853\uff0c\u5b83\u7684\u57fa\u672c\u539f\u7406\u662f\u5728\u89e3\u91cb\u6a21\u578b\u6642\uff0c\u900f\u904e\u5efa\u7acb\u4e00\u500b\u5c40\u90e8\u89e3\u91cb\u6027\u6a21\u578b\uff0c\u4f86\u8fd1\u4f3c\u9ed1\u76d2\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9019\u8b93\u6211\u5011\u80fd\u5920\u91dd\u5c0d\u7279\u5b9a\u7684\u8f38\u5165\u6a23\u672c\uff0c\u89e3\u91cb\u6a21\u578b\u662f\u5982\u4f55\u9032\u884c\u5224\u65b7\u548c\u9810\u6e2c\u7684\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u7d71\u6574 LIME \u7684\u512a\u7f3a\u9ede\uff1a LIME \u7684\u512a\u9ede\uff1a \u53ef\u4ee5\u89e3\u91cb\u4efb\u4f55\u8907\u96dc\u6a21\u578b\u3002 \u80fd\u5920\u91dd\u5c0d\u67d0\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 \u63d0\u4f9b\u7c21\u55ae\u5bb9\u6613\u7406\u89e3\u7684\u89e3\u91cb\u65b9\u6cd5(\u7dda\u6027\u6a21\u578bex: Ridge Linear Regression)\u3002 LIME \u7684\u7f3a\u9ede\uff1a \u5c0d\u65bc\u9130\u57df\u7684\u5b9a\u7fa9\u4ecd\u7136\u662f\u4e00\u500b\u672a\u89e3\u6c7a\u7684\u554f\u984c\uff08\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5617\u8a66\u4e0d\u540c\u7684\u6838\u51fd\u6578\u8a2d\u7f6e\uff0c\u4e26\u6e2c\u8a66\u54ea\u4e00\u500b\u6548\u679c\u6700\u597d\uff09\u3002 \u8cc7\u6599\u7684\u62bd\u6a23\u65b9\u6cd5\u8207\u6578\u91cf\u7121\u4e00\u5b9a\u7684\u6a19\u6e96\uff0c\u56e0\u6b64\u5bb9\u6613\u5f71\u97ff\u89e3\u91cb\u7d50\u679c\u3002 \u7c21\u55ae\u6a21\u578b\u63a1\u7528\u7dda\u6027\u6613\u5ffd\u7565\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u95dc\u6027\uff0c\u6709\u6642\u53ef\u80fd\u7522\u751f\u4e0d\u5408\u7406\u7684\u89e3\u91cb\u7d50\u679c\u3002 \u8f38\u5165\u7684\u8cc7\u6599\u82e5\u5b58\u5728\u56b4\u91cd\u5171\u7dda\u6027\u554f\u984c\uff0c\u5247\u6703\u4f7f\u8ff4\u6b78\u4f30\u8a08\u4e0d\u51c6\u78ba\u3002","title":"LIME \u7684\u512a\u7f3a\u9ede"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#lime_1","text":"\u9019\u88e1\u6211\u5011\u6703\u4ee5\u4e00\u500b\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c6\u8a13\u7df4\u4e00\u500b XGBoost \u5206\u985e\u5668\u3002\u63a5\u9019\u900f\u904e LIME LimeTabularExplainer \u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b\u4e26\u5c0d\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5148\u8f09\u5165\u4eca\u5929\u7bc4\u4f8b\u7684\u8cc7\u6599\u96c6\uff0c\u8a72\u8cc7\u6599\u96c6\u53ef\u4ee5\u5f9e Kaggle \u8cc7\u6599\u79d1\u5b78\u5e73\u53f0 \u53d6\u5f97 \u3002","title":"[\u5be6\u4f5c] LIME \u89e3\u91cb\u5206\u985e\u6a21\u578b"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#_1","text":"import pandas as pd # \u8b80\u53d6\u8cc7\u6599\u96c6 df_train = pd . read_csv ( './diabetes.csv' ) \u8b93\u6211\u5011\u4f86\u77a7\u77a7 df_train \u88e1\u9762\u7684\u5167\u5bb9\u3002\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u8a72\u8cc7\u6599\u96c6\u6709\u7e3d\u5171\u6709 768 \u7b46\u6578\u64da\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u6709\u516b\u500b\u6b04\u4f4d\u8cc7\u8a0a\uff0c\u5176\u4e2d\u5305\u542b\u6a21\u578b\u7684\u8f38\u5165\u8207\u8f38\u51fa\u3002 \u9019\u500b\u8cc7\u6599\u96c6\u4f86\u81ea\u7f8e\u570b\u570b\u5bb6\u7cd6\u5c3f\u75c5\u548c\u6d88\u5316\u548c\u814e\u81df\u75be\u75c5\u7814\u7a76\u6240\u3002\u5176\u76ee\u6a19\u662f\u6839\u64da\u8a3a\u65b7\u6e2c\u91cf\u4f86\u9810\u6e2c\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u8cc7\u6599\u96c6\u7684\u8b8a\u6578\u5982\u4e0b\uff1a Glucose\uff1a\u53e3\u670d\u8461\u8404\u7cd6\u8010\u91cf\u6e2c\u8a66\u4e2d2\u5c0f\u6642\u7684\u8840\u6f3f\u8461\u8404\u7cd6\u6fc3\u5ea6\uff0c\u7528\u65bc\u6e2c\u8a66\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u3002 BloodPressure\uff1a\u8212\u5f35\u58d3(mm Hg)\uff0c\u8840\u58d3\u4e2d\u7684\u4e00\u500b\u53c3\u6578\uff0c\u7528\u65bc\u8861\u91cf\u5fc3\u81df\u5728\u6536\u7e2e\u6642\u7684\u58d3\u529b\u3002 SkinThickness\uff1a\u4e09\u982d\u808c\u76ae\u819a\u8936\u76ba\u539a\u5ea6(mm)\uff0c\u7528\u65bc\u8861\u91cf\u76ae\u819a\u7684\u8102\u80aa\u5c64\u539a\u5ea6\u3002 Insulin\uff1a2\u5c0f\u6642\u8840\u6e05\u80f0\u5cf6\u7d20(mu U/ml)\uff0c\u7528\u65bc\u8a55\u4f30\u80f0\u5cf6\u7d20\u6c34\u5e73\uff0c\u5c0d\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u975e\u5e38\u91cd\u8981\u3002 BMI\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578\uff0c\u8868\u793a\u9ad4\u91cd\u548c\u8eab\u9ad8\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8a55\u4f30\u9ad4\u91cd\u72c0\u6cc1\u3002 DiabetesPedigreeFunction\uff1a\u7cd6\u5c3f\u75c5\u5bb6\u65cf\u907a\u50b3\u51fd\u6578\uff0c\u7528\u65bc\u8861\u91cf\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u5bb6\u65cf\u907a\u50b3\u98a8\u96aa\u3002 Age\uff1a\u75c5\u4eba\u7684\u5e74\u9f61\u3002 Outcome\uff1a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5(\u4f5c\u70ba\u6a21\u578b\u8f38\u51fa)\uff0c\u503c\u70ba0\u8868\u793a\u6c92\u6709\u7cd6\u5c3f\u75c5\uff0c\u503c\u70ba1\u8868\u793a\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002","title":"\u8f09\u5165\u8cc7\u6599\u96c6"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#_2","text":"\u63a5\u4e0b\u4f86\u5f9e\u525b\u525b\u8b80\u53d6\u9032\u4f86\u7684 df_train \u8cc7\u6599\u96c6\u4e2d\uff0c\u5c07\u6240\u6709\u7684\u8f38\u5165\u7279\u5fb5\u8cc7\u6599\u63d0\u53d6\u51fa\u4f86\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u5165 X\u3002\u540c\u6642\uff0c\u6211\u5011\u5f9e df_train \u4e2d\u53d6\u5f97 Outcome \u6b04\u4f4d\u7684\u8cc7\u6599\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u51fa y\uff0c\u7528\u4f86\u8868\u793a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u4e5f\u5c07\u6240\u6709\u8f38\u5165\u7279\u5fb5\u7684\u6b04\u4f4d\u540d\u7a31\u5132\u5b58\u5230 x_feature_names \u8b8a\u6578\u4e2d\uff0c y_label_names \u5247\u662f\u5132\u5b58\u8f38\u51fa\u7684\u6a19\u7c64\u540d\u7a31\uff0c\u9019\u5169\u500b\u500b\u8b8a\u6578\u5c07\u5728\u5f8c\u7e8c LIME \u6a21\u578b\u89e3\u91cb\u7684\u904e\u7a0b\u4e2d\u4f7f\u7528\u3002\u6700\u5f8c\u900f\u904e train_test_split \u65b9\u6cd5\u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split x_feature_names = df_train . drop ([ 'Outcome' ], axis = 1 ) . columns y_label_names = [ 'No' , 'Yes' ] X = df_train . drop ([ 'Outcome' ], axis = 1 ) . values # \u79fb\u9664y\u4e26\u53d6\u5f97\u5269\u4e0b\u6b04\u4f4d\u8cc7\u6599 y = df_train [ 'Outcome' ] . values # \u53d6\u5f97\u75c5\u4eba\u7cd6\u5c3f\u75c5\u7d50\u679c\u4f5c\u70bay X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.01 , random_state = 42 , stratify = y )","title":"\u5207\u5272\u8cc7\u6599\u96c6"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#xgboost","text":"\u4ee5\u4e0b\u4f7f\u7528 XGBoost \u5206\u985e\u5668\uff08XGBClassifier\uff09\u4f86\u5efa\u7acb\u4e00\u500b\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\uff08X_train, y_train\uff09\u4f86\u8a13\u7df4\u9019\u500b\u6a21\u578b\u3002 from xgboost import XGBClassifier # \u5efa\u7acb XGBClassifier \u6a21\u578b xgboostModel = XGBClassifier () # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b xgboostModel . fit ( X_train , y_train )","title":"\u8a13\u7df4\u6a21\u578b (XGBoost \u5206\u985e\u5668)"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#lime_2","text":"\u518d\u4f86\u662f\u672c\u6587\u7684\u91cd\u982d\u6232\u3002\u9996\u5148\u5927\u5bb6\u53ef\u4ee5\u5728\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd LIME \u5957\u4ef6\uff1a pip install lime LimeTabularExplainer \u7528\u65bc\u89e3\u91cb\u8868\u683c\u6578\u64da\u4e2d\u7684\u6a21\u578b\u9810\u6e2c\uff0c\u6839\u64da\u8a13\u7df4\u6578\u64da\u548c\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u751f\u6210\u89e3\u91cb\u6a21\u578b\uff0c\u4e26\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\u7d50\u679c\u3002\u900f\u904e\u8a2d\u7f6e\u4e0d\u540c\u7684\u53c3\u6578\uff0c\u53ef\u4ee5\u81ea\u5b9a\u7fa9\u89e3\u91cb\u5668\u7684\u884c\u70ba\uff0c\u4ee5\u6eff\u8db3\u4e0d\u540c\u7684\u89e3\u91cb\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a training_data\uff1a\u8a13\u7df4\u96c6\u8cc7\u6599 X\u3002 mode\uff1astr\uff0c\u7528\u65bc\u6307\u5b9a\u662f\u5206\u985e\u9084\u662f\u8ff4\u6b78\u6a21\u578b\uff0c{\"classification\", \"regression\"}\u3002 feature_names\uff1alist of names (strings)\uff0c\u7279\u5fb5\u540d\u7a31\uff0c\u5c0d\u61c9\u65bc\u8a13\u7df4\u6578\u64da\u4e2d\u7684\u5217\u3002 categorical_features\uff1alist of indices (ints)\uff0c\u985e\u5225\u7279\u5fb5\u7684\u7d22\u5f15\u5217\u8868\uff0c\u9019\u4e9b\u7279\u5fb5\u7684\u503c\u5fc5\u9808\u662f\u6574\u6578(OrdinalEncoder\u524d\u8655\u7406)\u3002 categorical_names\uff1amap from int to list of names\uff0c\u985e\u5225\u7279\u5fb5\u7684\u540d\u7a31\u6620\u5c04\uff0c\u5176\u4e2d categorical_names[i][j] \u8868\u793a\u7b2c i \u5217\u4e2d\u7b2c j \u500b\u503c\u7684\u540d\u7a31\u3002 verbose\uff1abool\uff0c\u662f\u5426\u986f\u793aLIME\u5c40\u90e8\u6a21\u578b\u9810\u6e2c\u503c\u3002 class_names\uff1alist of class names\uff0c\u985e\u5225\u540d\u7a31\u5217\u8868\uff0c\u6309\u7167\u5206\u985e\u5668\u4f7f\u7528\u7684\u9806\u5e8f\u6392\u5217\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u985e\u5225\u540d\u7a31\u5c07\u662f '0'\u3001'1' \u7b49\u3002 feature_selection\uff1astr\uff0c\u7279\u5fb5\u9078\u64c7\u65b9\u6cd5\uff0c\u9810\u8a2d\u503c\u70baauto\uff0c{'forward_selection', 'highest_weights', 'lasso_path', 'none', 'auto'}\u3002\u8a73\u7d30\u5167\u5bb9 \u53c3\u8003 random_state: \u4e82\u6578\u7a2e\u5b50\uff0c\u78ba\u4fdd\u6bcf\u6b21\u57f7\u884c\u7d50\u679c\u90fd\u4e00\u6a23\u3002 import lime from lime import lime_tabular lime_explainer = lime_tabular . LimeTabularExplainer ( training_data = X_train , feature_names = feature_names , mode = 'classification' , class_names = y_label_names , verbose = True , feature_selection = 'lasso_path' , feature_selection = 'none' , random_state = 44 ) \u6211\u5011\u525b\u525b\u5df2\u7d93\u5efa\u7acb\u4e86\u4e00\u500b LimeTabularExplainer \u4e26\u4e14\u521d\u59cb\u5316\u89e3\u91cb\u6a21\u578b\u7684\u8a2d\u5b9a\u5f8c\uff0c\u63a5\u4e0b\u4f86\u5c31\u53ef\u4ee5\u8a66\u8457\u4e1f\u4e00\u7b46\u8981\u88ab\u89e3\u91cb\u7684\u8cc7\u6599\u4e26\u900f\u904e LIME \u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7dda\u6027\u6a21\u578b\u4e26\u89e3\u91cb\u3002\u89e3\u91cb\u6bcf\u4e00\u7b46\u9810\u6e2c\u6578\u64da\u5247\u662f\u547c\u53eb explain_instance() \u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a data_row\uff1a\u4e00\u7dadnumpy\uff0c\u5c0d\u61c9\u65bc\u8981\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u3002\u4e5f\u5c31\u662f\u8981\u9032\u884c\u89e3\u91cb\u7684\u7279\u5b9a\u6578\u64da\u6a23\u672c\u3002 predict_fn\uff1a\u5df2\u8a13\u7df4\u7684\u9810\u6e2c\u6a21\u578b\u3002\u5c0d\u65bc\u5206\u985e\u5668\uff0c\u9019\u61c9\u8a72\u662f\u4e00\u500b\u51fd\u6578\uff0c\u63a5\u53d7\u4e00\u500b numpy \u6578\u7d44\u4f5c\u70ba\u8f38\u5165\uff0c\u4e26\u8f38\u51fa\u9810\u6e2c\u6a5f\u7387\u3002\u5c0d\u65bc\u56de\u6b78\u6a21\u578b\uff0c\u9019\u500b\u51fd\u6578\u63a5\u53d7\u4e00\u500b numpy \u6578\u7d44\u4e26\u8fd4\u56de\u9810\u6e2c\u503c\u3002\u5c0d\u65bc ScikitClassifiers\uff0c\u9019\u662f classifier.predict_proba()\u3002\u5c0d\u65bc ScikitRegressors\uff0c\u9019\u662f regressor.predict()\u3002 top_labels\uff1a\u9810\u8a2d\u70baNone\uff0c\u9069\u7528\u65bc\u5206\u985e\u6a21\u578b\u53ef\u4ee5\u8f38\u5165\u8981\u88ab\u89e3\u91cb\u7684\u524dk\u500b\u9810\u6e2c\u6a19\u7c64\u7684\u6a21\u578b\u89e3\u91cb\u3002 num_features\uff1a\u89e3\u91cb\u7684\u7279\u5fb5\u6578\u91cf\u3002\u9019\u500b\u53c3\u6578\u9650\u5236\u4e86\u89e3\u91cb\u7d50\u679c\u4e2d\u6240\u986f\u793a\u7684\u7279\u5fb5\u6578\u91cf\u3002\u9810\u8a2d\u70ba10\u3002 num_samples\uff1a\u7528\u65bc\u5b78\u7fd2\u7dda\u6027\u6a21\u578b\u7684\u9130\u57df\u5927\u5c0f\u3002\u8a72\u53c3\u6578\u63a7\u5236\u4e86\u751f\u6210\u89e3\u91cb\u6240\u9700\u7684\u6a23\u672c\u6578\u91cf\u3002\u9810\u8a2d\u70ba5000\u3002 \u9019\u88e1\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLIME \u5728\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u6642\uff0c\u4f7f\u7528\u7684\u662f Ridge \u7dda\u6027\u6a21\u578b\u3002\u5728\u8a13\u7df4\u904e\u7a0b\u4e2d\uff0c\u6703\u6839\u64da\u4f7f\u7528\u8005\u547c\u53eb explain_instance() \u65b9\u6cd5\u6642\u8a2d\u5b9a\u7684 num_features \u53c3\u6578\uff0c\u5f9e\u8a13\u7df4\u96c6\u4e2d\u6311\u9078\u51fa\u5408\u9069\u7684\u7279\u5fb5\u9032\u884c\u8a13\u7df4\u3002\u800c\u6a21\u578b\u5982\u4f55\u9078\u64c7\u7279\u5fb5\uff0c\u5247\u53d6\u6c7a\u65bc\u5efa\u7acb LimeTabularExplainer \u6642\u6240\u8a2d\u5b9a\u7684 forward_selection \u53c3\u6578\u3002\u82e5\u60f3\u89c0\u5bdf\u6240\u6709\u7279\u5fb5\u7684\u89e3\u91cb\u6027\uff0c\u53ef\u4ee5\u5c07\u8a72\u53c3\u6578\u8a2d\u7f6e\u70ba 'none'\uff0c\u9019\u6a23\u6a21\u578b\u5c31\u6703\u8003\u616e\u6240\u6709\u8f38\u5165 X \u7684\u7279\u5fb5\u3002\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u5f9e\u6e2c\u8a66\u96c6\u4e2d\u62ff\u7b2c\u516d\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\uff0c\u4e26\u4e14\u9078\u64c7\u8981\u89e3\u91cb\u7684\u7279\u5fb5\u8a2d\u5b9a\u70ba\u4e03\u500b\uff0c\u4ee3\u8868 LIME \u6703\u91dd\u5c0d\u6240\u6709\u7279\u5fb5\u9032\u884c\u89e3\u91cb\u3002 lime_exp = lime_explainer . explain_instance ( data_row = X_test [ 5 ], predict_fn = xgboostModel . predict_proba , num_features = 7 ) \u6700\u5f8c\u547c\u53eb show_in_notebook() \u5373\u53ef\u89c0\u5bdf LIME \u5982\u4f55\u5c0d\u8a72\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002 lime_exp . show_in_notebook ( show_table = True , show_all = True ) Intercept \u662f\u751f\u6210\u7684\u7dda\u6027\u6a21\u578b\u7684\u622a\u8ddd\u9805\u3002\u5728 LIME \u4e2d\uff0c\u70ba\u4e86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u6703\u4f7f\u7528\u4e00\u500b\u7dda\u6027\u6a21\u578b\u4f86\u8fd1\u4f3c\u539f\u59cb\u9ed1\u76d2\u6a21\u578b\u3002Intercept \u662f\u9019\u500b\u7dda\u6027\u6a21\u578b\u4e2d\u7684\u622a\u8ddd\u9805\uff0c\u8868\u793a\u5728\u6c92\u6709\u4efb\u4f55\u7279\u5fb5\u8ca2\u737b\u7684\u60c5\u6cc1\u4e0b\uff0c\u6a21\u578b\u9810\u6e2c\u7684\u57fa\u672c\u503c\u3002 Prediction_local \u662f\u5f9e\u7dda\u6027\u6a21\u578b\u4e2d\u9810\u6e2c\u7684\u5c40\u90e8\u9810\u6e2c\u7d50\u679c\u3002\u5728 LIME \u4e2d\uff0c\u91dd\u5c0d\u7279\u5b9a\u7684\u4e00\u7b46\u8cc7\u6599\u6a23\u672c\uff0c\u6703\u751f\u6210\u4e00\u500b\u5c40\u90e8\u7684\u7dda\u6027\u6a21\u578b\uff0c\u7528\u4f86\u89e3\u91cb\u8a72\u6a23\u672c\u7684\u9810\u6e2c\u7d50\u679c\u3002Prediction_local \u662f\u9019\u500b\u5c40\u90e8\u7dda\u6027\u6a21\u578b\u5c0d\u65bc\u8a72\u6a23\u672c\u7684\u9810\u6e2c\u503c\u3002 Right \u662f\u5f9e\u88ab\u89e3\u91cb\u7684\u5206\u985e\u5668\uff08XGBoost\uff09\u4e2d\u5f97\u5230\u7684\u9810\u6e2c\u503c\u3002\u5728 LIME \u4e2d\uff0c\u6703\u4f7f\u7528\u4e00\u500b\u5f31\u6a21\u578b\uff08\u5206\u985e\u5668\u6216\u8ff4\u6b78\u5668\uff09\u4f86\u9032\u884c\u89e3\u91cb\uff0c\u8a72\u5f31\u6a21\u578b\u662f\u7528\u4f86\u6a21\u64ec\u539f\u59cb\u9ed1\u76d2\u6a21\u578b\u7684\u9810\u6e2c\u884c\u70ba\u3002 \u6211\u5011\u53ef\u4ee5\u5f9e\u4e0a\u9762\u7684\u7d50\u679c\u5206\u6790\u9019\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9996\u5148\uff0c\u5728\u6c92\u6709\u52a0\u5165\u4efb\u4f55\u7279\u5fb5\u6642\uff0c\u7dda\u6027\u6a21\u578b\u9810\u6e2c\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u70ba 0.21\uff0c\u9019\u662f\u622a\u8ddd\u9805\u7684\u5f71\u97ff\u3002\u63a5\u8457\uff0c\u6211\u5011\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u3002\u4ee5 BMI \u70ba\u4f8b\u8a72\u9805\u7279\u5fb5\u6703\u9020\u6210\u7cd6\u5c3f\u75c5\u6b63\u9762\u7684\u5f71\u97ff\u662f\u56e0\u70ba\u8f38\u5165\u7684\u6578\u503c\u5927\u65bc 36.6 \u9019\u500b\u95be\u503c\uff0c\u5c07\u5176\u8f38\u5165\u503c 43 \u4e58\u4ee5 LIME \u7dda\u6027\u6a21\u578b\u7684 x1 \u4fc2\u6578\uff0c\u5f97\u5230 0.15\u3002\u9019\u8868\u793a BMI \u7279\u5fb5\u7684\u52a0\u5165\u6703\u589e\u52a0\u9810\u6e2c\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u7d04 0.15\u3002\u4f9d\u6b64\u985e\u63a8\uff0c\u6bcf\u500b\u7279\u5fb5\u90fd\u52a0\u5165\u5f8c\uff0c\u6700\u5f8c\u52a0\u7e3d\u8d77\u4f86\u5f97\u5230\u9019\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c\u70ba 0.712\u3002\u5728\u9019\u500b\u4e8c\u5143\u5206\u985e\u7684\u7bc4\u4f8b\u4e2d\uff0c\u9019\u8868\u793a\u6709\u76f8\u7576\u9ad8\u7684\u6a5f\u7387\u88ab\u9810\u6e2c\u70ba\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u800c XGBoost \u6a21\u578b\u9810\u6e2c\u8a72\u7b46\u8cc7\u6599\u7684\u6a5f\u7387\u70ba 0.69\u3002","title":"LIME \u89e3\u91cb\u6a21\u578b"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#sp-lime","text":"\u96d6\u7136\u55ae\u7b46\u9810\u6e2c\u7684\u89e3\u91cb\u53ef\u4ee5\u90e8\u5206\u5730\u8b93\u4f7f\u7528\u8005\u4e86\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u65b9\u5f0f\uff0c\u4f46\u9019\u4e26\u4e0d\u80fd\u5b8c\u6574\u5730\u53cd\u6620\u6a21\u578b\u6574\u9ad4\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\u3002\u82e5\u8981\u5168\u9762\u7684\u7406\u89e3\u6574\u500b\u6a21\u578b\u53ef\u80fd\u9700\u8981\u770b\u5f88\u591a\u7b46\u8cc7\u6599\u7684\u89e3\u91cb\u3002\u4f46\u662f\u8981\u770b\u5e7e\u7b46\u8cc7\u6599\u624d\u8db3\u5920\u591a\u5462\uff1f\u5728\u539f\u59cb\u8ad6\u6587\u4e2d\u63d0\u4f9b\u4e86\u4e00\u500b\u9078\u64c7\u8cc7\u6599\u7b46\u6578\u7684\u6f14\u7b97\u6cd5\u7a31\u4f5c Submodular pick (SP)\u3002","title":"SP-LIME \u7e3d\u9ad4\u8ca2\u737b"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#_3","text":"LIME \u63d0\u4f9b\u4e86\u4e00\u7a2e\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u80fd\u5920\u91dd\u5c0d\u9ed1\u76d2\u6a21\u578b\u9032\u884c\u89e3\u91cb\uff0c\u5e6b\u52a9\u6211\u5011\u66f4\u7406\u89e3\u6a21\u578b\u63a8\u8ad6\u7684\u898f\u5247\u3002\u4eca\u5929\u900f\u904e LIME \u89e3\u91cb\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u5f71\u97ff\u8f03\u5927\uff0c\u9032\u800c\u5e6b\u52a9\u6211\u5011\u512a\u5316\u6a21\u578b\uff0c\u63d0\u9ad8\u5176\u6027\u80fd\u548c\u6e96\u78ba\u6027\u3002\u6b64\u5916\u5728\u67d0\u4e9b\u61c9\u7528\u4e2d\uff0c\u6a21\u578b\u7684\u8aa4\u5224\u53ef\u80fd\u5c0e\u81f4\u56b4\u91cd\u7684\u5f8c\u679c\u3002\u900f\u904e LIME \u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u627e\u51fa\u6a21\u578b\u9810\u6e2c\u7684\u8584\u5f31\u74b0\u7bc0\uff0c\u4e26\u9032\u884c\u98a8\u96aa\u8a55\u4f30\u548c\u98a8\u96aa\u7ba1\u7406\u3002\u6240\u4ee5\u6a21\u578b\u7684\u89e3\u91cb\u6027\u81f3\u95dc\u91cd\u8981\uff0c\u56e0\u70ba\u6a21\u578b\u7684\u9810\u6e2c\u53ef\u80fd\u76f4\u63a5\u5f71\u97ff\u6700\u7d42\u6c7a\u7b56\u3002","title":"\u5c0f\u7d50"},{"location":"13.LIME\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4LIME\u89e3\u91cb\u65b9\u6cd5/#reference","text":"\u4f7f\u7528 LIME \u89e3\u91cb\u8907\u96dc\u7684\u5206\u985e\u6a21\u578b interpretability-of-deep-learning-models","title":"Reference"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/","text":"[Day 14] SHAP\u7406\u8ad6\uff1a\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3 Shapley values \u7c21\u4ecb Shapley values \u6700\u65e9\u662f\u7531\u7d93\u6fdf\u5b78\u5bb6 Lloyd Shapley \u6240\u63d0\u51fa\uff0c\u7528\u65bc\u8a55\u4f30\u53c3\u8207\u5408\u4f5c\u535a\u5f08\u7684\u6bcf\u500b\u73a9\u5bb6\u5c0d\u65bc\u52dd\u5229\u7684\u8ca2\u737b\u50f9\u503c\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u500b\u6982\u5ff5\u61c9\u7528\u5230\u8f38\u5165\u7279\u5fb5 X \u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u4e0a\uff0c\u900f\u904e Shapley values \u53ef\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u8ca2\u737b\u3002\u7c21\u55ae\u4f86\u8aaa\uff0cShapley values \u8a08\u7b97\u7684\u662f\u5728\u5404\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u67d0\u500b\u7279\u5fb5\u88ab\u52a0\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u5b83\u6703\u5e36\u4f86\u591a\u5c11\u984d\u5916\u7684\u8ca2\u737b\u3002\u6700\u5f8c\u6211\u5011\u5c07\u6240\u6709\u7279\u5fb5\u7684\u984d\u5916\u8ca2\u737b\u7684\u671f\u671b\u503c\u52a0\u7e3d\uff0c\u5c31\u5f97\u5230\u4e86\u6240\u8b02\u7684 Shapley values\u3002\u900f\u904e\u9019\u7a2e\u65b9\u6cd5\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u4e2d\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u9032\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u548c\u53ef\u4fe1\u5ea6\u3002 \u7c21\u55ae\u4f8b\u5b50\u89e3\u91cb Shapley values \u5047\u8a2d\u5718\u968a\u6709\u4e09\u500b\u4eba\u5171\u540c\u63a5\u4e86\u4e00\u500b\u6848\u5b50\uff0c\u6839\u64da\u6bcf\u500b\u4eba\u7684\u8ca2\u737b\u7a0b\u5ea6\u5c07\u916c\u52de\u6309\u6bd4\u4f8b\u5206\u914d\u3002\u900f\u904e\u8a08\u7b97 Shapley values\uff0c\u6211\u5011\u80fd\u5920\u8a55\u4f30\u6bcf\u500b\u6210\u54e1\u5728\u5b8c\u6210\u4efb\u52d9\u6642\u7684\u8ca2\u737b\u5927\u5c0f\uff0c\u4ee5\u5be6\u73fe\u66f4\u516c\u5e73\u7684\u916c\u52de\u5206\u914d\u3002\u4ee5\u4e0b\u662f\u4e09\u500b\u6210\u54e1\u7684\u6027\u683c\u7279\u8cea\u53ca\u5728\u4e92\u76f8\u5408\u4f5c\u548c\u7368\u7acb\u4f5c\u696d\u6642\u6240\u80fd\u9054\u6210\u7684\u8ca2\u737b\u5206\u6578\u3002\u5176\u5206\u6578\u7bc4\u570d\u57280\u5230100\u4e4b\u9593\uff0c\u4ee3\u8868\u4ed6\u5011\u53c3\u8207\u5b8c\u6210\u6848\u5b50\u7684\u80fd\u529b\u8207\u6548\u7387\u3002 A(\u5de5\u7a0b\u5e2b) \u559c\u6b61\u7368\u7acb\u4f5c\u696d\uff0c\u80fd\u529b\u5f37\uff0c\u662f\u5718\u968a\u4e2d\u7684\u6838\u5fc3\u4eba\u7269\u3002 B(\u5de5\u7a0b\u5e2b) \u8b39\u614e\u6309\u90e8\u5c31\u73ed\uff0c\u80fd\u78ba\u4fdd\u4efb\u52d9\u9032\u884c\u9806\u5229\u4e14\u7121\u5dee\u932f\u3002 C(\u5c08\u6848\u7d93\u7406) \u7121\u7522\u51fa\u80fd\u529b\uff0c\u4f46\u64c5\u65bc\u6e9d\u901a\u4e26\u7ba1\u7406\u6574\u500b\u5718\u968a\u7684\u5de5\u4f5c\u3002 \u5f9e\u4e0b\u8868\u4e2d\u53ef\u4ee5\u4f9d\u64da\u4e09\u4f4d\u5728\u5718\u968a\u4e2d\u52a0\u5165\u7684\u9806\u5e8f\u9032\u884c\u6392\u5217\u7d44\u5408\uff0c\u5176\u4e2d \ud835\udf19 \u4ee3\u8868\u5718\u968a\u90fd\u6c92\u6709\u4eba\u7684\u60c5\u6cc1\u4e0b\u7522\u51fa\u7576\u7136\u70ba 0\uff0c\u63a5\u8457\u53ef\u4ee5\u5f97\u77e5 A\u3001B\u3001C \u4e09\u4eba\u7368\u7acb\u5de5\u4f5c\u7684\u5206\u6578\u5206\u5225\u70ba 90, 60, 0\u3002\u81f3\u65bc\u5408\u4f5c\u7684\u90e8\u5206 A+B \u5171\u540c\u5de5\u4f5c\u7684\u7522\u51fa\u70ba 80\uff0c\u5f9e\u9019\u7d44\u5408\u7576\u4e2d\u53ef\u4ee5\u767c\u73fe B \u7684\u52a0\u5165\u4f7f\u5f97\u5171\u540c\u7522\u51fa\u4e0b\u964d\u4e86 10(A\u5c31\u662f\u5178\u578b\u7684\u55ae\u6253\u7368\u9b25\uff0c\u6709\u4eba\u63d2\u624b\u53cd\u800c\u62d6\u7d2f\u9032\u5ea6)\u3002\u5176\u9918\u7684 A+C \u548c B+C \u7684\u5de5\u4f5c\u7522\u51fa\u5206\u5225\u70ba 70 \u548c 80\u3002\u6700\u5f8c A+B+C \u4e09\u4eba\u5404\u81ea\u767c\u63ee\u5c08\u9577\uff0c\u4e14\u6709\u4e86 C \u7684\u6e9d\u540c\u5354\u8abf\u624d\u4f7f\u5f97\u5de5\u4f5c\u9806\u5229\u5b8c\u6210\u4f7f\u5206\u6578\u5f97\u5230\u6eff\u5206 100\u3002 \u6709\u4e86\u4e0a\u8868\u7522\u51fa\u5206\u6578\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u53bb\u8a08\u7b97\u6bcf\u500b\u4eba\u5728\u5718\u968a\u7684\u8ca2\u737b\u503c\u3002\u5176\u8a08\u7b97\u65b9\u5f0f\u6839\u64da\u6240\u6709\u7d44\u968a\u6210\u54e1\u52a0\u5165\u7684\u6240\u6709\u9806\u5e8f\uff0c\u518d\u53bb\u8a08\u7b97\u5728\u5404\u7a2e\u9806\u5e8f\u4e0b\u6bcf\u500b\u4eba\u984d\u5916\u7684\u8ca2\u737b\u500b\u662f\u591a\u5c11\u3002\u9996\u5148\u8a08\u7b97 A \u7684\u8ca2\u737b\u7a0b\u5ea6\uff0c\u4e09\u500b\u4eba\u7e3d\u5171\u6709\u516d\u7a2e\u52a0\u5165\u7684\u7d44\u5408\u9806\u5e8f\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u9996\u5148\u7b2c\u4e00\u500b\u52a0\u5165\u9806\u5e8f\u70ba A,B,C\uff0c A \u6240\u626e\u6f14\u7684\u89d2\u8272\u70ba\u7b2c\u4e00\u500b\u56e0\u6b64\u662f 90\u3002 \u7b2c\u4e8c\u500b\u7d44\u5408 A,C,B \u8ddf\u7b2c\u4e00\u500b\u6848\u4f8b\u4e00\u6a23\u7531\u65bc A \u52a0\u5165\u6642\u9084\u662f\u7a7a\u7684\u56e0\u6b64\u9084\u662f\u7531 A \u81ea\u5df1\u51fa\u529b\u8ca2\u737b\u70ba 90\u3002 \u82e5 B,A,C \u7684\u9806\u5e8f\u7531 B \u5148\u505a\u7136\u5f8c A \u518d\u52a0\u5165\uff0c\u6b64\u6642 A \u6709\u52a0\u5165\u6216\u6c92\u52a0\u5165\u7684\u5dee\u5225\u5c31\u662f A \u548c B \u4e00\u8d77\u7d44\u968a\uff0c\u6216\u662f B \u81ea\u5df1\u3002\u56e0\u6b64 A \u5728\u9019\u4e00\u7d44\u5408\u4e2d\u6240\u5e36\u4f86\u984d\u5916\u7684\u8ca2\u737b\u70ba (A+B)-B=20\u3002 \u82e5 B,C,A \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+B+C)-(B+C)=30 \u82e5 C,A,B \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+C)-(C)=70 \u82e5 C,B,A \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+B+C)-(B+C)=30 \u5230\u76ee\u524d\u70ba\u6b62\u5df2\u7d93\u8a08\u7b97\u5b8c\u5728\u6240\u6709\u7684\u52a0\u5165\u7d44\u5408\u9806\u5e8f\u4e2d A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\uff0c\u56e0\u6b64 A \u7684 Shapley values \u5c31\u662f\u5c07\u6240\u6709\u7684\u7d44\u5408\u7684\u8ca2\u737b\u5206\u6578\u505a\u4e00\u500b\u5e73\u5747\u5f97\u5230 55\u3002 \u4e0a\u9762\u6b65\u9a5f\u4f9d\u6b64\u985e\u63a8\u5728\u516d\u7a2e\u7d44\u968a\u53ef\u80fd\u7684\u9806\u5e8f\u4e2d\u70ba\u6bcf\u500b\u4eba\u5206\u5225\u8a08\u7b97\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u5206\u6578\uff0c\u5e73\u5747\u5c31\u53ef\u4ee5\u5f97\u5230\u5728\u9019\u4e00\u500b\u4efb\u52d9\u4e2d\u6bcf\u500b\u4eba\u7684\u8ca2\u737b\u7a0b\u5ea6\u4e86\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5206\u5225\u8a08\u7b97\u51fa A\u3001B \u548c C \u7684 Shapley values\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff0c\u6700\u5f8c\u5f97\u5230 A \u70ba 55\uff0c B \u70ba 40\uff0cC \u70ba 5\uff0c\u53ef\u4ee5\u767c\u73fe\u9019\u4e09\u500b\u503c\u76f8\u52a0\u5176\u5be6\u5c31\u7b49\u65bc 100\u3002 SHAP (SHapley Additive exPlanations) \u4ee5\u4e0a\u8ff0\u7684\u4f8b\u5b50\u6bcf\u500b\u4eba\u5c31\u7b49\u540c\u65bc\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684 X \u7279\u5fb5\uff0c\u800c y \u5c31\u662f\u8f38\u51fa\u3002\u6211\u5011\u8981\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5 X \u5c0d\u65bc\u8a08\u7b97 y \u7684\u8ca2\u737b\u7a0b\u5ea6\u6709\u591a\u5c11\uff0c\u56e0\u6b64\u6211\u5011\u5fc5\u9808\u53bb\u8a08\u7b97\u6240\u6709\u7279\u5fb5\u7684 Shapley values \u5404\u662f\u591a\u5c11\u3002\u4f46\u662f\u7576 X \u7684\u7279\u5fb5\u6578\u91cf\u592a\u591a\u7684\u6642\u5019\uff0c\u5047\u8a2d\u6709 d \u500b\u7279\u5fb5\u7684\u6642\u5019\u6211\u5011\u5c31\u76f8\u7576\u65bc\u8981\u8a08\u7b97 2\u7684d\u6b21\u65b9-1\u7a2e\u53ef\u80fd\u6027\uff0c\u9019\u4e5f\u610f\u5473\u8457\u8981\u500b\u5225\u8a13\u7df4\u9019\u9ebc\u591a\u6a21\u578b\u3002\u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5\uff0c\u5247\u8981\u8a08\u7b97 Shapley values \u5c31\u5fc5\u9808\u8a13\u7df4\u4e09\u500b\u6a21\u578b\uff1a \u7b2c\u4e00\u500b\u6a21\u578b\uff1af(x1) \u7b2c\u4e8c\u500b\u6a21\u578b\uff1af(x2) \u7b2c\u4e09\u500b\u6a21\u578b\uff1af(x1, x2) \u82e5\u7279\u5fb5\u6578\u91cf\u592a\u591a\u7684\u6642\u5019\u8a13\u7df4\u5927\u91cf\u7684\u6a21\u578b\u4ee3\u50f9\u662f\u5f88\u9ad8\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u900f\u904e SHAP (SHapley Additive exPlanations) \u4f86\u8a08\u7b97\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u9032\u800c\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u800c\u4e0d\u9700\u8981\u8a13\u7df4\u5927\u91cf\u7684\u6a21\u578b\u3002\u672c\u7bc7\u7684\u4e3b\u89d2 SHAP \u662f\u4e00\u7a2e\u89e3\u91cb\u6027\u6280\u8853\uff0c\u5b83\u5c31\u662f\u4f7f\u7528 Shapley values \u7684\u6982\u5ff5\u4f86\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u3002SHAP \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5e7e\u7a2e kernel \u4f86\u5feb\u901f\u4f30\u8a08 Shapley values\uff1a TreeExplainer DeepExplainer GradientExplainer LinearExplainer KernelExplainer \u6bcf\u4e00\u500b kernel \u7684\u7c21\u55ae\u4ecb\u7d39\u53ef\u4ee5\u53c3\u8003\u672c\u7cfb\u5217 [Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f \uff0c\u800c\u5728\u4eca\u65e5\u7684\u6587\u7ae0\u4e2d\u6211\u5011\u5c07\u91cd\u9ede\u653e\u5728\u901a\u7528\u7684 KernelExplainer\uff0c\u5b83\u4e3b\u8981\u900f\u904e\u751f\u6210\u65b0\u7684\u64fe\u52d5\u8cc7\u6599\u4f86\u8fd1\u4f3c\u8a08\u7b97 SHAP\uff0c\u4e14\u9069\u7528\u65bc\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\u3002 \u89e3\u6790 KernelExplainer \u80cc\u5f8c\u539f\u7406 \u4ee5\u4e0b\u89e3\u91cb\u63a1\u7528 kernel shap \u7684\u65b9\u5f0f\u4f86\u4f30\u8a08 Shapley values\u3002\u5047\u8a2d\u7b2c i \u7b46\u8cc7\u6599 d \u500b\u7279\u5fb5\u9577\u50cf\u4e0b\u9762\u9019\u6a23\u5b50\u3002\u6211\u5011\u8981\u53e6\u5916\u5efa\u7acb\u4e00\u500b\u9577\u5ea6\u70ba d \u7684 z \u5411\u91cf\uff0c\u9019\u88e1\u7684 z \u5c31\u597d\u6bd4\u6bcf\u500b\u7279\u5fb5\u662f\u5426\u8981\u88ab\u8003\u616e\u56e0\u6b64\u4e0d\u662f1(\u51fa\u73fe)\u5c31\u662f0(\u5ffd\u7565)\u3002 h(z) \u5c31\u662f\u5c07\u4e00\u7d44\u7279\u5fb5\u900f\u904e z \u4f86\u6c7a\u5b9a\u8981\u89c0\u5bdf\u54ea\u4e9b\u7279\u5fb5\uff0c\u5047\u8a2d x=[1,2,3,4]\u3001z=[1,0,1,0] \u5c31\u662f\u8981\u4fdd\u7559\u7b2c\u4e00\u8ddf\u7b2c\u4e09\u500b\u7279\u5fb5\u3002\u56e0\u6b64 h(z)=[1, \u96a8\u6a5f, 3, \u96a8\u6a5f]\uff0c\u6240\u8b02\u7684\u5ffd\u7565\u5c31\u662f\u96a8\u6a5f\u7684\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u4e2d\u53d6\u4e00\u7b46\u8cc7\u6599\u51fa\u4f86\u5c07\u7b2c\u4e8c\u548c\u56db\u500b\u7279\u5fb5\u653e\u5165\u53d6\u4ee3\u96a8\u6a5f\u3002\u56e0\u6b64 xk \u5c31\u662f\u96a8\u6a5f\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u62bd\u53d6\u7684\u4e00\u7b46\u8cc7\u6599\u3002 \u6240\u4ee5 h(z) \u5176\u5be6\u5c31\u662f\u4e00\u500b one-to-many \u7684\u6620\u5c04\uff0c\u7531\u65bc\u6703\u96a8\u6a5f\u7684\u62bd\u53d6\u8cc7\u6599\u53d6\u4ee30\u4f4d\u7f6e\u7684\u6578\u503c\u3002\u5982\u679c\u6211\u5011\u7528\u9019\u7a2e\u65b9\u5f0f\u7522\u751f\u5f88\u591a\u7d44 z \u7684\u8a71\u6703\u7522\u751f 2 \u7684d\u6b21\u65b9\u7684\u53ef\u80fd\u6027\u3002 \u9084\u8a18\u5f97\u6211\u5011\u5728 Day4 \u89e3\u91cb SHAP \u904b\u4f5c\u539f\u7406\u7684\u4f8b\u5b50\u55ce\uff1f\u5047\u8a2d\u6709\u8f38\u5165\u56db\u500b\u7279\u5fb5\uff0c\u5e74\u9f61\u3001\u6027\u5225\u3001\u8840\u58d3\u3001BMI\u4f5c\u70ba\u8f38\u5165\u8981\u9810\u6e2c\u4e00\u500b\u4eba\u7f79\u764c\u7684\u6a5f\u7387\u3002\ud835\udf190 \u5c31\u662f\u57fa\u6e96\u9ede base rate \u9019\u88e1\u70ba 0.1\uff0c\u8868\u793a\u6bcf\u500b\u4eba\u90fd\u6709 0.1 \u7684\u6a5f\u7387\u7f79\u764c\u3002\ud835\udf191\uff5e\ud835\udf194 \u4ee3\u8868\u56db\u500b\u7279\u5fb5\u5c0d\u7f79\u764c\u7684\u8ca2\u737b\u503c\uff0c\u5168\u90e8\u76f8\u52a0\u8d77\u4f86\u5c31\u662f\u90a3\u500b\u4eba\u96e2\u764c\u7684\u5e7e\u7387\u4e86\u3002\u56e0\u6b64 SHAP \u5c31\u662f\u8981\u8a13\u7df4\u4e00\u500b\u6a21\u578b g() \u8981\u5b78\u7fd2\u6bcf\u500b \ud835\udf19\u3002 g(z): \u70ba\u88ab\u7c21\u5316\u7684\u53ef\u89e3\u91cb\u7684\u6a21\u578b z: \u8868\u793a\u6bcf\u500b\u7279\u5fb5\u662f\u5426\u8981\u88ab\u8003\u616e\uff0c1(\u51fa\u73fe)\u30010(\u5ffd\u7565) d: \u8f38\u5165\u7279\u5fb5\u7684\u500b\u6578 \ud835\udf190: \u4ee3\u8868\u57fa\u6e96\u503c \ud835\udf19j: \u4ee3\u8868\u6bcf\u500b\u7279\u5fb5\u7684Shapley values g() \u662f SHAP \u81ea\u884c\u5b9a\u7fa9\u7684\u6a21\u578b\uff0c\u5176\u76ee\u6a19\u662f\u5e0c\u671b g(z) \u80fd\u5920\u63a5\u8fd1\u65bc f(h(z))\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u5982\u679c\u5c0d\u65bc\u7b2c i \u7b46\u8cc7\u6599\u6a23\u672c x=[1,2,3,4] \u4ee5\u53ca z=[1,0,1,0]\uff0c\u53ea\u89c0\u5bdf\u7b2c\u4e00\u548c\u7b2c\u4e09\u500b\u7279\u5fb5\u6642\uff0cf(h(z)) \u7684\u9810\u6e2c\u7d50\u679c\u5c07\u6703\u8da8\u8fd1\u65bc g(z) \u4e5f\u5c31\u662f \ud835\udf190+\ud835\udf191+\ud835\udf193\u3002 \u8acb\u5404\u4f4d\u56de\u60f3\u4e00\u4e0b\u4e4b\u524d\u5728\u505a LIME \u7684\u6642\u5019\u9700\u8981\u5f9e\u8cc7\u6599\u62bd\u4e00\u4e9b\u6a23\u672c\u8981\u8207\u88ab\u89c0\u5bdf\u7684\u90a3\u7b46\u8cc7\u6599\u8a08\u7b97\u8ddd\u96e2\uff0c\u8d8a\u8fd1\u5c31\u4ee3\u8868\u8d8a\u91cd\u8981\u3002\u56e0\u6b64 kernel shape \u7684\u65b9\u6cd5\u4e2d\u4e5f\u662f\u8981\u7d66\u4e88\u6b0a\u91cd\u7684\u6982\u5ff5\uff0c\u4f46\u65b9\u6cd5\u4e0d\u540c\u3002\u5dee\u5225\u5728\u65bc\u5b83\u7684 loss function \u5f8c\u9762\u591a\u4e86 \u03c0(z) \u4e5f\u5c31\u662f\u6240\u8b02\u7684\u6b0a\u91cd\uff0c\u9019\u500b\u6b0a\u91cd\u7684\u6c7a\u5b9a\u53d6\u6c7a\u65bc z \u6709\u591a\u5c11\u500b1\u3002 \u5ef6\u7e8c\u525b\u525b\u7684\u4f8b\u5b50\u5047\u8a2d\u6211\u5011\u8981\u89c0\u5bdf\u7b2c\u4e00\u548c\u7b2c\u4e09\u500b\u7279\u5fb5\u6642\uff0c\u640d\u5931\u51fd\u6578\u4e2d\u6700\u5f8c\u4e00\u9805 \u03c0(z) \u7684\u8a08\u7b97\u65b9\u5f0f\u76f4\u63a5\u5957\u5165\u4e0a\u9762\u5f0f\u5b50\u3002\u4ee3\u8868\u9019\u7b46\u8cc7\u6599\u731c\u5c0d\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u5176\u4e2d c(4,2) \u4ee3\u8868\u6392\u5217\u7d44\u5408\u4e2d\u7684 C4 \u53d6 2\u3002\u8868\u793a\u5728\u6709 4 \u500b\u5143\u7d20\u7684\u96c6\u5408\u4e2d\uff0c\u9078\u53d6 2 \u500b\u5143\u7d20\u7684\u7d44\u5408\u6578\u91cf\u3002 \u5728 Kernel SHAP \u4e2d\uff0c\u5c0d\u65bc\u7279\u5fb5\u5b50\u96c6\u7684\u62bd\u6a23\u662f\u901a\u904e\u9032\u884c Monto Carlo \u62bd\u6a23\u7684\u65b9\u5f0f\u9032\u884c\u7684\u3002\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0c\u7576\u7279\u5fb5\u5c0f\u65bc\u7b49\u65bc11\u500b\u7279\u5fb5\u6642\uff0cSHAP \u6f14\u7b97\u6cd5\u6703\u62bd\u53d6 nsamples \u6578\u91cf\u70ba 2**M - 2 \u7b46\u8cc7\u6599\u3002\u800c\u7279\u5fb5\u6578\u91cf\u5927\u65bc11\u500b\u6642\uff0c\u6703\u62bd\u53d6 nsamples = 2*M + 2048 \u500b\u7279\u5fb5\u5b50\u96c6\u4f5c\u70ba\u8fd1\u4f3c\u8a08\u7b97\u7684\u6a23\u672c\uff0c\u5176\u4e2d M \u662f\u7279\u5fb5\u7684\u6578\u91cf\u3002\u6703\u6709\u9019\u6a23\u7684\u6a5f\u5236\u662f\u56e0\u70ba\u7576\u7279\u5fb5\u6578\u91cf\u589e\u52a0\u6642\uff0c\u70ba\u4e86\u4fdd\u6301\u8a08\u7b97\u6548\u7387\uff0cKernel SHAP \u6703\u9032\u884c\u62bd\u6a23\uff0c\u53ea\u5305\u542b\u90e8\u5206\u7279\u5fb5\u5b50\u96c6\uff0c\u4f46\u4ecd\u7136\u80fd\u5920\u63d0\u4f9b\u5408\u7406\u7684\u89e3\u91cb\u6574\u500b\u6a21\u578b\u3002 \u7576M<=11\u500b\u7279\u5fb5\u4ee5\u4e0b\uff1a nsamples = 2**M-2 \u7576M>11\u500b\u4ee5\u4e0a\uff1a nsamples = 2*M + 2048 \u8a73\u7d30\u8cc7\u8a0a\u53ef\u4ee5\u76f4\u63a5\u53c3\u8003 Kernel SHAP \u7684\u539f\u59cb \u7a0b\u5f0f\u78bc \u3002 \u7c21\u55ae\u4f86\u8aaa SHAP \u7684\u5957\u4ef6\u5be6\u73fe\u6703\u6839\u64da\u7279\u5fb5\u6578\u91cf\u548c\u8a08\u7b97\u6210\u672c\u63a1\u53d6\u9069\u7576\u7684\u62bd\u6a23\u7b56\u7565\uff0c\u4ee5\u63d0\u4f9b\u8fd1\u4f3c\u7684 Shapley \u503c\u8a08\u7b97\u7d50\u679c\u3002\u5c0d\u65bc\u5c0f\u7279\u5fb5\u96c6\uff0c\u5b83\u6703\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u7279\u5fb5\u7d44\u5408\uff0c\u5c0d\u65bc\u5927\u578b\u7279\u5fb5\u96c6\uff0c\u5247\u900f\u904e\u62bd\u6a23\u65b9\u5f0f\u4f86\u6709\u6548\u4f30\u8a08 Shapley \u503c\u3002 \u7531\u65bc Kernel SHAP \u5c0d\u6a21\u578b\u985e\u578b\u6c92\u6709\u5047\u8a2d\uff0c\u5b83\u7684\u901f\u5ea6\u6bd4\u5176\u4ed6\u7279\u5b9a\u65bc\u6a21\u578b\u985e\u578b\u7684\u7b97\u6cd5\u6162\u4f8b\u5982\u50cf\u662f Tree SHAP\u3002 Reference Scott Lundberg, et al. \" A Unified Approach to Interpreting Model Predictions .\" Arxiv, 2017. Kjersti Aas, et al. \" Explaining individual predictions when features are dependent: More accurate approximations to Shapley values .\" Arxiv, 2019.","title":"[Day 14] SHAP\u7406\u8ad6\uff1a\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#day-14-shapshap","text":"","title":"[Day 14] SHAP\u7406\u8ad6\uff1a\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#shapley-values","text":"Shapley values \u6700\u65e9\u662f\u7531\u7d93\u6fdf\u5b78\u5bb6 Lloyd Shapley \u6240\u63d0\u51fa\uff0c\u7528\u65bc\u8a55\u4f30\u53c3\u8207\u5408\u4f5c\u535a\u5f08\u7684\u6bcf\u500b\u73a9\u5bb6\u5c0d\u65bc\u52dd\u5229\u7684\u8ca2\u737b\u50f9\u503c\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u500b\u6982\u5ff5\u61c9\u7528\u5230\u8f38\u5165\u7279\u5fb5 X \u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u4e0a\uff0c\u900f\u904e Shapley values \u53ef\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u8ca2\u737b\u3002\u7c21\u55ae\u4f86\u8aaa\uff0cShapley values \u8a08\u7b97\u7684\u662f\u5728\u5404\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u67d0\u500b\u7279\u5fb5\u88ab\u52a0\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u5b83\u6703\u5e36\u4f86\u591a\u5c11\u984d\u5916\u7684\u8ca2\u737b\u3002\u6700\u5f8c\u6211\u5011\u5c07\u6240\u6709\u7279\u5fb5\u7684\u984d\u5916\u8ca2\u737b\u7684\u671f\u671b\u503c\u52a0\u7e3d\uff0c\u5c31\u5f97\u5230\u4e86\u6240\u8b02\u7684 Shapley values\u3002\u900f\u904e\u9019\u7a2e\u65b9\u6cd5\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u4e2d\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u9032\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u548c\u53ef\u4fe1\u5ea6\u3002","title":"Shapley values \u7c21\u4ecb"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#shapley-values_1","text":"\u5047\u8a2d\u5718\u968a\u6709\u4e09\u500b\u4eba\u5171\u540c\u63a5\u4e86\u4e00\u500b\u6848\u5b50\uff0c\u6839\u64da\u6bcf\u500b\u4eba\u7684\u8ca2\u737b\u7a0b\u5ea6\u5c07\u916c\u52de\u6309\u6bd4\u4f8b\u5206\u914d\u3002\u900f\u904e\u8a08\u7b97 Shapley values\uff0c\u6211\u5011\u80fd\u5920\u8a55\u4f30\u6bcf\u500b\u6210\u54e1\u5728\u5b8c\u6210\u4efb\u52d9\u6642\u7684\u8ca2\u737b\u5927\u5c0f\uff0c\u4ee5\u5be6\u73fe\u66f4\u516c\u5e73\u7684\u916c\u52de\u5206\u914d\u3002\u4ee5\u4e0b\u662f\u4e09\u500b\u6210\u54e1\u7684\u6027\u683c\u7279\u8cea\u53ca\u5728\u4e92\u76f8\u5408\u4f5c\u548c\u7368\u7acb\u4f5c\u696d\u6642\u6240\u80fd\u9054\u6210\u7684\u8ca2\u737b\u5206\u6578\u3002\u5176\u5206\u6578\u7bc4\u570d\u57280\u5230100\u4e4b\u9593\uff0c\u4ee3\u8868\u4ed6\u5011\u53c3\u8207\u5b8c\u6210\u6848\u5b50\u7684\u80fd\u529b\u8207\u6548\u7387\u3002 A(\u5de5\u7a0b\u5e2b) \u559c\u6b61\u7368\u7acb\u4f5c\u696d\uff0c\u80fd\u529b\u5f37\uff0c\u662f\u5718\u968a\u4e2d\u7684\u6838\u5fc3\u4eba\u7269\u3002 B(\u5de5\u7a0b\u5e2b) \u8b39\u614e\u6309\u90e8\u5c31\u73ed\uff0c\u80fd\u78ba\u4fdd\u4efb\u52d9\u9032\u884c\u9806\u5229\u4e14\u7121\u5dee\u932f\u3002 C(\u5c08\u6848\u7d93\u7406) \u7121\u7522\u51fa\u80fd\u529b\uff0c\u4f46\u64c5\u65bc\u6e9d\u901a\u4e26\u7ba1\u7406\u6574\u500b\u5718\u968a\u7684\u5de5\u4f5c\u3002 \u5f9e\u4e0b\u8868\u4e2d\u53ef\u4ee5\u4f9d\u64da\u4e09\u4f4d\u5728\u5718\u968a\u4e2d\u52a0\u5165\u7684\u9806\u5e8f\u9032\u884c\u6392\u5217\u7d44\u5408\uff0c\u5176\u4e2d \ud835\udf19 \u4ee3\u8868\u5718\u968a\u90fd\u6c92\u6709\u4eba\u7684\u60c5\u6cc1\u4e0b\u7522\u51fa\u7576\u7136\u70ba 0\uff0c\u63a5\u8457\u53ef\u4ee5\u5f97\u77e5 A\u3001B\u3001C \u4e09\u4eba\u7368\u7acb\u5de5\u4f5c\u7684\u5206\u6578\u5206\u5225\u70ba 90, 60, 0\u3002\u81f3\u65bc\u5408\u4f5c\u7684\u90e8\u5206 A+B \u5171\u540c\u5de5\u4f5c\u7684\u7522\u51fa\u70ba 80\uff0c\u5f9e\u9019\u7d44\u5408\u7576\u4e2d\u53ef\u4ee5\u767c\u73fe B \u7684\u52a0\u5165\u4f7f\u5f97\u5171\u540c\u7522\u51fa\u4e0b\u964d\u4e86 10(A\u5c31\u662f\u5178\u578b\u7684\u55ae\u6253\u7368\u9b25\uff0c\u6709\u4eba\u63d2\u624b\u53cd\u800c\u62d6\u7d2f\u9032\u5ea6)\u3002\u5176\u9918\u7684 A+C \u548c B+C \u7684\u5de5\u4f5c\u7522\u51fa\u5206\u5225\u70ba 70 \u548c 80\u3002\u6700\u5f8c A+B+C \u4e09\u4eba\u5404\u81ea\u767c\u63ee\u5c08\u9577\uff0c\u4e14\u6709\u4e86 C \u7684\u6e9d\u540c\u5354\u8abf\u624d\u4f7f\u5f97\u5de5\u4f5c\u9806\u5229\u5b8c\u6210\u4f7f\u5206\u6578\u5f97\u5230\u6eff\u5206 100\u3002 \u6709\u4e86\u4e0a\u8868\u7522\u51fa\u5206\u6578\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u53bb\u8a08\u7b97\u6bcf\u500b\u4eba\u5728\u5718\u968a\u7684\u8ca2\u737b\u503c\u3002\u5176\u8a08\u7b97\u65b9\u5f0f\u6839\u64da\u6240\u6709\u7d44\u968a\u6210\u54e1\u52a0\u5165\u7684\u6240\u6709\u9806\u5e8f\uff0c\u518d\u53bb\u8a08\u7b97\u5728\u5404\u7a2e\u9806\u5e8f\u4e0b\u6bcf\u500b\u4eba\u984d\u5916\u7684\u8ca2\u737b\u500b\u662f\u591a\u5c11\u3002\u9996\u5148\u8a08\u7b97 A \u7684\u8ca2\u737b\u7a0b\u5ea6\uff0c\u4e09\u500b\u4eba\u7e3d\u5171\u6709\u516d\u7a2e\u52a0\u5165\u7684\u7d44\u5408\u9806\u5e8f\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u9996\u5148\u7b2c\u4e00\u500b\u52a0\u5165\u9806\u5e8f\u70ba A,B,C\uff0c A \u6240\u626e\u6f14\u7684\u89d2\u8272\u70ba\u7b2c\u4e00\u500b\u56e0\u6b64\u662f 90\u3002 \u7b2c\u4e8c\u500b\u7d44\u5408 A,C,B \u8ddf\u7b2c\u4e00\u500b\u6848\u4f8b\u4e00\u6a23\u7531\u65bc A \u52a0\u5165\u6642\u9084\u662f\u7a7a\u7684\u56e0\u6b64\u9084\u662f\u7531 A \u81ea\u5df1\u51fa\u529b\u8ca2\u737b\u70ba 90\u3002 \u82e5 B,A,C \u7684\u9806\u5e8f\u7531 B \u5148\u505a\u7136\u5f8c A \u518d\u52a0\u5165\uff0c\u6b64\u6642 A \u6709\u52a0\u5165\u6216\u6c92\u52a0\u5165\u7684\u5dee\u5225\u5c31\u662f A \u548c B \u4e00\u8d77\u7d44\u968a\uff0c\u6216\u662f B \u81ea\u5df1\u3002\u56e0\u6b64 A \u5728\u9019\u4e00\u7d44\u5408\u4e2d\u6240\u5e36\u4f86\u984d\u5916\u7684\u8ca2\u737b\u70ba (A+B)-B=20\u3002 \u82e5 B,C,A \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+B+C)-(B+C)=30 \u82e5 C,A,B \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+C)-(C)=70 \u82e5 C,B,A \u7684\u8a71 A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u70ba\uff0c(A+B+C)-(B+C)=30 \u5230\u76ee\u524d\u70ba\u6b62\u5df2\u7d93\u8a08\u7b97\u5b8c\u5728\u6240\u6709\u7684\u52a0\u5165\u7d44\u5408\u9806\u5e8f\u4e2d A \u6240\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\uff0c\u56e0\u6b64 A \u7684 Shapley values \u5c31\u662f\u5c07\u6240\u6709\u7684\u7d44\u5408\u7684\u8ca2\u737b\u5206\u6578\u505a\u4e00\u500b\u5e73\u5747\u5f97\u5230 55\u3002 \u4e0a\u9762\u6b65\u9a5f\u4f9d\u6b64\u985e\u63a8\u5728\u516d\u7a2e\u7d44\u968a\u53ef\u80fd\u7684\u9806\u5e8f\u4e2d\u70ba\u6bcf\u500b\u4eba\u5206\u5225\u8a08\u7b97\u5e36\u4f86\u7684\u984d\u5916\u8ca2\u737b\u5206\u6578\uff0c\u5e73\u5747\u5c31\u53ef\u4ee5\u5f97\u5230\u5728\u9019\u4e00\u500b\u4efb\u52d9\u4e2d\u6bcf\u500b\u4eba\u7684\u8ca2\u737b\u7a0b\u5ea6\u4e86\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5206\u5225\u8a08\u7b97\u51fa A\u3001B \u548c C \u7684 Shapley values\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff0c\u6700\u5f8c\u5f97\u5230 A \u70ba 55\uff0c B \u70ba 40\uff0cC \u70ba 5\uff0c\u53ef\u4ee5\u767c\u73fe\u9019\u4e09\u500b\u503c\u76f8\u52a0\u5176\u5be6\u5c31\u7b49\u65bc 100\u3002","title":"\u7c21\u55ae\u4f8b\u5b50\u89e3\u91cb Shapley values"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#shap-shapley-additive-explanations","text":"\u4ee5\u4e0a\u8ff0\u7684\u4f8b\u5b50\u6bcf\u500b\u4eba\u5c31\u7b49\u540c\u65bc\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684 X \u7279\u5fb5\uff0c\u800c y \u5c31\u662f\u8f38\u51fa\u3002\u6211\u5011\u8981\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5 X \u5c0d\u65bc\u8a08\u7b97 y \u7684\u8ca2\u737b\u7a0b\u5ea6\u6709\u591a\u5c11\uff0c\u56e0\u6b64\u6211\u5011\u5fc5\u9808\u53bb\u8a08\u7b97\u6240\u6709\u7279\u5fb5\u7684 Shapley values \u5404\u662f\u591a\u5c11\u3002\u4f46\u662f\u7576 X \u7684\u7279\u5fb5\u6578\u91cf\u592a\u591a\u7684\u6642\u5019\uff0c\u5047\u8a2d\u6709 d \u500b\u7279\u5fb5\u7684\u6642\u5019\u6211\u5011\u5c31\u76f8\u7576\u65bc\u8981\u8a08\u7b97 2\u7684d\u6b21\u65b9-1\u7a2e\u53ef\u80fd\u6027\uff0c\u9019\u4e5f\u610f\u5473\u8457\u8981\u500b\u5225\u8a13\u7df4\u9019\u9ebc\u591a\u6a21\u578b\u3002\u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5\uff0c\u5247\u8981\u8a08\u7b97 Shapley values \u5c31\u5fc5\u9808\u8a13\u7df4\u4e09\u500b\u6a21\u578b\uff1a \u7b2c\u4e00\u500b\u6a21\u578b\uff1af(x1) \u7b2c\u4e8c\u500b\u6a21\u578b\uff1af(x2) \u7b2c\u4e09\u500b\u6a21\u578b\uff1af(x1, x2) \u82e5\u7279\u5fb5\u6578\u91cf\u592a\u591a\u7684\u6642\u5019\u8a13\u7df4\u5927\u91cf\u7684\u6a21\u578b\u4ee3\u50f9\u662f\u5f88\u9ad8\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u900f\u904e SHAP (SHapley Additive exPlanations) \u4f86\u8a08\u7b97\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u9032\u800c\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u800c\u4e0d\u9700\u8981\u8a13\u7df4\u5927\u91cf\u7684\u6a21\u578b\u3002\u672c\u7bc7\u7684\u4e3b\u89d2 SHAP \u662f\u4e00\u7a2e\u89e3\u91cb\u6027\u6280\u8853\uff0c\u5b83\u5c31\u662f\u4f7f\u7528 Shapley values \u7684\u6982\u5ff5\u4f86\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u3002SHAP \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5e7e\u7a2e kernel \u4f86\u5feb\u901f\u4f30\u8a08 Shapley values\uff1a TreeExplainer DeepExplainer GradientExplainer LinearExplainer KernelExplainer \u6bcf\u4e00\u500b kernel \u7684\u7c21\u55ae\u4ecb\u7d39\u53ef\u4ee5\u53c3\u8003\u672c\u7cfb\u5217 [Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f \uff0c\u800c\u5728\u4eca\u65e5\u7684\u6587\u7ae0\u4e2d\u6211\u5011\u5c07\u91cd\u9ede\u653e\u5728\u901a\u7528\u7684 KernelExplainer\uff0c\u5b83\u4e3b\u8981\u900f\u904e\u751f\u6210\u65b0\u7684\u64fe\u52d5\u8cc7\u6599\u4f86\u8fd1\u4f3c\u8a08\u7b97 SHAP\uff0c\u4e14\u9069\u7528\u65bc\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\u3002","title":"SHAP (SHapley Additive exPlanations)"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#kernelexplainer","text":"\u4ee5\u4e0b\u89e3\u91cb\u63a1\u7528 kernel shap \u7684\u65b9\u5f0f\u4f86\u4f30\u8a08 Shapley values\u3002\u5047\u8a2d\u7b2c i \u7b46\u8cc7\u6599 d \u500b\u7279\u5fb5\u9577\u50cf\u4e0b\u9762\u9019\u6a23\u5b50\u3002\u6211\u5011\u8981\u53e6\u5916\u5efa\u7acb\u4e00\u500b\u9577\u5ea6\u70ba d \u7684 z \u5411\u91cf\uff0c\u9019\u88e1\u7684 z \u5c31\u597d\u6bd4\u6bcf\u500b\u7279\u5fb5\u662f\u5426\u8981\u88ab\u8003\u616e\u56e0\u6b64\u4e0d\u662f1(\u51fa\u73fe)\u5c31\u662f0(\u5ffd\u7565)\u3002 h(z) \u5c31\u662f\u5c07\u4e00\u7d44\u7279\u5fb5\u900f\u904e z \u4f86\u6c7a\u5b9a\u8981\u89c0\u5bdf\u54ea\u4e9b\u7279\u5fb5\uff0c\u5047\u8a2d x=[1,2,3,4]\u3001z=[1,0,1,0] \u5c31\u662f\u8981\u4fdd\u7559\u7b2c\u4e00\u8ddf\u7b2c\u4e09\u500b\u7279\u5fb5\u3002\u56e0\u6b64 h(z)=[1, \u96a8\u6a5f, 3, \u96a8\u6a5f]\uff0c\u6240\u8b02\u7684\u5ffd\u7565\u5c31\u662f\u96a8\u6a5f\u7684\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u4e2d\u53d6\u4e00\u7b46\u8cc7\u6599\u51fa\u4f86\u5c07\u7b2c\u4e8c\u548c\u56db\u500b\u7279\u5fb5\u653e\u5165\u53d6\u4ee3\u96a8\u6a5f\u3002\u56e0\u6b64 xk \u5c31\u662f\u96a8\u6a5f\u5f9e\u8a13\u7df4\u8cc7\u6599\u96c6\u62bd\u53d6\u7684\u4e00\u7b46\u8cc7\u6599\u3002 \u6240\u4ee5 h(z) \u5176\u5be6\u5c31\u662f\u4e00\u500b one-to-many \u7684\u6620\u5c04\uff0c\u7531\u65bc\u6703\u96a8\u6a5f\u7684\u62bd\u53d6\u8cc7\u6599\u53d6\u4ee30\u4f4d\u7f6e\u7684\u6578\u503c\u3002\u5982\u679c\u6211\u5011\u7528\u9019\u7a2e\u65b9\u5f0f\u7522\u751f\u5f88\u591a\u7d44 z \u7684\u8a71\u6703\u7522\u751f 2 \u7684d\u6b21\u65b9\u7684\u53ef\u80fd\u6027\u3002 \u9084\u8a18\u5f97\u6211\u5011\u5728 Day4 \u89e3\u91cb SHAP \u904b\u4f5c\u539f\u7406\u7684\u4f8b\u5b50\u55ce\uff1f\u5047\u8a2d\u6709\u8f38\u5165\u56db\u500b\u7279\u5fb5\uff0c\u5e74\u9f61\u3001\u6027\u5225\u3001\u8840\u58d3\u3001BMI\u4f5c\u70ba\u8f38\u5165\u8981\u9810\u6e2c\u4e00\u500b\u4eba\u7f79\u764c\u7684\u6a5f\u7387\u3002\ud835\udf190 \u5c31\u662f\u57fa\u6e96\u9ede base rate \u9019\u88e1\u70ba 0.1\uff0c\u8868\u793a\u6bcf\u500b\u4eba\u90fd\u6709 0.1 \u7684\u6a5f\u7387\u7f79\u764c\u3002\ud835\udf191\uff5e\ud835\udf194 \u4ee3\u8868\u56db\u500b\u7279\u5fb5\u5c0d\u7f79\u764c\u7684\u8ca2\u737b\u503c\uff0c\u5168\u90e8\u76f8\u52a0\u8d77\u4f86\u5c31\u662f\u90a3\u500b\u4eba\u96e2\u764c\u7684\u5e7e\u7387\u4e86\u3002\u56e0\u6b64 SHAP \u5c31\u662f\u8981\u8a13\u7df4\u4e00\u500b\u6a21\u578b g() \u8981\u5b78\u7fd2\u6bcf\u500b \ud835\udf19\u3002 g(z): \u70ba\u88ab\u7c21\u5316\u7684\u53ef\u89e3\u91cb\u7684\u6a21\u578b z: \u8868\u793a\u6bcf\u500b\u7279\u5fb5\u662f\u5426\u8981\u88ab\u8003\u616e\uff0c1(\u51fa\u73fe)\u30010(\u5ffd\u7565) d: \u8f38\u5165\u7279\u5fb5\u7684\u500b\u6578 \ud835\udf190: \u4ee3\u8868\u57fa\u6e96\u503c \ud835\udf19j: \u4ee3\u8868\u6bcf\u500b\u7279\u5fb5\u7684Shapley values g() \u662f SHAP \u81ea\u884c\u5b9a\u7fa9\u7684\u6a21\u578b\uff0c\u5176\u76ee\u6a19\u662f\u5e0c\u671b g(z) \u80fd\u5920\u63a5\u8fd1\u65bc f(h(z))\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u5982\u679c\u5c0d\u65bc\u7b2c i \u7b46\u8cc7\u6599\u6a23\u672c x=[1,2,3,4] \u4ee5\u53ca z=[1,0,1,0]\uff0c\u53ea\u89c0\u5bdf\u7b2c\u4e00\u548c\u7b2c\u4e09\u500b\u7279\u5fb5\u6642\uff0cf(h(z)) \u7684\u9810\u6e2c\u7d50\u679c\u5c07\u6703\u8da8\u8fd1\u65bc g(z) \u4e5f\u5c31\u662f \ud835\udf190+\ud835\udf191+\ud835\udf193\u3002 \u8acb\u5404\u4f4d\u56de\u60f3\u4e00\u4e0b\u4e4b\u524d\u5728\u505a LIME \u7684\u6642\u5019\u9700\u8981\u5f9e\u8cc7\u6599\u62bd\u4e00\u4e9b\u6a23\u672c\u8981\u8207\u88ab\u89c0\u5bdf\u7684\u90a3\u7b46\u8cc7\u6599\u8a08\u7b97\u8ddd\u96e2\uff0c\u8d8a\u8fd1\u5c31\u4ee3\u8868\u8d8a\u91cd\u8981\u3002\u56e0\u6b64 kernel shape \u7684\u65b9\u6cd5\u4e2d\u4e5f\u662f\u8981\u7d66\u4e88\u6b0a\u91cd\u7684\u6982\u5ff5\uff0c\u4f46\u65b9\u6cd5\u4e0d\u540c\u3002\u5dee\u5225\u5728\u65bc\u5b83\u7684 loss function \u5f8c\u9762\u591a\u4e86 \u03c0(z) \u4e5f\u5c31\u662f\u6240\u8b02\u7684\u6b0a\u91cd\uff0c\u9019\u500b\u6b0a\u91cd\u7684\u6c7a\u5b9a\u53d6\u6c7a\u65bc z \u6709\u591a\u5c11\u500b1\u3002 \u5ef6\u7e8c\u525b\u525b\u7684\u4f8b\u5b50\u5047\u8a2d\u6211\u5011\u8981\u89c0\u5bdf\u7b2c\u4e00\u548c\u7b2c\u4e09\u500b\u7279\u5fb5\u6642\uff0c\u640d\u5931\u51fd\u6578\u4e2d\u6700\u5f8c\u4e00\u9805 \u03c0(z) \u7684\u8a08\u7b97\u65b9\u5f0f\u76f4\u63a5\u5957\u5165\u4e0a\u9762\u5f0f\u5b50\u3002\u4ee3\u8868\u9019\u7b46\u8cc7\u6599\u731c\u5c0d\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u5176\u4e2d c(4,2) \u4ee3\u8868\u6392\u5217\u7d44\u5408\u4e2d\u7684 C4 \u53d6 2\u3002\u8868\u793a\u5728\u6709 4 \u500b\u5143\u7d20\u7684\u96c6\u5408\u4e2d\uff0c\u9078\u53d6 2 \u500b\u5143\u7d20\u7684\u7d44\u5408\u6578\u91cf\u3002 \u5728 Kernel SHAP \u4e2d\uff0c\u5c0d\u65bc\u7279\u5fb5\u5b50\u96c6\u7684\u62bd\u6a23\u662f\u901a\u904e\u9032\u884c Monto Carlo \u62bd\u6a23\u7684\u65b9\u5f0f\u9032\u884c\u7684\u3002\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0c\u7576\u7279\u5fb5\u5c0f\u65bc\u7b49\u65bc11\u500b\u7279\u5fb5\u6642\uff0cSHAP \u6f14\u7b97\u6cd5\u6703\u62bd\u53d6 nsamples \u6578\u91cf\u70ba 2**M - 2 \u7b46\u8cc7\u6599\u3002\u800c\u7279\u5fb5\u6578\u91cf\u5927\u65bc11\u500b\u6642\uff0c\u6703\u62bd\u53d6 nsamples = 2*M + 2048 \u500b\u7279\u5fb5\u5b50\u96c6\u4f5c\u70ba\u8fd1\u4f3c\u8a08\u7b97\u7684\u6a23\u672c\uff0c\u5176\u4e2d M \u662f\u7279\u5fb5\u7684\u6578\u91cf\u3002\u6703\u6709\u9019\u6a23\u7684\u6a5f\u5236\u662f\u56e0\u70ba\u7576\u7279\u5fb5\u6578\u91cf\u589e\u52a0\u6642\uff0c\u70ba\u4e86\u4fdd\u6301\u8a08\u7b97\u6548\u7387\uff0cKernel SHAP \u6703\u9032\u884c\u62bd\u6a23\uff0c\u53ea\u5305\u542b\u90e8\u5206\u7279\u5fb5\u5b50\u96c6\uff0c\u4f46\u4ecd\u7136\u80fd\u5920\u63d0\u4f9b\u5408\u7406\u7684\u89e3\u91cb\u6574\u500b\u6a21\u578b\u3002 \u7576M<=11\u500b\u7279\u5fb5\u4ee5\u4e0b\uff1a nsamples = 2**M-2 \u7576M>11\u500b\u4ee5\u4e0a\uff1a nsamples = 2*M + 2048 \u8a73\u7d30\u8cc7\u8a0a\u53ef\u4ee5\u76f4\u63a5\u53c3\u8003 Kernel SHAP \u7684\u539f\u59cb \u7a0b\u5f0f\u78bc \u3002 \u7c21\u55ae\u4f86\u8aaa SHAP \u7684\u5957\u4ef6\u5be6\u73fe\u6703\u6839\u64da\u7279\u5fb5\u6578\u91cf\u548c\u8a08\u7b97\u6210\u672c\u63a1\u53d6\u9069\u7576\u7684\u62bd\u6a23\u7b56\u7565\uff0c\u4ee5\u63d0\u4f9b\u8fd1\u4f3c\u7684 Shapley \u503c\u8a08\u7b97\u7d50\u679c\u3002\u5c0d\u65bc\u5c0f\u7279\u5fb5\u96c6\uff0c\u5b83\u6703\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u7279\u5fb5\u7d44\u5408\uff0c\u5c0d\u65bc\u5927\u578b\u7279\u5fb5\u96c6\uff0c\u5247\u900f\u904e\u62bd\u6a23\u65b9\u5f0f\u4f86\u6709\u6548\u4f30\u8a08 Shapley \u503c\u3002 \u7531\u65bc Kernel SHAP \u5c0d\u6a21\u578b\u985e\u578b\u6c92\u6709\u5047\u8a2d\uff0c\u5b83\u7684\u901f\u5ea6\u6bd4\u5176\u4ed6\u7279\u5b9a\u65bc\u6a21\u578b\u985e\u578b\u7684\u7b97\u6cd5\u6162\u4f8b\u5982\u50cf\u662f Tree SHAP\u3002","title":"\u89e3\u6790 KernelExplainer \u80cc\u5f8c\u539f\u7406"},{"location":"14.SHAP\u7406\u8ad6:\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3/#reference","text":"Scott Lundberg, et al. \" A Unified Approach to Interpreting Model Predictions .\" Arxiv, 2017. Kjersti Aas, et al. \" Explaining individual predictions when features are dependent: More accurate approximations to Shapley values .\" Arxiv, 2019.","title":"Reference"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/","text":"[Day 15] SHAP\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u6628\u5929\u5df2\u7d93\u77ad\u89e3\u4e86 SHAP \u5957\u4ef6\u80cc\u5f8c\u7684\u6838\u5fc3\u6280\u8853\u3002SHAP \u63d0\u4f9b\u591a\u7a2e\u89e3\u91cb\u5de5\u5177\uff0c\u53ef\u61c9\u7528\u65bc\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff1a KernelExplainer\uff08Kernel SHAP\uff09\uff1a \u9069\u7528\u65bc\u4efb\u4f55\u6a21\u578b\uff0c\u5b83\u7d50\u5408\u4e86 LIME \u548c Shapley values \u65b9\u6cd5\uff0c\u900f\u904e\u4f30\u8a08 SHAP \u503c\u4f86\u63d0\u4f9b\u89e3\u91cb\u3002 TreeExplainer\uff08Tree SHAP\uff09\uff1a \u9069\u7528\u65bc tree-based \u8207 ensemble \u7cfb\u5217\u6a21\u578b\uff0c\u5305\u62ec XGBoost\u3001LightGBM\u3001CatBoost\u3001scikit-learn \u548c pyspark \u6a39\u76f8\u95dc\u7684\u6a21\u578b\uff0c\u900f\u904e Tree SHAP \u7b97\u6cd5\u8a08\u7b97 SHAP \u503c\u3002 DeepExplainer\uff08Deep SHAP\uff09\uff1a \u57fa\u65bc SHAP \u548c DeepLIFT \u7b97\u6cd5\uff0c\u5c08\u9580\u7528\u65bc\u8a08\u7b97\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684 SHAP \u503c\uff0c\u5e6b\u52a9\u89e3\u91cb\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u9810\u6e2c\u3002 GradientExplainer\uff1a \u57fa\u65bc SHAP \u548c Integrated Gradients \u7b97\u6cd5\uff0c\u7528\u65bc\u8fd1\u4f3c\u8a08\u7b97\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684 SHAP \u503c\uff0c\u5176\u901f\u5ea6\u6703\u6bd4 DeepExplainer \u6162\u3002 LinearExplainer\uff1a \u7528\u65bc\u89e3\u91cb\u7dda\u6027\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u9069\u7528\u65bc\u5177\u6709\u7368\u7acb\u7279\u5fb5\u7684\u7dda\u6027\u6a21\u578b\u3002 SHAP \u7684\u512a\u7f3a\u9ede Shapley values \u70ba\u6211\u5011\u63d0\u4f9b\u4e86\u7279\u5fb5\u5728\u5be6\u4f8b\u4e0a\u7684\u908a\u969b\u8ca2\u737b\u3002\u5b83\u9069\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u4efb\u52d9\uff0c\u4e14\u53ef\u7528\u65bc\u8868\u683c\u6578\u64da\u3001\u6587\u5b57\u548c\u5716\u50cf\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u7d71\u6574 SHAP \u7684\u512a\u7f3a\u9ede\uff1a SHAP \u7684\u512a\u9ede\uff1a \u7a69\u56fa\u7684\u7406\u8ad6\u57fa\u790e\uff1a SHAP \u7e7c\u627f\u4e86\u535a\u5f08\u7406\u8ad6\u4e2d Shapley values \u7684\u7406\u8ad6\u57fa\u790e\u3002 \u6548\u7387\u63d0\u5347\uff1a SHAP \u78ba\u4fdd\u6a21\u578b\u9810\u6e2c\u503c\u548c\u5e73\u5747\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u5dee\u7570\u5728\u7279\u5fb5\u4e4b\u9593\u516c\u5e73\u5206\u914d\uff0c\u4fdd\u8b49\u89e3\u91cb\u7684\u6548\u7387\u548c\u5408\u7406\u6027\u3002 \u901a\u7528\u6027\uff1a SHAP \u662f\u4e00\u7a2e\u901a\u7528\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u80fd\u5920\u61c9\u7528\u65bc\u591a\u7a2e\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u548c\u6a21\u578b\u985e\u578b\uff0c\u4e0d\u53d7\u6a21\u578b\u9078\u64c7\u7684\u9650\u5236\u3002 \u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u89e3\u91cb\uff1a SHAP \u4e0d\u50c5\u80fd\u5920\u63d0\u4f9b\u55ae\u4e00\u5be6\u4f8b\u7684\u89e3\u91cb\uff0c\u9084\u80fd\u5920\u8a08\u7b97\u5168\u5c40\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002 SHAP \u7684\u7f3a\u9ede\uff1a \u8a08\u7b97\u6642\u9593\u8207\u7279\u5fb5\u6578\u91cf\u6210\u6b63\u6bd4\uff1a\u7576\u7279\u5fb5\u7684\u6578\u91cf\u589e\u591a\u6642\uff0c\u8a08\u7b97 SHAP \u503c\u6240\u9700\u7684\u6642\u9593\u4e5f\u6703\u96a8\u4e4b\u589e\u52a0\u3002 \u89e3\u91cb\u8907\u96dc\u6027\uff1a\u5728\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u6642\uff0cSHAP \u503c\u53ef\u80fd\u7121\u6cd5\u5b8c\u5168\u6355\u6349\u6a21\u578b\u7684\u8907\u96dc\u5167\u90e8\u95dc\u4fc2\uff0c\u5c0e\u81f4\u89e3\u91cb\u7684\u4e0d\u5b8c\u5168\u6027\u3002 \u6578\u64da\u5206\u4f48\u654f\u611f\uff1a SHAP \u503c\u7684\u8a08\u7b97\u53ef\u80fd\u5c0d\u6578\u64da\u5206\u4f48\u654f\u611f\uff0c\u4e0d\u540c\u7684\u6578\u64da\u5206\u4f48\u53ef\u80fd\u5c0e\u81f4\u4e0d\u540c\u7684\u89e3\u91cb\u7d50\u679c\u3002 [\u5be6\u4f5c] SHAP \u89e3\u91cb\u5206\u985e\u6a21\u578b \u672c\u65e5\u7bc4\u4f8b\u4e00\u6a23\u4ee5\u4e00\u500b\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c6\u8a13\u7df4\u4e00\u500b SVM \u5206\u985e\u5668\u3002\u63a5\u9019\u900f\u904e Kernel SHAP \u5c0d\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5148\u8f09\u5165\u4eca\u5929\u7bc4\u4f8b\u7684\u8cc7\u6599\u96c6\uff0c\u8a72\u8cc7\u6599\u96c6\u53ef\u4ee5\u5f9e Kaggle \u8cc7\u6599\u79d1\u5b78\u5e73\u53f0 \u53d6\u5f97 \u3002 \u8f09\u5165\u8cc7\u6599\u96c6 import pandas as pd # \u8b80\u53d6\u8cc7\u6599\u96c6 df_train = pd . read_csv ( './diabetes.csv' ) \u8b93\u6211\u5011\u4f86\u77a7\u77a7 df_train \u88e1\u9762\u7684\u5167\u5bb9\u3002\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u8a72\u8cc7\u6599\u96c6\u6709\u7e3d\u5171\u6709 768 \u7b46\u6578\u64da\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u6709\u516b\u500b\u6b04\u4f4d\u8cc7\u8a0a\uff0c\u5176\u4e2d\u5305\u542b\u6a21\u578b\u7684\u8f38\u5165\u8207\u8f38\u51fa\u3002 \u9019\u500b\u8cc7\u6599\u96c6\u4f86\u81ea\u7f8e\u570b\u570b\u5bb6\u7cd6\u5c3f\u75c5\u548c\u6d88\u5316\u548c\u814e\u81df\u75be\u75c5\u7814\u7a76\u6240\u3002\u5176\u76ee\u6a19\u662f\u6839\u64da\u8a3a\u65b7\u6e2c\u91cf\u4f86\u9810\u6e2c\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u8cc7\u6599\u96c6\u7684\u8b8a\u6578\u5982\u4e0b\uff1a Glucose\uff1a\u53e3\u670d\u8461\u8404\u7cd6\u8010\u91cf\u6e2c\u8a66\u4e2d2\u5c0f\u6642\u7684\u8840\u6f3f\u8461\u8404\u7cd6\u6fc3\u5ea6\uff0c\u7528\u65bc\u6e2c\u8a66\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u3002 BloodPressure\uff1a\u8212\u5f35\u58d3(mm Hg)\uff0c\u8840\u58d3\u4e2d\u7684\u4e00\u500b\u53c3\u6578\uff0c\u7528\u65bc\u8861\u91cf\u5fc3\u81df\u5728\u6536\u7e2e\u6642\u7684\u58d3\u529b\u3002 SkinThickness\uff1a\u4e09\u982d\u808c\u76ae\u819a\u8936\u76ba\u539a\u5ea6(mm)\uff0c\u7528\u65bc\u8861\u91cf\u76ae\u819a\u7684\u8102\u80aa\u5c64\u539a\u5ea6\u3002 Insulin\uff1a2\u5c0f\u6642\u8840\u6e05\u80f0\u5cf6\u7d20(mu U/ml)\uff0c\u7528\u65bc\u8a55\u4f30\u80f0\u5cf6\u7d20\u6c34\u5e73\uff0c\u5c0d\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u975e\u5e38\u91cd\u8981\u3002 BMI\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578\uff0c\u8868\u793a\u9ad4\u91cd\u548c\u8eab\u9ad8\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8a55\u4f30\u9ad4\u91cd\u72c0\u6cc1\u3002 DiabetesPedigreeFunction\uff1a\u7cd6\u5c3f\u75c5\u5bb6\u65cf\u907a\u50b3\u51fd\u6578\uff0c\u7528\u65bc\u8861\u91cf\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u5bb6\u65cf\u907a\u50b3\u98a8\u96aa\u3002 Age\uff1a\u75c5\u4eba\u7684\u5e74\u9f61\u3002 Outcome\uff1a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5(\u4f5c\u70ba\u6a21\u578b\u8f38\u51fa)\uff0c\u503c\u70ba0\u8868\u793a\u6c92\u6709\u7cd6\u5c3f\u75c5\uff0c\u503c\u70ba1\u8868\u793a\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002 \u5207\u5272\u8cc7\u6599\u96c6 \u63a5\u4e0b\u4f86\u5f9e\u525b\u525b\u8b80\u53d6\u9032\u4f86\u7684 df_train \u8cc7\u6599\u96c6\u4e2d\uff0c\u5c07\u6240\u6709\u7684\u8f38\u5165\u7279\u5fb5\u8cc7\u6599\u63d0\u53d6\u51fa\u4f86\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u5165 X\u3002\u540c\u6642\uff0c\u6211\u5011\u5f9e df_train \u4e2d\u53d6\u5f97 Outcome \u6b04\u4f4d\u7684\u8cc7\u6599\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u51fa y\uff0c\u7528\u4f86\u8868\u793a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u4e5f\u5c07\u6240\u6709\u8f38\u5165\u7279\u5fb5\u7684\u6b04\u4f4d\u540d\u7a31\u5132\u5b58\u5230 x_feature_names \u8b8a\u6578\u4e2d\uff0c y_label_names \u5247\u662f\u5132\u5b58\u8f38\u51fa\u7684\u6a19\u7c64\u540d\u7a31\uff0c\u9019\u5169\u500b\u500b\u8b8a\u6578\u5c07\u5728\u5f8c\u7e8c SHAP \u6a21\u578b\u89e3\u91cb\u7684\u904e\u7a0b\u4e2d\u4f7f\u7528\u3002\u6700\u5f8c\u900f\u904e train_test_split \u65b9\u6cd5\u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split x_feature_names = df_train . drop ([ 'Outcome' ], axis = 1 ) . columns y_label_names = [ 'No' , 'Yes' ] X = df_train . drop ([ 'Outcome' ], axis = 1 ) . values # \u79fb\u9664y\u4e26\u53d6\u5f97\u5269\u4e0b\u6b04\u4f4d\u8cc7\u6599 y = df_train [ 'Outcome' ] . values # \u53d6\u5f97\u75c5\u4eba\u7cd6\u5c3f\u75c5\u7d50\u679c\u4f5c\u70bay X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.01 , random_state = 42 , stratify = y ) \u8a13\u7df4\u6a21\u578b (SVM \u5206\u985e\u5668) \u6211\u5011\u5c07\u4f7f\u7528 SVM \u5efa\u7acb\u4e00\u500b\u5206\u985e\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\uff08X_train, y_train\uff09\u9032\u884c\u8a13\u7df4\u3002\u7531\u65bc SHAP \u89e3\u91cb\u5206\u985e\u5668\u9700\u8981\u6a21\u578b\u9810\u6e2c\u6bcf\u500b\u985e\u5225\u7684\u6a5f\u7387\uff0c\u56e0\u6b64\u5728\u8a13\u7df4 SVM \u5206\u985e\u5668\u6642\uff0c\u9700\u8981\u6dfb\u52a0\u53c3\u6578 probability=True \uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u5728\u63a8\u8ad6\u6642\u80fd\u5920\u8f38\u51fa\u9810\u6e2c\u6a5f\u7387\u3002 from sklearn import svm # \u5efa\u7acb kernel='linear' \u6a21\u578b model = svm . SVC ( kernel = 'linear' , C = 1 , probability = True ) # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b model . fit ( X_train , y_train ) SHAP \u89e3\u91cb\u6a21\u578b \u63a5\u8457\u6211\u5011\u8981\u4f7f\u7528 SHAP \u5957\u4ef6\u4f86\u9032\u884c\u6a21\u578b\u7684\u89e3\u91cb\u3002\u9996\u5148\u5927\u5bb6\u53ef\u4ee5\u5728\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd SHAP \u5957\u4ef6\uff1a pip install shap \u9996\u5148\u8f09\u5165 SHAP \u51fd\u5f0f\u5eab\u4e26\u521d\u59cb\u5316 JavaScript \u74b0\u5883\uff0c\u4ee5\u4fbf\u5728 Jupyter Notebook \u74b0\u5883\u4e2d\u80fd\u5920\u986f\u793a SHAP \u7684\u89e3\u91cb\u5716\u8868\u548c\u8996\u89ba\u5316\u7d50\u679c\u3002 import shap shap . initjs () \u9996\u5148\u5efa\u7acb\u4e00\u500b\u901a\u7528\u7684 KernelExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u5617\u8a66\u5256\u6790\u525b\u525b\u6240\u8a13\u7df4\u7684 SVM \u5206\u985e\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a Parameters: - model\uff1a\u5f85\u89e3\u91cb\u7684\u6a21\u578b\u3002\u652f\u63f4 sklearn \u6240\u5c01\u88dd\u7684\u6a21\u578b\uff0c\u8ff4\u6b78\u5668\u53ef\u4ee5\u4f7f\u7528 model.predict \uff0c\u5206\u985e\u5668\u53ef\u4ee5\u4f7f\u7528 model.predict_proba \u3002 - data\uff1a\u53ef\u63a1\u6a23\u7684\u8cc7\u6599\u96c6\uff0c\u7528\u65bc\u7522\u751f\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\u7684\u5b50\u96c6\uff0c\u6b64\u8cc7\u6599\u7528\u65bc\u8a13\u7df4 SHAP \u89e3\u91cb\u6a21\u578b\u3002 - link\uff1a\u5c07SHAP\u7c21\u55ae\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u8f49\u63db\u70ba\u5be6\u969b\u9810\u6e2c\u503c\u7684\u51fd\u6578\uff0c\u63d0\u4f9b\u5169\u7a2e\u8a2d\u5b9a\u5206\u5225\u70ba identity \u548c logit \u3002\u9810\u8a2d\u70ba identity\u3002 \u4ee5\u4e0b\u7a0b\u5f0f\u5c07\u5df2\u7d93\u8a13\u7df4\u597d\u7684\u6a21\u578b\u5f15\u5165\uff0c\u4e26\u900f\u904e\u547c\u53eb predict_proba \u65b9\u6cd5\u4f86\u8a08\u7b97\u9810\u6e2c\u6a5f\u7387\u3002\u5728 data \u53c3\u6578\u7684\u90e8\u5206\u6211\u5011\u5f9e\u8a13\u7df4\u96c6\u4e2d\u53d6\u51fa\u524d 50 \u7b46\u8cc7\u6599\uff0c\u7528\u4ee5\u4ee3\u8868\u6574\u9ad4\u7279\u5fb5\u503c\u7684\u5206\u5e03\u3002\u5728 SHAP \u4e2d\u7684 KernelExplainer \u65b9\u6cd5\u4e2d\uff0clink \u53c3\u6578\u7528\u65bc\u6307\u5b9a\u9810\u6e2c\u6a21\u578b\u7684\u9023\u7d50\u51fd\u6578\uff08link function\uff09\u3002\u9023\u7d50\u51fd\u6578\u662f\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u8f49\u63db\u70ba\u5be6\u969b\u7684\u9810\u6e2c\u503c\u7684\u51fd\u6578\u3002\u5728\u4e0d\u540c\u7684\u60c5\u6cc1\u4e0b\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u9023\u7d50\u51fd\u6578\u53ef\u4ee5\u66f4\u597d\u5730\u9069\u61c9\u6a21\u578b\u7684\u6027\u8cea\u3002\u6b64\u7bc4\u4f8b\u662f\u5206\u985e\u6a21\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u9078\u64c7 logit \uff0c\u5373\u8868\u793a\u6bcf\u500b\u8a08\u7b97\u51fa\u4f86\u7684 Shapley values \u518d\u901a\u904e sigmoid \u51fd\u6578\u5373\u4ee3\u8868\u9810\u6e2c\u6a5f\u7387\u3002 # \u4f7f\u7528 Kernel SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . KernelExplainer ( model = model . predict_proba , data = X_train [: 50 ], link = 'logit' ) KernelExplainer API \u5b98\u65b9\u6587\u6a94\u53ef\u4ee5\u5f9e\u9019\u88e1 \u53c3\u8003 \u3002 \u63a5\u8457\u6211\u5011\u8981\u4f7f\u7528 shap_values() \u65b9\u6cd5\u4f86\u4f30\u8a08 Shapley values \u4e26\u5c0d\u55ae\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a Parameters: - X: \u6b32\u88ab\u89e3\u91cb\u7684\u8cc7\u6599\u3002 - nsamples: \u7528\u65bc\u69cb\u5efa\u89e3\u91cb\u6bcf\u500b\u9810\u6e2c\u7684\u4ee3\u7406\u6a21\u578b\u7684\u6a23\u672c\u6578\u91cf\u3002 \u6211\u5011\u628a\u4e4b\u524d\u5148\u5207\u5272\u51fa\u4f86\u7684\u6e2c\u8a66\u96c6\u4f5c\u70ba\u8981\u88ab\u89e3\u91cb\u7684\u76ee\u6a19 \uff38\u3002\u63a5\u8457\u8a2d\u5b9a nsamples \u70ba 100\uff0c\u9019\u610f\u5473\u8457\u6211\u5011\u5c07\u9032\u884c 100 \u6b21\u8499\u5730\u5361\u7f85\u62bd\u6a23\uff0c\u5f9e KernelExplainer \u8a2d\u5b9a\u7684 data \u4e2d\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\u4e26\u5efa\u7acb\u4e00\u500b SHAP \u7c21\u55ae\u53ef\u89e3\u91cb\u6a21\u578b\u3002\u5c0d\u65bc\u6bcf\u500b\u96a8\u6a5f\u63a1\u6a23\u7684\u6a23\u672c\uff0c\u6211\u5011\u9700\u8981\u9032\u884c\u96a8\u6a5f\u64fe\u52d5\u4e26\u9032\u884c\u6a21\u578b\u63a8\u8ad6\uff08\u7372\u53d6 f() \u7684\u9810\u6e2c y\uff09\u3002\u56e0\u6b64\u7e3d\u5171\u9700\u8981\u9032\u884c 100*50 \u6b21\u6a21\u578b\u63a8\u8ad6\uff0c\u4ee5\u751f\u6210\u9019 100 \u7b46\u8cc7\u6599\u3002\u7136\u800c SHAP \u5b98\u65b9\u5efa\u8b70\u76e1\u91cf data \u7684\u6578\u91cf\u4e0d\u8981\u8d85\u904e 100 \u7b46\u6578\u64da\uff0c\u4ee5\u907f\u514d\u904e\u9ad8\u7684\u8a08\u7b97\u6210\u672c\u3002\u539f\u59cb\u78bc\u53ef\u4ee5\u5f9e\u9019\u88e1 \u53c3\u8003 \u3002 shap_values = explainer . shap_values ( X = X_test , nsamples = 100 ) 1. \u5168\u5c40\u89e3\u91cb\u6a21\u578b 1.1 SHAP Summary Plot SHAP Summary Plot \u53ef\u4ee5\u5e6b\u52a9\u4e86\u89e3\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u5e6b\u52a9\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002\u5982\u679c\u67d0\u500b\u7279\u5fb5\u7684 SHAP \u503c\u8f03\u5927\u4e14\u7a69\u5b9a\uff0c\u5247\u53ef\u4ee5\u8a8d\u70ba\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u8f03\u5927\u4e14\u8f03\u4e00\u81f4\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u7279\u5fb5\u7684 SHAP \u503c\u8f03\u5c0f\u4e14\u4e0d\u7a69\u5b9a\uff0c\u5247\u53ef\u80fd\u8a8d\u70ba\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u8f03\u5c0f\u6216\u4e0d\u4e00\u81f4\u3002 \u9ede\u7684\u984f\u8272: Feature value \u7684\u5927\u5c0f\uff0c\u8d8a\u7d05\u8d8a\u5927\u3001\u8d8a\u85cd\u8d8a\u5c0f X \u8ef8: \u8a72\u9ede\u5c0d\u65bc shap value \u7684\u5f71\u97ff\uff0c\u4e5f\u5c31\u662f\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff Y \u8ef8: \u6bcf\u500b\u7279\u5fb5 \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 plot_type \u53c3\u6578\u8a2d\u7f6e bar \u756b\u4e00\u5f35\u689d\u5f62\u5716\uff0c\u4e0d\u540c\u984f\u8272\u4ee3\u8868\u4e0d\u540c\u985e\u5225(\u4ee5\u4e0b\u7bc4\u4f8b\u85cd\u8272\u4ee3\u8868\u9810\u6e2cYes\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u7d05\u8272\u70baNo)\uff0c\u6bcf\u500b\u689d\u5f62\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\uff0c\u4e26\u986f\u793a\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5728\u9019\u500b\u5716\u8868\u4e2d\uff0c\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u5404\u500b\u985e\u5225\u7684\u5f71\u97ff\u88ab\u5806\u758a\u8d77\u4f86\uff0c\u4ee5\u5275\u5efa\u6574\u9ad4\u7684\u7279\u5fb5\u91cd\u8981\u6027\u5716\u3002 shap . summary_plot ( shap_values , X_test , plot_type = \"bar\" , class_names = y_label_names , feature_names = x_feature_names ) \u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u7279\u5b9a\u985e\u5225\u7684 summary_plot\u3002\u5047\u8a2d\u6211\u60f3\u770b\u6a21\u578b\u5c0d\u65bc\u9810\u6e2c Yes \u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528 shap_values[1] \u7684\u8cc7\u6599\u53d6\u5f97\u6bcf\u7b46\u6e2c\u8a66\u96c6\u7684 Shapley values \u9032\u884c\u5168\u5c40\u7684\u89e3\u91cb\u3002\u4ee5\u4e0b\u5716\u4f86\u8aaa\u6211\u5011\u53ef\u4ee5\u5f97\u77e5\u6a21\u578b\u5728\u5224\u65b7\u662f\u5426\u7f79\u60a3\u7cd6\u5c3f\u75c5\u60c5\u6cc1\u4e0b\u5927\u591a\u6703\u770b\u8461\u8404\u7cd6\u6fc3\u5ea6(Glucose)\uff0c\u7576\u6578\u503c\u8d8a\u5927\u8d8a\u6709\u6a5f\u6703\u7f79\u60a3\u7cd6\u5c3f\u75c5\u3002\u7b2c\u4e8c\u500b\u91cd\u8981\u7684\u7279\u5fb5\u70baBMI\uff0c\u540c\u6a23\u4e5f\u662f\u7576BMI\u8d8a\u5927\u8d8a\u6709\u6a5f\u6703\u7f79\u60a3\u7cd6\u5c3f\u75c5\u3002 shap . summary_plot ( shap_values [ 1 ], X_test , feature_names = x_feature_names ) 1.2 SHAP Dependence Plot SHAP \u76f8\u4f9d\u5716\u662f\u4e00\u7a2e\u6563\u9ede\u5716\uff0c\u986f\u793a\u4e86\u55ae\u4e00\u7279\u5fb5\u5c0d\u6a21\u578b\u6240\u505a\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u7576\u6bcf\u4f4d\u8461\u8404\u7cd6\u6fc3\u5ea6\u8d8a\u9ad8\u76f8\u5c0d\u61c9\u7684 Shapley values \u9010\u6f38\u589e\u52a0\u3002 \u6bcf\u500b\u9ede\u4ee3\u8868\u8cc7\u6599\u96c6\u4e2d\u7684\u4e00\u7b46\u9810\u6e2c\u8cc7\u6599 X \u8ef8\uff1a\u8a72\u7279\u5fb5\u7684\u5be6\u969b\u503c Y \u8ef8\uff1a\u8a72\u7279\u5fb5\u7684 SHAP \u503c\uff0c\u8868\u793a\u77e5\u9053\u8a72\u7279\u5fb5\u7684\u503c\u6709\u591a\u5927\u7a0b\u5ea6\u4e0a\u6539\u8b8a\u4e86\u8a72\u6a23\u672c\u9810\u6e2c\u7684\u6a21\u578b\u8f38\u51fa\u3002 shap . dependence_plot ( 'Glucose' , shap_values [ 1 ], X_test , feature_names = x_feature_names ) SHAP \u76f8\u4f9d\u5716\u985e\u4f3c\u65bc\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u4f46\u8003\u616e\u4e86\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u5169\u500b\u8b8a\u6578\u7684\u4ea4\u4e92\u4f5c\u7528\u5f71\u97ff\uff0c\u53ef\u4ee5\u5728 interaction_index \u53c3\u6578\u4e2d\u8a2d\u5b9a\u7b2c\u4e8c\u500b\u7279\u5fb5\u540d\u7a31\uff0c\u984f\u8272\u5c0d\u61c9\u5230\u7b2c\u4e8c\u500b\u7279\u5fb5\u6578\u503c\u9ad8\u4f4e\u7684\u5f71\u97ff\u3002\u4ee5\u4e0b\u7bc4\u4f8b\u89c0\u5bdfBMI\u8207\u76ae\u8102\u539a\u5ea6\u4ea4\u4e92\u4f5c\u7528\u4e0b\u5c0d\u65bc BMI \u7684 SHAP \u503c\u5f71\u97ff\u3002 shap . dependence_plot ( 'BMI' , shap_values [ 1 ], X_test , feature_names = x_feature_names , interaction_index = 'SkinThickness' ) 2. \u5c40\u90e8\u89e3\u91cb\u6a21\u578b 2.1 SHAP Force plot \u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u55ae\u4e00\u7b46\u8cc7\u6599\u5728\u6a21\u578b\u4e2d\u7684\u9810\u6e2c\u60c5\u6cc1\u3002\u5728 SHAP \u5957\u4ef6\u4e2d\uff0c\u300cForce Plot\u300d\u65b9\u6cd5\u63d0\u4f9b\u4e86\u91dd\u5c0d\u55ae\u4e00\u6a21\u578b\u9810\u6e2c\u7684\u89e3\u91cb\u6027\u5448\u73fe\u3002\u5728\u9019\u500b\u5716\u8868\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u5404\u7279\u5fb5\u5c0d\u6a21\u578b\u5c0d\u7279\u5b9a\u8f38\u5165\u503c\u7684\u9810\u6e2c\u6240\u505a\u7684\u8ca2\u737b\u3002\u9019\u7a2e\u65b9\u6cd5\u5728\u9032\u884c\u932f\u8aa4\u5206\u6790\u6216\u6df1\u5165\u7406\u89e3\u7279\u5b9a\u60c5\u6cc1\u4e0b\u7684\u8cc7\u6599\u6642\u975e\u5e38\u6709\u5e6b\u52a9\u3002 \u5f9e\u4ee5\u4e0b\u5716\u8868\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\uff1a 1. \u6a21\u578b\u5728\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2cNO\u7684\u6a5f\u7387\u67090.11\uff0cYes\u7684\u6a5f\u7387\u67090.89 2. base value: \u4ee3\u8868\u6a21\u578b\u5728\u4e0d\u770b\u4efb\u4f55\u7279\u5fb5\u72c0\u6cc1\u4e0b\u9810\u6e2c\u7684\u6578\u503c\uff0c\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u57fa\u6e96\u503c = 0.379\u3002\u8a3b\uff1a\u6b64\u57fa\u6e96\u503c\u662f\u6709\u7d93\u904e sigmoid \u51fd\u6578\u3002 3. \u6bcf\u500b\u7279\u5fb5\u5f8c\u9762\u7684\u6578\u5b57\u662f\u8a72\u7b46\u8cc7\u6599\u7684\u7279\u5fb5\u503c\uff0c\u4f8b\u5982 Age 49 \u6b72\u3002 4. \u7d05\u8272\u4ee3\u8868\u8a72\u7279\u5fb5\u6703\u589e\u52a0\u5224\u65b7Yes\u7684\u6a5f\u7387\u3002\u800c\u85cd\u8272\u4ee3\u8868\u8a72\u7279\u5fb5\u6703\u964d\u4f4e\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u3002 5. \u7bad\u982d\u7684\u5bec\u5ea6\u8868\u793a\u8a72\u7279\u5fb5\u5c0d\u8f38\u51fa\u7684\u5f71\u97ff\u8d8a\u5927\u3002 6. Glucose\u3001DiabetesPedigreeFunction\u3001Age \u9019\u4e09\u500b\u7279\u5fb5\u660e\u986f\u662f\u5224\u65b7\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u91cd\u8981\u56e0\u5b50\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u70baYes\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { model . predict_proba ( X_test [[ index ], :])[ 0 ] } ' ) shap . force_plot ( explainer . expected_value [ 1 ], shap_values [ 1 ][ index ], X_test [ index ], feature_names = x_feature_names , link = 'logit' ) 2.2 SHAP waterfall plot \u7011\u5e03\u5716\u80fd\u5920\u4ee5\u8996\u89ba\u65b9\u5f0f\u5448\u73fe\u55ae\u4e00\u9810\u6e2c\u7684\u89e3\u91cb\u7d50\u679c\u3002\u56e0\u6b64\u5728\u524d\u9762\u7684\u7d50\u679c\u57fa\u790e\u4e0a\uff0c\u6211\u5011\u5c0d\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u4e86\u55ae\u4e00\u9810\u6e2c\u89e3\u91cb\u3002\u7011\u5e03\u5716\u7684\u8d77\u9ede\u662f\u6a21\u578b\u8f38\u51fa\u7684\u57fa\u6e96\u503c\uff0c\u63a5\u8457\u6bcf\u4e00\u689d\u7d00\u9304\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u6a21\u578b\u9810\u6e2c\u503c\u7684\u6b63\u5411\uff08\u7d05\u8272\uff09\u6216\u8ca0\u5411\uff08\u85cd\u8272\uff09\u5f71\u97ff\u3002\u7d2f\u52a0\u8d77\u4f86\u6700\u5f8c\u518d\u901a\u904e Sigmoid \u51fd\u6578\u5c31\u662f\u5426\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u503c\u4e86\u3002 index = 0 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ 1 ][ index ], base_values = explainer . expected_value [ 1 ], data = X_test [ index ], feature_names = x_feature_names )) \u5f9e\u4ee5\u4e0b\u5716\u8868\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\uff1a 1. f(x) \u662f\u6a21\u578b\u9810\u6e2c\u7684\u5c0d\u6578\u52dd\u7b97(log odds)\uff1a2.408\u3002 2. E[f(x)] \u662f\u57fa\u6e96\u503c = 0.492\u3002 3. \u5de6\u5074\u662f\u7279\u5fb5\u540d\u7a31\u65c1\u908a\u7684\u7070\u8272\u6578\u503c\u662f\u4ee3\u8868\u8a72\u7b46\u8cc7\u6599\u7684\u8f38\u5165\u503c\u3002 4. \u5728\u7bad\u982d\u4e0a\u7684\u6578\u503c\u4ee3\u8868\u6bcf\u500b\u7279\u5fb5\u7684Shapley values\u8ca2\u737b\u503c\ud835\udf19\u3002 5. \u7531\u65bc\u9078\u64c7 \"logit\" \u9023\u7d50\u51fd\u6578\uff0c\u56e0\u6b64x\u8ef8\u7684\u55ae\u4f4d\u662flog odds\u3002 6. \u6b63\u503c\u610f\u4ee3\u8868\u8a72\u4eba\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6982\u7387\u5927\u65bc 0.5\u3002 7. \u8ca0\u503c\u610f\u4ee3\u8868\u8a72\u4eba\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6982\u7387\u5c0f\u65bc 0.5\u3002 \u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u901a\u904e\u4e00\u500b\u7a31\u70ba S \u5f62\u66f2\u7dda\uff08sigmoid \u51fd\u6578\uff09\u7684\u8f49\u63db\uff0c\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u6620\u5c04\u52300\u548c1\u4e4b\u9593\uff0c\u9019\u6a23\u9810\u6e2c\u7d50\u679c\u5c31\u8b8a\u6210\u4e86\u4e8c\u5143\u985e\u5225\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u6700\u5f8c\u7684\u8f38\u51fa\u5c31\u76f8\u7576\u65bc\uff0c\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u7279\u5fb5\u5224\u65b7\u7d50\u679c\u662fYes\u7684\u6a5f\u7387\u6709\u591a\u9ad8\u3002 [\u88dc\u5145] link \u53c3\u6578\u8a2d\u5b9a\u6642\u6a5f \u5728 SHAP \u7684 KernelExplainer \u65b9\u6cd5\u4e2d\uff0c\u53c3\u6578 link \u53ef\u4ee5\u9078\u64c7 identity \u6216 logit \u4f5c\u70ba link function(\u9023\u7d50\u51fd\u6578)\u3002\u4ee5\u4e0b\u662f\u9019\u5169\u7a2e\u9023\u7d50\u51fd\u6578\u7684\u5340\u5225\u4ee5\u53ca\u5b83\u5011\u7684\u9069\u7528\u6642\u6a5f\uff1a \"identity\" \u9023\u7d50\u51fd\u6578\uff1a \u4f7f\u7528 identity \u9023\u7d50\u51fd\u6578\u610f\u5473\u8457\u6a21\u578b\u7684\u8f38\u51fa\u76f4\u63a5\u88ab\u7576\u4f5c\u9810\u6e2c\u503c\uff0c\u4e0d\u9032\u884c\u984d\u5916\u7684\u8f49\u63db\u3002\u9019\u5728\u8ff4\u6b78\u4efb\u52d9\u4e2d\u8f03\u70ba\u5e38\u898b\uff0c\u7576\u4f60\u5e0c\u671b\u9810\u6e2c\u503c\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u662f\u7dda\u6027\u7684\u6642\u5019\uff0c\u53ef\u4ee5\u9078\u64c7\u9019\u500b\u9023\u7d50\u51fd\u6578\u3002 \"logit\" \u9023\u7d50\u51fd\u6578\uff1a \u4f7f\u7528 logit \u9023\u7d50\u51fd\u6578\u5247\u5c07\u7dda\u6027\u8f38\u51fa\u8f49\u63db\u70ba\u5c0d\u6578\u6bd4\u503c\uff08log odds\uff09\uff0c\u9019\u5728\u4e8c\u5143\u5206\u985e\u554f\u984c\u4e2d\u6bd4\u8f03\u5e38\u898b\u3002\u5c0d\u6578\u6bd4\u503c\u8868\u793a\u67d0\u500b\u4e8b\u4ef6\u767c\u751f\u7684\u5c0d\u6578\u6a5f\u7387\u8207\u4e0d\u767c\u751f\u7684\u5c0d\u6578\u6a5f\u7387\u4e4b\u6bd4\u3002\"logit\" \u9023\u7d50\u51fd\u6578\u9069\u7528\u65bc\u90a3\u4e9b\u5e0c\u671b\u6a21\u578b\u9810\u6e2c\u6a5f\u7387\u6642\uff0c\u540c\u6642\u8003\u616e\u5230\u6a5f\u7387\u503c\u7684\u8b8a\u5316\u5e45\u5ea6\u8f03\u5927\u7684\u60c5\u6cc1\uff0c\u4f8b\u5982\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\u3002 \u9078\u64c7\u9023\u7d50\u51fd\u6578\u6642\uff0c\u6211\u5011\u61c9\u8a72\u8003\u616e\u6a21\u578b\u7684\u4efb\u52d9\u985e\u578b\u4ee5\u53ca\u9810\u6e2c\u503c\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5982\u679c\u4f60\u7684\u6a21\u578b\u662f\u8ff4\u6b78\u6a21\u578b\uff0c\u4e26\u4e14\u4f60\u8a8d\u70ba\u9810\u6e2c\u503c\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u662f\u7dda\u6027\u7684\uff0c\u90a3\u9ebc\u4f7f\u7528 \"identity\" \u9023\u7d50\u51fd\u6578\u53ef\u80fd\u66f4\u9069\u5408\u3002\u5982\u679c\u4f60\u7684\u6a21\u578b\u662f\u5206\u985e\u6a21\u578b\uff0c\u4e26\u4e14\u4f60\u5e0c\u671b\u8003\u616e\u6a5f\u7387\u7684\u8b8a\u5316\uff0c\u90a3\u9ebc \"logit\" \u9023\u7d50\u51fd\u6578\u53ef\u80fd\u66f4\u5408\u9069\u3002 Reference shap.KernelExplainer GitGub/shap Pros and Cons of CheatSheet-XAI Tensorflow-\u9810\u8a13\u7df4ResNet50\u53ef\u89e3\u91cb\u6027\u5206\u6790 SHAP Part 2: Kernel SHAP Explainable AI (XAI) with SHAP -Multi-Class Classification Problem","title":"[Day 15] SHAP\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#day-15-shapshap","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u6628\u5929\u5df2\u7d93\u77ad\u89e3\u4e86 SHAP \u5957\u4ef6\u80cc\u5f8c\u7684\u6838\u5fc3\u6280\u8853\u3002SHAP \u63d0\u4f9b\u591a\u7a2e\u89e3\u91cb\u5de5\u5177\uff0c\u53ef\u61c9\u7528\u65bc\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff1a KernelExplainer\uff08Kernel SHAP\uff09\uff1a \u9069\u7528\u65bc\u4efb\u4f55\u6a21\u578b\uff0c\u5b83\u7d50\u5408\u4e86 LIME \u548c Shapley values \u65b9\u6cd5\uff0c\u900f\u904e\u4f30\u8a08 SHAP \u503c\u4f86\u63d0\u4f9b\u89e3\u91cb\u3002 TreeExplainer\uff08Tree SHAP\uff09\uff1a \u9069\u7528\u65bc tree-based \u8207 ensemble \u7cfb\u5217\u6a21\u578b\uff0c\u5305\u62ec XGBoost\u3001LightGBM\u3001CatBoost\u3001scikit-learn \u548c pyspark \u6a39\u76f8\u95dc\u7684\u6a21\u578b\uff0c\u900f\u904e Tree SHAP \u7b97\u6cd5\u8a08\u7b97 SHAP \u503c\u3002 DeepExplainer\uff08Deep SHAP\uff09\uff1a \u57fa\u65bc SHAP \u548c DeepLIFT \u7b97\u6cd5\uff0c\u5c08\u9580\u7528\u65bc\u8a08\u7b97\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684 SHAP \u503c\uff0c\u5e6b\u52a9\u89e3\u91cb\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u9810\u6e2c\u3002 GradientExplainer\uff1a \u57fa\u65bc SHAP \u548c Integrated Gradients \u7b97\u6cd5\uff0c\u7528\u65bc\u8fd1\u4f3c\u8a08\u7b97\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684 SHAP \u503c\uff0c\u5176\u901f\u5ea6\u6703\u6bd4 DeepExplainer \u6162\u3002 LinearExplainer\uff1a \u7528\u65bc\u89e3\u91cb\u7dda\u6027\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u9069\u7528\u65bc\u5177\u6709\u7368\u7acb\u7279\u5fb5\u7684\u7dda\u6027\u6a21\u578b\u3002","title":"[Day 15] SHAP\u5be6\u4f5c\uff1a\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#shap","text":"Shapley values \u70ba\u6211\u5011\u63d0\u4f9b\u4e86\u7279\u5fb5\u5728\u5be6\u4f8b\u4e0a\u7684\u908a\u969b\u8ca2\u737b\u3002\u5b83\u9069\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u4efb\u52d9\uff0c\u4e14\u53ef\u7528\u65bc\u8868\u683c\u6578\u64da\u3001\u6587\u5b57\u548c\u5716\u50cf\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u7d71\u6574 SHAP \u7684\u512a\u7f3a\u9ede\uff1a SHAP \u7684\u512a\u9ede\uff1a \u7a69\u56fa\u7684\u7406\u8ad6\u57fa\u790e\uff1a SHAP \u7e7c\u627f\u4e86\u535a\u5f08\u7406\u8ad6\u4e2d Shapley values \u7684\u7406\u8ad6\u57fa\u790e\u3002 \u6548\u7387\u63d0\u5347\uff1a SHAP \u78ba\u4fdd\u6a21\u578b\u9810\u6e2c\u503c\u548c\u5e73\u5747\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u5dee\u7570\u5728\u7279\u5fb5\u4e4b\u9593\u516c\u5e73\u5206\u914d\uff0c\u4fdd\u8b49\u89e3\u91cb\u7684\u6548\u7387\u548c\u5408\u7406\u6027\u3002 \u901a\u7528\u6027\uff1a SHAP \u662f\u4e00\u7a2e\u901a\u7528\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u80fd\u5920\u61c9\u7528\u65bc\u591a\u7a2e\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u548c\u6a21\u578b\u985e\u578b\uff0c\u4e0d\u53d7\u6a21\u578b\u9078\u64c7\u7684\u9650\u5236\u3002 \u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u89e3\u91cb\uff1a SHAP \u4e0d\u50c5\u80fd\u5920\u63d0\u4f9b\u55ae\u4e00\u5be6\u4f8b\u7684\u89e3\u91cb\uff0c\u9084\u80fd\u5920\u8a08\u7b97\u5168\u5c40\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002 SHAP \u7684\u7f3a\u9ede\uff1a \u8a08\u7b97\u6642\u9593\u8207\u7279\u5fb5\u6578\u91cf\u6210\u6b63\u6bd4\uff1a\u7576\u7279\u5fb5\u7684\u6578\u91cf\u589e\u591a\u6642\uff0c\u8a08\u7b97 SHAP \u503c\u6240\u9700\u7684\u6642\u9593\u4e5f\u6703\u96a8\u4e4b\u589e\u52a0\u3002 \u89e3\u91cb\u8907\u96dc\u6027\uff1a\u5728\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u6642\uff0cSHAP \u503c\u53ef\u80fd\u7121\u6cd5\u5b8c\u5168\u6355\u6349\u6a21\u578b\u7684\u8907\u96dc\u5167\u90e8\u95dc\u4fc2\uff0c\u5c0e\u81f4\u89e3\u91cb\u7684\u4e0d\u5b8c\u5168\u6027\u3002 \u6578\u64da\u5206\u4f48\u654f\u611f\uff1a SHAP \u503c\u7684\u8a08\u7b97\u53ef\u80fd\u5c0d\u6578\u64da\u5206\u4f48\u654f\u611f\uff0c\u4e0d\u540c\u7684\u6578\u64da\u5206\u4f48\u53ef\u80fd\u5c0e\u81f4\u4e0d\u540c\u7684\u89e3\u91cb\u7d50\u679c\u3002","title":"SHAP \u7684\u512a\u7f3a\u9ede"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#shap_1","text":"\u672c\u65e5\u7bc4\u4f8b\u4e00\u6a23\u4ee5\u4e00\u500b\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c6\u8a13\u7df4\u4e00\u500b SVM \u5206\u985e\u5668\u3002\u63a5\u9019\u900f\u904e Kernel SHAP \u5c0d\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5148\u8f09\u5165\u4eca\u5929\u7bc4\u4f8b\u7684\u8cc7\u6599\u96c6\uff0c\u8a72\u8cc7\u6599\u96c6\u53ef\u4ee5\u5f9e Kaggle \u8cc7\u6599\u79d1\u5b78\u5e73\u53f0 \u53d6\u5f97 \u3002","title":"[\u5be6\u4f5c] SHAP \u89e3\u91cb\u5206\u985e\u6a21\u578b"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#_1","text":"import pandas as pd # \u8b80\u53d6\u8cc7\u6599\u96c6 df_train = pd . read_csv ( './diabetes.csv' ) \u8b93\u6211\u5011\u4f86\u77a7\u77a7 df_train \u88e1\u9762\u7684\u5167\u5bb9\u3002\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u8a72\u8cc7\u6599\u96c6\u6709\u7e3d\u5171\u6709 768 \u7b46\u6578\u64da\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u6709\u516b\u500b\u6b04\u4f4d\u8cc7\u8a0a\uff0c\u5176\u4e2d\u5305\u542b\u6a21\u578b\u7684\u8f38\u5165\u8207\u8f38\u51fa\u3002 \u9019\u500b\u8cc7\u6599\u96c6\u4f86\u81ea\u7f8e\u570b\u570b\u5bb6\u7cd6\u5c3f\u75c5\u548c\u6d88\u5316\u548c\u814e\u81df\u75be\u75c5\u7814\u7a76\u6240\u3002\u5176\u76ee\u6a19\u662f\u6839\u64da\u8a3a\u65b7\u6e2c\u91cf\u4f86\u9810\u6e2c\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u8cc7\u6599\u96c6\u7684\u8b8a\u6578\u5982\u4e0b\uff1a Glucose\uff1a\u53e3\u670d\u8461\u8404\u7cd6\u8010\u91cf\u6e2c\u8a66\u4e2d2\u5c0f\u6642\u7684\u8840\u6f3f\u8461\u8404\u7cd6\u6fc3\u5ea6\uff0c\u7528\u65bc\u6e2c\u8a66\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u3002 BloodPressure\uff1a\u8212\u5f35\u58d3(mm Hg)\uff0c\u8840\u58d3\u4e2d\u7684\u4e00\u500b\u53c3\u6578\uff0c\u7528\u65bc\u8861\u91cf\u5fc3\u81df\u5728\u6536\u7e2e\u6642\u7684\u58d3\u529b\u3002 SkinThickness\uff1a\u4e09\u982d\u808c\u76ae\u819a\u8936\u76ba\u539a\u5ea6(mm)\uff0c\u7528\u65bc\u8861\u91cf\u76ae\u819a\u7684\u8102\u80aa\u5c64\u539a\u5ea6\u3002 Insulin\uff1a2\u5c0f\u6642\u8840\u6e05\u80f0\u5cf6\u7d20(mu U/ml)\uff0c\u7528\u65bc\u8a55\u4f30\u80f0\u5cf6\u7d20\u6c34\u5e73\uff0c\u5c0d\u7cd6\u5c3f\u75c5\u7684\u8a3a\u65b7\u975e\u5e38\u91cd\u8981\u3002 BMI\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578\uff0c\u8868\u793a\u9ad4\u91cd\u548c\u8eab\u9ad8\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8a55\u4f30\u9ad4\u91cd\u72c0\u6cc1\u3002 DiabetesPedigreeFunction\uff1a\u7cd6\u5c3f\u75c5\u5bb6\u65cf\u907a\u50b3\u51fd\u6578\uff0c\u7528\u65bc\u8861\u91cf\u60a3\u6709\u7cd6\u5c3f\u75c5\u7684\u5bb6\u65cf\u907a\u50b3\u98a8\u96aa\u3002 Age\uff1a\u75c5\u4eba\u7684\u5e74\u9f61\u3002 Outcome\uff1a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5(\u4f5c\u70ba\u6a21\u578b\u8f38\u51fa)\uff0c\u503c\u70ba0\u8868\u793a\u6c92\u6709\u7cd6\u5c3f\u75c5\uff0c\u503c\u70ba1\u8868\u793a\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002","title":"\u8f09\u5165\u8cc7\u6599\u96c6"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#_2","text":"\u63a5\u4e0b\u4f86\u5f9e\u525b\u525b\u8b80\u53d6\u9032\u4f86\u7684 df_train \u8cc7\u6599\u96c6\u4e2d\uff0c\u5c07\u6240\u6709\u7684\u8f38\u5165\u7279\u5fb5\u8cc7\u6599\u63d0\u53d6\u51fa\u4f86\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u5165 X\u3002\u540c\u6642\uff0c\u6211\u5011\u5f9e df_train \u4e2d\u53d6\u5f97 Outcome \u6b04\u4f4d\u7684\u8cc7\u6599\uff0c\u4f5c\u70ba\u6a21\u578b\u7684\u8f38\u51fa y\uff0c\u7528\u4f86\u8868\u793a\u75c5\u4eba\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5011\u4e5f\u5c07\u6240\u6709\u8f38\u5165\u7279\u5fb5\u7684\u6b04\u4f4d\u540d\u7a31\u5132\u5b58\u5230 x_feature_names \u8b8a\u6578\u4e2d\uff0c y_label_names \u5247\u662f\u5132\u5b58\u8f38\u51fa\u7684\u6a19\u7c64\u540d\u7a31\uff0c\u9019\u5169\u500b\u500b\u8b8a\u6578\u5c07\u5728\u5f8c\u7e8c SHAP \u6a21\u578b\u89e3\u91cb\u7684\u904e\u7a0b\u4e2d\u4f7f\u7528\u3002\u6700\u5f8c\u900f\u904e train_test_split \u65b9\u6cd5\u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split x_feature_names = df_train . drop ([ 'Outcome' ], axis = 1 ) . columns y_label_names = [ 'No' , 'Yes' ] X = df_train . drop ([ 'Outcome' ], axis = 1 ) . values # \u79fb\u9664y\u4e26\u53d6\u5f97\u5269\u4e0b\u6b04\u4f4d\u8cc7\u6599 y = df_train [ 'Outcome' ] . values # \u53d6\u5f97\u75c5\u4eba\u7cd6\u5c3f\u75c5\u7d50\u679c\u4f5c\u70bay X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.01 , random_state = 42 , stratify = y )","title":"\u5207\u5272\u8cc7\u6599\u96c6"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#svm","text":"\u6211\u5011\u5c07\u4f7f\u7528 SVM \u5efa\u7acb\u4e00\u500b\u5206\u985e\u6a21\u578b\uff0c\u4e26\u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\uff08X_train, y_train\uff09\u9032\u884c\u8a13\u7df4\u3002\u7531\u65bc SHAP \u89e3\u91cb\u5206\u985e\u5668\u9700\u8981\u6a21\u578b\u9810\u6e2c\u6bcf\u500b\u985e\u5225\u7684\u6a5f\u7387\uff0c\u56e0\u6b64\u5728\u8a13\u7df4 SVM \u5206\u985e\u5668\u6642\uff0c\u9700\u8981\u6dfb\u52a0\u53c3\u6578 probability=True \uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u5728\u63a8\u8ad6\u6642\u80fd\u5920\u8f38\u51fa\u9810\u6e2c\u6a5f\u7387\u3002 from sklearn import svm # \u5efa\u7acb kernel='linear' \u6a21\u578b model = svm . SVC ( kernel = 'linear' , C = 1 , probability = True ) # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b model . fit ( X_train , y_train )","title":"\u8a13\u7df4\u6a21\u578b (SVM \u5206\u985e\u5668)"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#shap_2","text":"\u63a5\u8457\u6211\u5011\u8981\u4f7f\u7528 SHAP \u5957\u4ef6\u4f86\u9032\u884c\u6a21\u578b\u7684\u89e3\u91cb\u3002\u9996\u5148\u5927\u5bb6\u53ef\u4ee5\u5728\u7d42\u7aef\u6a5f\u8f38\u5165\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd SHAP \u5957\u4ef6\uff1a pip install shap \u9996\u5148\u8f09\u5165 SHAP \u51fd\u5f0f\u5eab\u4e26\u521d\u59cb\u5316 JavaScript \u74b0\u5883\uff0c\u4ee5\u4fbf\u5728 Jupyter Notebook \u74b0\u5883\u4e2d\u80fd\u5920\u986f\u793a SHAP \u7684\u89e3\u91cb\u5716\u8868\u548c\u8996\u89ba\u5316\u7d50\u679c\u3002 import shap shap . initjs () \u9996\u5148\u5efa\u7acb\u4e00\u500b\u901a\u7528\u7684 KernelExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u5617\u8a66\u5256\u6790\u525b\u525b\u6240\u8a13\u7df4\u7684 SVM \u5206\u985e\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a Parameters: - model\uff1a\u5f85\u89e3\u91cb\u7684\u6a21\u578b\u3002\u652f\u63f4 sklearn \u6240\u5c01\u88dd\u7684\u6a21\u578b\uff0c\u8ff4\u6b78\u5668\u53ef\u4ee5\u4f7f\u7528 model.predict \uff0c\u5206\u985e\u5668\u53ef\u4ee5\u4f7f\u7528 model.predict_proba \u3002 - data\uff1a\u53ef\u63a1\u6a23\u7684\u8cc7\u6599\u96c6\uff0c\u7528\u65bc\u7522\u751f\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\u7684\u5b50\u96c6\uff0c\u6b64\u8cc7\u6599\u7528\u65bc\u8a13\u7df4 SHAP \u89e3\u91cb\u6a21\u578b\u3002 - link\uff1a\u5c07SHAP\u7c21\u55ae\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u8f49\u63db\u70ba\u5be6\u969b\u9810\u6e2c\u503c\u7684\u51fd\u6578\uff0c\u63d0\u4f9b\u5169\u7a2e\u8a2d\u5b9a\u5206\u5225\u70ba identity \u548c logit \u3002\u9810\u8a2d\u70ba identity\u3002 \u4ee5\u4e0b\u7a0b\u5f0f\u5c07\u5df2\u7d93\u8a13\u7df4\u597d\u7684\u6a21\u578b\u5f15\u5165\uff0c\u4e26\u900f\u904e\u547c\u53eb predict_proba \u65b9\u6cd5\u4f86\u8a08\u7b97\u9810\u6e2c\u6a5f\u7387\u3002\u5728 data \u53c3\u6578\u7684\u90e8\u5206\u6211\u5011\u5f9e\u8a13\u7df4\u96c6\u4e2d\u53d6\u51fa\u524d 50 \u7b46\u8cc7\u6599\uff0c\u7528\u4ee5\u4ee3\u8868\u6574\u9ad4\u7279\u5fb5\u503c\u7684\u5206\u5e03\u3002\u5728 SHAP \u4e2d\u7684 KernelExplainer \u65b9\u6cd5\u4e2d\uff0clink \u53c3\u6578\u7528\u65bc\u6307\u5b9a\u9810\u6e2c\u6a21\u578b\u7684\u9023\u7d50\u51fd\u6578\uff08link function\uff09\u3002\u9023\u7d50\u51fd\u6578\u662f\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u8f49\u63db\u70ba\u5be6\u969b\u7684\u9810\u6e2c\u503c\u7684\u51fd\u6578\u3002\u5728\u4e0d\u540c\u7684\u60c5\u6cc1\u4e0b\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u9023\u7d50\u51fd\u6578\u53ef\u4ee5\u66f4\u597d\u5730\u9069\u61c9\u6a21\u578b\u7684\u6027\u8cea\u3002\u6b64\u7bc4\u4f8b\u662f\u5206\u985e\u6a21\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u9078\u64c7 logit \uff0c\u5373\u8868\u793a\u6bcf\u500b\u8a08\u7b97\u51fa\u4f86\u7684 Shapley values \u518d\u901a\u904e sigmoid \u51fd\u6578\u5373\u4ee3\u8868\u9810\u6e2c\u6a5f\u7387\u3002 # \u4f7f\u7528 Kernel SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . KernelExplainer ( model = model . predict_proba , data = X_train [: 50 ], link = 'logit' ) KernelExplainer API \u5b98\u65b9\u6587\u6a94\u53ef\u4ee5\u5f9e\u9019\u88e1 \u53c3\u8003 \u3002 \u63a5\u8457\u6211\u5011\u8981\u4f7f\u7528 shap_values() \u65b9\u6cd5\u4f86\u4f30\u8a08 Shapley values \u4e26\u5c0d\u55ae\u7b46\u8cc7\u6599\u9032\u884c\u89e3\u91cb\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u8a2d\u5b9a\u53c3\u6578\u8207\u8aaa\u660e\uff1a Parameters: - X: \u6b32\u88ab\u89e3\u91cb\u7684\u8cc7\u6599\u3002 - nsamples: \u7528\u65bc\u69cb\u5efa\u89e3\u91cb\u6bcf\u500b\u9810\u6e2c\u7684\u4ee3\u7406\u6a21\u578b\u7684\u6a23\u672c\u6578\u91cf\u3002 \u6211\u5011\u628a\u4e4b\u524d\u5148\u5207\u5272\u51fa\u4f86\u7684\u6e2c\u8a66\u96c6\u4f5c\u70ba\u8981\u88ab\u89e3\u91cb\u7684\u76ee\u6a19 \uff38\u3002\u63a5\u8457\u8a2d\u5b9a nsamples \u70ba 100\uff0c\u9019\u610f\u5473\u8457\u6211\u5011\u5c07\u9032\u884c 100 \u6b21\u8499\u5730\u5361\u7f85\u62bd\u6a23\uff0c\u5f9e KernelExplainer \u8a2d\u5b9a\u7684 data \u4e2d\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\u4e26\u5efa\u7acb\u4e00\u500b SHAP \u7c21\u55ae\u53ef\u89e3\u91cb\u6a21\u578b\u3002\u5c0d\u65bc\u6bcf\u500b\u96a8\u6a5f\u63a1\u6a23\u7684\u6a23\u672c\uff0c\u6211\u5011\u9700\u8981\u9032\u884c\u96a8\u6a5f\u64fe\u52d5\u4e26\u9032\u884c\u6a21\u578b\u63a8\u8ad6\uff08\u7372\u53d6 f() \u7684\u9810\u6e2c y\uff09\u3002\u56e0\u6b64\u7e3d\u5171\u9700\u8981\u9032\u884c 100*50 \u6b21\u6a21\u578b\u63a8\u8ad6\uff0c\u4ee5\u751f\u6210\u9019 100 \u7b46\u8cc7\u6599\u3002\u7136\u800c SHAP \u5b98\u65b9\u5efa\u8b70\u76e1\u91cf data \u7684\u6578\u91cf\u4e0d\u8981\u8d85\u904e 100 \u7b46\u6578\u64da\uff0c\u4ee5\u907f\u514d\u904e\u9ad8\u7684\u8a08\u7b97\u6210\u672c\u3002\u539f\u59cb\u78bc\u53ef\u4ee5\u5f9e\u9019\u88e1 \u53c3\u8003 \u3002 shap_values = explainer . shap_values ( X = X_test , nsamples = 100 )","title":"SHAP \u89e3\u91cb\u6a21\u578b"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#1","text":"","title":"1. \u5168\u5c40\u89e3\u91cb\u6a21\u578b"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#11-shap-summary-plot","text":"SHAP Summary Plot \u53ef\u4ee5\u5e6b\u52a9\u4e86\u89e3\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u5e6b\u52a9\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002\u5982\u679c\u67d0\u500b\u7279\u5fb5\u7684 SHAP \u503c\u8f03\u5927\u4e14\u7a69\u5b9a\uff0c\u5247\u53ef\u4ee5\u8a8d\u70ba\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u8f03\u5927\u4e14\u8f03\u4e00\u81f4\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u7279\u5fb5\u7684 SHAP \u503c\u8f03\u5c0f\u4e14\u4e0d\u7a69\u5b9a\uff0c\u5247\u53ef\u80fd\u8a8d\u70ba\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u8f03\u5c0f\u6216\u4e0d\u4e00\u81f4\u3002 \u9ede\u7684\u984f\u8272: Feature value \u7684\u5927\u5c0f\uff0c\u8d8a\u7d05\u8d8a\u5927\u3001\u8d8a\u85cd\u8d8a\u5c0f X \u8ef8: \u8a72\u9ede\u5c0d\u65bc shap value \u7684\u5f71\u97ff\uff0c\u4e5f\u5c31\u662f\u5c0d\u9810\u6e2c\u503c\u7684\u5f71\u97ff Y \u8ef8: \u6bcf\u500b\u7279\u5fb5 \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 plot_type \u53c3\u6578\u8a2d\u7f6e bar \u756b\u4e00\u5f35\u689d\u5f62\u5716\uff0c\u4e0d\u540c\u984f\u8272\u4ee3\u8868\u4e0d\u540c\u985e\u5225(\u4ee5\u4e0b\u7bc4\u4f8b\u85cd\u8272\u4ee3\u8868\u9810\u6e2cYes\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u7d05\u8272\u70baNo)\uff0c\u6bcf\u500b\u689d\u5f62\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\uff0c\u4e26\u986f\u793a\u8a72\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5728\u9019\u500b\u5716\u8868\u4e2d\uff0c\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u5404\u500b\u985e\u5225\u7684\u5f71\u97ff\u88ab\u5806\u758a\u8d77\u4f86\uff0c\u4ee5\u5275\u5efa\u6574\u9ad4\u7684\u7279\u5fb5\u91cd\u8981\u6027\u5716\u3002 shap . summary_plot ( shap_values , X_test , plot_type = \"bar\" , class_names = y_label_names , feature_names = x_feature_names ) \u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u7279\u5b9a\u985e\u5225\u7684 summary_plot\u3002\u5047\u8a2d\u6211\u60f3\u770b\u6a21\u578b\u5c0d\u65bc\u9810\u6e2c Yes \u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528 shap_values[1] \u7684\u8cc7\u6599\u53d6\u5f97\u6bcf\u7b46\u6e2c\u8a66\u96c6\u7684 Shapley values \u9032\u884c\u5168\u5c40\u7684\u89e3\u91cb\u3002\u4ee5\u4e0b\u5716\u4f86\u8aaa\u6211\u5011\u53ef\u4ee5\u5f97\u77e5\u6a21\u578b\u5728\u5224\u65b7\u662f\u5426\u7f79\u60a3\u7cd6\u5c3f\u75c5\u60c5\u6cc1\u4e0b\u5927\u591a\u6703\u770b\u8461\u8404\u7cd6\u6fc3\u5ea6(Glucose)\uff0c\u7576\u6578\u503c\u8d8a\u5927\u8d8a\u6709\u6a5f\u6703\u7f79\u60a3\u7cd6\u5c3f\u75c5\u3002\u7b2c\u4e8c\u500b\u91cd\u8981\u7684\u7279\u5fb5\u70baBMI\uff0c\u540c\u6a23\u4e5f\u662f\u7576BMI\u8d8a\u5927\u8d8a\u6709\u6a5f\u6703\u7f79\u60a3\u7cd6\u5c3f\u75c5\u3002 shap . summary_plot ( shap_values [ 1 ], X_test , feature_names = x_feature_names )","title":"1.1 SHAP Summary Plot"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#12-shap-dependence-plot","text":"SHAP \u76f8\u4f9d\u5716\u662f\u4e00\u7a2e\u6563\u9ede\u5716\uff0c\u986f\u793a\u4e86\u55ae\u4e00\u7279\u5fb5\u5c0d\u6a21\u578b\u6240\u505a\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u7576\u6bcf\u4f4d\u8461\u8404\u7cd6\u6fc3\u5ea6\u8d8a\u9ad8\u76f8\u5c0d\u61c9\u7684 Shapley values \u9010\u6f38\u589e\u52a0\u3002 \u6bcf\u500b\u9ede\u4ee3\u8868\u8cc7\u6599\u96c6\u4e2d\u7684\u4e00\u7b46\u9810\u6e2c\u8cc7\u6599 X \u8ef8\uff1a\u8a72\u7279\u5fb5\u7684\u5be6\u969b\u503c Y \u8ef8\uff1a\u8a72\u7279\u5fb5\u7684 SHAP \u503c\uff0c\u8868\u793a\u77e5\u9053\u8a72\u7279\u5fb5\u7684\u503c\u6709\u591a\u5927\u7a0b\u5ea6\u4e0a\u6539\u8b8a\u4e86\u8a72\u6a23\u672c\u9810\u6e2c\u7684\u6a21\u578b\u8f38\u51fa\u3002 shap . dependence_plot ( 'Glucose' , shap_values [ 1 ], X_test , feature_names = x_feature_names ) SHAP \u76f8\u4f9d\u5716\u985e\u4f3c\u65bc\u90e8\u5206\u76f8\u4f9d\u5716\uff0c\u4f46\u8003\u616e\u4e86\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u5169\u500b\u8b8a\u6578\u7684\u4ea4\u4e92\u4f5c\u7528\u5f71\u97ff\uff0c\u53ef\u4ee5\u5728 interaction_index \u53c3\u6578\u4e2d\u8a2d\u5b9a\u7b2c\u4e8c\u500b\u7279\u5fb5\u540d\u7a31\uff0c\u984f\u8272\u5c0d\u61c9\u5230\u7b2c\u4e8c\u500b\u7279\u5fb5\u6578\u503c\u9ad8\u4f4e\u7684\u5f71\u97ff\u3002\u4ee5\u4e0b\u7bc4\u4f8b\u89c0\u5bdfBMI\u8207\u76ae\u8102\u539a\u5ea6\u4ea4\u4e92\u4f5c\u7528\u4e0b\u5c0d\u65bc BMI \u7684 SHAP \u503c\u5f71\u97ff\u3002 shap . dependence_plot ( 'BMI' , shap_values [ 1 ], X_test , feature_names = x_feature_names , interaction_index = 'SkinThickness' )","title":"1.2 SHAP Dependence Plot"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#2","text":"","title":"2. \u5c40\u90e8\u89e3\u91cb\u6a21\u578b"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#21-shap-force-plot","text":"\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u55ae\u4e00\u7b46\u8cc7\u6599\u5728\u6a21\u578b\u4e2d\u7684\u9810\u6e2c\u60c5\u6cc1\u3002\u5728 SHAP \u5957\u4ef6\u4e2d\uff0c\u300cForce Plot\u300d\u65b9\u6cd5\u63d0\u4f9b\u4e86\u91dd\u5c0d\u55ae\u4e00\u6a21\u578b\u9810\u6e2c\u7684\u89e3\u91cb\u6027\u5448\u73fe\u3002\u5728\u9019\u500b\u5716\u8868\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u5404\u7279\u5fb5\u5c0d\u6a21\u578b\u5c0d\u7279\u5b9a\u8f38\u5165\u503c\u7684\u9810\u6e2c\u6240\u505a\u7684\u8ca2\u737b\u3002\u9019\u7a2e\u65b9\u6cd5\u5728\u9032\u884c\u932f\u8aa4\u5206\u6790\u6216\u6df1\u5165\u7406\u89e3\u7279\u5b9a\u60c5\u6cc1\u4e0b\u7684\u8cc7\u6599\u6642\u975e\u5e38\u6709\u5e6b\u52a9\u3002 \u5f9e\u4ee5\u4e0b\u5716\u8868\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\uff1a 1. \u6a21\u578b\u5728\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2cNO\u7684\u6a5f\u7387\u67090.11\uff0cYes\u7684\u6a5f\u7387\u67090.89 2. base value: \u4ee3\u8868\u6a21\u578b\u5728\u4e0d\u770b\u4efb\u4f55\u7279\u5fb5\u72c0\u6cc1\u4e0b\u9810\u6e2c\u7684\u6578\u503c\uff0c\u5728\u9019\u500b\u4f8b\u5b50\u4e2d\uff0c\u57fa\u6e96\u503c = 0.379\u3002\u8a3b\uff1a\u6b64\u57fa\u6e96\u503c\u662f\u6709\u7d93\u904e sigmoid \u51fd\u6578\u3002 3. \u6bcf\u500b\u7279\u5fb5\u5f8c\u9762\u7684\u6578\u5b57\u662f\u8a72\u7b46\u8cc7\u6599\u7684\u7279\u5fb5\u503c\uff0c\u4f8b\u5982 Age 49 \u6b72\u3002 4. \u7d05\u8272\u4ee3\u8868\u8a72\u7279\u5fb5\u6703\u589e\u52a0\u5224\u65b7Yes\u7684\u6a5f\u7387\u3002\u800c\u85cd\u8272\u4ee3\u8868\u8a72\u7279\u5fb5\u6703\u964d\u4f4e\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u3002 5. \u7bad\u982d\u7684\u5bec\u5ea6\u8868\u793a\u8a72\u7279\u5fb5\u5c0d\u8f38\u51fa\u7684\u5f71\u97ff\u8d8a\u5927\u3002 6. Glucose\u3001DiabetesPedigreeFunction\u3001Age \u9019\u4e09\u500b\u7279\u5fb5\u660e\u986f\u662f\u5224\u65b7\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u91cd\u8981\u56e0\u5b50\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u70baYes\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { model . predict_proba ( X_test [[ index ], :])[ 0 ] } ' ) shap . force_plot ( explainer . expected_value [ 1 ], shap_values [ 1 ][ index ], X_test [ index ], feature_names = x_feature_names , link = 'logit' )","title":"2.1 SHAP Force plot"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#22-shap-waterfall-plot","text":"\u7011\u5e03\u5716\u80fd\u5920\u4ee5\u8996\u89ba\u65b9\u5f0f\u5448\u73fe\u55ae\u4e00\u9810\u6e2c\u7684\u89e3\u91cb\u7d50\u679c\u3002\u56e0\u6b64\u5728\u524d\u9762\u7684\u7d50\u679c\u57fa\u790e\u4e0a\uff0c\u6211\u5011\u5c0d\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u9032\u884c\u4e86\u55ae\u4e00\u9810\u6e2c\u89e3\u91cb\u3002\u7011\u5e03\u5716\u7684\u8d77\u9ede\u662f\u6a21\u578b\u8f38\u51fa\u7684\u57fa\u6e96\u503c\uff0c\u63a5\u8457\u6bcf\u4e00\u689d\u7d00\u9304\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u6a21\u578b\u9810\u6e2c\u503c\u7684\u6b63\u5411\uff08\u7d05\u8272\uff09\u6216\u8ca0\u5411\uff08\u85cd\u8272\uff09\u5f71\u97ff\u3002\u7d2f\u52a0\u8d77\u4f86\u6700\u5f8c\u518d\u901a\u904e Sigmoid \u51fd\u6578\u5c31\u662f\u5426\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6a5f\u7387\u503c\u4e86\u3002 index = 0 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ 1 ][ index ], base_values = explainer . expected_value [ 1 ], data = X_test [ index ], feature_names = x_feature_names )) \u5f9e\u4ee5\u4e0b\u5716\u8868\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\uff1a 1. f(x) \u662f\u6a21\u578b\u9810\u6e2c\u7684\u5c0d\u6578\u52dd\u7b97(log odds)\uff1a2.408\u3002 2. E[f(x)] \u662f\u57fa\u6e96\u503c = 0.492\u3002 3. \u5de6\u5074\u662f\u7279\u5fb5\u540d\u7a31\u65c1\u908a\u7684\u7070\u8272\u6578\u503c\u662f\u4ee3\u8868\u8a72\u7b46\u8cc7\u6599\u7684\u8f38\u5165\u503c\u3002 4. \u5728\u7bad\u982d\u4e0a\u7684\u6578\u503c\u4ee3\u8868\u6bcf\u500b\u7279\u5fb5\u7684Shapley values\u8ca2\u737b\u503c\ud835\udf19\u3002 5. \u7531\u65bc\u9078\u64c7 \"logit\" \u9023\u7d50\u51fd\u6578\uff0c\u56e0\u6b64x\u8ef8\u7684\u55ae\u4f4d\u662flog odds\u3002 6. \u6b63\u503c\u610f\u4ee3\u8868\u8a72\u4eba\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6982\u7387\u5927\u65bc 0.5\u3002 7. \u8ca0\u503c\u610f\u4ee3\u8868\u8a72\u4eba\u7f79\u60a3\u7cd6\u5c3f\u75c5\u7684\u6982\u7387\u5c0f\u65bc 0.5\u3002 \u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u901a\u904e\u4e00\u500b\u7a31\u70ba S \u5f62\u66f2\u7dda\uff08sigmoid \u51fd\u6578\uff09\u7684\u8f49\u63db\uff0c\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u6620\u5c04\u52300\u548c1\u4e4b\u9593\uff0c\u9019\u6a23\u9810\u6e2c\u7d50\u679c\u5c31\u8b8a\u6210\u4e86\u4e8c\u5143\u985e\u5225\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u6700\u5f8c\u7684\u8f38\u51fa\u5c31\u76f8\u7576\u65bc\uff0c\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u7279\u5fb5\u5224\u65b7\u7d50\u679c\u662fYes\u7684\u6a5f\u7387\u6709\u591a\u9ad8\u3002","title":"2.2 SHAP waterfall plot"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#link","text":"\u5728 SHAP \u7684 KernelExplainer \u65b9\u6cd5\u4e2d\uff0c\u53c3\u6578 link \u53ef\u4ee5\u9078\u64c7 identity \u6216 logit \u4f5c\u70ba link function(\u9023\u7d50\u51fd\u6578)\u3002\u4ee5\u4e0b\u662f\u9019\u5169\u7a2e\u9023\u7d50\u51fd\u6578\u7684\u5340\u5225\u4ee5\u53ca\u5b83\u5011\u7684\u9069\u7528\u6642\u6a5f\uff1a \"identity\" \u9023\u7d50\u51fd\u6578\uff1a \u4f7f\u7528 identity \u9023\u7d50\u51fd\u6578\u610f\u5473\u8457\u6a21\u578b\u7684\u8f38\u51fa\u76f4\u63a5\u88ab\u7576\u4f5c\u9810\u6e2c\u503c\uff0c\u4e0d\u9032\u884c\u984d\u5916\u7684\u8f49\u63db\u3002\u9019\u5728\u8ff4\u6b78\u4efb\u52d9\u4e2d\u8f03\u70ba\u5e38\u898b\uff0c\u7576\u4f60\u5e0c\u671b\u9810\u6e2c\u503c\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u662f\u7dda\u6027\u7684\u6642\u5019\uff0c\u53ef\u4ee5\u9078\u64c7\u9019\u500b\u9023\u7d50\u51fd\u6578\u3002 \"logit\" \u9023\u7d50\u51fd\u6578\uff1a \u4f7f\u7528 logit \u9023\u7d50\u51fd\u6578\u5247\u5c07\u7dda\u6027\u8f38\u51fa\u8f49\u63db\u70ba\u5c0d\u6578\u6bd4\u503c\uff08log odds\uff09\uff0c\u9019\u5728\u4e8c\u5143\u5206\u985e\u554f\u984c\u4e2d\u6bd4\u8f03\u5e38\u898b\u3002\u5c0d\u6578\u6bd4\u503c\u8868\u793a\u67d0\u500b\u4e8b\u4ef6\u767c\u751f\u7684\u5c0d\u6578\u6a5f\u7387\u8207\u4e0d\u767c\u751f\u7684\u5c0d\u6578\u6a5f\u7387\u4e4b\u6bd4\u3002\"logit\" \u9023\u7d50\u51fd\u6578\u9069\u7528\u65bc\u90a3\u4e9b\u5e0c\u671b\u6a21\u578b\u9810\u6e2c\u6a5f\u7387\u6642\uff0c\u540c\u6642\u8003\u616e\u5230\u6a5f\u7387\u503c\u7684\u8b8a\u5316\u5e45\u5ea6\u8f03\u5927\u7684\u60c5\u6cc1\uff0c\u4f8b\u5982\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\u3002 \u9078\u64c7\u9023\u7d50\u51fd\u6578\u6642\uff0c\u6211\u5011\u61c9\u8a72\u8003\u616e\u6a21\u578b\u7684\u4efb\u52d9\u985e\u578b\u4ee5\u53ca\u9810\u6e2c\u503c\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5982\u679c\u4f60\u7684\u6a21\u578b\u662f\u8ff4\u6b78\u6a21\u578b\uff0c\u4e26\u4e14\u4f60\u8a8d\u70ba\u9810\u6e2c\u503c\u8207\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u662f\u7dda\u6027\u7684\uff0c\u90a3\u9ebc\u4f7f\u7528 \"identity\" \u9023\u7d50\u51fd\u6578\u53ef\u80fd\u66f4\u9069\u5408\u3002\u5982\u679c\u4f60\u7684\u6a21\u578b\u662f\u5206\u985e\u6a21\u578b\uff0c\u4e26\u4e14\u4f60\u5e0c\u671b\u8003\u616e\u6a5f\u7387\u7684\u8b8a\u5316\uff0c\u90a3\u9ebc \"logit\" \u9023\u7d50\u51fd\u6578\u53ef\u80fd\u66f4\u5408\u9069\u3002","title":"[\u88dc\u5145] link \u53c3\u6578\u8a2d\u5b9a\u6642\u6a5f"},{"location":"15.SHAP\u5be6\u4f5c:\u5be6\u6230\u6f14\u7df4SHAP\u89e3\u91cb\u65b9\u6cd5/#reference","text":"shap.KernelExplainer GitGub/shap Pros and Cons of CheatSheet-XAI Tensorflow-\u9810\u8a13\u7df4ResNet50\u53ef\u89e3\u91cb\u6027\u5206\u6790 SHAP Part 2: Kernel SHAP Explainable AI (XAI) with SHAP -Multi-Class Classification Problem","title":"Reference"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/","text":"[Day 16] \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b\uff1f \u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff08DNN\uff09\u4ee5\u5176\u7dda\u6027\u548c\u975e\u7dda\u6027\u7684\u8907\u96dc\u8f49\u63db\u800c\u805e\u540d\uff0c\u56e0\u70ba\u5b83\u6db5\u84cb\u4e86\u8a31\u591a\u96b1\u85cf\u5c64\u3002\u56e0\u6b64\u5373\u4f7f\u7d66\u5b9a\u4e00\u500b\u8a13\u7df4\u6709\u7d20\u4e26\u80fd\u5920\u826f\u597d\u5206\u985e\u7684 DNN\uff0c\u6a21\u578b\u5167\u90e8\u7684\u63a8\u8ad6\u904e\u7a0b\u4ecd\u7136\u662f\u500b\u672a\u77e5\uff0c\u9019\u4f7f\u5f97 DNN \u4e5f\u88ab\u7a31\u70ba\u9ed1\u76d2\u6a21\u578b\u3002\u5f9e\u4eca\u5929\u958b\u59cb\u6211\u5011\u5c07\u9032\u5165\u6df1\u5ea6\u5b78\u7fd2\u7684\u4e16\u754c\uff0c\u63a5\u4e0b\u4f86\u7684\u5167\u5bb9\u7576\u4e2d\u6703\u8b1b\u89e3\u4e00\u4e9b\u71b1\u9580\u7684\u795e\u7d93\u7db2\u8def\u80cc\u5f8c\u662f\u5982\u4f55\u88ab\u89e3\u91cb\u7684\u3002 \u795e\u7d93\u7db2\u8def\u7684\u7a2e\u985e DNN (Deep Neural Network)\uff1a\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u662f\u7531\u591a\u500b\u5c64\u6b21\u7684\u795e\u7d93\u5143\u7d44\u6210\uff0c\u900f\u904e\u5c64\u8207\u5c64\u4e4b\u9593\u7684\u6b0a\u91cd\u5168\u9023\u63a5\u9032\u884c\u8a0a\u606f\u50b3\u905e\u3002DNN \u662f\u4e00\u7a2e\u901a\u7528\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7528\u65bc\u8655\u7406\u7d50\u69cb\u5316\u548c\u975e\u7d50\u69cb\u5316\u6578\u64da\uff0c\u5982\u5716\u50cf\u3001\u8a9e\u97f3\u3001\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u7b49\u3002 CNN (Convolutional Neural Network)\uff1a\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e3b\u8981\u7528\u65bc\u8655\u7406\u5716\u50cf\u548c\u8996\u89ba\u4efb\u52d9\u3002\u5b83\u4f7f\u7528\u5377\u7a4d\u5c64\u548c\u6c60\u5316\u5c64\u4f86\u81ea\u52d5\u64f7\u53d6\u548c\u5b78\u7fd2\u5716\u50cf\u4e2d\u7684\u7279\u5fb5\uff0c\u5f9e\u800c\u5be6\u73fe\u5c0d\u5716\u50cf\u7684\u9ad8\u6548\u8655\u7406\u548c\u5206\u985e\u3002 RNN (Recurrent Neural Network)\uff1a\u5faa\u74b0\u795e\u7d93\u7db2\u8def\u662f\u4e00\u7a2e\u6642\u9593\u8a18\u61b6\u6027\u7684\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff0c\u5b83\u5177\u6709\u5faa\u74b0\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u8655\u7406\u5e8f\u5217\u6578\u64da\uff0c\u4f8b\u5982\u8a9e\u97f3\u548c\u6587\u5b57\u3002 Transformer\uff1a\u5b83\u4f7f\u7528\u81ea\u6ce8\u610f\u6a5f\u5236\u4f86\u5c07\u8f38\u5165\u5e8f\u5217\u6620\u5c04\u5230\u8f38\u51fa\u5e8f\u5217\u3002\u6b64\u6a21\u578b\u5728\u6a5f\u5668\u7ffb\u8b6f\u3001\u6587\u672c\u751f\u6210\u548c\u8a9e\u8a00\u7406\u89e3\u7b49\u4efb\u52d9\u4e0a\u53d6\u5f97\u4e86\u91cd\u5927\u7a81\u7834\u3002\u4e26\u4e14\u5ee3\u6cdb\u61c9\u7528\u5230\u5176\u4ed6\u9818\u57df\uff0c\u4f8b\u5982\u97f3\u8a0a\u3001\u5716\u50cf\u7b49\u4efb\u52d9\u3002 DRL (Deep Reinforcement Learning)\uff1a\u6df1\u5ea6\u5f37\u5316\u5b78\u7fd2\u7d50\u5408\u4e86\u795e\u7d93\u7db2\u8def\u548c\u5f37\u5316\u5b78\u7fd2\uff0c\u7528\u65bc\u6559\u5c0e\u6a5f\u5668\u5b78\u7fd2\u5f9e\u74b0\u5883\u4e2d\u5b78\u7fd2\u6700\u4f73\u884c\u52d5\u3002DRL \u5728\u904a\u6232\u3001\u81ea\u4e3b\u63a7\u5236\u548c\u512a\u5316\u7b49\u9818\u57df\u4e2d\u90fd\u6709\u51fa\u8272\u7684\u8868\u73fe\u3002 GNN (Graph Neural Network)\uff1a\u5716\u795e\u7d93\u7db2\u8def\u7528\u65bc\u8655\u7406\u5716\u7d50\u69cb\u5316\u6578\u64da\uff0c\u5982\u793e\u4ea4\u7db2\u7d61\u3001\u5206\u5b50\u7d50\u69cb\u548c\u77e5\u8b58\u5716\u8b5c\u3002\u5b83\u80fd\u5920\u6355\u6349\u7bc0\u9ede\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u4e26\u5728\u5716\u4e2d\u9032\u884c\u8a0a\u606f\u50b3\u905e\u548c\u5b78\u7fd2\u3002 GAN (Generative Adversarial Network)\uff1a\u751f\u6210\u5c0d\u6297\u7db2\u8def\u662f\u4e00\u7a2e\u7279\u6b8a\u7684\u7d50\u69cb\uff0c\u7531\u751f\u6210\u5668\u548c\u5224\u5225\u5668\u7d44\u6210\uff0c\u7528\u65bc\u751f\u6210\u903c\u771f\u7684\u6578\u64da\u6a23\u672c\u3002\u751f\u6210\u5668\u548c\u5224\u5225\u5668\u76f8\u4e92\u7af6\u722d\uff0c\u4f7f\u751f\u6210\u5668\u80fd\u5920\u9010\u6f38\u751f\u6210\u8d8a\u4f86\u8d8a\u903c\u771f\u7684\u6578\u64da\uff0c\u5982\u5716\u50cf\u548c\u97f3\u8a0a\u3002 \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027 \u6211\u5011\u53ef\u4ee5\u904b\u7528\u591a\u7a2e\u65b9\u6cd5\u4f86\u89e3\u91cb\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c\uff0c\u9019\u4e9b\u65b9\u6cd5\u80fd\u5920\u5e6b\u52a9\u6211\u5011\u66f4\u6df1\u5165\u5730\u7406\u89e3\u795e\u7d93\u7db2\u8def\u7684\u904b\u884c\u65b9\u5f0f\uff0c\u4e26\u89e3\u91cb\u6a21\u578b\u9032\u884c\u63a8\u8ad6\u7684\u904e\u7a0b\u3002\u900f\u904e\u5f9e\u4ee5\u4e0b\u5e7e\u500b\u89d2\u5ea6\u51fa\u767c\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u66f4\u6df1\u5165\u5730\u63a2\u7d22\u9ed1\u7bb1\u6a21\u578b\u7684\u5167\u90e8\uff1a 1. \u7279\u5fb5\u91cd\u8981\u6027 \u6211\u5011\u53ef\u4ee5\u5f9e\u7279\u5fb5\u8ca2\u737b\u6027\u8a55\u4f30\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u5176\u4e2d\u5148\u524d\u6240\u4ecb\u7d39\u7684\u53ef\u89e3\u91cb\u5de5\u5177 LIME \u548c SHAP \u4e5f\u80fd\u62ff\u4f86\u89e3\u91cb\u5404\u7a2e\u985e\u578b\u7684\u795e\u7d93\u7db2\u8def\uff0c\u4f8b\u5982\uff1a DNN\u3001CNN\u3001RNN\u3001LSTM\u3001GRU \u7b49\u3002 LIME\uff08Local Interpretable Model-Agnostic Explanations\uff09\uff1a\u4f7f\u7528\u5c40\u90e8\u6a21\u578b\u4f86\u8fd1\u4f3c\u89e3\u91cb\u55ae\u7b46\u6a21\u578b\u7684\u9810\u6e2c\u3002 SHAP\uff08SHapley Additive exPlanations\uff09\uff1a\u57fa\u65bc\u535a\u5f08\u8ad6\u7684\u65b9\u6cd5\uff0c\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a [Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b \u5ef6\u4f38\u95b1\u8b80\uff1a [Day 14] SHAP\u7406\u8ad6\uff1a\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3 2. \u8996\u89ba\u5316 \u6211\u5011\u53ef\u4ee5\u5c07\u795e\u7d93\u7db2\u8def\u7684\u8f38\u51fa\u7d50\u679c\u8996\u89ba\u5316\uff0c\u4e26\u89c0\u5bdf\u795e\u7d93\u7db2\u8def\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u6700\u5927\u3002\u6b64\u6982\u5ff5\u6700\u5e38\u88ab\u61c9\u7528\u5728\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u4e0a\uff0c\u56e0\u70ba CNN \u901a\u5e38\u6703\u7522\u751f\u8a31\u591a\u7279\u5fb5\u5716\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u4e9b\u7279\u5fb5\u5716\u8996\u89ba\u5316\uff0c\u89c0\u5bdf CNN \u5c0d\u8f38\u5165\u5716\u50cf\u7684\u89e3\u91cb\u3002\u53e6\u5916\u8fd1\u671f\u71b1\u9580\u7684\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u90fd\u662f\u4ee5 Transformer \u70ba\u67b6\u69cb\u642d\u5efa\u51fa\u4f86\u7684\u795e\u7d93\u7db2\u8def\uff0c\u5176\u4e2d\u5167\u90e8\u6838\u5fc3\u5c31\u662f\u7531\u591a\u500b self-attention \u6240\u7d44\u6210\u3002\u56e0\u6b64\u5728\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff08Self-Attention\uff09\u4e5f\u8207\u8996\u89ba\u5316\u7d50\u5408\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u6ce8\u610f\u529b\u6a5f\u5236\u8996\u89ba\u5316\uff0c\u89c0\u5bdf\u6a21\u578b\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u6700\u5927\u3002 \u71b1\u5716\u5206\u6790: \u5c07\u7279\u5b9a\u5c64\u7684\u6fc0\u767c\u51fd\u6578\u503c\u8996\u89ba\u5316\u4e26\u7e6a\u88fd\u71b1\u529b\u5716(Activation heatmap)\uff0c\u986f\u793a\u6a21\u578b\u5728\u6bcf\u500b\u5340\u57df\u7684\u91cd\u8981\u6027\u3002\u4f8b\u5982\u4f7f\u7528 Grad-CAM \u5206\u6790\u6a21\u578b\u9810\u6e2c\u7684\u68af\u5ea6\u4f86\u8996\u89ba\u5316\u5f71\u97ff\u6a21\u578b\u6c7a\u7b56\u7684\u5716\u50cf\u5340\u57df\uff0c\u89c0\u5bdf\u6a21\u578b\u5728\u9810\u6e2c\u4e2d\u95dc\u6ce8\u7684\u91cd\u8981\u5340\u57df\u3002 \u7279\u5fb5\u8996\u89ba\u5316: \u53ef\u8996\u5316\u8f38\u5165\u5716\u50cf\u4e2d\u7279\u5b9a\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u4f8b\u5982\u7e6a\u88fd maxpooling \u5f8c\u7684\u7d50\u679c\u3002\u89c0\u5bdf\u6bcf\u5c64\u6240\u6709\u7684\u7279\u5fb5\uff0c\u4e26\u89c0\u5bdf\u5176\u5c0d\u8f38\u5165\u5716\u50cf\u7684\u5f71\u97ff\u3002 \u6ce8\u610f\u529b\u6a5f\u5236\uff1a \u6211\u5011\u53ef\u4ee5\u5c07\u7279\u5fb5\u8996\u89ba\u5316\u8207\u6ce8\u610f\u529b\u6a5f\u5236\u7d50\u5408\u5f97\u5230 Attention map\u3002\u4e26\u89c0\u5bdf\u6a21\u578b\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u5c0d\u8f38\u5165\u5716\u50cf\u3001\u81ea\u7136\u8a9e\u8a00\u6216\u8a0a\u865f\u9032\u884c\u91cd\u8981\u6027\u7a0b\u5ea6\u89e3\u91cb\u3002 3. \u5c0d\u6297\u6027\u89e3\u91cb \u5c0d\u6297\u6027\u6a23\u672c\u662f\u4e00\u7a2e\u4fee\u6539\u5f8c\u7684\u8f38\u5165\uff0c\u53ef\u4ee5\u5e72\u64fe\u6a21\u578b\u7684\u9810\u6e2c\u3002\u901a\u904e\u5206\u6790\u6a21\u578b\u5c0d\u5c0d\u6297\u6027\u6a23\u672c\u7684\u97ff\u61c9\uff0c\u53ef\u4ee5\u89c0\u5bdf\u6a21\u578b\u7684\u5f31\u9ede\u548c\u9810\u6e2c\u7d50\u679c\u7684\u4e0d\u78ba\u5b9a\u6027\u3002 \u751f\u6210\u5c0d\u6297\u7db2\u8def\uff08GANs\uff09\uff1a\u4f7f\u7528GANs\u751f\u6210\u5c0d\u6297\u6a23\u672c\uff0c\u89c0\u5bdf\u6a21\u578b\u5c0d\u4e0d\u540c\u8f38\u5165\u7684\u97ff\u61c9\u89e3\u91cb\u5176\u884c\u70ba\u3002 \u660e\u5929\u958b\u59cb\u6211\u5011\u5c31\u4f9d\u5e8f\u7684\u63a2\u7d22\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5\u3002 Reference The Transformer Blueprint: A Holistic Guide to the Transformer Neural Network Architecture","title":"[Day 16] \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b\uff1f"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#day-16","text":"\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff08DNN\uff09\u4ee5\u5176\u7dda\u6027\u548c\u975e\u7dda\u6027\u7684\u8907\u96dc\u8f49\u63db\u800c\u805e\u540d\uff0c\u56e0\u70ba\u5b83\u6db5\u84cb\u4e86\u8a31\u591a\u96b1\u85cf\u5c64\u3002\u56e0\u6b64\u5373\u4f7f\u7d66\u5b9a\u4e00\u500b\u8a13\u7df4\u6709\u7d20\u4e26\u80fd\u5920\u826f\u597d\u5206\u985e\u7684 DNN\uff0c\u6a21\u578b\u5167\u90e8\u7684\u63a8\u8ad6\u904e\u7a0b\u4ecd\u7136\u662f\u500b\u672a\u77e5\uff0c\u9019\u4f7f\u5f97 DNN \u4e5f\u88ab\u7a31\u70ba\u9ed1\u76d2\u6a21\u578b\u3002\u5f9e\u4eca\u5929\u958b\u59cb\u6211\u5011\u5c07\u9032\u5165\u6df1\u5ea6\u5b78\u7fd2\u7684\u4e16\u754c\uff0c\u63a5\u4e0b\u4f86\u7684\u5167\u5bb9\u7576\u4e2d\u6703\u8b1b\u89e3\u4e00\u4e9b\u71b1\u9580\u7684\u795e\u7d93\u7db2\u8def\u80cc\u5f8c\u662f\u5982\u4f55\u88ab\u89e3\u91cb\u7684\u3002","title":"[Day 16] \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b\uff1f"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#_1","text":"DNN (Deep Neural Network)\uff1a\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u662f\u7531\u591a\u500b\u5c64\u6b21\u7684\u795e\u7d93\u5143\u7d44\u6210\uff0c\u900f\u904e\u5c64\u8207\u5c64\u4e4b\u9593\u7684\u6b0a\u91cd\u5168\u9023\u63a5\u9032\u884c\u8a0a\u606f\u50b3\u905e\u3002DNN \u662f\u4e00\u7a2e\u901a\u7528\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7528\u65bc\u8655\u7406\u7d50\u69cb\u5316\u548c\u975e\u7d50\u69cb\u5316\u6578\u64da\uff0c\u5982\u5716\u50cf\u3001\u8a9e\u97f3\u3001\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u7b49\u3002 CNN (Convolutional Neural Network)\uff1a\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e3b\u8981\u7528\u65bc\u8655\u7406\u5716\u50cf\u548c\u8996\u89ba\u4efb\u52d9\u3002\u5b83\u4f7f\u7528\u5377\u7a4d\u5c64\u548c\u6c60\u5316\u5c64\u4f86\u81ea\u52d5\u64f7\u53d6\u548c\u5b78\u7fd2\u5716\u50cf\u4e2d\u7684\u7279\u5fb5\uff0c\u5f9e\u800c\u5be6\u73fe\u5c0d\u5716\u50cf\u7684\u9ad8\u6548\u8655\u7406\u548c\u5206\u985e\u3002 RNN (Recurrent Neural Network)\uff1a\u5faa\u74b0\u795e\u7d93\u7db2\u8def\u662f\u4e00\u7a2e\u6642\u9593\u8a18\u61b6\u6027\u7684\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff0c\u5b83\u5177\u6709\u5faa\u74b0\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u8655\u7406\u5e8f\u5217\u6578\u64da\uff0c\u4f8b\u5982\u8a9e\u97f3\u548c\u6587\u5b57\u3002 Transformer\uff1a\u5b83\u4f7f\u7528\u81ea\u6ce8\u610f\u6a5f\u5236\u4f86\u5c07\u8f38\u5165\u5e8f\u5217\u6620\u5c04\u5230\u8f38\u51fa\u5e8f\u5217\u3002\u6b64\u6a21\u578b\u5728\u6a5f\u5668\u7ffb\u8b6f\u3001\u6587\u672c\u751f\u6210\u548c\u8a9e\u8a00\u7406\u89e3\u7b49\u4efb\u52d9\u4e0a\u53d6\u5f97\u4e86\u91cd\u5927\u7a81\u7834\u3002\u4e26\u4e14\u5ee3\u6cdb\u61c9\u7528\u5230\u5176\u4ed6\u9818\u57df\uff0c\u4f8b\u5982\u97f3\u8a0a\u3001\u5716\u50cf\u7b49\u4efb\u52d9\u3002 DRL (Deep Reinforcement Learning)\uff1a\u6df1\u5ea6\u5f37\u5316\u5b78\u7fd2\u7d50\u5408\u4e86\u795e\u7d93\u7db2\u8def\u548c\u5f37\u5316\u5b78\u7fd2\uff0c\u7528\u65bc\u6559\u5c0e\u6a5f\u5668\u5b78\u7fd2\u5f9e\u74b0\u5883\u4e2d\u5b78\u7fd2\u6700\u4f73\u884c\u52d5\u3002DRL \u5728\u904a\u6232\u3001\u81ea\u4e3b\u63a7\u5236\u548c\u512a\u5316\u7b49\u9818\u57df\u4e2d\u90fd\u6709\u51fa\u8272\u7684\u8868\u73fe\u3002 GNN (Graph Neural Network)\uff1a\u5716\u795e\u7d93\u7db2\u8def\u7528\u65bc\u8655\u7406\u5716\u7d50\u69cb\u5316\u6578\u64da\uff0c\u5982\u793e\u4ea4\u7db2\u7d61\u3001\u5206\u5b50\u7d50\u69cb\u548c\u77e5\u8b58\u5716\u8b5c\u3002\u5b83\u80fd\u5920\u6355\u6349\u7bc0\u9ede\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u4e26\u5728\u5716\u4e2d\u9032\u884c\u8a0a\u606f\u50b3\u905e\u548c\u5b78\u7fd2\u3002 GAN (Generative Adversarial Network)\uff1a\u751f\u6210\u5c0d\u6297\u7db2\u8def\u662f\u4e00\u7a2e\u7279\u6b8a\u7684\u7d50\u69cb\uff0c\u7531\u751f\u6210\u5668\u548c\u5224\u5225\u5668\u7d44\u6210\uff0c\u7528\u65bc\u751f\u6210\u903c\u771f\u7684\u6578\u64da\u6a23\u672c\u3002\u751f\u6210\u5668\u548c\u5224\u5225\u5668\u76f8\u4e92\u7af6\u722d\uff0c\u4f7f\u751f\u6210\u5668\u80fd\u5920\u9010\u6f38\u751f\u6210\u8d8a\u4f86\u8d8a\u903c\u771f\u7684\u6578\u64da\uff0c\u5982\u5716\u50cf\u548c\u97f3\u8a0a\u3002","title":"\u795e\u7d93\u7db2\u8def\u7684\u7a2e\u985e"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#_2","text":"\u6211\u5011\u53ef\u4ee5\u904b\u7528\u591a\u7a2e\u65b9\u6cd5\u4f86\u89e3\u91cb\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c\uff0c\u9019\u4e9b\u65b9\u6cd5\u80fd\u5920\u5e6b\u52a9\u6211\u5011\u66f4\u6df1\u5165\u5730\u7406\u89e3\u795e\u7d93\u7db2\u8def\u7684\u904b\u884c\u65b9\u5f0f\uff0c\u4e26\u89e3\u91cb\u6a21\u578b\u9032\u884c\u63a8\u8ad6\u7684\u904e\u7a0b\u3002\u900f\u904e\u5f9e\u4ee5\u4e0b\u5e7e\u500b\u89d2\u5ea6\u51fa\u767c\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u66f4\u6df1\u5165\u5730\u63a2\u7d22\u9ed1\u7bb1\u6a21\u578b\u7684\u5167\u90e8\uff1a","title":"\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#1","text":"\u6211\u5011\u53ef\u4ee5\u5f9e\u7279\u5fb5\u8ca2\u737b\u6027\u8a55\u4f30\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u5176\u4e2d\u5148\u524d\u6240\u4ecb\u7d39\u7684\u53ef\u89e3\u91cb\u5de5\u5177 LIME \u548c SHAP \u4e5f\u80fd\u62ff\u4f86\u89e3\u91cb\u5404\u7a2e\u985e\u578b\u7684\u795e\u7d93\u7db2\u8def\uff0c\u4f8b\u5982\uff1a DNN\u3001CNN\u3001RNN\u3001LSTM\u3001GRU \u7b49\u3002 LIME\uff08Local Interpretable Model-Agnostic Explanations\uff09\uff1a\u4f7f\u7528\u5c40\u90e8\u6a21\u578b\u4f86\u8fd1\u4f3c\u89e3\u91cb\u55ae\u7b46\u6a21\u578b\u7684\u9810\u6e2c\u3002 SHAP\uff08SHapley Additive exPlanations\uff09\uff1a\u57fa\u65bc\u535a\u5f08\u8ad6\u7684\u65b9\u6cd5\uff0c\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a [Day 12] LIME\u7406\u8ad6\uff1a\u5982\u4f55\u7528\u5c40\u90e8\u7dda\u6027\u8fd1\u4f3c\u89e3\u91cb\u9ed1\u7bb1\u6a21\u578b \u5ef6\u4f38\u95b1\u8b80\uff1a [Day 14] SHAP\u7406\u8ad6\uff1a\u89e3\u6790SHAP\u89e3\u91cb\u65b9\u6cd5\u7684\u6838\u5fc3","title":"1. \u7279\u5fb5\u91cd\u8981\u6027"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#2","text":"\u6211\u5011\u53ef\u4ee5\u5c07\u795e\u7d93\u7db2\u8def\u7684\u8f38\u51fa\u7d50\u679c\u8996\u89ba\u5316\uff0c\u4e26\u89c0\u5bdf\u795e\u7d93\u7db2\u8def\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u6700\u5927\u3002\u6b64\u6982\u5ff5\u6700\u5e38\u88ab\u61c9\u7528\u5728\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u4e0a\uff0c\u56e0\u70ba CNN \u901a\u5e38\u6703\u7522\u751f\u8a31\u591a\u7279\u5fb5\u5716\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u4e9b\u7279\u5fb5\u5716\u8996\u89ba\u5316\uff0c\u89c0\u5bdf CNN \u5c0d\u8f38\u5165\u5716\u50cf\u7684\u89e3\u91cb\u3002\u53e6\u5916\u8fd1\u671f\u71b1\u9580\u7684\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u90fd\u662f\u4ee5 Transformer \u70ba\u67b6\u69cb\u642d\u5efa\u51fa\u4f86\u7684\u795e\u7d93\u7db2\u8def\uff0c\u5176\u4e2d\u5167\u90e8\u6838\u5fc3\u5c31\u662f\u7531\u591a\u500b self-attention \u6240\u7d44\u6210\u3002\u56e0\u6b64\u5728\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff08Self-Attention\uff09\u4e5f\u8207\u8996\u89ba\u5316\u7d50\u5408\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u6ce8\u610f\u529b\u6a5f\u5236\u8996\u89ba\u5316\uff0c\u89c0\u5bdf\u6a21\u578b\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u6700\u5927\u3002 \u71b1\u5716\u5206\u6790: \u5c07\u7279\u5b9a\u5c64\u7684\u6fc0\u767c\u51fd\u6578\u503c\u8996\u89ba\u5316\u4e26\u7e6a\u88fd\u71b1\u529b\u5716(Activation heatmap)\uff0c\u986f\u793a\u6a21\u578b\u5728\u6bcf\u500b\u5340\u57df\u7684\u91cd\u8981\u6027\u3002\u4f8b\u5982\u4f7f\u7528 Grad-CAM \u5206\u6790\u6a21\u578b\u9810\u6e2c\u7684\u68af\u5ea6\u4f86\u8996\u89ba\u5316\u5f71\u97ff\u6a21\u578b\u6c7a\u7b56\u7684\u5716\u50cf\u5340\u57df\uff0c\u89c0\u5bdf\u6a21\u578b\u5728\u9810\u6e2c\u4e2d\u95dc\u6ce8\u7684\u91cd\u8981\u5340\u57df\u3002 \u7279\u5fb5\u8996\u89ba\u5316: \u53ef\u8996\u5316\u8f38\u5165\u5716\u50cf\u4e2d\u7279\u5b9a\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u4f8b\u5982\u7e6a\u88fd maxpooling \u5f8c\u7684\u7d50\u679c\u3002\u89c0\u5bdf\u6bcf\u5c64\u6240\u6709\u7684\u7279\u5fb5\uff0c\u4e26\u89c0\u5bdf\u5176\u5c0d\u8f38\u5165\u5716\u50cf\u7684\u5f71\u97ff\u3002 \u6ce8\u610f\u529b\u6a5f\u5236\uff1a \u6211\u5011\u53ef\u4ee5\u5c07\u7279\u5fb5\u8996\u89ba\u5316\u8207\u6ce8\u610f\u529b\u6a5f\u5236\u7d50\u5408\u5f97\u5230 Attention map\u3002\u4e26\u89c0\u5bdf\u6a21\u578b\u5728\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u5c0d\u8f38\u5165\u5716\u50cf\u3001\u81ea\u7136\u8a9e\u8a00\u6216\u8a0a\u865f\u9032\u884c\u91cd\u8981\u6027\u7a0b\u5ea6\u89e3\u91cb\u3002","title":"2. \u8996\u89ba\u5316"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#3","text":"\u5c0d\u6297\u6027\u6a23\u672c\u662f\u4e00\u7a2e\u4fee\u6539\u5f8c\u7684\u8f38\u5165\uff0c\u53ef\u4ee5\u5e72\u64fe\u6a21\u578b\u7684\u9810\u6e2c\u3002\u901a\u904e\u5206\u6790\u6a21\u578b\u5c0d\u5c0d\u6297\u6027\u6a23\u672c\u7684\u97ff\u61c9\uff0c\u53ef\u4ee5\u89c0\u5bdf\u6a21\u578b\u7684\u5f31\u9ede\u548c\u9810\u6e2c\u7d50\u679c\u7684\u4e0d\u78ba\u5b9a\u6027\u3002 \u751f\u6210\u5c0d\u6297\u7db2\u8def\uff08GANs\uff09\uff1a\u4f7f\u7528GANs\u751f\u6210\u5c0d\u6297\u6a23\u672c\uff0c\u89c0\u5bdf\u6a21\u578b\u5c0d\u4e0d\u540c\u8f38\u5165\u7684\u97ff\u61c9\u89e3\u91cb\u5176\u884c\u70ba\u3002 \u660e\u5929\u958b\u59cb\u6211\u5011\u5c31\u4f9d\u5e8f\u7684\u63a2\u7d22\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5\u3002","title":"3. \u5c0d\u6297\u6027\u89e3\u91cb"},{"location":"16.\u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027:\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b/#reference","text":"The Transformer Blueprint: A Holistic Guide to the Transformer Neural Network Architecture","title":"Reference"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/","text":"[Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb \u7bc4\u4f8b\u7a0b\u5f0f\uff1a Feature Attribution Feature Attribution(\u7279\u5fb5\u6b78\u56e0)\u662f\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u7576\u6211\u5011\u8a13\u7df4\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7279\u5225\u662f\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0c\u9019\u4e9b\u6a21\u578b\u901a\u5e38\u662f\u9ed1\u76d2\u5b50\uff0c\u96e3\u4ee5\u7406\u89e3\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u505a\u51fa\u7279\u5b9a\u7684\u9810\u6e2c\u3002\u56e0\u6b64 \u7279\u5fb5\u6b78\u56e0 \u7684\u76ee\u6a19\u662f\u627e\u51fa\u6a21\u578b\u4e2d\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u7684\u8ca2\u737b\u6216\u5f71\u97ff\u7a0b\u5ea6\uff0c\u9019\u6709\u52a9\u65bc\u6211\u5011\u7406\u89e3\u6a21\u578b\u7684\u904b\u4f5c\u539f\u7406\uff0c\u4e26\u6aa2\u67e5\u6a21\u578b\u662f\u5426\u4f9d\u64da\u6211\u5011\u7684\u671f\u671b\u904b\u4f5c\uff0c\u4ee5\u53ca\u767c\u73fe\u53ef\u80fd\u7684\u504f\u5dee\u6216\u4e0d\u516c\u5e73\u6027\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u7279\u5fb5\u6b78\u56e0\u901a\u5e38\u6709\u4ee5\u4e0b\u5e7e\u7a2e\u5e38\u898b\u7684\u65b9\u6cd5\uff1a \u7279\u5fb5\u91cd\u8981\u6027\uff08Feature Importance\uff09\uff1a\u9019\u7a2e\u65b9\u6cd5\u8861\u91cf\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u900f\u904e LIME \u6216 SHAP \u7b49\u89e3\u91cb\u5de5\u5177\u9032\u884c\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790\u3002 SHAP\uff08SHapley Additive exPlanations\uff09\uff1aSHAP \u57fa\u65bc\u535a\u5f08\u8ad6\u7684\u6982\u5ff5\uff0c\u5b83\u8a66\u5716\u5c07\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5206\u914d\u7d66\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002Shapley values\u7d9c\u5408\u8003\u616e\u4e86\u7279\u5fb5\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u56e0\u6b64\u5728\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u6642\u5f88\u6709\u7528\u3002 LIME\uff08Local Interpretable Model-agnostic Explanations\uff09\uff1aLIME \u901a\u5e38\u7528\u65bc\u89e3\u91cb\u67d0\u7b46\u8cc7\u6599\u70ba\u4f55\u505a\u51fa\u9019\u6a23\u5224\u65b7\uff0c\u5b83\u4e3b\u8981\u751f\u6210\u4e00\u500b\u7c21\u55ae\u53ef\u89e3\u91cb\u7684\u7dda\u6027\u6a21\u578b\uff0c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002 \u57fa\u65bc\u68af\u5ea6\u65b9\u6cd5\uff08Gradient-Based Methods\uff09\uff1a\u9019\u4e9b\u65b9\u6cd5\u57fa\u65bc\u6a21\u578b\u7684\u68af\u5ea6\u8a0a\u606f\uff0c\u8a66\u5716\u627e\u51fa\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u67d0\u500b\u9810\u6e2c\u7684\u68af\u5ea6\u8ca2\u737b\u6700\u5927\u3002 \u906e\u7f69\u6216\u5c4f\u853d\u65b9\u6cd5\uff08Masking or Perturbation Methods\uff09\uff1a\u9019\u4e9b\u65b9\u6cd5\u901a\u904e\u5c0d\u8f38\u5165\u7279\u5fb5\u9032\u884c\u4fee\u6539\uff0c\u89c0\u5bdf\u6a21\u578b\u9810\u6e2c\u7684\u8b8a\u5316\uff0c\u4f86\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002\u4f8b\u5982\u53ef\u4ee5\u5c07\u67d0\u500b\u7279\u5fb5\u7684\u503c\u8a2d\u7f6e\u70ba\u96f6\uff0c\u7136\u5f8c\u89c0\u5bdf\u9810\u6e2c\u7684\u8b8a\u5316\u3002 Additive Feature Attribution Methods Additive Feature Attribution(AFA) \u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c07\u4e00\u500b\u6a21\u578b\u7684\u9810\u6e2c\u5206\u89e3\u6210\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u90e8\u5206\uff0c\u9019\u6a23\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u8a72\u65b9\u6cd5\u65e8\u5728\u7406\u89e3\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u5b83\u5011\u5047\u8a2d\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u7279\u5fb5\u7684\u9810\u6e2c\u662f\u53ef\u5206\u89e3\u7684\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u9810\u6e2c\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u6bcf\u500b\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u4e26\u4e14\u9019\u4e9b\u5f71\u97ff\u662f\u53ef\u4ee5\u76f8\u52a0\u7684\u3002\u4e00\u4e9b\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9810\u6e2c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 LIME\u3001SHAP\u3001DeepLIFT \u548c Layer-Wise Relevance Propagation\uff0c\u9019\u4e9b\u65b9\u6cd5\u90fd\u5c6c\u65bc AFA \u7684\u5bb6\u65cf\u5176\u4e2d\u4e00\u54e1\u3002AFA \u65b9\u6cd5\u7684\u57fa\u672c\u5b9a\u7fa9\u5982\u4e0b\uff1a g\u662f\u4e00\u500b\u7c21\u55ae\u7684\u53ef\u89e3\u91cb\u6a21\u578b\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u500b\u7528\u65bc\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u7684\u6a21\u578b\uff0c\u901a\u5e38\u662f\u4e00\u500b\u7dda\u6027\u6a21\u578b\u6216\u985e\u4f3c\u7684\u7c21\u55ae\u6a21\u578b\u3002 \u5f0f\u5b50\u4e2d\u7684\u6bcf\u500b\ud835\udf19i\u4ee3\u8868\u7b2ci\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u7a0b\u5ea6\u6216\u91cd\u8981\u6027\u3002\u7576\u4e00\u500b\u7279\u5fb5\u7684\ud835\udf19i\u503c\u8f03\u5927\u6642\uff0c\u610f\u5473\u8457\u9019\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u6709\u8f03\u5927\u7684\u5f71\u97ff\u3002 \ud835\udc67\u2032\u662f\u4e00\u500b\u75310\u548c1\u7d44\u6210\u7684\u4e8c\u5143\u5411\u91cf\uff0c\u5176\u4e2dM\u4ee3\u8868\u7c21\u5316\u7279\u5fb5\u7684\u6578\u91cf\u3002\u9019\u500b\u5411\u91cf\u8868\u793a\u4e86\u5728\u6a21\u578b\u4e2d\u54ea\u4e9b\u7279\u5fb5\u88ab\u8003\u616e\u5230\uff0c\u54ea\u4e9b\u6c92\u6709\u88ab\u8003\u616e\u5230\u3002\u7576\u7279\u5fb5\u5728\u5411\u91cf\u4e2d\u5c0d\u61c9\u7684\u4f4d\u7f6e\u662f1\u6642\uff0c\u8868\u793a\u9019\u500b\u7279\u5fb5\u5728\u6a21\u578b\u4e2d\u88ab\u8003\u616e\u5230\u4e86\uff1b\u7576\u5c0d\u61c9\u4f4d\u7f6e\u662f0\u6642\uff0c\u8868\u793a\u8a72\u7279\u5fb5\u672a\u88ab\u8003\u616e\u3002 \u7c21\u55ae\u4f86\u8aaa\uff0cAFA \u65b9\u6cd5\u7684\u76ee\u6a19\u662f\u901a\u904e\u4e00\u500b\u7c21\u55ae\u7684\u53ef\u89e3\u91cb\u6a21\u578b g \u4f86\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u7684\u9810\u6e2c\u3002\u5b83\u4f7f\u7528\u4e8c\u5143\u5411\u91cf \ud835\udc67\u2032 \u4f86\u8868\u793a\u54ea\u4e9b\u7279\u5fb5\u5728\u89e3\u91cb\u4e2d\u88ab\u8003\u616e\uff0c\u4e26\u4f7f\u7528 \ud835\udf19i \u4f5c\u70ba\u6b0a\u91cd\u4f86\u91cf\u5316\u6bcf\u500b\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u9019\u6a23\u7684\u65b9\u6cd5\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u662f\u5982\u4f55\u6839\u64da\u4e0d\u540c\u7684\u7279\u5fb5\u4f86\u505a\u51fa\u9810\u6e2c\u7684\uff0c\u63d0\u9ad8\u4e86\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u3002\u4e0d\u540c\u7684 AFA \u65b9\u6cd5\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u6280\u8853\u4f86\u8a08\u7b97 \ud835\udf19i \u503c\uff0c\u4f46\u5b83\u5011\u90fd\u9075\u5faa\u9019\u500b\u57fa\u672c\u6846\u67b6\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002 Deep SHAP (DeepLIFT + Shapley Values) \u4eca\u5929\u8981\u4ecb\u7d39\u5728 SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u65b9\u6cd5\uff0c\u5b83\u7d50\u5408\u4e86 DeepLIFT \u548c Shapley values \u7684\u6982\u5ff5\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4f7f\u66f4\u597d\u5730\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u9810\u6e2c\u3002 DeepLIFT (Deep Learning Important FeaTures)\uff1a\u662f\u57fa\u65bc\u53cd\u5411\u50b3\u64ad\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u900f\u904e\u6bd4\u8f03\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u8207\u53c3\u8003\u8f38\u51fa\u4e4b\u9593\u7684\u5dee\u7570\u4f86\u8a08\u7b97\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u76f8\u5c0d\u5f71\u97ff\u3002 Shapley Values\uff1a\u7528\u65bc\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5b83\u8003\u616e\u4e86\u6bcf\u500b\u7279\u5fb5\u7684\u4e0d\u540c\u6392\u5217\u7d44\u5408\uff0c\u4ee5\u78ba\u5b9a\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5ea6\u3002\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u9810\u6e2c\u80cc\u5f8c\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002 \u4eca\u5929\u7684\u7df4\u7fd2\u5c07\u4f7f\u7528 SHAP \u5957\u4ef6\u4e2d\u7684 DeepExplainer(Deep SHAP) \u65b9\u6cd5\u4f5c\u70ba\u5c55\u793a\u3002 [\u5be6\u4f5c] \u4f7f\u7528 Deep SHAP \u89e3\u91cb DNN \u6a21\u578b \u672c\u65e5\u7bc4\u4f8b\u5c07\u900f\u904e TensorFlow \u5be6\u4f5c DNN \u6a21\u578b\uff0c\u4e26\u4f7f\u7528 sklearn \u7684\u8cc7\u6599\u96c6 fetch_california_housing \u4f86\u9810\u6e2c\u52a0\u5dde\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 8 \u500b\u7279\u5fb5\uff0c\u5206\u5225\u662f\uff1a MedInc\uff1a\u8a72\u5340\u57df\u5167\u5bb6\u5ead\u6536\u5165\u7684\u4e2d\u4f4d\u6578 HouseAge\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9f61 AveRooms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9593\u6578 AveBedrms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u81e5\u5ba4\u6578 Population\uff1a\u8a72\u5340\u57df\u5167\u4eba\u53e3\u6578 AveOccup\uff1a\u8a72\u5340\u57df\u5167\u5e73\u5747\u6bcf\u500b\u623f\u5c4b\u7684\u5c45\u4f4f\u4eba\u6578 Latitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7def\u5ea6 Longitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7d93\u5ea6 \u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 20640 \u7b46\u6a23\u672c\uff0c\u6bcf\u500b\u6a23\u672c\u90fd\u6709\u4e0a\u8ff0 8 \u500b\u7279\u5fb5\u4ee5\u53ca\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u4f5c\u70ba\u76ee\u6a19\u8b8a\u6578\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () x_feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.001 , random_state = 42 ) \u5efa\u7acb\u8207\u8a13\u7df4\u795e\u7d93\u7db2\u8def \u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u4f7f\u7528 Tensorflow2.0 Functional API \u642d\u5efa\u795e\u7d93\u7db2\u8def\u3002\u6b64\u6a21\u578b\u63a5\u53d7\u4e00\u500b\u8f38\u5165\uff0c\u7136\u5f8c\u901a\u904e\u4e00\u7cfb\u5217\u795e\u7d93\u7db2\u8def\u5c64\u9032\u884c\u8655\u904b\u7b97\uff0c\u6700\u5f8c\u8f38\u51fa\u4e00\u500b\u55ae\u4e00\u7684\u6578\u503c\u5373\u70ba\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u6a21\u578b\u7684\u5c64\u6b21\u7d50\u69cb\u5305\u62ec\uff1a\u4e00\u500b\u6b63\u898f\u5316\u5c64\uff08Normalization\uff09\u7528\u65bc\u5c0d\u8f38\u5165\u9032\u884c\u6b63\u898f\u5316\uff0c\u4e09\u500b\u5168\u9023\u63a5\u5c64\uff08Dense\uff09\u7528\u65bc\u63d0\u53d6\u7279\u5fb5\u548c\u5b78\u7fd2\u6a21\u578b\u7684\u6620\u5c04\uff0c\u6700\u5f8c\u4e00\u500b\u5168\u9023\u63a5\u5c64\u8f38\u51fa\u55ae\u4e00\u503c\uff0c\u4e26\u4f7f\u7528 ReLU \u6fc0\u767c\u51fd\u6578\u9054\u5230\u975e\u7dda\u6027\u8f49\u63db\u3002 import tensorflow as tf from tensorflow.keras import layers from tensorflow.keras.models import Model def build_model (): # \u8cc7\u6599\u6b63\u898f\u5316 model_input = layers . Input ( shape = X . shape [ - 1 ]) norm_layer = tf . keras . layers . Normalization ( axis = 1 ) norm_layer . adapt ( X_train ) x = norm_layer ( model_input ) # \u7b2c\u4e00\u5c64\u96b1\u85cf\u5c64 x = layers . Dense ( 32 , activation = 'relu' )( x ) # \u7b2c\u4e8c\u5c64\u96b1\u85cf\u5c64 x = layers . Dense ( 64 , activation = 'relu' )( x ) # \u8f38\u51fa\u5c64 model_output = layers . Dense ( 1 , activation = 'relu' )( x ) return Model ( model_input , model_output ) \u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528\u4e4b\u524d\u5b9a\u7fa9\u7684 build_model() \u51fd\u6578\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u795e\u7d93\u7db2\u7d61\u6a21\u578b\uff0c\u4e26\u5c07\u9019\u500b\u6a21\u578b\u5b58\u5132\u5728 model \u8b8a\u6578\u4e2d\u3002\u6700\u5f8c\u4f7f\u7528 model.summary() \u5370\u51fa\u6a21\u578b\u7684\u6458\u8981\u8a0a\u606f\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7d50\u69cb\u3001\u6bcf\u4e00\u5c64\u7684\u53c3\u6578\u6578\u91cf\u7b49\u3002 tf . keras . backend . clear_session () model = build_model () model . summary () \u6a21\u578b\u6e96\u5099\u5c31\u7dd2\u5f8c\u5373\u53ef\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u3002\u9019\u88e1\u4f7f\u7528 Adam \u512a\u5316\u5668\u8a2d\u5b9a\u5b78\u7fd2\u7387\u70ba 0.001\uff0c\u4e26\u4f7f\u7528\u5747\u65b9\u8aa4\u5dee\uff08MSE\uff09\u4f5c\u70ba\u640d\u5931\u51fd\u6578\u3002\u63a5\u4e0b\u4f86\u8a2d\u5b9a\u6279\u6b21\u5927\u5c0f\u70ba 64\uff0c\u8a13\u7df4\u8fed\u4ee3\u6b21\u6578\u70ba 50 \u6b21\u3002\u6700\u5f8c\u4f7f\u7528\u8a13\u7df4\u6578\u64da X_train \u548c y_train \u4f86\u8a13\u7df4\u6a21\u578b\u3002 from tensorflow.keras.optimizers import Adam # \u7de8\u8b6f\u6a21\u578b optim = Adam ( learning_rate = 0.001 ) model . compile ( loss = 'mse' , optimizer = optim ) batch_size = 64 epochs = 50 # \u8a13\u7df4\u6a21\u578b history = model . fit ( X_train , y_train , batch_size = batch_size , epochs = epochs , verbose = 1 , shuffle = True , validation_split = 0.1 ) Deep SHAP \u89e3\u91cb\u6a21\u578b \u4ee5\u4e0b\u5efa\u7acb\u4e00\u500b DeepExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u6307\u5b9a\u4e86\u8981\u89e3\u91cb\u7684\u6a21\u578b\uff08model\uff09\u548c\u8a13\u7df4\u6578\u64da\uff08X_train\uff09\u3002\u7136\u5f8c\u900f\u904e Deep SHAP \u4f86\u4f30\u8a08 Shapley values\uff0c\u4e26\u5c07\u5176\u5b58\u5132\u5728 shap_values \u8b8a\u6578\u4e2d\u3002 import shap shap . initjs () # \u4f7f\u7528 Deep SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . DeepExplainer ( model = model , data = X_train ) # \u4f30\u8a08 Shapley values shap_values = explainer . shap_values ( X_test ) SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u900f\u904e SHAP Summary Plot \u9032\u884c\u6a21\u578b\u7684\u5168\u5c40\u89e3\u91cb\uff0c\u8a72\u5716\u8868\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u8b8a\u91cf\u5c0d\u6574\u9ad4\u5e73\u5747\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u3002\u5728\u8a72\u5716\u8868\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u7684\u5e73\u5747\u8ca2\u737b\u7a0b\u5ea6\uff0c\u6709\u52a9\u65bc\u7406\u89e3\u54ea\u4e9b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u8d77\u8457\u91cd\u8981\u4f5c\u7528\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u8f03\u5c0f\u3002\u5f9e\u5206\u6790\u7d50\u679c\u53ef\u4ee5\u767c\u73fe\u5730\u7406\u4f4d\u7f6e(\u7d93\u7def\u5ea6)\u4ee5\u53ca\u5bb6\u5ead\u6536\u5165\u548c\u6210\u54e1\u6578\u5c0d\u65bc\u9810\u6e2c\u8a72\u5730\u5340\u623f\u50f9\u662f\u6709\u986f\u8457\u7684\u5f71\u97ff\u6027\u3002 # \u7372\u5f97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c shap . summary_plot ( shap_values [ 0 ], X_test , class_names = [ 'median house value' ], feature_names = x_feature_names ) SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u7531\u65bc\u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u5207\u5272 21 \u7b46\u4f5c\u70ba\u6e2c\u8a66\u96c6\uff0c\u525b\u525b\u4e0a\u9762\u7684\u5168\u5c40\u89e3\u91cb\u662f\u91dd\u5c0d\u9019 21 \u7b46\u8cc7\u6599\u9032\u884c\u5e73\u5747\u6574\u9ad4\u6027\u89e3\u91cb\u3002\u63a5\u8457\u6211\u5011\u4e00\u6a23\u53ef\u4ee5\u91dd\u5c0d\u6bcf\u4e00\u7b46\u6578\u64da\u9032\u884c\u89e3\u91cb\u5206\u6790\u3002\u9996\u5148\u7a0b\u5f0f\u4e2d\u7684 index \u88ab\u8a2d\u5b9a\u70ba0\uff0c\u8868\u793a\u6211\u5011\u8981\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u3002\u63a5\u8457\u4f7f\u7528 force_plot \u5c0d\u9019\u7b46\u8cc7\u6599\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u5c07\u5206\u6790\u7d50\u679c\u8996\u89ba\u5316\u5448\u73fe\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u91cd\u8981\u7a0b\u5ea6 index = 0 print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { model . predict ( X_test [[ index ], :])[ 0 ] } ' ) shap . force_plot ( explainer . expected_value . numpy (), shap_values [ 0 ][ 0 ][ index ], X_test [ index ], feature_names = x_feature_names ) \u53ef\u4ee5\u8a66\u8457\u8abf\u6574 index \u6578\u503c(0~20)\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u4e0d\u540c\u8cc7\u6599\u9ede\u7684\u89e3\u91cb SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u7011\u5e03\u5716\u662f\u4e00\u7a2e\u80fd\u5920\u4ee5\u8996\u89ba\u65b9\u5f0f\u5448\u73fe\u55ae\u4e00\u9810\u6e2c\u89e3\u91cb\u7d50\u679c\u7684\u5de5\u5177\u3002\u7011\u5e03\u5716\u7684\u8d77\u9ede\u662f\u6a21\u578b\u8f38\u51fa\u7684\u57fa\u6e96\u503c E[f(z)]\uff0c\u4ee3\u8868\u6a21\u578b\u5728\u4e0d\u770b\u4efb\u4f55\u7279\u5fb5\u72c0\u6cc1\u4e0b\u9810\u6e2c\u7684\u6578\u503c\uff08\ud835\udf190\uff09\u3002\u7136\u5f8c\u6bcf\u4e00\u500b\u689d\u90fd\u8a18\u9304\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u6a21\u578b\u9810\u6e2c\u503c\u7684\u6b63\u5411\uff08\u7d05\u8272\uff09\u6216\u8ca0\u5411\uff08\u85cd\u8272\uff09\u5f71\u97ff\u3002\u5168\u90e8\u7d2f\u52a0\u8d77\u4f86\u5f97\u5230\u8f38\u51fa\u503c\uff08\u5373\u6240\u6709\u7279\u5fb5\u8ca2\u737b\ud835\udf19i\u548c\u57fa\u6e96\u503c\ud835\udf190\u7684\u7e3d\u548c\uff09\uff0c\u5373\u7b49\u540c\u65bc\u5be6\u969b\u6a21\u578b\u7684\u9810\u6e2c\u3002 index = 0 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ 0 ][ 0 ][ index ], base_values = explainer . expected_value . numpy ()[ 0 ], data = X_test [ index ], feature_names = x_feature_names )) Reference Avanti Shrikumar, et al. \" Learning Important Features Through Propagating Activation Differences .\" Arxiv, 2017. shap.DeepExplainer Interpretability of Deep Learning Models Additive Feature Attribution Methods Deep SHAP \u947d\u77f3\u7bc4\u4f8b \u7ffb\u8b6fDeep SHAP \u947d\u77f3\u7bc4\u4f8b","title":"[Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#day-17-deep-shap","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a","title":"[Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#feature-attribution","text":"Feature Attribution(\u7279\u5fb5\u6b78\u56e0)\u662f\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u7576\u6211\u5011\u8a13\u7df4\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7279\u5225\u662f\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0c\u9019\u4e9b\u6a21\u578b\u901a\u5e38\u662f\u9ed1\u76d2\u5b50\uff0c\u96e3\u4ee5\u7406\u89e3\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u505a\u51fa\u7279\u5b9a\u7684\u9810\u6e2c\u3002\u56e0\u6b64 \u7279\u5fb5\u6b78\u56e0 \u7684\u76ee\u6a19\u662f\u627e\u51fa\u6a21\u578b\u4e2d\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u7684\u8ca2\u737b\u6216\u5f71\u97ff\u7a0b\u5ea6\uff0c\u9019\u6709\u52a9\u65bc\u6211\u5011\u7406\u89e3\u6a21\u578b\u7684\u904b\u4f5c\u539f\u7406\uff0c\u4e26\u6aa2\u67e5\u6a21\u578b\u662f\u5426\u4f9d\u64da\u6211\u5011\u7684\u671f\u671b\u904b\u4f5c\uff0c\u4ee5\u53ca\u767c\u73fe\u53ef\u80fd\u7684\u504f\u5dee\u6216\u4e0d\u516c\u5e73\u6027\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u7279\u5fb5\u6b78\u56e0\u901a\u5e38\u6709\u4ee5\u4e0b\u5e7e\u7a2e\u5e38\u898b\u7684\u65b9\u6cd5\uff1a \u7279\u5fb5\u91cd\u8981\u6027\uff08Feature Importance\uff09\uff1a\u9019\u7a2e\u65b9\u6cd5\u8861\u91cf\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u900f\u904e LIME \u6216 SHAP \u7b49\u89e3\u91cb\u5de5\u5177\u9032\u884c\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790\u3002 SHAP\uff08SHapley Additive exPlanations\uff09\uff1aSHAP \u57fa\u65bc\u535a\u5f08\u8ad6\u7684\u6982\u5ff5\uff0c\u5b83\u8a66\u5716\u5c07\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5206\u914d\u7d66\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002Shapley values\u7d9c\u5408\u8003\u616e\u4e86\u7279\u5fb5\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u56e0\u6b64\u5728\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u6642\u5f88\u6709\u7528\u3002 LIME\uff08Local Interpretable Model-agnostic Explanations\uff09\uff1aLIME \u901a\u5e38\u7528\u65bc\u89e3\u91cb\u67d0\u7b46\u8cc7\u6599\u70ba\u4f55\u505a\u51fa\u9019\u6a23\u5224\u65b7\uff0c\u5b83\u4e3b\u8981\u751f\u6210\u4e00\u500b\u7c21\u55ae\u53ef\u89e3\u91cb\u7684\u7dda\u6027\u6a21\u578b\uff0c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002 \u57fa\u65bc\u68af\u5ea6\u65b9\u6cd5\uff08Gradient-Based Methods\uff09\uff1a\u9019\u4e9b\u65b9\u6cd5\u57fa\u65bc\u6a21\u578b\u7684\u68af\u5ea6\u8a0a\u606f\uff0c\u8a66\u5716\u627e\u51fa\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u67d0\u500b\u9810\u6e2c\u7684\u68af\u5ea6\u8ca2\u737b\u6700\u5927\u3002 \u906e\u7f69\u6216\u5c4f\u853d\u65b9\u6cd5\uff08Masking or Perturbation Methods\uff09\uff1a\u9019\u4e9b\u65b9\u6cd5\u901a\u904e\u5c0d\u8f38\u5165\u7279\u5fb5\u9032\u884c\u4fee\u6539\uff0c\u89c0\u5bdf\u6a21\u578b\u9810\u6e2c\u7684\u8b8a\u5316\uff0c\u4f86\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002\u4f8b\u5982\u53ef\u4ee5\u5c07\u67d0\u500b\u7279\u5fb5\u7684\u503c\u8a2d\u7f6e\u70ba\u96f6\uff0c\u7136\u5f8c\u89c0\u5bdf\u9810\u6e2c\u7684\u8b8a\u5316\u3002","title":"Feature Attribution"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#additive-feature-attribution-methods","text":"Additive Feature Attribution(AFA) \u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c07\u4e00\u500b\u6a21\u578b\u7684\u9810\u6e2c\u5206\u89e3\u6210\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u90e8\u5206\uff0c\u9019\u6a23\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u8a72\u65b9\u6cd5\u65e8\u5728\u7406\u89e3\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u5b83\u5011\u5047\u8a2d\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u7279\u5fb5\u7684\u9810\u6e2c\u662f\u53ef\u5206\u89e3\u7684\uff0c\u56e0\u6b64\u6a21\u578b\u7684\u9810\u6e2c\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u6bcf\u500b\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u4e26\u4e14\u9019\u4e9b\u5f71\u97ff\u662f\u53ef\u4ee5\u76f8\u52a0\u7684\u3002\u4e00\u4e9b\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9810\u6e2c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 LIME\u3001SHAP\u3001DeepLIFT \u548c Layer-Wise Relevance Propagation\uff0c\u9019\u4e9b\u65b9\u6cd5\u90fd\u5c6c\u65bc AFA \u7684\u5bb6\u65cf\u5176\u4e2d\u4e00\u54e1\u3002AFA \u65b9\u6cd5\u7684\u57fa\u672c\u5b9a\u7fa9\u5982\u4e0b\uff1a g\u662f\u4e00\u500b\u7c21\u55ae\u7684\u53ef\u89e3\u91cb\u6a21\u578b\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u500b\u7528\u65bc\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u7684\u6a21\u578b\uff0c\u901a\u5e38\u662f\u4e00\u500b\u7dda\u6027\u6a21\u578b\u6216\u985e\u4f3c\u7684\u7c21\u55ae\u6a21\u578b\u3002 \u5f0f\u5b50\u4e2d\u7684\u6bcf\u500b\ud835\udf19i\u4ee3\u8868\u7b2ci\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u7a0b\u5ea6\u6216\u91cd\u8981\u6027\u3002\u7576\u4e00\u500b\u7279\u5fb5\u7684\ud835\udf19i\u503c\u8f03\u5927\u6642\uff0c\u610f\u5473\u8457\u9019\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u6709\u8f03\u5927\u7684\u5f71\u97ff\u3002 \ud835\udc67\u2032\u662f\u4e00\u500b\u75310\u548c1\u7d44\u6210\u7684\u4e8c\u5143\u5411\u91cf\uff0c\u5176\u4e2dM\u4ee3\u8868\u7c21\u5316\u7279\u5fb5\u7684\u6578\u91cf\u3002\u9019\u500b\u5411\u91cf\u8868\u793a\u4e86\u5728\u6a21\u578b\u4e2d\u54ea\u4e9b\u7279\u5fb5\u88ab\u8003\u616e\u5230\uff0c\u54ea\u4e9b\u6c92\u6709\u88ab\u8003\u616e\u5230\u3002\u7576\u7279\u5fb5\u5728\u5411\u91cf\u4e2d\u5c0d\u61c9\u7684\u4f4d\u7f6e\u662f1\u6642\uff0c\u8868\u793a\u9019\u500b\u7279\u5fb5\u5728\u6a21\u578b\u4e2d\u88ab\u8003\u616e\u5230\u4e86\uff1b\u7576\u5c0d\u61c9\u4f4d\u7f6e\u662f0\u6642\uff0c\u8868\u793a\u8a72\u7279\u5fb5\u672a\u88ab\u8003\u616e\u3002 \u7c21\u55ae\u4f86\u8aaa\uff0cAFA \u65b9\u6cd5\u7684\u76ee\u6a19\u662f\u901a\u904e\u4e00\u500b\u7c21\u55ae\u7684\u53ef\u89e3\u91cb\u6a21\u578b g \u4f86\u89e3\u91cb\u8907\u96dc\u6a21\u578b\u7684\u9810\u6e2c\u3002\u5b83\u4f7f\u7528\u4e8c\u5143\u5411\u91cf \ud835\udc67\u2032 \u4f86\u8868\u793a\u54ea\u4e9b\u7279\u5fb5\u5728\u89e3\u91cb\u4e2d\u88ab\u8003\u616e\uff0c\u4e26\u4f7f\u7528 \ud835\udf19i \u4f5c\u70ba\u6b0a\u91cd\u4f86\u91cf\u5316\u6bcf\u500b\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u9019\u6a23\u7684\u65b9\u6cd5\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u662f\u5982\u4f55\u6839\u64da\u4e0d\u540c\u7684\u7279\u5fb5\u4f86\u505a\u51fa\u9810\u6e2c\u7684\uff0c\u63d0\u9ad8\u4e86\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u3002\u4e0d\u540c\u7684 AFA \u65b9\u6cd5\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u6280\u8853\u4f86\u8a08\u7b97 \ud835\udf19i \u503c\uff0c\u4f46\u5b83\u5011\u90fd\u9075\u5faa\u9019\u500b\u57fa\u672c\u6846\u67b6\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002","title":"Additive Feature Attribution Methods"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#deep-shap-deeplift-shapley-values","text":"\u4eca\u5929\u8981\u4ecb\u7d39\u5728 SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u65b9\u6cd5\uff0c\u5b83\u7d50\u5408\u4e86 DeepLIFT \u548c Shapley values \u7684\u6982\u5ff5\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4f7f\u66f4\u597d\u5730\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u9810\u6e2c\u3002 DeepLIFT (Deep Learning Important FeaTures)\uff1a\u662f\u57fa\u65bc\u53cd\u5411\u50b3\u64ad\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u900f\u904e\u6bd4\u8f03\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u8207\u53c3\u8003\u8f38\u51fa\u4e4b\u9593\u7684\u5dee\u7570\u4f86\u8a08\u7b97\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\u5c0d\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u76f8\u5c0d\u5f71\u97ff\u3002 Shapley Values\uff1a\u7528\u65bc\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5b83\u8003\u616e\u4e86\u6bcf\u500b\u7279\u5fb5\u7684\u4e0d\u540c\u6392\u5217\u7d44\u5408\uff0c\u4ee5\u78ba\u5b9a\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5ea6\u3002\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u9810\u6e2c\u80cc\u5f8c\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002 \u4eca\u5929\u7684\u7df4\u7fd2\u5c07\u4f7f\u7528 SHAP \u5957\u4ef6\u4e2d\u7684 DeepExplainer(Deep SHAP) \u65b9\u6cd5\u4f5c\u70ba\u5c55\u793a\u3002","title":"Deep SHAP (DeepLIFT + Shapley Values)"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#deep-shap-dnn","text":"\u672c\u65e5\u7bc4\u4f8b\u5c07\u900f\u904e TensorFlow \u5be6\u4f5c DNN \u6a21\u578b\uff0c\u4e26\u4f7f\u7528 sklearn \u7684\u8cc7\u6599\u96c6 fetch_california_housing \u4f86\u9810\u6e2c\u52a0\u5dde\u5730\u5340\u7684\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 8 \u500b\u7279\u5fb5\uff0c\u5206\u5225\u662f\uff1a MedInc\uff1a\u8a72\u5340\u57df\u5167\u5bb6\u5ead\u6536\u5165\u7684\u4e2d\u4f4d\u6578 HouseAge\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9f61 AveRooms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u623f\u9593\u6578 AveBedrms\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u7684\u5e73\u5747\u81e5\u5ba4\u6578 Population\uff1a\u8a72\u5340\u57df\u5167\u4eba\u53e3\u6578 AveOccup\uff1a\u8a72\u5340\u57df\u5167\u5e73\u5747\u6bcf\u500b\u623f\u5c4b\u7684\u5c45\u4f4f\u4eba\u6578 Latitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7def\u5ea6 Longitude\uff1a\u8a72\u5340\u57df\u5167\u623f\u5c4b\u6240\u5728\u7d93\u5ea6 \u9019\u500b\u8cc7\u6599\u96c6\u5305\u542b\u4e86 20640 \u7b46\u6a23\u672c\uff0c\u6bcf\u500b\u6a23\u672c\u90fd\u6709\u4e0a\u8ff0 8 \u500b\u7279\u5fb5\u4ee5\u53ca\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u4f5c\u70ba\u76ee\u6a19\u8b8a\u6578\u3002 from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u52a0\u5dde\u5730\u5340\u623f\u5c4b\u50f9\u683c\u9810\u6e2c\u8cc7\u6599\u96c6 data = fetch_california_housing () x_feature_names = np . array ( data . feature_names ) X , y = data . data , data . target # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.001 , random_state = 42 )","title":"[\u5be6\u4f5c] \u4f7f\u7528 Deep SHAP \u89e3\u91cb DNN \u6a21\u578b"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#_1","text":"\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u4f7f\u7528 Tensorflow2.0 Functional API \u642d\u5efa\u795e\u7d93\u7db2\u8def\u3002\u6b64\u6a21\u578b\u63a5\u53d7\u4e00\u500b\u8f38\u5165\uff0c\u7136\u5f8c\u901a\u904e\u4e00\u7cfb\u5217\u795e\u7d93\u7db2\u8def\u5c64\u9032\u884c\u8655\u904b\u7b97\uff0c\u6700\u5f8c\u8f38\u51fa\u4e00\u500b\u55ae\u4e00\u7684\u6578\u503c\u5373\u70ba\u623f\u5c4b\u50f9\u683c\u4e2d\u4f4d\u6578\u3002\u6a21\u578b\u7684\u5c64\u6b21\u7d50\u69cb\u5305\u62ec\uff1a\u4e00\u500b\u6b63\u898f\u5316\u5c64\uff08Normalization\uff09\u7528\u65bc\u5c0d\u8f38\u5165\u9032\u884c\u6b63\u898f\u5316\uff0c\u4e09\u500b\u5168\u9023\u63a5\u5c64\uff08Dense\uff09\u7528\u65bc\u63d0\u53d6\u7279\u5fb5\u548c\u5b78\u7fd2\u6a21\u578b\u7684\u6620\u5c04\uff0c\u6700\u5f8c\u4e00\u500b\u5168\u9023\u63a5\u5c64\u8f38\u51fa\u55ae\u4e00\u503c\uff0c\u4e26\u4f7f\u7528 ReLU \u6fc0\u767c\u51fd\u6578\u9054\u5230\u975e\u7dda\u6027\u8f49\u63db\u3002 import tensorflow as tf from tensorflow.keras import layers from tensorflow.keras.models import Model def build_model (): # \u8cc7\u6599\u6b63\u898f\u5316 model_input = layers . Input ( shape = X . shape [ - 1 ]) norm_layer = tf . keras . layers . Normalization ( axis = 1 ) norm_layer . adapt ( X_train ) x = norm_layer ( model_input ) # \u7b2c\u4e00\u5c64\u96b1\u85cf\u5c64 x = layers . Dense ( 32 , activation = 'relu' )( x ) # \u7b2c\u4e8c\u5c64\u96b1\u85cf\u5c64 x = layers . Dense ( 64 , activation = 'relu' )( x ) # \u8f38\u51fa\u5c64 model_output = layers . Dense ( 1 , activation = 'relu' )( x ) return Model ( model_input , model_output ) \u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528\u4e4b\u524d\u5b9a\u7fa9\u7684 build_model() \u51fd\u6578\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u795e\u7d93\u7db2\u7d61\u6a21\u578b\uff0c\u4e26\u5c07\u9019\u500b\u6a21\u578b\u5b58\u5132\u5728 model \u8b8a\u6578\u4e2d\u3002\u6700\u5f8c\u4f7f\u7528 model.summary() \u5370\u51fa\u6a21\u578b\u7684\u6458\u8981\u8a0a\u606f\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7d50\u69cb\u3001\u6bcf\u4e00\u5c64\u7684\u53c3\u6578\u6578\u91cf\u7b49\u3002 tf . keras . backend . clear_session () model = build_model () model . summary () \u6a21\u578b\u6e96\u5099\u5c31\u7dd2\u5f8c\u5373\u53ef\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u3002\u9019\u88e1\u4f7f\u7528 Adam \u512a\u5316\u5668\u8a2d\u5b9a\u5b78\u7fd2\u7387\u70ba 0.001\uff0c\u4e26\u4f7f\u7528\u5747\u65b9\u8aa4\u5dee\uff08MSE\uff09\u4f5c\u70ba\u640d\u5931\u51fd\u6578\u3002\u63a5\u4e0b\u4f86\u8a2d\u5b9a\u6279\u6b21\u5927\u5c0f\u70ba 64\uff0c\u8a13\u7df4\u8fed\u4ee3\u6b21\u6578\u70ba 50 \u6b21\u3002\u6700\u5f8c\u4f7f\u7528\u8a13\u7df4\u6578\u64da X_train \u548c y_train \u4f86\u8a13\u7df4\u6a21\u578b\u3002 from tensorflow.keras.optimizers import Adam # \u7de8\u8b6f\u6a21\u578b optim = Adam ( learning_rate = 0.001 ) model . compile ( loss = 'mse' , optimizer = optim ) batch_size = 64 epochs = 50 # \u8a13\u7df4\u6a21\u578b history = model . fit ( X_train , y_train , batch_size = batch_size , epochs = epochs , verbose = 1 , shuffle = True , validation_split = 0.1 )","title":"\u5efa\u7acb\u8207\u8a13\u7df4\u795e\u7d93\u7db2\u8def"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#deep-shap","text":"\u4ee5\u4e0b\u5efa\u7acb\u4e00\u500b DeepExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u6307\u5b9a\u4e86\u8981\u89e3\u91cb\u7684\u6a21\u578b\uff08model\uff09\u548c\u8a13\u7df4\u6578\u64da\uff08X_train\uff09\u3002\u7136\u5f8c\u900f\u904e Deep SHAP \u4f86\u4f30\u8a08 Shapley values\uff0c\u4e26\u5c07\u5176\u5b58\u5132\u5728 shap_values \u8b8a\u6578\u4e2d\u3002 import shap shap . initjs () # \u4f7f\u7528 Deep SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . DeepExplainer ( model = model , data = X_train ) # \u4f30\u8a08 Shapley values shap_values = explainer . shap_values ( X_test )","title":"Deep SHAP \u89e3\u91cb\u6a21\u578b"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#shap-summary-plot","text":"\u6211\u5011\u53ef\u4ee5\u900f\u904e SHAP Summary Plot \u9032\u884c\u6a21\u578b\u7684\u5168\u5c40\u89e3\u91cb\uff0c\u8a72\u5716\u8868\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u8b8a\u91cf\u5c0d\u6574\u9ad4\u5e73\u5747\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u3002\u5728\u8a72\u5716\u8868\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u8f38\u51fa\u7684\u5e73\u5747\u8ca2\u737b\u7a0b\u5ea6\uff0c\u6709\u52a9\u65bc\u7406\u89e3\u54ea\u4e9b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u8d77\u8457\u91cd\u8981\u4f5c\u7528\uff0c\u54ea\u4e9b\u7279\u5fb5\u5f71\u97ff\u8f03\u5c0f\u3002\u5f9e\u5206\u6790\u7d50\u679c\u53ef\u4ee5\u767c\u73fe\u5730\u7406\u4f4d\u7f6e(\u7d93\u7def\u5ea6)\u4ee5\u53ca\u5bb6\u5ead\u6536\u5165\u548c\u6210\u54e1\u6578\u5c0d\u65bc\u9810\u6e2c\u8a72\u5730\u5340\u623f\u50f9\u662f\u6709\u986f\u8457\u7684\u5f71\u97ff\u6027\u3002 # \u7372\u5f97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c shap . summary_plot ( shap_values [ 0 ], X_test , class_names = [ 'median house value' ], feature_names = x_feature_names )","title":"SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb)"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#shap-force-plot","text":"\u7531\u65bc\u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u5207\u5272 21 \u7b46\u4f5c\u70ba\u6e2c\u8a66\u96c6\uff0c\u525b\u525b\u4e0a\u9762\u7684\u5168\u5c40\u89e3\u91cb\u662f\u91dd\u5c0d\u9019 21 \u7b46\u8cc7\u6599\u9032\u884c\u5e73\u5747\u6574\u9ad4\u6027\u89e3\u91cb\u3002\u63a5\u8457\u6211\u5011\u4e00\u6a23\u53ef\u4ee5\u91dd\u5c0d\u6bcf\u4e00\u7b46\u6578\u64da\u9032\u884c\u89e3\u91cb\u5206\u6790\u3002\u9996\u5148\u7a0b\u5f0f\u4e2d\u7684 index \u88ab\u8a2d\u5b9a\u70ba0\uff0c\u8868\u793a\u6211\u5011\u8981\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u3002\u63a5\u8457\u4f7f\u7528 force_plot \u5c0d\u9019\u7b46\u8cc7\u6599\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u5c07\u5206\u6790\u7d50\u679c\u8996\u89ba\u5316\u5448\u73fe\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u91cd\u8981\u7a0b\u5ea6 index = 0 print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { model . predict ( X_test [[ index ], :])[ 0 ] } ' ) shap . force_plot ( explainer . expected_value . numpy (), shap_values [ 0 ][ 0 ][ index ], X_test [ index ], feature_names = x_feature_names ) \u53ef\u4ee5\u8a66\u8457\u8abf\u6574 index \u6578\u503c(0~20)\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u4e0d\u540c\u8cc7\u6599\u9ede\u7684\u89e3\u91cb","title":"SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#shap-waterfall-plot","text":"\u7011\u5e03\u5716\u662f\u4e00\u7a2e\u80fd\u5920\u4ee5\u8996\u89ba\u65b9\u5f0f\u5448\u73fe\u55ae\u4e00\u9810\u6e2c\u89e3\u91cb\u7d50\u679c\u7684\u5de5\u5177\u3002\u7011\u5e03\u5716\u7684\u8d77\u9ede\u662f\u6a21\u578b\u8f38\u51fa\u7684\u57fa\u6e96\u503c E[f(z)]\uff0c\u4ee3\u8868\u6a21\u578b\u5728\u4e0d\u770b\u4efb\u4f55\u7279\u5fb5\u72c0\u6cc1\u4e0b\u9810\u6e2c\u7684\u6578\u503c\uff08\ud835\udf190\uff09\u3002\u7136\u5f8c\u6bcf\u4e00\u500b\u689d\u90fd\u8a18\u9304\u4e86\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u6a21\u578b\u9810\u6e2c\u503c\u7684\u6b63\u5411\uff08\u7d05\u8272\uff09\u6216\u8ca0\u5411\uff08\u85cd\u8272\uff09\u5f71\u97ff\u3002\u5168\u90e8\u7d2f\u52a0\u8d77\u4f86\u5f97\u5230\u8f38\u51fa\u503c\uff08\u5373\u6240\u6709\u7279\u5fb5\u8ca2\u737b\ud835\udf19i\u548c\u57fa\u6e96\u503c\ud835\udf190\u7684\u7e3d\u548c\uff09\uff0c\u5373\u7b49\u540c\u65bc\u5be6\u969b\u6a21\u578b\u7684\u9810\u6e2c\u3002 index = 0 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ 0 ][ 0 ][ index ], base_values = explainer . expected_value . numpy ()[ 0 ], data = X_test [ index ], feature_names = x_feature_names ))","title":"SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"17.\u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def:\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb/#reference","text":"Avanti Shrikumar, et al. \" Learning Important Features Through Propagating Activation Differences .\" Arxiv, 2017. shap.DeepExplainer Interpretability of Deep Learning Models Additive Feature Attribution Methods Deep SHAP \u947d\u77f3\u7bc4\u4f8b \u7ffb\u8b6fDeep SHAP \u947d\u77f3\u7bc4\u4f8b","title":"Reference"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/","text":"[Day 18] CNN\uff1a\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5 \u5728\u7576\u4eca\u7684\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u4e2d\uff0c\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u5df2\u7d93\u6210\u70ba\u8a31\u591a\u96fb\u8166\u8996\u89ba\u4efb\u52d9\u7684\u9996\u9078\u6a21\u578b\uff0c\u4f8b\u5982\u5716\u50cf\u5206\u985e\u3001\u7269\u9ad4\u5075\u6e2c\u3001\u8a9e\u610f\u5206\u5272\u3001\u52d5\u4f5c\u5075\u6e2c\u7b49\uff0c\u9019\u4e9b\u91cd\u5927\u7a81\u7834\u90fd\u6b78\u529f\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u5f15\u5165\u3002\u7136\u800c\u5118\u7ba1\u5b83\u5011\u7684\u5f37\u5927\u6027\u80fd\uff0cCNN \u6a21\u578b\u540c\u6a23\u88ab\u8996\u70ba\u300c\u9ed1\u76d2\u300d\uff0c\u96e3\u4ee5\u7406\u89e3\u5176\u5167\u90e8\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u9019\u7a2e\u7f3a\u4e4f\u53ef\u89e3\u91cb\u6027\u53ef\u80fd\u9650\u5236\u4e86\u6211\u5011\u5c0d\u6a21\u578b\u7684\u4fe1\u4efb\u5ea6\uff0c\u7279\u5225\u662f\u5728\u9700\u8981\u9ad8\u5ea6\u53ef\u89e3\u91cb\u6027\u548c\u900f\u660e\u6027\u7684\u61c9\u7528\u5834\u666f\u4e2d\uff0c\u5982\u91ab\u5b78\u8a3a\u65b7\u548c\u81ea\u52d5\u99d5\u99db\u7cfb\u7d71\uff0c\u9019\u4e9b\u61c9\u7528\u66f4\u9700\u8981\u501f\u52a9 XAI \u6280\u8853\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002 CNN \u7684\u512a\u9ede CNN \u7684\u512a\u52e2\u5728\u65bc\u5176\u80fd\u5920\u5728\u4e0d\u540c\u7684\u5c64\u6b21\u4e0a\u5b78\u7fd2\u7279\u5fb5\u3002\u8f03\u6dfa\u7684\u5377\u7a4d\u5c64\u5177\u6709\u8f03\u5c0f\u7684\u611f\u77e5\u57df\uff0c\u56e0\u6b64\u5b83\u5011\u80fd\u5920\u6355\u6349\u5230\u8f03\u5c40\u90e8\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u5f71\u50cf\u4e2d\u7684\u7d30\u5fae\u7d0b\u7406\u6216\u5340\u57df\u6027\u7279\u5fb5\u3002\u800c\u8f03\u6df1\u7684\u5377\u7a4d\u5c64\u5247\u5177\u6709\u66f4\u5927\u7684\u611f\u77e5\u57df\uff0c\u9019\u4f7f\u5f97\u5b83\u5011\u80fd\u5920\u5b78\u7fd2\u5230\u66f4\u52a0\u62bd\u8c61\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u7269\u9ad4\u7684\u6574\u9ad4\u5f62\u72c0\u3001\u7d50\u69cb\u6216\u9ad8\u5c64\u6b21\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u9019\u7a2e\u591a\u5c64\u6b21\u7684\u7279\u5fb5\u5b78\u7fd2\u4f7f\u5f97CNN\u80fd\u5920\u5728\u8655\u7406\u5404\u7a2e\u8996\u89ba\u4efb\u52d9\u6642\u8868\u73fe\u51fa\u8272\u3002CNN \u5177\u6709\u4ee5\u4e0b\u5e7e\u9ede\u7279\u6027\uff1a Local connectivity (\u7d50\u5408\u5f71\u50cf\u7279\u6027) Weight sharing (\u5171\u7528\u5b78\u7fd2\u540c\u4e00\u7d44\u53c3\u6578) Subsampling (\u6c60\u5316\u904b\u7b97) 1. Local connectivity (\u7d50\u5408\u5f71\u50cf\u7279\u6027) CNN \u7684\u7b2c\u4e00\u500b\u512a\u9ede\u5728\u65bc\u5b83\u80fd\u5920\u7d50\u5408\u5f71\u50cf\u7279\u6027\uff0c\u4e26\u63a1\u7528\u5340\u57df\u76f8\u4f3c\u6027\u4ee5\u53ca\u5e73\u6ed1\u8b8a\u5316\u7684\u7279\u6027\u65bc\u6a21\u578b\u67b6\u69cb\u4e2d\u3002\u9019\u610f\u5473\u8457 CNN \u80fd\u5920\u6355\u6349\u5230\u5f71\u50cf\u4e2d\u5c40\u90e8\u5340\u57df\u7684\u7279\u5fb5\uff0c\u4e26\u5c07\u5b83\u5011\u7d50\u5408\u8d77\u4f86\uff0c\u4ee5\u8b58\u5225\u7269\u9ad4\u3001\u6a21\u5f0f\u6216\u7d0b\u7406\u7b49\u3002 2. Weight sharing (\u5171\u7528\u5b78\u7fd2\u540c\u4e00\u7d44\u53c3\u6578) \u7b2c\u4e8c\u500b\u512a\u9ede\u6d89\u53ca\u5230 CNN \u7684\u53c3\u6578\u5171\u4eab\u6a5f\u5236\u3002\u5728 CNN \u4e2d\uff0c\u540c\u4e00\u7d44\u904e\u6ffe\u5668\uff08filter\uff09\u53ef\u4ee5\u5728\u6574\u500b\u5f71\u50cf\u4e0a\u6ed1\u52d5\u4ee5\u641c\u7d22\u76f8\u540c\u7684\u6a21\u5f0f\u6216\u7279\u5fb5\u3002\u9019\u7a2e\u5171\u4eab\u6b0a\u91cd\u7684\u65b9\u5f0f\u5927\u5927\u6e1b\u5c11\u4e86\u9700\u8981\u8a13\u7df4\u7684\u53c3\u6578\u6578\u91cf\uff0c\u4f7f\u5f97\u6a21\u578b\u66f4\u52a0\u7dca\u6e4a\u4e14\u8a08\u7b97\u6548\u7387\u66f4\u9ad8\u3002 3. Subsampling (\u6c60\u5316\u904b\u7b97) \u7b2c\u4e09\u500b\u512a\u9ede\u662f\u5b83\u4f7f\u7528\u7684\u9ad8\u6548\u964d\u7dad\u65b9\u6cd5\u3002\u900f\u904e subsampling\uff08\u4f8b\u5982\u6c60\u5316\u5c64\uff09\uff0cCNN \u53ef\u4ee5\u5c07\u9ad8\u89e3\u6790\u5ea6\u7684\u5f71\u50cf\u8f49\u63db\u70ba\u8f03\u5c0f\u7684\u7248\u672c\uff0c\u540c\u6642\u4fdd\u7559\u4e86\u95dc\u9375\u8a0a\u606f\u3002\u9019\u6a23\u7684\u64cd\u4f5c\u6e1b\u5c11\u4e86\u9700\u8981\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u53c3\u6578\u6578\u91cf\uff0c\u540c\u6642\u4e0d\u6703\u5f71\u97ff\u6a21\u578b\u7684\u6027\u80fd\u3002 \u6211\u5011\u90fd\u77e5\u9053CNN\u5177\u6709\u4e0a\u8ff0\u5e7e\u500b\u7279\u9ede\uff0c\u4f46\u8981\u5982\u4f55\u85c9\u7531\u9019\u4e9b\u512a\u9ede\u4f86\u89e3\u91cb\u5167\u90e8\u7684\u904b\u4f5c\u5c31\u662fExplainable CNN\u7684\u8ab2\u984c\uff01 Explainable CNN Explainable CNN\uff08\u53ef\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff09\u5c31\u662f\u8a66\u5716\u7406\u89e3 CNN \u662f\u5982\u4f55\u505a\u51fa\u5224\u65b7\u7684\u3002\u5728\u5716\u50cf\u5206\u985e\u548c\u7269\u4ef6\u8fa8\u8b58\u4efb\u52d9\u4e2d\uff0cExplainable CNN \u7684\u76ee\u6a19\u662f\u63a2\u7d22 CNN \u6a21\u578b\u5c0d\u5716\u50cf\u7684\u95dc\u6ce8\u9ede\u662f\u5426\u7b26\u5408\u4eba\u985e\u7684\u76f4\u89ba\u5224\u65b7\uff0c\u4e26\u900f\u904e\u89e3\u91cb\u6027\u6280\u8853\u5e6b\u52a9\u6539\u9032\u6a21\u578b\u7684\u504f\u898b\u548c\u6578\u64da\u504f\u898b\uff0c\u9032\u800c\u8a13\u7df4\u51fa\u66f4\u512a\u79c0\u7684\u6a21\u578b\u3002\u85c9\u7531\u89e3\u91cb\u6027\u6280\u8853\uff0cExplainable CNN \u8a66\u5716\u627e\u51fa\u5f71\u97ff\u6a21\u578b\u6700\u7d42\u5224\u65b7\u7684\u95dc\u9375\u90e8\u5206\uff0c\u5373\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u5340\u57df\u6216\u7279\u5fb5\u3002\u4eba\u985e\u53ef\u4ee5\u901a\u904e\u9019\u4e9b\u95dc\u9375\u90e8\u5206\u7684\u6a23\u5f0f\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\uff0c\u9032\u800c\u5e6b\u52a9\u505a\u51fa\u66f4\u660e\u667a\u7684\u6c7a\u7b56\u3002 \u5047\u8a2d\u6211\u5011\u8a13\u7df4\u4e86\u4e00\u500b CNN \u6a21\u578b\u4f86\u8fa8\u8b58\u5716\u50cf\u4e2d\u7684\u52d5\u7269\uff0c\u4e26\u4e14\u6a21\u578b\u5c0d\u65bc\u72d7\u7684\u5224\u65b7\u8868\u73fe\u975e\u5e38\u6e96\u78ba\u3002\u6211\u5011\u5e0c\u671b\u4e86\u89e3\u6a21\u578b\u662f\u5982\u4f55\u9032\u884c\u9019\u4e9b\u5224\u65b7\u7684\u3002\u900f\u904e Explainable CNN \u6211\u5011\u53ef\u4ee5\u627e\u5230\u6a21\u578b\u5c0d\u65bc\u5224\u65b7\u72d7\u7684\u95dc\u9375\u5340\u57df\uff0c\u4f8b\u5982\u8033\u6735\u3001\u773c\u775b\u548c\u9f3b\u5b50\u7b49\u90e8\u4f4d\u3002\u9019\u6a23\u7684\u89e3\u91cb\u53ef\u4ee5\u8b93\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4e26\u6aa2\u8996\u6a21\u578b\u662f\u5426\u771f\u6b63\u5b78\u5230\u4e86\u8fa8\u8b58\u72d7\u7684\u6b63\u78ba\u7279\u5fb5\u3002 \u9019\u6a23\u7684\u89e3\u91cb\u6027\u6280\u8853\u6709\u52a9\u65bc\u6211\u5011\u6aa2\u8996\u6a21\u578b\u7684\u504f\u898b\uff0c\u67e5\u770b\u662f\u5426\u904e\u5ea6\u95dc\u6ce8\u7121\u95dc\u8981\u7dca\u7684\u7279\u5fb5\u6216\u5340\u57df\uff0c\u4ee5\u53ca\u6578\u64da\u7684\u504f\u898b\uff0c\u4f8b\u5982\u662f\u5426\u5c0d\u67d0\u4e9b\u985e\u5225\u7684\u5716\u50cf\u6709\u8f03\u5927\u7684\u504f\u597d\u3002\u900f\u904e\u7406\u89e3\u6a21\u578b\u7684\u504f\u898b\u4ee5\u53ca\u6c7a\u7b56\u65b9\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u6709\u91dd\u5c0d\u6027\u5730\u8abf\u6574\u6a21\u578b\u7684\u8a13\u7df4\u904e\u7a0b\uff0c\u4ee5\u7372\u5f97\u66f4\u516c\u6b63\u548c\u53ef\u9760\u7684\u7d50\u679c\u3002 Explainable CNN \u6280\u8853 \u53ef\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u6280\u8853\u63d0\u4f9b\u4e86\u591a\u7a2e\u65b9\u6cd5\u548c\u6280\u5de7\u4f86\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u7d50\u679c\u3002\u4ee5\u4e0b\u662f\u5e7e\u7a2e\u5e38\u898b\u7684 Explainable CNN \u6280\u8853\uff1a Perturbation-based Explanation\uff08\u64fe\u52d5\u89e3\u91cb\uff09\uff1a \u900f\u904e\u5c0d\u8f38\u5165\u5716\u50cf\u9032\u884c\u5fae\u5c0f\u7684\u64fe\u52d5\u4f86\u8a55\u4f30\u5c0d\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\u3002\u5b83\u53ef\u4ee5\u63ed\u793a\u6a21\u578b\u5c0d\u4e0d\u540c\u5716\u50cf\u5340\u57df\u7684\u654f\u611f\u6027\u548c\u91cd\u8981\u6027\uff0c\u4e26\u89e3\u91cb\u6a21\u578b\u7684\u5224\u65b7\u904e\u7a0b\u3002 Gradient-based Explanation\uff08\u68af\u5ea6\u89e3\u91cb\uff09\uff1a\u8a08\u7b97\u8f38\u5165\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u8f38\u51fa\u7684\u68af\u5ea6\uff0c\u4f86\u8a55\u4f30\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002 Propagation-based Explanation\uff08\u50b3\u64ad\u89e3\u91cb\uff09\uff1a\u57fa\u65bc\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u5206\u6790\u6a21\u578b\u4e2d\u6bcf\u500b\u795e\u7d93\u5143\u5c0d\u65bc\u8f38\u51fa\u7684\u8ca2\u737b\u3002\u53ef\u4ee5\u7406\u89e3\u6a21\u578b\u4e2d\u4e0d\u540c\u795e\u7d93\u5143\u5c0d\u65bc\u6700\u7d42\u7684\u6c7a\u7b56\u6709\u4f55\u5f71\u97ff\u3002 CAM-based Explanation\uff08Class Activation Mapping \u89e3\u91cb\uff09\uff1a\u6b64\u6280\u8853\u89e3\u91cb\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u95dc\u6ce8\u5340\u57df\u3002CAM \u6703\u751f\u6210\u4e00\u5f35\u71b1\u5ea6\u5716\uff0c\u986f\u793a\u6a21\u578b\u5c0d\u65bc\u7279\u5b9a\u985e\u5225\u7684\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u91cd\u8981\u5340\u57df\u3002 Attention-Based Explanation\uff08\u57fa\u65bc\u6ce8\u610f\u529b\u7684\u89e3\u91cb\uff09\uff1a\u9019\u7a2e\u65b9\u6cd5\u95dc\u6ce8\u65bc\u6a21\u578b\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u5373\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u6642\u95dc\u6ce8\u54ea\u4e9b\u90e8\u5206\u3002\u5b83\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5982\u4f55\u5c0d\u4e0d\u540c\u7279\u5fb5\u6216\u5340\u57df\u9032\u884c\u6ce8\u610f\uff0c\u4ee5\u9032\u884c\u9810\u6e2c\u3002 Reference Machine learning interpretability with feature attribution","title":"[Day 18] CNN\uff1a\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#day-18-cnn","text":"\u5728\u7576\u4eca\u7684\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u4e2d\uff0c\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u5df2\u7d93\u6210\u70ba\u8a31\u591a\u96fb\u8166\u8996\u89ba\u4efb\u52d9\u7684\u9996\u9078\u6a21\u578b\uff0c\u4f8b\u5982\u5716\u50cf\u5206\u985e\u3001\u7269\u9ad4\u5075\u6e2c\u3001\u8a9e\u610f\u5206\u5272\u3001\u52d5\u4f5c\u5075\u6e2c\u7b49\uff0c\u9019\u4e9b\u91cd\u5927\u7a81\u7834\u90fd\u6b78\u529f\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u5f15\u5165\u3002\u7136\u800c\u5118\u7ba1\u5b83\u5011\u7684\u5f37\u5927\u6027\u80fd\uff0cCNN \u6a21\u578b\u540c\u6a23\u88ab\u8996\u70ba\u300c\u9ed1\u76d2\u300d\uff0c\u96e3\u4ee5\u7406\u89e3\u5176\u5167\u90e8\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u9019\u7a2e\u7f3a\u4e4f\u53ef\u89e3\u91cb\u6027\u53ef\u80fd\u9650\u5236\u4e86\u6211\u5011\u5c0d\u6a21\u578b\u7684\u4fe1\u4efb\u5ea6\uff0c\u7279\u5225\u662f\u5728\u9700\u8981\u9ad8\u5ea6\u53ef\u89e3\u91cb\u6027\u548c\u900f\u660e\u6027\u7684\u61c9\u7528\u5834\u666f\u4e2d\uff0c\u5982\u91ab\u5b78\u8a3a\u65b7\u548c\u81ea\u52d5\u99d5\u99db\u7cfb\u7d71\uff0c\u9019\u4e9b\u61c9\u7528\u66f4\u9700\u8981\u501f\u52a9 XAI \u6280\u8853\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002","title":"[Day 18] CNN\uff1a\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#cnn","text":"CNN \u7684\u512a\u52e2\u5728\u65bc\u5176\u80fd\u5920\u5728\u4e0d\u540c\u7684\u5c64\u6b21\u4e0a\u5b78\u7fd2\u7279\u5fb5\u3002\u8f03\u6dfa\u7684\u5377\u7a4d\u5c64\u5177\u6709\u8f03\u5c0f\u7684\u611f\u77e5\u57df\uff0c\u56e0\u6b64\u5b83\u5011\u80fd\u5920\u6355\u6349\u5230\u8f03\u5c40\u90e8\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u5f71\u50cf\u4e2d\u7684\u7d30\u5fae\u7d0b\u7406\u6216\u5340\u57df\u6027\u7279\u5fb5\u3002\u800c\u8f03\u6df1\u7684\u5377\u7a4d\u5c64\u5247\u5177\u6709\u66f4\u5927\u7684\u611f\u77e5\u57df\uff0c\u9019\u4f7f\u5f97\u5b83\u5011\u80fd\u5920\u5b78\u7fd2\u5230\u66f4\u52a0\u62bd\u8c61\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u7269\u9ad4\u7684\u6574\u9ad4\u5f62\u72c0\u3001\u7d50\u69cb\u6216\u9ad8\u5c64\u6b21\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u9019\u7a2e\u591a\u5c64\u6b21\u7684\u7279\u5fb5\u5b78\u7fd2\u4f7f\u5f97CNN\u80fd\u5920\u5728\u8655\u7406\u5404\u7a2e\u8996\u89ba\u4efb\u52d9\u6642\u8868\u73fe\u51fa\u8272\u3002CNN \u5177\u6709\u4ee5\u4e0b\u5e7e\u9ede\u7279\u6027\uff1a Local connectivity (\u7d50\u5408\u5f71\u50cf\u7279\u6027) Weight sharing (\u5171\u7528\u5b78\u7fd2\u540c\u4e00\u7d44\u53c3\u6578) Subsampling (\u6c60\u5316\u904b\u7b97)","title":"CNN \u7684\u512a\u9ede"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#1-local-connectivity","text":"CNN \u7684\u7b2c\u4e00\u500b\u512a\u9ede\u5728\u65bc\u5b83\u80fd\u5920\u7d50\u5408\u5f71\u50cf\u7279\u6027\uff0c\u4e26\u63a1\u7528\u5340\u57df\u76f8\u4f3c\u6027\u4ee5\u53ca\u5e73\u6ed1\u8b8a\u5316\u7684\u7279\u6027\u65bc\u6a21\u578b\u67b6\u69cb\u4e2d\u3002\u9019\u610f\u5473\u8457 CNN \u80fd\u5920\u6355\u6349\u5230\u5f71\u50cf\u4e2d\u5c40\u90e8\u5340\u57df\u7684\u7279\u5fb5\uff0c\u4e26\u5c07\u5b83\u5011\u7d50\u5408\u8d77\u4f86\uff0c\u4ee5\u8b58\u5225\u7269\u9ad4\u3001\u6a21\u5f0f\u6216\u7d0b\u7406\u7b49\u3002","title":"1. Local connectivity (\u7d50\u5408\u5f71\u50cf\u7279\u6027)"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#2-weight-sharing","text":"\u7b2c\u4e8c\u500b\u512a\u9ede\u6d89\u53ca\u5230 CNN \u7684\u53c3\u6578\u5171\u4eab\u6a5f\u5236\u3002\u5728 CNN \u4e2d\uff0c\u540c\u4e00\u7d44\u904e\u6ffe\u5668\uff08filter\uff09\u53ef\u4ee5\u5728\u6574\u500b\u5f71\u50cf\u4e0a\u6ed1\u52d5\u4ee5\u641c\u7d22\u76f8\u540c\u7684\u6a21\u5f0f\u6216\u7279\u5fb5\u3002\u9019\u7a2e\u5171\u4eab\u6b0a\u91cd\u7684\u65b9\u5f0f\u5927\u5927\u6e1b\u5c11\u4e86\u9700\u8981\u8a13\u7df4\u7684\u53c3\u6578\u6578\u91cf\uff0c\u4f7f\u5f97\u6a21\u578b\u66f4\u52a0\u7dca\u6e4a\u4e14\u8a08\u7b97\u6548\u7387\u66f4\u9ad8\u3002","title":"2. Weight sharing (\u5171\u7528\u5b78\u7fd2\u540c\u4e00\u7d44\u53c3\u6578)"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#3-subsampling","text":"\u7b2c\u4e09\u500b\u512a\u9ede\u662f\u5b83\u4f7f\u7528\u7684\u9ad8\u6548\u964d\u7dad\u65b9\u6cd5\u3002\u900f\u904e subsampling\uff08\u4f8b\u5982\u6c60\u5316\u5c64\uff09\uff0cCNN \u53ef\u4ee5\u5c07\u9ad8\u89e3\u6790\u5ea6\u7684\u5f71\u50cf\u8f49\u63db\u70ba\u8f03\u5c0f\u7684\u7248\u672c\uff0c\u540c\u6642\u4fdd\u7559\u4e86\u95dc\u9375\u8a0a\u606f\u3002\u9019\u6a23\u7684\u64cd\u4f5c\u6e1b\u5c11\u4e86\u9700\u8981\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u53c3\u6578\u6578\u91cf\uff0c\u540c\u6642\u4e0d\u6703\u5f71\u97ff\u6a21\u578b\u7684\u6027\u80fd\u3002 \u6211\u5011\u90fd\u77e5\u9053CNN\u5177\u6709\u4e0a\u8ff0\u5e7e\u500b\u7279\u9ede\uff0c\u4f46\u8981\u5982\u4f55\u85c9\u7531\u9019\u4e9b\u512a\u9ede\u4f86\u89e3\u91cb\u5167\u90e8\u7684\u904b\u4f5c\u5c31\u662fExplainable CNN\u7684\u8ab2\u984c\uff01","title":"3. Subsampling (\u6c60\u5316\u904b\u7b97)"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#explainable-cnn","text":"Explainable CNN\uff08\u53ef\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff09\u5c31\u662f\u8a66\u5716\u7406\u89e3 CNN \u662f\u5982\u4f55\u505a\u51fa\u5224\u65b7\u7684\u3002\u5728\u5716\u50cf\u5206\u985e\u548c\u7269\u4ef6\u8fa8\u8b58\u4efb\u52d9\u4e2d\uff0cExplainable CNN \u7684\u76ee\u6a19\u662f\u63a2\u7d22 CNN \u6a21\u578b\u5c0d\u5716\u50cf\u7684\u95dc\u6ce8\u9ede\u662f\u5426\u7b26\u5408\u4eba\u985e\u7684\u76f4\u89ba\u5224\u65b7\uff0c\u4e26\u900f\u904e\u89e3\u91cb\u6027\u6280\u8853\u5e6b\u52a9\u6539\u9032\u6a21\u578b\u7684\u504f\u898b\u548c\u6578\u64da\u504f\u898b\uff0c\u9032\u800c\u8a13\u7df4\u51fa\u66f4\u512a\u79c0\u7684\u6a21\u578b\u3002\u85c9\u7531\u89e3\u91cb\u6027\u6280\u8853\uff0cExplainable CNN \u8a66\u5716\u627e\u51fa\u5f71\u97ff\u6a21\u578b\u6700\u7d42\u5224\u65b7\u7684\u95dc\u9375\u90e8\u5206\uff0c\u5373\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u5340\u57df\u6216\u7279\u5fb5\u3002\u4eba\u985e\u53ef\u4ee5\u901a\u904e\u9019\u4e9b\u95dc\u9375\u90e8\u5206\u7684\u6a23\u5f0f\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\uff0c\u9032\u800c\u5e6b\u52a9\u505a\u51fa\u66f4\u660e\u667a\u7684\u6c7a\u7b56\u3002 \u5047\u8a2d\u6211\u5011\u8a13\u7df4\u4e86\u4e00\u500b CNN \u6a21\u578b\u4f86\u8fa8\u8b58\u5716\u50cf\u4e2d\u7684\u52d5\u7269\uff0c\u4e26\u4e14\u6a21\u578b\u5c0d\u65bc\u72d7\u7684\u5224\u65b7\u8868\u73fe\u975e\u5e38\u6e96\u78ba\u3002\u6211\u5011\u5e0c\u671b\u4e86\u89e3\u6a21\u578b\u662f\u5982\u4f55\u9032\u884c\u9019\u4e9b\u5224\u65b7\u7684\u3002\u900f\u904e Explainable CNN \u6211\u5011\u53ef\u4ee5\u627e\u5230\u6a21\u578b\u5c0d\u65bc\u5224\u65b7\u72d7\u7684\u95dc\u9375\u5340\u57df\uff0c\u4f8b\u5982\u8033\u6735\u3001\u773c\u775b\u548c\u9f3b\u5b50\u7b49\u90e8\u4f4d\u3002\u9019\u6a23\u7684\u89e3\u91cb\u53ef\u4ee5\u8b93\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4e26\u6aa2\u8996\u6a21\u578b\u662f\u5426\u771f\u6b63\u5b78\u5230\u4e86\u8fa8\u8b58\u72d7\u7684\u6b63\u78ba\u7279\u5fb5\u3002 \u9019\u6a23\u7684\u89e3\u91cb\u6027\u6280\u8853\u6709\u52a9\u65bc\u6211\u5011\u6aa2\u8996\u6a21\u578b\u7684\u504f\u898b\uff0c\u67e5\u770b\u662f\u5426\u904e\u5ea6\u95dc\u6ce8\u7121\u95dc\u8981\u7dca\u7684\u7279\u5fb5\u6216\u5340\u57df\uff0c\u4ee5\u53ca\u6578\u64da\u7684\u504f\u898b\uff0c\u4f8b\u5982\u662f\u5426\u5c0d\u67d0\u4e9b\u985e\u5225\u7684\u5716\u50cf\u6709\u8f03\u5927\u7684\u504f\u597d\u3002\u900f\u904e\u7406\u89e3\u6a21\u578b\u7684\u504f\u898b\u4ee5\u53ca\u6c7a\u7b56\u65b9\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u6709\u91dd\u5c0d\u6027\u5730\u8abf\u6574\u6a21\u578b\u7684\u8a13\u7df4\u904e\u7a0b\uff0c\u4ee5\u7372\u5f97\u66f4\u516c\u6b63\u548c\u53ef\u9760\u7684\u7d50\u679c\u3002","title":"Explainable CNN"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#explainable-cnn_1","text":"\u53ef\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u6280\u8853\u63d0\u4f9b\u4e86\u591a\u7a2e\u65b9\u6cd5\u548c\u6280\u5de7\u4f86\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u7d50\u679c\u3002\u4ee5\u4e0b\u662f\u5e7e\u7a2e\u5e38\u898b\u7684 Explainable CNN \u6280\u8853\uff1a Perturbation-based Explanation\uff08\u64fe\u52d5\u89e3\u91cb\uff09\uff1a \u900f\u904e\u5c0d\u8f38\u5165\u5716\u50cf\u9032\u884c\u5fae\u5c0f\u7684\u64fe\u52d5\u4f86\u8a55\u4f30\u5c0d\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\u3002\u5b83\u53ef\u4ee5\u63ed\u793a\u6a21\u578b\u5c0d\u4e0d\u540c\u5716\u50cf\u5340\u57df\u7684\u654f\u611f\u6027\u548c\u91cd\u8981\u6027\uff0c\u4e26\u89e3\u91cb\u6a21\u578b\u7684\u5224\u65b7\u904e\u7a0b\u3002 Gradient-based Explanation\uff08\u68af\u5ea6\u89e3\u91cb\uff09\uff1a\u8a08\u7b97\u8f38\u5165\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u8f38\u51fa\u7684\u68af\u5ea6\uff0c\u4f86\u8a55\u4f30\u7279\u5fb5\u7684\u91cd\u8981\u6027\u3002 Propagation-based Explanation\uff08\u50b3\u64ad\u89e3\u91cb\uff09\uff1a\u57fa\u65bc\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u5206\u6790\u6a21\u578b\u4e2d\u6bcf\u500b\u795e\u7d93\u5143\u5c0d\u65bc\u8f38\u51fa\u7684\u8ca2\u737b\u3002\u53ef\u4ee5\u7406\u89e3\u6a21\u578b\u4e2d\u4e0d\u540c\u795e\u7d93\u5143\u5c0d\u65bc\u6700\u7d42\u7684\u6c7a\u7b56\u6709\u4f55\u5f71\u97ff\u3002 CAM-based Explanation\uff08Class Activation Mapping \u89e3\u91cb\uff09\uff1a\u6b64\u6280\u8853\u89e3\u91cb\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u95dc\u6ce8\u5340\u57df\u3002CAM \u6703\u751f\u6210\u4e00\u5f35\u71b1\u5ea6\u5716\uff0c\u986f\u793a\u6a21\u578b\u5c0d\u65bc\u7279\u5b9a\u985e\u5225\u7684\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u91cd\u8981\u5340\u57df\u3002 Attention-Based Explanation\uff08\u57fa\u65bc\u6ce8\u610f\u529b\u7684\u89e3\u91cb\uff09\uff1a\u9019\u7a2e\u65b9\u6cd5\u95dc\u6ce8\u65bc\u6a21\u578b\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u5373\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u6642\u95dc\u6ce8\u54ea\u4e9b\u90e8\u5206\u3002\u5b83\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5982\u4f55\u5c0d\u4e0d\u540c\u7279\u5fb5\u6216\u5340\u57df\u9032\u884c\u6ce8\u610f\uff0c\u4ee5\u9032\u884c\u9810\u6e2c\u3002","title":"Explainable CNN \u6280\u8853"},{"location":"18.CNN:\u5377\u7a4d\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u65b9\u6cd5/#reference","text":"Machine learning interpretability with feature attribution","title":"Reference"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/","text":"[Day 19] Perturbation-Based\uff1a\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5982\u679c\u60f3\u8981\u4e86\u89e3\u4e00\u5f35\u5716\u7247\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc CNN \u795e\u7d93\u7db2\u8def\u7684\u5224\u65b7\u7d50\u679c\u5177\u6709\u5f71\u97ff\u529b\uff0c\u53ef\u4ee5\u53c3\u8003\u57fa\u65bc\u64fe\u52d5\u7684 Perturbation-Based \u65b9\u6cd5\u3002\u5b83\u6709\u5f88\u591a\u4e0d\u540c\u7a2e\u7684\u8b8a\u5f62\uff0c\u5176\u4e2d\u6700\u8457\u540d\u7684\u662f\u57fa\u65bc\u906e\u853d\u64fe\u52d5\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u53c3\u80032014\u5e74\u65bc Springer \u767c\u8868\u7684\u671f\u520a\u8ad6\u6587\uff1a Visualizing and understanding convolutional networks \u3002\u5728\u9019\u7bc7\u8ad6\u6587\u4e2d\uff0c\u63d0\u51fa\u53cd\u5377\u7a4d(Deconvolution)\u7684\u4f5c\u8005 Zeiler \u900f\u904e\u906e\u853d\u5716\u7247\u7684\u4e00\u90e8\u5206\u4f86\u89c0\u5bdf\u6a21\u578b\u7684\u8f38\u51fa\uff0c\u4ee5\u78ba\u5b9a\u5716\u7247\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u7684\u5206\u985e\u662f\u76f8\u5c0d\u91cd\u8981\u7684\u3002\u5be6\u969b\u4e0a\uff0c\u4f5c\u8005\u4e5f\u904b\u7528\u906e\u853d\u53cd\u5377\u7a4d\u548c\u53cd\u6c60\u5316\u7684\u65b9\u6cd5\uff0c\u9a57\u8b49\u4e86\u9019\u7a2e\u6280\u8853\u78ba\u5be6\u80fd\u5920\u63d0\u4f9b CNN \u7684\u53ef\u89e3\u91cb\u6027\u3002 \u53c3\u8003\u8ad6\u6587\uff1a Visualizing and understanding convolutional networks Perturbation-Based \u65b9\u6cd5\u4e0d\u9700\u8981\u52d5\u5230\u795e\u7d93\u7db2\u8def\u7684\u67b6\u69cb\uff0c\u50c5\u9700\u8981\u8b8a\u52d5\u8f38\u5165\u7684\u5716\u7247\uff0c\u4e26\u5f9e\u4e2d\u89c0\u5bdf\u6a21\u578b\u8f38\u51fa\u7684\u7d71\u8a08\u5206\u4f48\u3002\u4e26\u8a66\u5716\u7406\u89e3\u5728\u54ea\u500b\u4f4d\u7f6e\u88ab\u906e\u64cb\u5f8c\uff0c\u6703\u5c0d\u6700\u7d42\u7684\u9810\u6e2c\u7d50\u679c\u9020\u6210\u5f71\u97ff\u3002\u56e0\u6b64\u9020\u6210\u6700\u5927\u5f71\u97ff\u7684\u5730\u65b9\u5c31\u53ef\u4ee5\u88ab\u5224\u5b9a\u6210\u5716\u7247\u4e2d\u6700\u91cd\u8981\u7684\u95dc\u9375\u5340\u57df\uff0c\u56e0\u70ba\u53ea\u8981 CNN \u7121\u6cd5\u770b\u898b\u91cd\u8981\u5340\u57df\u5c31\u7121\u6cd5\u8403\u53d6\u95dc\u9375\u7279\u5fb5\uff0c\u76f8\u5c0d\u7684\u6a21\u578b\u5c31\u7121\u6cd5\u6b63\u78ba\u7684\u5224\u65b7\u3002 Occlusion Sensitivity (\u906e\u64cb\u654f\u611f\u5ea6) \u9019\u7bc7\u8ad6\u6587\u63d0\u51fa\u4e86\u4e00\u7a2e\u540d\u70ba\u300c\u906e\u64cb\u654f\u611f\u5ea6\uff08Occlusion Sensitivity\uff09\u300d\u7684\u65b9\u6cd5\uff0c\u5b83\u900f\u904e\u5728\u5716\u7247\u7684\u7279\u5b9a\u90e8\u5206\u9032\u884c\u906e\u64cb\uff0c\u4ee5\u89c0\u5bdf\u7db2\u8def\u4e2d\u9593\u5c64\u7684\u60c5\u6cc1\u548c\u9810\u6e2c\u503c\u7684\u8b8a\u5316\u3002\u9019\u6709\u52a9\u65bc\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u70ba\u4f55\u7db2\u8def\u6703\u505a\u51fa\u67d0\u4e9b\u6c7a\u7b56\u3002\u7c21\u55ae\u4f86\u8aaa\uff0c\u906e\u64cb\u654f\u611f\u5ea6\u662f\u6307\u7576\u6211\u5011\u906e\u64cb\u5716\u50cf\u7684\u7279\u5b9a\u90e8\u5206\u6642\uff0c\u89c0\u5bdf\u9810\u6e2c\u6a5f\u7387\u5982\u4f55\u96a8\u4e4b\u8b8a\u5316\uff0c\u9032\u800c\u627e\u51fa\u5716\u7247\u4e2d\u7684\u91cd\u8981\u5340\u57df\u3002 \u4e0b\u5716\u70ba\u8ad6\u6587\u4e2d\u7684\u5be6\u9a57\u7d50\u679c\u3002\u8a72\u5be6\u9a57\u4f7f\u7528\u4e09\u500b\u6e2c\u8a66\u7bc4\u4f8b\uff0c\u5206\u5225\u9032\u884c\u7cfb\u7d71\u6027\u7684\u906e\u64cb\uff0c\u7136\u5f8c\u89c0\u5bdf\u795e\u7d93\u7db2\u8def\u7684\u53cd\u61c9\u4ee5\u53ca\u7d50\u679c\u7684\u8b8a\u5316\u3002\u5728\u9019\u500b\u5be6\u9a57\u4e2d\uff0c\u9996\u5148\u5c0d\u6bcf\u500b\u7bc4\u4f8b\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u61c9\u7528\u4e86\u4e00\u500b\u7070\u8272\u65b9\u584a\u9032\u884c\u906e\u64cb\u4e26\u9810\u6e2c\uff0c\u7136\u5f8c\u89c0\u5bdf\u4e86\u795e\u7d93\u7db2\u8def\u5728\u7b2c\u4e94\u5c64\u7279\u5fb5\u5716\u7684\u6d3b\u5316\u7a0b\u5ea6(b)\uff0c\u4ee5\u53ca\u5c07\u7279\u5fb5\u5716\u7684\u8a0a\u606f\u8996\u89ba\u5316\uff0c\u4e26\u6295\u5f71\u56de\u539f\u59cb\u8f38\u5165\u5716\u50cf\uff0c\u7136\u5f8c\u5c07\u5176\u986f\u793a\u51fa\u4f86(c)\u3002(d)\u6839\u64da\u7070\u8272\u65b9\u584a\u7684\u4f4d\u7f6e\uff0c\u986f\u793a\u8a72\u985e\u5225\u7684\u6a5f\u7387\u5206\u4f48(\u53ef\u4ee5\u5f9e\u4e2d\u767c\u73fe\u85cd\u8272\u5340\u584a\u4ee3\u8868\u8d8a\u91cd\u8981)\u3002\u4f8b\u5982\u7b2c\u4e00\u5f35\u5716\u7576\u906e\u64cb\u4e86\u72d7\u7684\u81c9\u6642\uff0c\u5c6c\u65bc pomeranian (\u535a\u7f8e\u72ac)\u9019\u500b\u985e\u5225\u7684\u6a5f\u7387\u6703\u660e\u986f\u4e0b\u964d\uff0c\u56e0\u70ba\u795e\u7d93\u7db2\u8def\u7121\u6cd5\u770b\u5230\u72d7\u7684\u81c9\u3002\u6700\u5f8c(e)\u9019\u4e00\u90e8\u5206\u986f\u793a\u4e86\u5728\u4e0d\u540c\u906e\u64cb\u4f4d\u7f6e\u6642\uff0c\u6700\u6709\u53ef\u80fd\u7684\u985e\u5225\u6a19\u7c64\u3002\u4f8b\u5982\u5728\u7b2c\u4e00\u5f35\u5716\u4e2d\uff0c\u5927\u90e8\u5206\u60c5\u6cc1\u4e0b\u6700\u53ef\u80fd\u7684\u6a19\u7c64\u662f pomeranian \uff0c\u4f46\u5982\u679c\u906e\u64cb\u4e86\u72d7\u7684\u81c9\u800c\u6c92\u6709\u906e\u64cb\u5230\u7403\uff0c\u5247\u5b83\u53ef\u80fd\u9810\u6e2c\u70ba tennis ball (\u7db2\u7403)\u3002 \u5f9e\u4e0a\u5716(d)\u53ef\u767c\u73fe\u5982\u679c\u6b32\u8fa8\u8b58\u7684\u76ee\u6a19\u7269\u9ad4\u88ab\u906e\u853d\u7684\u8a71\u90a3\u5206\u985e\u7684\u6e96\u78ba\u5ea6\u5c31\u6703\u5927\u5927\u964d\u4f4e\u3002 Occlusion Sensitivity \u7684\u89e3\u91cb\u904e\u7a0b \u9019\u7a2e\u57fa\u65bc\u906e\u64cb\u64fe\u52d5\u7684\u65b9\u6cd5\u5be6\u4f5c\u975e\u5e38\u7c21\u55ae\u3002\u9996\u5148\u6211\u5011\u9700\u8981\u8a13\u7df4\u4e00\u500b\u6548\u679c\u826f\u597d\u7684\u5206\u985e\u5668\uff0c\u63a5\u8457\u9078\u53d6\u4e00\u5f35\u8981\u89e3\u91cb\u7684\u5716\u7247\uff0c\u4e26\u5c0d\u8a72\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u9032\u884c\u906e\u64cb\uff0c\u540c\u6642\u76e3\u6e2c\u6a21\u578b\u7684\u8f38\u51fa\u6a5f\u7387\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07 (1-\u6a5f\u7387\u503c) \u8996\u70ba\u88ab\u906e\u64cb\u5340\u57df\u7684\u91cd\u8981\u6027\u7a0b\u5ea6\u3002\u4e0a\u8ff0\u904e\u7a0b\u53ef\u4ee5\u7c21\u8981\u6982\u62ec\u70ba\u4ee5\u4e0b\u4e09\u500b\u6b65\u9a5f\uff1a \u8a13\u7df4\u5206\u985e\u5668\uff1a\u8a13\u7df4\u4e00\u500b\u6027\u80fd\u826f\u597d\u7684\u5206\u985e\u5668\u3002 \u906e\u64cb\u5716\u50cf\u5340\u57df\uff1a\u9078\u64c7\u8981\u89e3\u91cb\u7684\u5716\u7247\u3002\u5c0d\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u9032\u884c\u906e\u64cb\uff0c\u5f62\u6210\u4e0d\u540c\u7684\u906e\u64cb\u7248\u672c\u3002 \u76e3\u6e2c\u8f38\u51fa\u6a5f\u7387\uff1a\u89c0\u5bdf\u6a21\u578b\u5728\u6bcf\u500b\u906e\u64cb\u7248\u672c\u4e0b\u7684\u8f38\u51fa\u7684\u9810\u6e2c\u6a5f\u7387\u3002\u4e26\u4f7f\u7528(1-\u6a5f\u7387\u503c)\u4f86\u8a55\u4f30\u88ab\u906e\u64cb\u5340\u57df\u7684\u91cd\u8981\u6027\u7a0b\u5ea6\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528(\u539f\u59cb\u7121\u906e\u64cb\u5f71\u50cf\u7684\u6a5f\u7387-\u906e\u64cb\u5f8c\u9810\u6e2c\u7684\u6a5f\u7387)\u4f5c\u70ba\u91cd\u8981\u6027\u7684\u8a55\u4f30\u3002 \u9019\u88e1\u7684\u906e\u64cb\u6211\u5011\u7a31\u4e4b\u70ba patch(\u7070\u8272\u5c0f\u5340\u584a)\uff0c\u800c\u6bcf\u500b patch \u5927\u5c0f\u53ef\u4ee5\u4e8b\u5148\u8a2d\u5b9a\u597d\u3002\u5047\u8a2d\u4e00\u5f35\u5927\u5c0f 224*224 \u7684\u5f71\u50cf\uff0c\u6bcf\u500b\u906e\u64cb patch \u5927\u5c0f\u8a2d\u5b9a\u70ba 56*56 \uff0c\u7e3d\u5171\u6703\u7522\u751f 16 \u5f35\u4e0d\u540c\u4f4d\u7f6e\u906e\u64cb\u7684\u7248\u672c(\u53ef\u4ee5\u53c3\u8003\u6587\u7ae0\u4e00\u958b\u59cb\u7684\u7684\u52d5\u5716)\u3002\u6211\u5011\u53ef\u4ee5\u5f9e\u7d50\u679c\u767c\u73fe\u7d93\u904e\u906e\u64cb\u8c93\u7684\u81c9\u90e8\u8a72\u985e\u5225\u7684\u6a5f\u7387\u5927\u5e45\u5ea6\u7684\u4e0b\u964d\uff0c\u4e5f\u53ef\u4ee5\u9593\u63a5\u8b49\u5be6\u6a21\u578b\u771f\u7684\u6709\u5b78\u5230\u9810\u6e2c\u8c93\u8981\u770b\u81c9\u90e8\u4e94\u5b98\u3002 \u9019\u7a2e\u65b9\u6cd5\u7684\u512a\u9ede\u5728\u65bc\u5bb9\u6613\u5be6\u65bd\uff0c\u4f46\u7f3a\u9ede\u5728\u65bc\u9700\u8981\u5927\u91cf\u7684\u8a08\u7b97\u8cc7\u6e90\u3002\u56e0\u6b64\u70ba\u4e86\u63d0\u9ad8\u8a08\u7b97\u6548\u7387\uff0c\u6bcf\u500b patch \u4e0d\u6703\u91cd\u758a\u3002\u6b64\u5916 patch \u7684\u5927\u5c0f\u96d6\u7136\u53ef\u4ee5\u96a8\u610f\u6307\u5b9a\uff0c\u4f46\u82e5\u91cd\u8981\u7684\u7279\u5fb5\u7bc4\u570d\u8f03\u5927\u7684\u8a71\uff0c\u4f7f\u7528\u5c0f\u7684 patch \u53ef\u80fd\u6703\u5c0e\u81f4\u6700\u5f8c\u7684\u89e3\u91cb\u6548\u679c\u4e0d\u4f73\u3002\u9019\u5f37\u8abf\u4e86\u5728\u9078\u64c7 patch \u5927\u5c0f\u6642\u9700\u8981\u8003\u616e\u5be6\u969b\u7269\u9ad4\u7684\u5927\u5c0f\uff0c\u4ee5\u78ba\u4fdd\u89e3\u91cb\u7684\u6e96\u78ba\u6027\u548c\u6709\u6548\u6027\u3002 \u53e6\u5916\u9084\u8a18\u5f97 Day1 \u6211\u5728\u6587\u4e2d\u6240\u63cf\u8ff0\u7684\u8fa8\u8b58\u8c93\u72d7\u7684\u4f8b\u5b50\u55ce\uff1f\u6211\u5011\u4e5f\u53ef\u4ee5\u8a66\u8457\u906e\u64cb\u9234\u943a\u7684\u90e8\u5206\uff0c\u89c0\u5bdf\u6a21\u578b\u662f\u4e0d\u662f\u6709\u5b78\u932f\u8fa8\u8b58\u8c93\u7684\u95dc\u9375\u7279\u5fb5\u3002\u5f9e\u4e0b\u5716\u7d50\u679c\uff0c\u5373\u4f7f\u628a\u9234\u943a\u906e\u8d77\u4f86\u9084\u662f\u6210\u529f\u8fa8\u8b58\u51fa\u8c93\u4e86\u3002\u7d42\u65bc\u4e0d\u662f\u4e00\u500b\u9234\u943a\u5206\u985e\u5668\u4e86\uff08\u6c57\u3002 Perturbation-Based \u65b9\u6cd5\u5be6\u4f5c (Occlusion Sensitivity) \u63a5\u4e0b\u4f86\u6211\u5011\u4f7f\u7528 Google \u7684 Inception V3 \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u9810\u6e2c\u4e00\u5f35\u5716\u7247\uff0c\u4e26\u8a66\u8457\u4f7f\u7528\u906e\u64cb\u64fe\u52d5\u7684\u6280\u5de7\u89e3\u91cb\u6a21\u578b\u3002Inception V3 \u4ee5\u5176\u7368\u7279\u7684\u7db2\u8def\u7d50\u69cb\u800c\u805e\u540d\uff0c\u5b83\u63a1\u7528\u4e86\u6240\u8b02\u7684 Inception Module \uff0c\u9019\u662f\u4e00\u7a2e\u591a\u5206\u652f\u5377\u7a4d\u7d50\u69cb\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u5c3a\u5ea6\u548c\u65b9\u5411\u4e0a\u6355\u6349\u5716\u50cf\u7279\u5fb5\u3002\u9019\u7a2e\u7d50\u69cb\u4f7f\u5f97\u7db2\u8def\u80fd\u5920\u66f4\u6709\u6548\u5730\u8655\u7406\u5404\u7a2e\u8907\u96dc\u7684\u5716\u50cf\uff0c\u4e26\u63d0\u9ad8\u4e86\u5716\u50cf\u5206\u985e\u7684\u6027\u80fd\u3002 Inception V3 \u8ad6\u6587\uff1a Rethinking the Inception Architecture for Computer Vision (CVPR 2016) \u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(Inception V3) \u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 Inception V3 \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.inception_v3 import InceptionV3 from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb InceptionV3 \u6a21\u578b model = InceptionV3 ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 Inception V3 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.inception_v3 import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 Inception V3 \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 pred_class_idx \u5247\u662f\u9810\u6e2c\u7684\u6a19\u7c64\u7d22\u5f15\uff0c\u6700\u5f8c\u6a21\u578b\u89e3\u91cb\u6703\u9700\u8981\u7528\u5230\u5b83\u3002 from tensorflow.keras.applications.inception_v3 import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class_idx = pred_proba . argmax ( axis = 1 )[ 0 ] # \u627e\u5230\u5177\u6709\u6700\u9ad8\u6a5f\u7387\u7684\u985e\u5225\u7d22\u5f15 pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 98% \u9019\u9ebc\u9ad8\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" ) Occlusion Sensitivity \u5be6\u4f5c \u4ee5\u4e0b\u5be6\u73fe Occlusion Sensitivity \u65b9\u6cd5\uff0c\u5b83\u5c0d\u539f\u59cb\u5f71\u50cf\u4f9d\u5e8f\u63d2\u5165\u7070\u8272\u65b9\u584a(patch)\uff0c\u7136\u5f8c\u904d\u6b77\u9019\u4e9b\u65b9\u584a\u4e26\u8a08\u7b97\u5b83\u5011\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\uff0c\u6700\u5f8c\u751f\u6210 sensitivity_map \u548c coordinates \u4ee5\u4f9b\u9032\u4e00\u6b65\u5206\u6790\u4f7f\u7528\u3002\u7531\u65bc\u5f71\u50cf\u5927\u5c0f\u70ba 224*224 \uff0c\u800c\u6bcf\u500b patch \u5927\u5c0f 75*75 \u56e0\u6b64\u7e3d\u5171\u6703\u751f\u6210 9 \u5f35\u5716\u4e26\u5132\u5b58\u5728 patches\u3002 import math batch_size = 16 # \u6279\u6b21\u5927\u5c0f\uff0c\u8a2d\u5b9a\u6a21\u578b\u4e00\u6b21\u9810\u6e2c\u53ef\u4ee5\u8b80\u53d6\u5e7e\u5f35\u7167\u7247 patch_size = 75 # \u65b9\u5f62\u7070\u8272\u65b9\u584a\u5927\u5c0f target_class_idx = pred_class_idx # \u9810\u6e2c\u76ee\u6a19\u7684\u6a19\u7c64\u7d22\u5f15 # \u5b9a\u7fa9\u4e00\u500b\u51fd\u6578\uff0c\u7528\u65bc\u5c07\u7070\u8272\u65b9\u584a(patch)\u7f6e\u63db\u5230\u539f\u59cb\u5f71\u50cf\u7684\u6307\u5b9a\u4f4d\u7f6e def apply_grey_patch ( image , top_left_x , top_left_y , patch_size ): patched_image = np . array ( image , copy = True ) # \u7f6e\u63db\u6307\u5b9a\u5340\u57df\u7684\u50cf\u7d20\u503c\u70ba\u7070\u8272\uff08127.5\uff09\uff0c\u9054\u5230\u906e\u853d\u7684\u6548\u679c patched_image [ top_left_y : top_left_y + patch_size , top_left_x : top_left_x + patch_size , : ] = 127.5 return patched_image # \u7528\u65bc\u8a18\u9304\u4e0d\u540c\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff(\u521d\u59cb\u5316\u70ba0) sensitivity_map = np . zeros ( ( math . ceil ( image . shape [ 0 ] / patch_size ), math . ceil ( image . shape [ 1 ] / patch_size ), ) ) # \u5132\u5b58\u6240\u6709\u906e\u64cb\u7684\u5716\u50cf patches = [ apply_grey_patch ( image , top_left_x , top_left_y , patch_size ) for index_x , top_left_x in enumerate ( range ( 0 , image . shape [ 0 ], patch_size )) for index_y , top_left_y in enumerate ( range ( 0 , image . shape [ 1 ], patch_size )) ] # \u5efa\u7acb\u4e00\u500b\u5750\u6a19\u5217\u8868\uff0c\u7528\u65bc\u8a18\u9304\u4e0d\u540c\u5340\u57df\u7684\u5750\u6a19 coordinates = [ ( index_y , index_x ) for index_x in range ( sensitivity_map . shape [ 1 ] ) for index_y in range ( sensitivity_map . shape [ 0 ] ) ] \u4e0a\u9762\u7a0b\u5f0f\u70ba\u6574\u500b\u6d41\u7a0b\u7684\u524d\u7f6e\u4f5c\u696d\uff0c\u5148\u628a\u906e\u64cb\u7684\u5716\u50cf\u8207\u539f\u5716\u5408\u6210\uff0c\u4e26\u5c07\u4e5d\u5f35\u4e0d\u540c\u906e\u64cb\u4f4d\u7f6e\u7684\u5716\u7247\u5132\u5b58\u5728 patches\uff0c\u63a5\u8457\u521d\u59cb\u5316 sensitivity_map \u70ba0\uff0c\u4ee5\u53ca\u751f\u6210\u4e00\u500b\u5ea7\u6a19\u7db2\u683c coordinates \u4ee5\u5229\u65bc\u5f8c\u7e8c\u5be6\u4f5c\u3002 patch_size \u7684\u5927\u5c0f\u6703\u5f71\u97ff\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u5404\u4f4d\u53ef\u4ee5\u5617\u8a66\u8b8a\u52d5\u5927\u5c0f\u4e26\u89c0\u5bdf\u3002 \u906e\u64cb\u5716\u7247\u90fd\u5df2\u6e96\u5099\u597d\u5f8c\uff0c\u63a5\u8457\u89c0\u5bdf\u6bcf\u500b\u65b9\u584a\u7684\u4e0d\u540c\u4f4d\u7f6e\u906e\u64cb\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u6211\u5011\u5c07\u5f71\u50cf\u9032\u884c\u524d\u8655\u7406\uff0c\u63a5\u8457\u9935\u5165\u5148\u524d\u5df2\u5efa\u7acb\u597d\u7684 Inception V3 \u6a21\u578b\uff0c\u7136\u5f8c\u63d0\u53d6\u7279\u5b9a\u985e\u5225\u7684\u9810\u6e2c\u6a5f\u7387\u503c\uff0c\u5728\u672c\u7bc4\u4f8b\u4e2d\u6211\u5011\u8981\u89c0\u5bdf bull_mastiff \u985e\u5225\u7684\u6a5f\u7387\uff0c\u6700\u7d42\u9019\u4e9b\u6a5f\u7387\u503c\u5b58\u5132\u5728 target_class_probs \u4e2d\u4f9b\u5f8c\u7e8c\u4f7f\u7528\u3002 # \u5efa\u7acb\u6a21\u578b\u8f38\u5165\u8cc7\u6599 inputs = np . array ( patches , copy = True ) # \u9810\u8655\u7406\u5716\u50cf inputs = preprocess_input ( inputs ) # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( inputs , batch_size = batch_size ) # \u53d6\u5f97 bull_mastiff \u985e\u5225\u7684\u6a5f\u7387 target_class_probs = [ prob [ target_class_idx ] for prob in pred_proba ] \u6211\u5011\u5c07\u525b\u525b\u8a08\u7b97\u51fa\u4f86\u7684\u7d50\u679c\u900f\u904e\u8996\u89ba\u5316\u65b9\u5f0f\u5448\u73fe\u3002\u53ef\u4ee5\u6e05\u695a\u7684\u89c0\u5bdf\u6bcf\u4e00\u5f35\u906e\u64cb\u7248\u672c\u7684\u5716\u50cf\uff0c\u4ee5\u53ca\u76f8\u5c0d\u61c9\u7684\u985e\u5225\u6a5f\u7387\u70ba\u591a\u5c11\u3002 # \u8a08\u7b97\u7db2\u683c\u5927\u5c0f\uff0c\u7e6a\u5716\u6392\u7248\u7528 grid = math . ceil ( image . shape [ 0 ] / patch_size ) # \u5efa\u7acb\u4e00\u5f35\u5716\u5305\u542b\u591a\u500b\u5b50\u5716\uff0c\u4e26\u8a2d\u5b9a\u5716\u50cf\u7684\u5927\u5c0f\u548c\u6392\u5217\u65b9\u5f0f fig , ax = plt . subplots ( nrows = grid , ncols = grid , figsize = ( 20 , 20 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}, gridspec_kw = dict ( hspace = 0.2 , wspace = 0.1 )) # \u986f\u793a\u6bcf\u5f35\u906e\u64cb\u7248\u672c\u7684\u5716\u50cf for i in range ( len ( patches )): # \u8a2d\u5b9a\u6bcf\u500b\u5b50\u5716\u50cf\u7684\u6a19\u984c\uff0c\u5305\u62ec\u9810\u6e2c\u7684\u985e\u5225\u540d\u7a31\u548c\u76f8\u61c9\u7684\u6a5f\u7387\u503c ax [ i % grid , i // grid ] . set_title ( f 'Prediction: { predicted_class_name } { target_class_probs [ i ][ 0 ] : .6f } ' , fontsize = 16 ) # \u986f\u793a\u5b50\u5716\u50cf\uff0c\u4e26\u5c07\u50cf\u7d20\u503c\u9664\u4ee5255\u4ee5\u5c07\u5176\u6b63\u898f\u5316\u52300\u52301\u4e4b\u9593 ax [ i % grid , i // grid ] . imshow ( patches [ i ] / 255 ) \u4e0a\u4e00\u6b65\u9a5f\u5df2\u7d93\u89c0\u5bdf\u6a21\u578b\u5728\u6bcf\u500b\u906e\u64cb\u7248\u672c\u4e0b\u7684\u8f38\u51fa\u7684\u9810\u6e2c\u6a5f\u7387\u3002\u63a5\u4e0b\u4f86\u8a08\u7b97\u6bcf\u500b\u5b50\u5716\u50cf\u7684\u91cd\u8981\u6027\uff08\u654f\u611f\u7a0b\u5ea6\uff09\u3002\u6211\u5011\u4f7f\u75281\u6e1b\u53bb\u6a21\u578b\u9810\u6e2c\u6a5f\u7387\u503c\uff0c\u7576\u6210\u662f\u90a3\u584a patch \u7684\u91cd\u8981\u6027\uff0c\u9019\u6a23\u4f7f\u5f97\u6a21\u578b\u8f38\u51fa\u8f03\u9ad8\u7684\u6a5f\u7387\u503c\u5c07\u5c0d\u61c9\u8f03\u4f4e\u7684\u91cd\u8981\u6027\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u56e0\u6b64\u76f8\u6e1b\u4e4b\u5f8c\u7684\u503c\u8d8a\u9ad8\uff0c\u8868\u793a\u8a72\u906e\u64cb\u7070\u8272\u7684\u5340\u57df\u8d8a\u91cd\u8981\u3002\u6700\u5f8c\u5c07 sensitivity_map \u7684\u5927\u5c0f\u8abf\u6574\u70ba\u8207\u539f\u59cb\u5716\u50cf\u76f8\u540c\u7684\u5927\u5c0f\uff0c\u6bcf\u500b\u50cf\u7d20\u5c07\u5c0d\u61c9\u5230\u539f\u59cb\u5716\u50cf\u7684\u76f8\u61c9\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u8207\u539f\u59cb\u5716\u50cf\u4e00\u8d77\u4f7f\u7528\u6216\u986f\u793a\u3002 import cv2 import matplotlib.cm as cm # \u5c07 (1-\u6a5f\u7387\u503c) \u7576\u6210\u662f\u90a3\u584a patch \u7684\u91cd\u8981\u6027 for ( index_y , index_x ), confidence in zip ( coordinates , target_class_probs ): sensitivity_map [ index_y , index_x ] = 1 - confidence # \u8abf\u6574\u70ba\u8207\u539f\u59cb\u5716\u50cf\u76f8\u540c\u7684\u5927\u5c0f sensitivity_maps = cv2 . resize ( sensitivity_map , tuple ( image . shape [ 0 : 2 ])) \u91cd\u8981\u6027\u8a08\u7b97\u6709\u5f88\u591a\u7a2e\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528(\u539f\u59cb\u7121\u906e\u64cb\u5f71\u50cf\u7684\u6a5f\u7387-\u906e\u64cb\u5f8c\u9810\u6e2c\u7684\u6a5f\u7387)\u3002 \u6bcf\u500b\u5340\u584a\u91cd\u8981\u6027\u90fd\u5df2\u7d93\u8a08\u7b97\u51fa\u4f86\u4e86\uff0c\u6700\u5f8c\u6211\u5011\u5c31 matplotlib \u4f86\u8996\u89ba\u5316\u7d50\u679c\u5427\uff01\u5f9e\u7d50\u679c\u53ef\u4ee5\u767c\u73fe\uff0c\u7576\u6211\u5011\u906e\u64cb\u72d7\u7684\u81c9\u90e8\u6703\u5927\u5e45\u5ea6\u964d\u4f4e\u9810\u5224 bull_mastiff \u985e\u5225\u7684\u6a5f\u7387\u503c\u3002\u56e0\u6b64\u76f8\u5c0d\u7684\u53ef\u4ee5\u5f97\u77e5\u8fa8\u8b58\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u5728\u65bc\u81c9\u90e8\u7279\u5fb5\u8207\u56db\u80a2\u3002 fig , axs = plt . subplots ( nrows = 1 , ncols = 3 , squeeze = False , figsize = ( 16 , 8 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}) axs [ 0 , 0 ] . set_title ( 'Original image' , fontsize = 20 ) axs [ 0 , 0 ] . imshow ( image / 255 ) axs [ 0 , 1 ] . set_title ( 'Sensitivity maps' , fontsize = 20 ) axs [ 0 , 1 ] . imshow ( sensitivity_maps , cmap = cm . inferno ) axs [ 0 , 2 ] . set_title ( 'Overlay' , fontsize = 20 ) axs [ 0 , 2 ] . imshow ( sensitivity_maps , cmap = cm . inferno ) axs [ 0 , 2 ] . imshow ( image / 255 , alpha = 0.4 ) \u6700\u5f8c\u6211\u5011\u518d\u9032\u884c\u4e00\u500b\u6709\u8da3\u7684\u5be6\u9a57\uff0c\u5982\u679c\u6211\u5011\u906e\u4f4f\u72d7\u7684\u81c9\uff0c\u7136\u5f8c\u518d\u6b21\u4f7f\u7528 InceptionV3 \u6a21\u578b\u9032\u884c\u9810\u6e2c\uff0c\u4f60\u731c\u731c\u6703\u5f97\u5230\u4ec0\u9ebc\u8f38\u51fa\uff1f\u679c\u7136\u5982\u9810\u671f\uff0c\u6a21\u578b\u6ce8\u610f\u529b\u8f49\u5411\u8c93\u7684\u7279\u5fb5\uff0c\u6700\u7d42\u8f38\u51fa\u4e86 tabby \uff08\u864e\u6591\u8c93\uff09\u3002 \u5c0f\u7d50 Perturbation-Based \u9084\u6709\u8a31\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u6211\u5011\u53ef\u4ee5\u81ea\u5b9a\u7fa9\u76ee\u6a19\u51fd\u6578\u4ee5\u53ca\u5716\u7247\u906e\u64cb\u7684\u6280\u5de7(\u6a21\u7cca\u5316\u3001\u6578\u503c\u66ff\u63db\u3001\u52a0\u5165\u96dc\u8a0a)\u3002\u4e26\u91dd\u5c0d\u4e00\u500b\u6a21\u578b\u6bcf\u500b\u8f38\u5165\u53bb\u5c0b\u627e\u906e\u853d\u54ea\u88e1\u53ef\u4ee5\u7372\u5f97\u6700\u4f73\u7684\u89e3\u91cb\u6027\u3002\u4e5f\u5c31\u662f\u906e\u853d\u4e86\u54ea\u4e9b\u5730\u65b9\uff0c\u5c0d\u6a21\u578b\u6a21\u578b\u5206\u985e\u7684\u7d50\u679c\u6703\u9020\u6210\u6700\u5927\u7684\u8ca0\u5f71\u97ff\u3002\u6709\u8208\u8da3\u7684\u4eba\u4e5f\u53ef\u4ee5\u53c3\u8003\u9019\u7bc7\u8ad6\u6587\uff1a Interpretable Explanations of Black Boxes by Meaningful Perturbation \u3002 Reference [\u8ad6\u6587\u901f\u901f\u8b80]Visualizing and Understanding Convolutional Networks Google Cloud: Advanced Guide to Inception v3 Visualization of Convolutional Neural Networks in PyTorch \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 01 \u57fa\u65bc\u906e\u64cb\u7684\u65b9\u6cd5 (Perturbation-Based): Occlusion Sensitivity, Meaningful Perturbation","title":"[Day 19] Perturbation-Based\uff1a\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#day-19-perturbation-based","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5982\u679c\u60f3\u8981\u4e86\u89e3\u4e00\u5f35\u5716\u7247\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc CNN \u795e\u7d93\u7db2\u8def\u7684\u5224\u65b7\u7d50\u679c\u5177\u6709\u5f71\u97ff\u529b\uff0c\u53ef\u4ee5\u53c3\u8003\u57fa\u65bc\u64fe\u52d5\u7684 Perturbation-Based \u65b9\u6cd5\u3002\u5b83\u6709\u5f88\u591a\u4e0d\u540c\u7a2e\u7684\u8b8a\u5f62\uff0c\u5176\u4e2d\u6700\u8457\u540d\u7684\u662f\u57fa\u65bc\u906e\u853d\u64fe\u52d5\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u53c3\u80032014\u5e74\u65bc Springer \u767c\u8868\u7684\u671f\u520a\u8ad6\u6587\uff1a Visualizing and understanding convolutional networks \u3002\u5728\u9019\u7bc7\u8ad6\u6587\u4e2d\uff0c\u63d0\u51fa\u53cd\u5377\u7a4d(Deconvolution)\u7684\u4f5c\u8005 Zeiler \u900f\u904e\u906e\u853d\u5716\u7247\u7684\u4e00\u90e8\u5206\u4f86\u89c0\u5bdf\u6a21\u578b\u7684\u8f38\u51fa\uff0c\u4ee5\u78ba\u5b9a\u5716\u7247\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u7684\u5206\u985e\u662f\u76f8\u5c0d\u91cd\u8981\u7684\u3002\u5be6\u969b\u4e0a\uff0c\u4f5c\u8005\u4e5f\u904b\u7528\u906e\u853d\u53cd\u5377\u7a4d\u548c\u53cd\u6c60\u5316\u7684\u65b9\u6cd5\uff0c\u9a57\u8b49\u4e86\u9019\u7a2e\u6280\u8853\u78ba\u5be6\u80fd\u5920\u63d0\u4f9b CNN \u7684\u53ef\u89e3\u91cb\u6027\u3002 \u53c3\u8003\u8ad6\u6587\uff1a Visualizing and understanding convolutional networks Perturbation-Based \u65b9\u6cd5\u4e0d\u9700\u8981\u52d5\u5230\u795e\u7d93\u7db2\u8def\u7684\u67b6\u69cb\uff0c\u50c5\u9700\u8981\u8b8a\u52d5\u8f38\u5165\u7684\u5716\u7247\uff0c\u4e26\u5f9e\u4e2d\u89c0\u5bdf\u6a21\u578b\u8f38\u51fa\u7684\u7d71\u8a08\u5206\u4f48\u3002\u4e26\u8a66\u5716\u7406\u89e3\u5728\u54ea\u500b\u4f4d\u7f6e\u88ab\u906e\u64cb\u5f8c\uff0c\u6703\u5c0d\u6700\u7d42\u7684\u9810\u6e2c\u7d50\u679c\u9020\u6210\u5f71\u97ff\u3002\u56e0\u6b64\u9020\u6210\u6700\u5927\u5f71\u97ff\u7684\u5730\u65b9\u5c31\u53ef\u4ee5\u88ab\u5224\u5b9a\u6210\u5716\u7247\u4e2d\u6700\u91cd\u8981\u7684\u95dc\u9375\u5340\u57df\uff0c\u56e0\u70ba\u53ea\u8981 CNN \u7121\u6cd5\u770b\u898b\u91cd\u8981\u5340\u57df\u5c31\u7121\u6cd5\u8403\u53d6\u95dc\u9375\u7279\u5fb5\uff0c\u76f8\u5c0d\u7684\u6a21\u578b\u5c31\u7121\u6cd5\u6b63\u78ba\u7684\u5224\u65b7\u3002","title":"[Day 19] Perturbation-Based\uff1a\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#occlusion-sensitivity","text":"\u9019\u7bc7\u8ad6\u6587\u63d0\u51fa\u4e86\u4e00\u7a2e\u540d\u70ba\u300c\u906e\u64cb\u654f\u611f\u5ea6\uff08Occlusion Sensitivity\uff09\u300d\u7684\u65b9\u6cd5\uff0c\u5b83\u900f\u904e\u5728\u5716\u7247\u7684\u7279\u5b9a\u90e8\u5206\u9032\u884c\u906e\u64cb\uff0c\u4ee5\u89c0\u5bdf\u7db2\u8def\u4e2d\u9593\u5c64\u7684\u60c5\u6cc1\u548c\u9810\u6e2c\u503c\u7684\u8b8a\u5316\u3002\u9019\u6709\u52a9\u65bc\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u70ba\u4f55\u7db2\u8def\u6703\u505a\u51fa\u67d0\u4e9b\u6c7a\u7b56\u3002\u7c21\u55ae\u4f86\u8aaa\uff0c\u906e\u64cb\u654f\u611f\u5ea6\u662f\u6307\u7576\u6211\u5011\u906e\u64cb\u5716\u50cf\u7684\u7279\u5b9a\u90e8\u5206\u6642\uff0c\u89c0\u5bdf\u9810\u6e2c\u6a5f\u7387\u5982\u4f55\u96a8\u4e4b\u8b8a\u5316\uff0c\u9032\u800c\u627e\u51fa\u5716\u7247\u4e2d\u7684\u91cd\u8981\u5340\u57df\u3002 \u4e0b\u5716\u70ba\u8ad6\u6587\u4e2d\u7684\u5be6\u9a57\u7d50\u679c\u3002\u8a72\u5be6\u9a57\u4f7f\u7528\u4e09\u500b\u6e2c\u8a66\u7bc4\u4f8b\uff0c\u5206\u5225\u9032\u884c\u7cfb\u7d71\u6027\u7684\u906e\u64cb\uff0c\u7136\u5f8c\u89c0\u5bdf\u795e\u7d93\u7db2\u8def\u7684\u53cd\u61c9\u4ee5\u53ca\u7d50\u679c\u7684\u8b8a\u5316\u3002\u5728\u9019\u500b\u5be6\u9a57\u4e2d\uff0c\u9996\u5148\u5c0d\u6bcf\u500b\u7bc4\u4f8b\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u61c9\u7528\u4e86\u4e00\u500b\u7070\u8272\u65b9\u584a\u9032\u884c\u906e\u64cb\u4e26\u9810\u6e2c\uff0c\u7136\u5f8c\u89c0\u5bdf\u4e86\u795e\u7d93\u7db2\u8def\u5728\u7b2c\u4e94\u5c64\u7279\u5fb5\u5716\u7684\u6d3b\u5316\u7a0b\u5ea6(b)\uff0c\u4ee5\u53ca\u5c07\u7279\u5fb5\u5716\u7684\u8a0a\u606f\u8996\u89ba\u5316\uff0c\u4e26\u6295\u5f71\u56de\u539f\u59cb\u8f38\u5165\u5716\u50cf\uff0c\u7136\u5f8c\u5c07\u5176\u986f\u793a\u51fa\u4f86(c)\u3002(d)\u6839\u64da\u7070\u8272\u65b9\u584a\u7684\u4f4d\u7f6e\uff0c\u986f\u793a\u8a72\u985e\u5225\u7684\u6a5f\u7387\u5206\u4f48(\u53ef\u4ee5\u5f9e\u4e2d\u767c\u73fe\u85cd\u8272\u5340\u584a\u4ee3\u8868\u8d8a\u91cd\u8981)\u3002\u4f8b\u5982\u7b2c\u4e00\u5f35\u5716\u7576\u906e\u64cb\u4e86\u72d7\u7684\u81c9\u6642\uff0c\u5c6c\u65bc pomeranian (\u535a\u7f8e\u72ac)\u9019\u500b\u985e\u5225\u7684\u6a5f\u7387\u6703\u660e\u986f\u4e0b\u964d\uff0c\u56e0\u70ba\u795e\u7d93\u7db2\u8def\u7121\u6cd5\u770b\u5230\u72d7\u7684\u81c9\u3002\u6700\u5f8c(e)\u9019\u4e00\u90e8\u5206\u986f\u793a\u4e86\u5728\u4e0d\u540c\u906e\u64cb\u4f4d\u7f6e\u6642\uff0c\u6700\u6709\u53ef\u80fd\u7684\u985e\u5225\u6a19\u7c64\u3002\u4f8b\u5982\u5728\u7b2c\u4e00\u5f35\u5716\u4e2d\uff0c\u5927\u90e8\u5206\u60c5\u6cc1\u4e0b\u6700\u53ef\u80fd\u7684\u6a19\u7c64\u662f pomeranian \uff0c\u4f46\u5982\u679c\u906e\u64cb\u4e86\u72d7\u7684\u81c9\u800c\u6c92\u6709\u906e\u64cb\u5230\u7403\uff0c\u5247\u5b83\u53ef\u80fd\u9810\u6e2c\u70ba tennis ball (\u7db2\u7403)\u3002 \u5f9e\u4e0a\u5716(d)\u53ef\u767c\u73fe\u5982\u679c\u6b32\u8fa8\u8b58\u7684\u76ee\u6a19\u7269\u9ad4\u88ab\u906e\u853d\u7684\u8a71\u90a3\u5206\u985e\u7684\u6e96\u78ba\u5ea6\u5c31\u6703\u5927\u5927\u964d\u4f4e\u3002","title":"Occlusion Sensitivity (\u906e\u64cb\u654f\u611f\u5ea6)"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#occlusion-sensitivity_1","text":"\u9019\u7a2e\u57fa\u65bc\u906e\u64cb\u64fe\u52d5\u7684\u65b9\u6cd5\u5be6\u4f5c\u975e\u5e38\u7c21\u55ae\u3002\u9996\u5148\u6211\u5011\u9700\u8981\u8a13\u7df4\u4e00\u500b\u6548\u679c\u826f\u597d\u7684\u5206\u985e\u5668\uff0c\u63a5\u8457\u9078\u53d6\u4e00\u5f35\u8981\u89e3\u91cb\u7684\u5716\u7247\uff0c\u4e26\u5c0d\u8a72\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u9032\u884c\u906e\u64cb\uff0c\u540c\u6642\u76e3\u6e2c\u6a21\u578b\u7684\u8f38\u51fa\u6a5f\u7387\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07 (1-\u6a5f\u7387\u503c) \u8996\u70ba\u88ab\u906e\u64cb\u5340\u57df\u7684\u91cd\u8981\u6027\u7a0b\u5ea6\u3002\u4e0a\u8ff0\u904e\u7a0b\u53ef\u4ee5\u7c21\u8981\u6982\u62ec\u70ba\u4ee5\u4e0b\u4e09\u500b\u6b65\u9a5f\uff1a \u8a13\u7df4\u5206\u985e\u5668\uff1a\u8a13\u7df4\u4e00\u500b\u6027\u80fd\u826f\u597d\u7684\u5206\u985e\u5668\u3002 \u906e\u64cb\u5716\u50cf\u5340\u57df\uff1a\u9078\u64c7\u8981\u89e3\u91cb\u7684\u5716\u7247\u3002\u5c0d\u5716\u7247\u7684\u4e0d\u540c\u5340\u57df\u9032\u884c\u906e\u64cb\uff0c\u5f62\u6210\u4e0d\u540c\u7684\u906e\u64cb\u7248\u672c\u3002 \u76e3\u6e2c\u8f38\u51fa\u6a5f\u7387\uff1a\u89c0\u5bdf\u6a21\u578b\u5728\u6bcf\u500b\u906e\u64cb\u7248\u672c\u4e0b\u7684\u8f38\u51fa\u7684\u9810\u6e2c\u6a5f\u7387\u3002\u4e26\u4f7f\u7528(1-\u6a5f\u7387\u503c)\u4f86\u8a55\u4f30\u88ab\u906e\u64cb\u5340\u57df\u7684\u91cd\u8981\u6027\u7a0b\u5ea6\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528(\u539f\u59cb\u7121\u906e\u64cb\u5f71\u50cf\u7684\u6a5f\u7387-\u906e\u64cb\u5f8c\u9810\u6e2c\u7684\u6a5f\u7387)\u4f5c\u70ba\u91cd\u8981\u6027\u7684\u8a55\u4f30\u3002 \u9019\u88e1\u7684\u906e\u64cb\u6211\u5011\u7a31\u4e4b\u70ba patch(\u7070\u8272\u5c0f\u5340\u584a)\uff0c\u800c\u6bcf\u500b patch \u5927\u5c0f\u53ef\u4ee5\u4e8b\u5148\u8a2d\u5b9a\u597d\u3002\u5047\u8a2d\u4e00\u5f35\u5927\u5c0f 224*224 \u7684\u5f71\u50cf\uff0c\u6bcf\u500b\u906e\u64cb patch \u5927\u5c0f\u8a2d\u5b9a\u70ba 56*56 \uff0c\u7e3d\u5171\u6703\u7522\u751f 16 \u5f35\u4e0d\u540c\u4f4d\u7f6e\u906e\u64cb\u7684\u7248\u672c(\u53ef\u4ee5\u53c3\u8003\u6587\u7ae0\u4e00\u958b\u59cb\u7684\u7684\u52d5\u5716)\u3002\u6211\u5011\u53ef\u4ee5\u5f9e\u7d50\u679c\u767c\u73fe\u7d93\u904e\u906e\u64cb\u8c93\u7684\u81c9\u90e8\u8a72\u985e\u5225\u7684\u6a5f\u7387\u5927\u5e45\u5ea6\u7684\u4e0b\u964d\uff0c\u4e5f\u53ef\u4ee5\u9593\u63a5\u8b49\u5be6\u6a21\u578b\u771f\u7684\u6709\u5b78\u5230\u9810\u6e2c\u8c93\u8981\u770b\u81c9\u90e8\u4e94\u5b98\u3002 \u9019\u7a2e\u65b9\u6cd5\u7684\u512a\u9ede\u5728\u65bc\u5bb9\u6613\u5be6\u65bd\uff0c\u4f46\u7f3a\u9ede\u5728\u65bc\u9700\u8981\u5927\u91cf\u7684\u8a08\u7b97\u8cc7\u6e90\u3002\u56e0\u6b64\u70ba\u4e86\u63d0\u9ad8\u8a08\u7b97\u6548\u7387\uff0c\u6bcf\u500b patch \u4e0d\u6703\u91cd\u758a\u3002\u6b64\u5916 patch \u7684\u5927\u5c0f\u96d6\u7136\u53ef\u4ee5\u96a8\u610f\u6307\u5b9a\uff0c\u4f46\u82e5\u91cd\u8981\u7684\u7279\u5fb5\u7bc4\u570d\u8f03\u5927\u7684\u8a71\uff0c\u4f7f\u7528\u5c0f\u7684 patch \u53ef\u80fd\u6703\u5c0e\u81f4\u6700\u5f8c\u7684\u89e3\u91cb\u6548\u679c\u4e0d\u4f73\u3002\u9019\u5f37\u8abf\u4e86\u5728\u9078\u64c7 patch \u5927\u5c0f\u6642\u9700\u8981\u8003\u616e\u5be6\u969b\u7269\u9ad4\u7684\u5927\u5c0f\uff0c\u4ee5\u78ba\u4fdd\u89e3\u91cb\u7684\u6e96\u78ba\u6027\u548c\u6709\u6548\u6027\u3002 \u53e6\u5916\u9084\u8a18\u5f97 Day1 \u6211\u5728\u6587\u4e2d\u6240\u63cf\u8ff0\u7684\u8fa8\u8b58\u8c93\u72d7\u7684\u4f8b\u5b50\u55ce\uff1f\u6211\u5011\u4e5f\u53ef\u4ee5\u8a66\u8457\u906e\u64cb\u9234\u943a\u7684\u90e8\u5206\uff0c\u89c0\u5bdf\u6a21\u578b\u662f\u4e0d\u662f\u6709\u5b78\u932f\u8fa8\u8b58\u8c93\u7684\u95dc\u9375\u7279\u5fb5\u3002\u5f9e\u4e0b\u5716\u7d50\u679c\uff0c\u5373\u4f7f\u628a\u9234\u943a\u906e\u8d77\u4f86\u9084\u662f\u6210\u529f\u8fa8\u8b58\u51fa\u8c93\u4e86\u3002\u7d42\u65bc\u4e0d\u662f\u4e00\u500b\u9234\u943a\u5206\u985e\u5668\u4e86\uff08\u6c57\u3002","title":"Occlusion Sensitivity \u7684\u89e3\u91cb\u904e\u7a0b"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#perturbation-based-occlusion-sensitivity","text":"\u63a5\u4e0b\u4f86\u6211\u5011\u4f7f\u7528 Google \u7684 Inception V3 \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u9810\u6e2c\u4e00\u5f35\u5716\u7247\uff0c\u4e26\u8a66\u8457\u4f7f\u7528\u906e\u64cb\u64fe\u52d5\u7684\u6280\u5de7\u89e3\u91cb\u6a21\u578b\u3002Inception V3 \u4ee5\u5176\u7368\u7279\u7684\u7db2\u8def\u7d50\u69cb\u800c\u805e\u540d\uff0c\u5b83\u63a1\u7528\u4e86\u6240\u8b02\u7684 Inception Module \uff0c\u9019\u662f\u4e00\u7a2e\u591a\u5206\u652f\u5377\u7a4d\u7d50\u69cb\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u5c3a\u5ea6\u548c\u65b9\u5411\u4e0a\u6355\u6349\u5716\u50cf\u7279\u5fb5\u3002\u9019\u7a2e\u7d50\u69cb\u4f7f\u5f97\u7db2\u8def\u80fd\u5920\u66f4\u6709\u6548\u5730\u8655\u7406\u5404\u7a2e\u8907\u96dc\u7684\u5716\u50cf\uff0c\u4e26\u63d0\u9ad8\u4e86\u5716\u50cf\u5206\u985e\u7684\u6027\u80fd\u3002 Inception V3 \u8ad6\u6587\uff1a Rethinking the Inception Architecture for Computer Vision (CVPR 2016)","title":"Perturbation-Based \u65b9\u6cd5\u5be6\u4f5c (Occlusion Sensitivity)"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#inception-v3","text":"\u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 Inception V3 \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.inception_v3 import InceptionV3 from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb InceptionV3 \u6a21\u578b model = InceptionV3 ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 Inception V3 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.inception_v3 import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 Inception V3 \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 pred_class_idx \u5247\u662f\u9810\u6e2c\u7684\u6a19\u7c64\u7d22\u5f15\uff0c\u6700\u5f8c\u6a21\u578b\u89e3\u91cb\u6703\u9700\u8981\u7528\u5230\u5b83\u3002 from tensorflow.keras.applications.inception_v3 import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class_idx = pred_proba . argmax ( axis = 1 )[ 0 ] # \u627e\u5230\u5177\u6709\u6700\u9ad8\u6a5f\u7387\u7684\u985e\u5225\u7d22\u5f15 pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 98% \u9019\u9ebc\u9ad8\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" )","title":"\u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(Inception V3)"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#occlusion-sensitivity_2","text":"\u4ee5\u4e0b\u5be6\u73fe Occlusion Sensitivity \u65b9\u6cd5\uff0c\u5b83\u5c0d\u539f\u59cb\u5f71\u50cf\u4f9d\u5e8f\u63d2\u5165\u7070\u8272\u65b9\u584a(patch)\uff0c\u7136\u5f8c\u904d\u6b77\u9019\u4e9b\u65b9\u584a\u4e26\u8a08\u7b97\u5b83\u5011\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\uff0c\u6700\u5f8c\u751f\u6210 sensitivity_map \u548c coordinates \u4ee5\u4f9b\u9032\u4e00\u6b65\u5206\u6790\u4f7f\u7528\u3002\u7531\u65bc\u5f71\u50cf\u5927\u5c0f\u70ba 224*224 \uff0c\u800c\u6bcf\u500b patch \u5927\u5c0f 75*75 \u56e0\u6b64\u7e3d\u5171\u6703\u751f\u6210 9 \u5f35\u5716\u4e26\u5132\u5b58\u5728 patches\u3002 import math batch_size = 16 # \u6279\u6b21\u5927\u5c0f\uff0c\u8a2d\u5b9a\u6a21\u578b\u4e00\u6b21\u9810\u6e2c\u53ef\u4ee5\u8b80\u53d6\u5e7e\u5f35\u7167\u7247 patch_size = 75 # \u65b9\u5f62\u7070\u8272\u65b9\u584a\u5927\u5c0f target_class_idx = pred_class_idx # \u9810\u6e2c\u76ee\u6a19\u7684\u6a19\u7c64\u7d22\u5f15 # \u5b9a\u7fa9\u4e00\u500b\u51fd\u6578\uff0c\u7528\u65bc\u5c07\u7070\u8272\u65b9\u584a(patch)\u7f6e\u63db\u5230\u539f\u59cb\u5f71\u50cf\u7684\u6307\u5b9a\u4f4d\u7f6e def apply_grey_patch ( image , top_left_x , top_left_y , patch_size ): patched_image = np . array ( image , copy = True ) # \u7f6e\u63db\u6307\u5b9a\u5340\u57df\u7684\u50cf\u7d20\u503c\u70ba\u7070\u8272\uff08127.5\uff09\uff0c\u9054\u5230\u906e\u853d\u7684\u6548\u679c patched_image [ top_left_y : top_left_y + patch_size , top_left_x : top_left_x + patch_size , : ] = 127.5 return patched_image # \u7528\u65bc\u8a18\u9304\u4e0d\u540c\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff(\u521d\u59cb\u5316\u70ba0) sensitivity_map = np . zeros ( ( math . ceil ( image . shape [ 0 ] / patch_size ), math . ceil ( image . shape [ 1 ] / patch_size ), ) ) # \u5132\u5b58\u6240\u6709\u906e\u64cb\u7684\u5716\u50cf patches = [ apply_grey_patch ( image , top_left_x , top_left_y , patch_size ) for index_x , top_left_x in enumerate ( range ( 0 , image . shape [ 0 ], patch_size )) for index_y , top_left_y in enumerate ( range ( 0 , image . shape [ 1 ], patch_size )) ] # \u5efa\u7acb\u4e00\u500b\u5750\u6a19\u5217\u8868\uff0c\u7528\u65bc\u8a18\u9304\u4e0d\u540c\u5340\u57df\u7684\u5750\u6a19 coordinates = [ ( index_y , index_x ) for index_x in range ( sensitivity_map . shape [ 1 ] ) for index_y in range ( sensitivity_map . shape [ 0 ] ) ] \u4e0a\u9762\u7a0b\u5f0f\u70ba\u6574\u500b\u6d41\u7a0b\u7684\u524d\u7f6e\u4f5c\u696d\uff0c\u5148\u628a\u906e\u64cb\u7684\u5716\u50cf\u8207\u539f\u5716\u5408\u6210\uff0c\u4e26\u5c07\u4e5d\u5f35\u4e0d\u540c\u906e\u64cb\u4f4d\u7f6e\u7684\u5716\u7247\u5132\u5b58\u5728 patches\uff0c\u63a5\u8457\u521d\u59cb\u5316 sensitivity_map \u70ba0\uff0c\u4ee5\u53ca\u751f\u6210\u4e00\u500b\u5ea7\u6a19\u7db2\u683c coordinates \u4ee5\u5229\u65bc\u5f8c\u7e8c\u5be6\u4f5c\u3002 patch_size \u7684\u5927\u5c0f\u6703\u5f71\u97ff\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u5404\u4f4d\u53ef\u4ee5\u5617\u8a66\u8b8a\u52d5\u5927\u5c0f\u4e26\u89c0\u5bdf\u3002 \u906e\u64cb\u5716\u7247\u90fd\u5df2\u6e96\u5099\u597d\u5f8c\uff0c\u63a5\u8457\u89c0\u5bdf\u6bcf\u500b\u65b9\u584a\u7684\u4e0d\u540c\u4f4d\u7f6e\u906e\u64cb\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u6211\u5011\u5c07\u5f71\u50cf\u9032\u884c\u524d\u8655\u7406\uff0c\u63a5\u8457\u9935\u5165\u5148\u524d\u5df2\u5efa\u7acb\u597d\u7684 Inception V3 \u6a21\u578b\uff0c\u7136\u5f8c\u63d0\u53d6\u7279\u5b9a\u985e\u5225\u7684\u9810\u6e2c\u6a5f\u7387\u503c\uff0c\u5728\u672c\u7bc4\u4f8b\u4e2d\u6211\u5011\u8981\u89c0\u5bdf bull_mastiff \u985e\u5225\u7684\u6a5f\u7387\uff0c\u6700\u7d42\u9019\u4e9b\u6a5f\u7387\u503c\u5b58\u5132\u5728 target_class_probs \u4e2d\u4f9b\u5f8c\u7e8c\u4f7f\u7528\u3002 # \u5efa\u7acb\u6a21\u578b\u8f38\u5165\u8cc7\u6599 inputs = np . array ( patches , copy = True ) # \u9810\u8655\u7406\u5716\u50cf inputs = preprocess_input ( inputs ) # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( inputs , batch_size = batch_size ) # \u53d6\u5f97 bull_mastiff \u985e\u5225\u7684\u6a5f\u7387 target_class_probs = [ prob [ target_class_idx ] for prob in pred_proba ] \u6211\u5011\u5c07\u525b\u525b\u8a08\u7b97\u51fa\u4f86\u7684\u7d50\u679c\u900f\u904e\u8996\u89ba\u5316\u65b9\u5f0f\u5448\u73fe\u3002\u53ef\u4ee5\u6e05\u695a\u7684\u89c0\u5bdf\u6bcf\u4e00\u5f35\u906e\u64cb\u7248\u672c\u7684\u5716\u50cf\uff0c\u4ee5\u53ca\u76f8\u5c0d\u61c9\u7684\u985e\u5225\u6a5f\u7387\u70ba\u591a\u5c11\u3002 # \u8a08\u7b97\u7db2\u683c\u5927\u5c0f\uff0c\u7e6a\u5716\u6392\u7248\u7528 grid = math . ceil ( image . shape [ 0 ] / patch_size ) # \u5efa\u7acb\u4e00\u5f35\u5716\u5305\u542b\u591a\u500b\u5b50\u5716\uff0c\u4e26\u8a2d\u5b9a\u5716\u50cf\u7684\u5927\u5c0f\u548c\u6392\u5217\u65b9\u5f0f fig , ax = plt . subplots ( nrows = grid , ncols = grid , figsize = ( 20 , 20 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}, gridspec_kw = dict ( hspace = 0.2 , wspace = 0.1 )) # \u986f\u793a\u6bcf\u5f35\u906e\u64cb\u7248\u672c\u7684\u5716\u50cf for i in range ( len ( patches )): # \u8a2d\u5b9a\u6bcf\u500b\u5b50\u5716\u50cf\u7684\u6a19\u984c\uff0c\u5305\u62ec\u9810\u6e2c\u7684\u985e\u5225\u540d\u7a31\u548c\u76f8\u61c9\u7684\u6a5f\u7387\u503c ax [ i % grid , i // grid ] . set_title ( f 'Prediction: { predicted_class_name } { target_class_probs [ i ][ 0 ] : .6f } ' , fontsize = 16 ) # \u986f\u793a\u5b50\u5716\u50cf\uff0c\u4e26\u5c07\u50cf\u7d20\u503c\u9664\u4ee5255\u4ee5\u5c07\u5176\u6b63\u898f\u5316\u52300\u52301\u4e4b\u9593 ax [ i % grid , i // grid ] . imshow ( patches [ i ] / 255 ) \u4e0a\u4e00\u6b65\u9a5f\u5df2\u7d93\u89c0\u5bdf\u6a21\u578b\u5728\u6bcf\u500b\u906e\u64cb\u7248\u672c\u4e0b\u7684\u8f38\u51fa\u7684\u9810\u6e2c\u6a5f\u7387\u3002\u63a5\u4e0b\u4f86\u8a08\u7b97\u6bcf\u500b\u5b50\u5716\u50cf\u7684\u91cd\u8981\u6027\uff08\u654f\u611f\u7a0b\u5ea6\uff09\u3002\u6211\u5011\u4f7f\u75281\u6e1b\u53bb\u6a21\u578b\u9810\u6e2c\u6a5f\u7387\u503c\uff0c\u7576\u6210\u662f\u90a3\u584a patch \u7684\u91cd\u8981\u6027\uff0c\u9019\u6a23\u4f7f\u5f97\u6a21\u578b\u8f38\u51fa\u8f03\u9ad8\u7684\u6a5f\u7387\u503c\u5c07\u5c0d\u61c9\u8f03\u4f4e\u7684\u91cd\u8981\u6027\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u56e0\u6b64\u76f8\u6e1b\u4e4b\u5f8c\u7684\u503c\u8d8a\u9ad8\uff0c\u8868\u793a\u8a72\u906e\u64cb\u7070\u8272\u7684\u5340\u57df\u8d8a\u91cd\u8981\u3002\u6700\u5f8c\u5c07 sensitivity_map \u7684\u5927\u5c0f\u8abf\u6574\u70ba\u8207\u539f\u59cb\u5716\u50cf\u76f8\u540c\u7684\u5927\u5c0f\uff0c\u6bcf\u500b\u50cf\u7d20\u5c07\u5c0d\u61c9\u5230\u539f\u59cb\u5716\u50cf\u7684\u76f8\u61c9\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u8207\u539f\u59cb\u5716\u50cf\u4e00\u8d77\u4f7f\u7528\u6216\u986f\u793a\u3002 import cv2 import matplotlib.cm as cm # \u5c07 (1-\u6a5f\u7387\u503c) \u7576\u6210\u662f\u90a3\u584a patch \u7684\u91cd\u8981\u6027 for ( index_y , index_x ), confidence in zip ( coordinates , target_class_probs ): sensitivity_map [ index_y , index_x ] = 1 - confidence # \u8abf\u6574\u70ba\u8207\u539f\u59cb\u5716\u50cf\u76f8\u540c\u7684\u5927\u5c0f sensitivity_maps = cv2 . resize ( sensitivity_map , tuple ( image . shape [ 0 : 2 ])) \u91cd\u8981\u6027\u8a08\u7b97\u6709\u5f88\u591a\u7a2e\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528(\u539f\u59cb\u7121\u906e\u64cb\u5f71\u50cf\u7684\u6a5f\u7387-\u906e\u64cb\u5f8c\u9810\u6e2c\u7684\u6a5f\u7387)\u3002 \u6bcf\u500b\u5340\u584a\u91cd\u8981\u6027\u90fd\u5df2\u7d93\u8a08\u7b97\u51fa\u4f86\u4e86\uff0c\u6700\u5f8c\u6211\u5011\u5c31 matplotlib \u4f86\u8996\u89ba\u5316\u7d50\u679c\u5427\uff01\u5f9e\u7d50\u679c\u53ef\u4ee5\u767c\u73fe\uff0c\u7576\u6211\u5011\u906e\u64cb\u72d7\u7684\u81c9\u90e8\u6703\u5927\u5e45\u5ea6\u964d\u4f4e\u9810\u5224 bull_mastiff \u985e\u5225\u7684\u6a5f\u7387\u503c\u3002\u56e0\u6b64\u76f8\u5c0d\u7684\u53ef\u4ee5\u5f97\u77e5\u8fa8\u8b58\u72d7\u7684\u95dc\u9375\u7279\u5fb5\u5728\u65bc\u81c9\u90e8\u7279\u5fb5\u8207\u56db\u80a2\u3002 fig , axs = plt . subplots ( nrows = 1 , ncols = 3 , squeeze = False , figsize = ( 16 , 8 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}) axs [ 0 , 0 ] . set_title ( 'Original image' , fontsize = 20 ) axs [ 0 , 0 ] . imshow ( image / 255 ) axs [ 0 , 1 ] . set_title ( 'Sensitivity maps' , fontsize = 20 ) axs [ 0 , 1 ] . imshow ( sensitivity_maps , cmap = cm . inferno ) axs [ 0 , 2 ] . set_title ( 'Overlay' , fontsize = 20 ) axs [ 0 , 2 ] . imshow ( sensitivity_maps , cmap = cm . inferno ) axs [ 0 , 2 ] . imshow ( image / 255 , alpha = 0.4 ) \u6700\u5f8c\u6211\u5011\u518d\u9032\u884c\u4e00\u500b\u6709\u8da3\u7684\u5be6\u9a57\uff0c\u5982\u679c\u6211\u5011\u906e\u4f4f\u72d7\u7684\u81c9\uff0c\u7136\u5f8c\u518d\u6b21\u4f7f\u7528 InceptionV3 \u6a21\u578b\u9032\u884c\u9810\u6e2c\uff0c\u4f60\u731c\u731c\u6703\u5f97\u5230\u4ec0\u9ebc\u8f38\u51fa\uff1f\u679c\u7136\u5982\u9810\u671f\uff0c\u6a21\u578b\u6ce8\u610f\u529b\u8f49\u5411\u8c93\u7684\u7279\u5fb5\uff0c\u6700\u7d42\u8f38\u51fa\u4e86 tabby \uff08\u864e\u6591\u8c93\uff09\u3002","title":"Occlusion Sensitivity \u5be6\u4f5c"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#_1","text":"Perturbation-Based \u9084\u6709\u8a31\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u6211\u5011\u53ef\u4ee5\u81ea\u5b9a\u7fa9\u76ee\u6a19\u51fd\u6578\u4ee5\u53ca\u5716\u7247\u906e\u64cb\u7684\u6280\u5de7(\u6a21\u7cca\u5316\u3001\u6578\u503c\u66ff\u63db\u3001\u52a0\u5165\u96dc\u8a0a)\u3002\u4e26\u91dd\u5c0d\u4e00\u500b\u6a21\u578b\u6bcf\u500b\u8f38\u5165\u53bb\u5c0b\u627e\u906e\u853d\u54ea\u88e1\u53ef\u4ee5\u7372\u5f97\u6700\u4f73\u7684\u89e3\u91cb\u6027\u3002\u4e5f\u5c31\u662f\u906e\u853d\u4e86\u54ea\u4e9b\u5730\u65b9\uff0c\u5c0d\u6a21\u578b\u6a21\u578b\u5206\u985e\u7684\u7d50\u679c\u6703\u9020\u6210\u6700\u5927\u7684\u8ca0\u5f71\u97ff\u3002\u6709\u8208\u8da3\u7684\u4eba\u4e5f\u53ef\u4ee5\u53c3\u8003\u9019\u7bc7\u8ad6\u6587\uff1a Interpretable Explanations of Black Boxes by Meaningful Perturbation \u3002","title":"\u5c0f\u7d50"},{"location":"19.Perturbation-Based:\u5982\u4f55\u7528\u64fe\u52d5\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#reference","text":"[\u8ad6\u6587\u901f\u901f\u8b80]Visualizing and Understanding Convolutional Networks Google Cloud: Advanced Guide to Inception v3 Visualization of Convolutional Neural Networks in PyTorch \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 01 \u57fa\u65bc\u906e\u64cb\u7684\u65b9\u6cd5 (Perturbation-Based): Occlusion Sensitivity, Meaningful Perturbation","title":"Reference"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/","text":"[Day 2] \u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316\uff1aXAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def \u8fd1\u5e74\u4f86\u4eba\u5de5\u667a\u6167\u6280\u8853\u767c\u5c55\u8fc5\u901f\uff0c\u6df1\u5ea6\u5b78\u7fd2\u7b49\u6280\u8853\u7684\u51fa\u73fe\u548c\u61c9\u7528\u5df2\u7d93\u5e36\u4f86\u4e86\u5f88\u591a\u9a5a\u4eba\u7684\u6210\u679c\uff0c\u5c24\u5176\u662f ChatGPT \u7684\u51fa\u73fe\u66f4\u8b93\u4eba\u5011\u9a5a\u5606\u4e0d\u5df2\u3002\u7136\u800c\u9019\u4e9b\u6a21\u578b\u7684\u9ed1\u7bb1\u7279\u6027\u4e00\u76f4\u662f\u4eba\u5de5\u667a\u6167\u9818\u57df\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u8b70\u984c\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u8d8a\u4f86\u8d8a\u591a\u7684\u7814\u7a76\u8005\u958b\u59cb\u95dc\u6ce8\u89e3\u91cb\u6027\u4eba\u5de5\u667a\u6167\u6280\u8853\u7684\u767c\u5c55\u3002XAI \u6280\u8853\u5728\u904e\u53bb\u5e7e\u5e74\u4e2d\u7d93\u6b77\u4e86\u9577\u8db3\u7684\u767c\u5c55\uff0c\u5f9e\u6700\u521d\u7684\u53ef\u8996\u5316\u6280\u8853\u5230\u73fe\u5728\u7684\u57fa\u65bc\u898f\u5247\u7684\u89e3\u91cb\u3001\u6df1\u5ea6\u5b78\u7fd2\u53ef\u89e3\u91cb\u6027\u6280\u8853\u3001\u6a21\u578b\u904e\u7a0b\u53ef\u89e3\u91cb\u6280\u8853\u7b49\u7b49\uff0c\u4e0d\u65b7\u5730\u63a8\u9673\u51fa\u65b0\u3002\u9019\u4e9b\u6280\u8853\u7684\u4e0d\u65b7\u9769\u65b0\u548c\u63d0\u9ad8\uff0c\u8b93\u4eba\u5011\u5c0d\u65bc\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u6c7a\u7b56\u904e\u7a0b\u7684\u7406\u89e3\u66f4\u52a0\u6df1\u5165\u548c\u5168\u9762\uff0c\u4e5f\u63d0\u9ad8\u4e86\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u5be6\u7528\u6027\u3002\u4eca\u5929\u7684\u5167\u5bb9\u6211\u5011\u5c07\u63a2\u8a0e XAI \u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def\uff0c\u4e26\u4ecb\u7d39\u5e7e\u500b\u5177\u6709\u4ee3\u8868\u6027\u7684 XAI \u6280\u8853\u3002 XAI \u5b78\u7fd2\u5730\u5716 \u4e0b\u5716\u53d6\u81ea\u65bc Jay Alammar \u7684\u90e8\u843d\u683c\uff0c\u4e3b\u8981\u8aaa\u660e XAI \u6280\u8853\u4e2d\u4f9d\u64da\u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u4e0d\u540c\uff0c\u5206\u6210\u4e86\u591a\u7a2e\u89e3\u91cb\u65b9\u6cd5\u3002\u9019\u4e9b\u65b9\u6cd5\u53ef\u5206\u70ba\u6a21\u578b\u672c\u8eab\u5177\u6709\u53ef\u89e3\u91cb\u6027\u6216\u662f\u904e\u65bc\u8907\u96dc\u96e3\u4ee5\u89e3\u91cb\u7684\u60c5\u6cc1\u3002\u5c0d\u65bc\u904e\u65bc\u8907\u96dc\u7684\u6a21\u578b\uff0c\u6211\u5011\u9700\u8981\u900f\u904e\u4e8b\u5f8c\u5206\u6790\u6280\u8853\u4f86\u5354\u52a9\u7406\u89e3\u6a21\u578b\u63a8\u8ad6\u7684\u908f\u8f2f\u3002\u4eca\u5929\u63d0\u5230\u7684\u6240\u6709\u540d\u8a5e\u57fa\u672c\u4e0a\u5f7c\u6b64\u9593\u90fd\u74b0\u74b0\u76f8\u6263\uff0c\u5c31\u8b93\u6211\u6518\u9010\u4e00\u70ba\u5404\u4f4d\u8aaa\u660e\u3002 Interpretable Models vs. Post hoc Explanations XAI \u65b9\u6cd5\u53ef\u5206\u70ba\u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb\uff08Interpretable Models\uff09\u8207\u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb\uff08Post hoc Explanations\uff09\u5169\u7a2e\u3002\u5176\u4e2d\uff0c\u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb\u7684\u65b9\u6cd5\u5305\u62ec\uff1a\u7dda\u6027\u8ff4\u6b78\u3001\u908f\u8f2f\u8ff4\u6b78\u3001\u6c7a\u7b56\u6a39\u3001K-nearest neighbors\u3001\u8c9d\u8449\u65af\u7db2\u7d61\u6a21\u578b\u3002\u9019\u4e9b\u6a21\u578b\u5728\u81ea\u8eab\u8a2d\u8a08\u4e0a\u5c31\u5df2\u7d93\u5177\u6709\u4e00\u5b9a\u7684\u89e3\u91cb\u6027\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u900f\u904e\u6a21\u578b\u672c\u8eab\u4f86\u89e3\u91cb\u9810\u6e2c\u7d50\u679c\u3002 \u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb: - \u7dda\u6027\u8ff4\u6b78 (Linear regression) / \u908f\u8f2f\u8ff4\u6b78 (Logistic regression) - \u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u901a\u5e38\u662f\u57fa\u65bc\u7dda\u6027\u65b9\u7a0b\u4f86\u9810\u6e2c\u76ee\u6a19\u7279\u5fb5\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u91cb\u6a21\u578b\u6b0a\u91cd\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u3002 - \u6c7a\u7b56\u6a39 (Decision tree) - \u6c7a\u7b56\u6a39\u662f\u57fa\u65bc\u6a39\u7d50\u69cb\u7684\u6a21\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u904e\u6a39\u7684\u5206\u652f\u8def\u5f91\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002 - K-nearest neighbors (KNN) - \u7531\u65bc KNN \u7b97\u6cd5\u672c\u8eab\u5c31\u662f\u57fa\u65bc\u8ddd\u96e2\u8a08\u7b97\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u89e3\u91cb\u6a21\u578b\u662f\u57fa\u65bc\u54ea\u4e9b\u6700\u8fd1\u9130\u5c45\u7684\u8cc7\u6599\u9032\u884c\u9810\u6e2c\u7684\u3002 - \u8c9d\u8449\u65af\u7db2\u7d61\u6a21\u578b (Bayesian Network Model) - \u901a\u904e\u6a5f\u7387\u6a21\u578b\u8868\u793a\u7279\u5fb5\u4e4b\u9593\u7684\u689d\u4ef6\u4f9d\u8cf4\u95dc\u4fc2\uff0c\u53ef\u7528\u65bc\u63a8\u8ad6\u548c\u9810\u6e2c\u3002 \u96d6\u7136\u96a8\u6a5f\u68ee\u6797\u548cXGBoost\u901a\u5e38\u88ab\u8a8d\u70ba\u662f\u6bd4\u8f03\u53ef\u89e3\u91cb\u7684tree-based\u7cfb\u5217\u6a21\u578b\uff0c\u56e0\u70ba\u5176\u7d50\u69cb\u76f8\u5c0d\u7c21\u55ae\uff0c\u53ef\u4ee5\u76f4\u89c0\u5730\u7406\u89e3\u6bcf\u500b\u6c7a\u7b56\u7684\u4f9d\u64da\u3002\u4f46\u5b83\u5011\u4e0d\u7b97\u662fInterpretable Models\uff0c\u56e0\u70ba\u5176\u6c7a\u7b56\u904e\u7a0b\u662f\u7531\u591a\u500b\u5f31\u5206\u985e\u5668\u6216\u6c7a\u7b56\u6a39\u5171\u540c\u6c7a\u5b9a\uff0c\u5176\u6574\u9ad4\u89e3\u91cb\u6027\u8f03\u96e3\u638c\u63e1\uff0c\u9700\u8981\u900f\u904e\u5176\u4ed6\u89e3\u91cb\u65b9\u6cd5\u4f86\u9032\u884c\u89e3\u91cb\u3002 Post hoc Explanations \u6307\u7684\u662f\u5728\u6a21\u578b\u8a13\u7df4\u5b8c\u7562\u5f8c\uff0c\u4f7f\u7528\u984d\u5916\u7684\u89e3\u91cb\u65b9\u6cd5\u4f86\u7406\u89e3\u6a21\u578b\u7684\u884c\u70ba\u548c\u6c7a\u7b56\u904e\u7a0b\u3002\u9019\u4e9b\u65b9\u6cd5\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u4e9b\u6578\u64da\u53ef\u8996\u5316\u6216\u7d71\u8a08\u6280\u8853\uff0c\u4f86\u986f\u793a\u6a21\u578b\u4e2d\u4e0d\u540c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u4ee5\u53ca\u9019\u4e9b\u7279\u5fb5\u5c0d\u6a21\u578b\u7d50\u679c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5e38\u898b\u7684 Post hoc \u89e3\u91cb\u65b9\u6cd5\u5305\u62ec Permutation Importance\u3001Partial Dependence Plot (PDP)\u3001Accumulated Local Effects (ALE)\u3001SHapley Additive exPlanations (SHAP)\u3001Local Interpretable Model-agnostic Explanations (LIME) \u7b49\u7b49\u3002\u9019\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff0c\u5305\u62ec\u6c7a\u7b56\u6a39\u3001\u795e\u7d93\u7db2\u7d61\u3001\u652f\u6301\u5411\u91cf\u6a5f\u7b49\u7b49\u3002 \u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb: - Local Interpretable Model-agnostic Explanations ( LIME ) - SHapley Additive exPlanations ( SHAP ) Global vs. Local Explanations \u525b\u6240\u63d0\u5230\u7684\u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb\u7684\u65b9\u6cd5\u53c8\u53ef\u5206\u70ba Global \u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba\u4ee5\u53ca Local \u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u884c\u70ba\u3002Global \u7684\u65b9\u6cd5\u7684\u76ee\u7684\u662f\u7406\u89e3\u6a21\u578b\u5c0d\u6240\u6709\u6578\u64da\u9ede\u7684\u9810\u6e2c\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u7279\u5b9a\u7684\u6578\u64da\u9ede\u6216\u89c0\u6e2c\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u5e38\u6d89\u53ca\u5230\u89e3\u91cb\u6a21\u578b\u4e2d\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u5373\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u5f71\u97ff\u6700\u5927\u3002 \u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\uff0c\u4f8b\u5982\uff1a - Permutation Importance\uff1a\u96a8\u6a5f\u91cd\u6392\u7279\u5fb5\uff0c\u8a08\u7b97\u5c0d\u6a21\u578b\u6e96\u78ba\u5ea6\u7684\u5f71\u97ff - Partial Dependence Plot (PDP)\uff1a\u986f\u793a\u67d0\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6 - Accumulated Local Effects (ALE)\uff1a\u4f30\u8a08\u67d0\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u7a0b\u5ea6 - SHapley Additive exPlanations (SHAP)\uff1a\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u8ca2\u737b\u7a0b\u5ea6 \u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u884c\u70ba\uff0c\u4f8b\u5982\uff1a - Local Interpretable Model-agnostic Explanations (LIME)\uff1a\u901a\u904e\u751f\u6210\u5c40\u90e8\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u4f86\u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u7684\u7d50\u679c\u3002 - SHapley Additive exPlanations (SHAP)\uff1a\u900f\u904e\u7d66\u6bcf\u500b\u7279\u5fb5\u4e00\u500b\u6b0a\u91cd\uff0c\u8a08\u7b97\u5176\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u8ca2\u737b\u3002 - ICE\uff08Individual Conditional Expectation\uff09\uff1a\u8207 PDP \u985e\u4f3c\uff0c\u4e0d\u540c\u4e4b\u8655\u5728\u65bc ICE \u5c07\u6bcf\u500b\u6a23\u672c\u8996\u70ba\u4e00\u500b\u7368\u7acb\u7684\u500b\u9ad4\uff0c\u800c PDP \u5247\u5c07\u6240\u6709\u6a23\u672c\u8996\u70ba\u540c\u4e00\u500b\u6574\u9ad4\u3002 SHAP \u53ef\u4ee5\u540c\u6642\u7528\u65bc\u5206\u6790\u5168\u5c40\u548c\u5c40\u90e8\u8ca2\u737b\uff0c\u4e26\u63d0\u4f9b\u6709\u95dc\u6bcf\u500b\u7279\u5fb5\u5982\u4f55\u5f71\u97ff\u6a21\u578b\u9810\u6e2c\u7684\u8a73\u7d30\u8a0a\u606f\u3002 Model Agnostic vs. Model Specific \u6700\u5f8c XAI \u7684\u65b9\u6cd5\u53c8\u53ef\u7d30\u5206\u70ba Model Agnostic \u548c Model Specific \u5169\u7a2e\u3002Model Agnostic \u7684\u65b9\u6cd5\u662f\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\uff0c\u4f8b\u5982\u5148\u524d\u63d0\u5230\u7684 LIME \u548c SHAP \u90fd\u662f\u900f\u904e\u8cc7\u6599\u642d\u914d\u65b9\u6cd5\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u7d93\u5178\u65b9\u6cd5\u3002 Model Agnostic \u4e0d\u8003\u616e\u6a21\u578b\u672c\u8eab\uff0c\u53ea\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u65b9\u6cd5\uff1a - LIME\u3001SHAP\u3001PDP\u3001ICE\u3001ALE - Anchor\uff1a\u900f\u904e\u627e\u5c0b\u53ef\u4ee5\u5c0d\u9810\u6e2c\u7d50\u679c\u7522\u751f\u91cd\u8981\u5f71\u97ff\u7684\u689d\u4ef6\u898f\u5247\uff0c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002 - Surrogate Model\uff1a\u4f7f\u7528\u53e6\u4e00\u500b\u6a21\u578b\u4f86\u8fd1\u4f3c\u6a21\u64ec\u539f\u59cb\u6a21\u578b\uff0c\u4e26\u4ee5\u6b64\u6a21\u578b\u4f86\u9032\u884c\u89e3\u91cb\u3002\u5e38\u7528\u7684\u6a21\u578b\u5305\u62ec\u7dda\u6027\u6a21\u578b\u3001\u6c7a\u7b56\u6a39\u7b49\u3002 \u800c Model Specific \u7684\u65b9\u6cd5\u5247\u662f\u91dd\u5c0d\u7279\u5b9a\u6a21\u578b\u4f86\u9032\u884c\u89e3\u91cb\u3002\u4f8b\u5982\uff0c\u6c7a\u7b56\u6a39\u7cfb\u5217\u7684\u6f14\u7b97\u6cd5\u900f\u904e\u6a39\u7684\u5206\u652f\u53ef\u77e5\u9053\u6bcf\u500b\u7bc0\u9ede\u7684\u6c7a\u7b56\uff0c\u800c\u795e\u7d93\u7db2\u8def\u900f\u904e\u68af\u5ea6\u4e0b\u964d\u6cd5\u5247\u53ef\u5206\u6790\u6bcf\u500b\u53c3\u6578\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u3002\u9019\u4e9b\u65b9\u6cd5\u6709\u52a9\u65bc\u4e86\u89e3\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\uff0c\u4f46\u7f3a\u9ede\u5728\u65bc\u9650\u5236\u5728\u7279\u5b9a\u6a21\u578b\u4e0a\u3002 Model Specific \u8003\u616e\u6a21\u578b\u672c\u8eab\uff0c\u89e3\u91cb\u6a21\u578b\u672c\u8eab\u7684\u65b9\u6cd5\uff1a - Tree-based model\uff1a\u900f\u904e\u6a39\u7684\u5206\u652f\u53ef\u4ee5\u77e5\u9053\u6bcf\u500b\u7bc0\u9ede\u7684\u6c7a\u7b56\uff0c\u4ee5\u53ca\u6bcf\u500b\u8b8a\u6578\u5c0d\u65bc\u6c7a\u7b56\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002 - \u795e\u7d93\u7db2\u8def\uff1a\u900f\u904e\u68af\u5ea6\u4e0b\u964d\u6cd5\u53ef\u4ee5\u5206\u6790\u6bcf\u500b\u53c3\u6578\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\uff0c\u6216\u662f\u4f7f\u7528\u985e\u795e\u7d93\u7db2\u8def\u7684\u53ef\u8996\u5316\u6280\u8853\u4f86\u89e3\u91cb\u6a21\u578b\u3002 - \u6a21\u578b\u878d\u5408\u65b9\u6cd5(Stacking)\uff1a\u900f\u904e\u5c07\u591a\u500b\u6a21\u578b\u9032\u884c\u7d50\u5408\uff0c\u53ef\u4ee5\u9032\u4e00\u6b65\u63d0\u5347\u9810\u6e2c\u6e96\u78ba\u5ea6\u4e26\u63a2\u7d22\u6bcf\u500b\u6a21\u578b\u5c0d\u65bc\u6574\u9ad4\u9810\u6e2c\u7684\u8ca2\u737b\u3002 Python XAI \u7684\u5957\u4ef6\u6709\u54ea\u4e9b\uff1f \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Python \u53ef\u89e3\u91cb AI \u5de5\u5177\uff1a SHAP (SHapley Additive exPlanations)\uff1a\u53ef\u89e3\u91cb\u6027\u6a5f\u5668\u5b78\u7fd2\u5de5\u5177\uff0c\u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u7684\u89e3\u91cb\uff0c\u4e26\u900f\u904e Shapley \u503c\u8a08\u7b97\u5f71\u97ff\u9810\u6e2c\u7684\u56e0\u7d20\u8ca2\u737b\u5ea6\u3002 LIME (Local Interpretable Model-Agnostic Explanations)\uff1a\u4e00\u7a2e\u5c40\u90e8\u89e3\u91cb\u6a21\u578b\u7684\u5de5\u5177\uff0c\u80fd\u5920\u89e3\u91cb\u6a21\u578b\u5728\u55ae\u500b\u9810\u6e2c\u4e2d\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u4e0d\u8003\u616e\u6a21\u578b\u672c\u8eab\u3002 scikit-learn Inspection \uff1a sklearn \u5957\u4ef6\u4e2d\u7684 inspection \u63d0\u4f9b\u4e86\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba\u7684\u65b9\u6cd5\uff0c\u5e6b\u52a9\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u4ee5\u53ca\u89c0\u5bdf\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002 ELI5 (Explain Like I'm Five)\uff1a\u652f\u6301\u591a\u7a2e\u6a21\u578b\u89e3\u91cb\uff0c\u5305\u62ec\u7dda\u6027\u6a21\u578b\u3001\u6c7a\u7b56\u6a39\u3001\u96a8\u6a5f\u68ee\u6797\u7b49\uff0c\u53ef\u7528\u65bc\u89e3\u91cb\u5168\u5c40\u548c\u5c40\u90e8\u7684\u9810\u6e2c\u3002 InterpretML \uff1a\u4e00\u500b\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u7684\u89e3\u91cb\uff0c\u4e26\u4e14\u53ef\u4ee5\u89e3\u91cb\u591a\u500b\u6a21\u578b\u4e4b\u9593\u7684\u6bd4\u8f03\u3002 What-if Tool \uff1aGoogle \u958b\u767c\u7684\u4e00\u7a2e\u4ea4\u4e92\u5f0f\u53ef\u89e3\u91cb\u6027\u5de5\u5177\uff0c\u80fd\u5920\u5c55\u793a\u7279\u5b9a\u8f38\u5165\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\uff0c\u4e26\u63d0\u4f9b\u8abf\u6574\u8f38\u5165\u4ee5\u89c0\u5bdf\u9810\u6e2c\u7d50\u679c\u7684\u529f\u80fd\u3002 Shapash \uff1a\u662f\u4e00\u500b\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u81ea\u52d5\u5316\u5831\u544a\u5de5\u5177\uff0c\u53ef\u4ee5\u5e6b\u52a9\u4f7f\u7528\u8005\u5feb\u901f\u89e3\u91cb\u4e26\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002 \u9664\u4e86\u4e0a\u8ff0\u5e7e\u500b\u4e4b\u5916\u9084\u5305\u62ec scikit-explain, Skope-rules, DTREEviz, H2O, Yellowbrick, PDPbox, Skater, Ciu, Dalex, Lofo, Anchor, PyCEbox, Alibi, Captum, AIX360, OmniXAI, L2X\u3002\u9019\u4e9b\u90fd\u53ef\u4ee5\u900f\u904e Python \u4f86\u8f14\u52a9\u6211\u5011\u89e3\u91cb\u8a13\u7df4\u597d\u7684\u6a21\u578b\u3002 \u672c\u7cfb\u5217\u5c07\u6703\u6311\u9078\u5e7e\u500b\u5177\u6709\u4ee3\u8868\u6027\u7684\u5de5\u5177\u4ecb\u7d39\u7d66\u5404\u4f4d\u90a6\u53cb \u5c0f\u7d50 \u6700\u5f8c\u7528\u9019\u5f35\u5716\u8868\u505a\u500b\u7e3d\u7d50\uff0c\u4e26\u7d71\u6574\u4e86\u4eca\u5929\u6240\u5b78\u7fd2\u7684\u5167\u5bb9\u3002\u7c21\u55ae\u4f86\u8aaa\uff0c\u8981\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u7d50\u679c\uff0c\u53ef\u4ee5\u63a1\u7528\u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb\u6216\u6a21\u578b\u672c\u8eab\u53ef\u89e3\u91cb\u7684\u65b9\u5f0f\u3002\u900f\u904e\u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb\uff0c\u6211\u5011\u53ef\u4ee5\u9032\u4e00\u6b65\u4e86\u89e3\u6a21\u578b\u5728\u7279\u5b9a\u6578\u64da\u4e0a\u7684\u8868\u73fe\uff0c\u4ee5\u53ca\u6a21\u578b\u80cc\u5f8c\u7684\u63a8\u8ad6\u904e\u7a0b\u3002\u800c\u6a21\u578b\u672c\u8eab\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u5247\u53ef\u4ee5\u63d0\u4f9b\u76f4\u63a5\u7684\u89e3\u91cb\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u5728\u4e0d\u540c\u60c5\u6cc1\u4e0b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u6b64\u5916\uff0c\u89e3\u91cb\u6574\u500b\u6a21\u578b\u53ef\u4ee5\u63ed\u793a\u6a21\u578b\u7684\u6574\u9ad4\u7d50\u69cb\u548c\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u800c\u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5982\u4f55\u9032\u884c\u500b\u5225\u9810\u6e2c\u3002\u900f\u904e\u8cc7\u6599\u89e3\u91cb\u53ef\u4ee5\u89e3\u91cb\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff0c\u800c\u7279\u5b9a\u6a21\u578b\u89e3\u91cb\u5247\u5c08\u6ce8\u65bc\u91dd\u5c0d\u7279\u5b9a\u985e\u578b\u7684\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002 \u660e\u5929\u6211\u5011\u5c31\u4f86\u8ac7\u8ac7\u9019\u4e9b\u95dc\u65bc\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u7684\u6307\u6a19 Reference Explainable AI Cheat Sheet by Jay Alammar (Arpeggio) Developing and Experimenting on Approaches to Explainability in AI Systems","title":"[Day 2] \u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316\uff1aXAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#day-2-xai","text":"\u8fd1\u5e74\u4f86\u4eba\u5de5\u667a\u6167\u6280\u8853\u767c\u5c55\u8fc5\u901f\uff0c\u6df1\u5ea6\u5b78\u7fd2\u7b49\u6280\u8853\u7684\u51fa\u73fe\u548c\u61c9\u7528\u5df2\u7d93\u5e36\u4f86\u4e86\u5f88\u591a\u9a5a\u4eba\u7684\u6210\u679c\uff0c\u5c24\u5176\u662f ChatGPT \u7684\u51fa\u73fe\u66f4\u8b93\u4eba\u5011\u9a5a\u5606\u4e0d\u5df2\u3002\u7136\u800c\u9019\u4e9b\u6a21\u578b\u7684\u9ed1\u7bb1\u7279\u6027\u4e00\u76f4\u662f\u4eba\u5de5\u667a\u6167\u9818\u57df\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u8b70\u984c\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u8d8a\u4f86\u8d8a\u591a\u7684\u7814\u7a76\u8005\u958b\u59cb\u95dc\u6ce8\u89e3\u91cb\u6027\u4eba\u5de5\u667a\u6167\u6280\u8853\u7684\u767c\u5c55\u3002XAI \u6280\u8853\u5728\u904e\u53bb\u5e7e\u5e74\u4e2d\u7d93\u6b77\u4e86\u9577\u8db3\u7684\u767c\u5c55\uff0c\u5f9e\u6700\u521d\u7684\u53ef\u8996\u5316\u6280\u8853\u5230\u73fe\u5728\u7684\u57fa\u65bc\u898f\u5247\u7684\u89e3\u91cb\u3001\u6df1\u5ea6\u5b78\u7fd2\u53ef\u89e3\u91cb\u6027\u6280\u8853\u3001\u6a21\u578b\u904e\u7a0b\u53ef\u89e3\u91cb\u6280\u8853\u7b49\u7b49\uff0c\u4e0d\u65b7\u5730\u63a8\u9673\u51fa\u65b0\u3002\u9019\u4e9b\u6280\u8853\u7684\u4e0d\u65b7\u9769\u65b0\u548c\u63d0\u9ad8\uff0c\u8b93\u4eba\u5011\u5c0d\u65bc\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u6c7a\u7b56\u904e\u7a0b\u7684\u7406\u89e3\u66f4\u52a0\u6df1\u5165\u548c\u5168\u9762\uff0c\u4e5f\u63d0\u9ad8\u4e86\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u5be6\u7528\u6027\u3002\u4eca\u5929\u7684\u5167\u5bb9\u6211\u5011\u5c07\u63a2\u8a0e XAI \u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def\uff0c\u4e26\u4ecb\u7d39\u5e7e\u500b\u5177\u6709\u4ee3\u8868\u6027\u7684 XAI \u6280\u8853\u3002","title":"[Day 2] \u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316\uff1aXAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#xai","text":"\u4e0b\u5716\u53d6\u81ea\u65bc Jay Alammar \u7684\u90e8\u843d\u683c\uff0c\u4e3b\u8981\u8aaa\u660e XAI \u6280\u8853\u4e2d\u4f9d\u64da\u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u4e0d\u540c\uff0c\u5206\u6210\u4e86\u591a\u7a2e\u89e3\u91cb\u65b9\u6cd5\u3002\u9019\u4e9b\u65b9\u6cd5\u53ef\u5206\u70ba\u6a21\u578b\u672c\u8eab\u5177\u6709\u53ef\u89e3\u91cb\u6027\u6216\u662f\u904e\u65bc\u8907\u96dc\u96e3\u4ee5\u89e3\u91cb\u7684\u60c5\u6cc1\u3002\u5c0d\u65bc\u904e\u65bc\u8907\u96dc\u7684\u6a21\u578b\uff0c\u6211\u5011\u9700\u8981\u900f\u904e\u4e8b\u5f8c\u5206\u6790\u6280\u8853\u4f86\u5354\u52a9\u7406\u89e3\u6a21\u578b\u63a8\u8ad6\u7684\u908f\u8f2f\u3002\u4eca\u5929\u63d0\u5230\u7684\u6240\u6709\u540d\u8a5e\u57fa\u672c\u4e0a\u5f7c\u6b64\u9593\u90fd\u74b0\u74b0\u76f8\u6263\uff0c\u5c31\u8b93\u6211\u6518\u9010\u4e00\u70ba\u5404\u4f4d\u8aaa\u660e\u3002","title":"XAI \u5b78\u7fd2\u5730\u5716"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#interpretable-models-vs-post-hoc-explanations","text":"XAI \u65b9\u6cd5\u53ef\u5206\u70ba\u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb\uff08Interpretable Models\uff09\u8207\u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb\uff08Post hoc Explanations\uff09\u5169\u7a2e\u3002\u5176\u4e2d\uff0c\u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb\u7684\u65b9\u6cd5\u5305\u62ec\uff1a\u7dda\u6027\u8ff4\u6b78\u3001\u908f\u8f2f\u8ff4\u6b78\u3001\u6c7a\u7b56\u6a39\u3001K-nearest neighbors\u3001\u8c9d\u8449\u65af\u7db2\u7d61\u6a21\u578b\u3002\u9019\u4e9b\u6a21\u578b\u5728\u81ea\u8eab\u8a2d\u8a08\u4e0a\u5c31\u5df2\u7d93\u5177\u6709\u4e00\u5b9a\u7684\u89e3\u91cb\u6027\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u900f\u904e\u6a21\u578b\u672c\u8eab\u4f86\u89e3\u91cb\u9810\u6e2c\u7d50\u679c\u3002 \u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb: - \u7dda\u6027\u8ff4\u6b78 (Linear regression) / \u908f\u8f2f\u8ff4\u6b78 (Logistic regression) - \u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u901a\u5e38\u662f\u57fa\u65bc\u7dda\u6027\u65b9\u7a0b\u4f86\u9810\u6e2c\u76ee\u6a19\u7279\u5fb5\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u91cb\u6a21\u578b\u6b0a\u91cd\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\u3002 - \u6c7a\u7b56\u6a39 (Decision tree) - \u6c7a\u7b56\u6a39\u662f\u57fa\u65bc\u6a39\u7d50\u69cb\u7684\u6a21\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u904e\u6a39\u7684\u5206\u652f\u8def\u5f91\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u3002 - K-nearest neighbors (KNN) - \u7531\u65bc KNN \u7b97\u6cd5\u672c\u8eab\u5c31\u662f\u57fa\u65bc\u8ddd\u96e2\u8a08\u7b97\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u89e3\u91cb\u6a21\u578b\u662f\u57fa\u65bc\u54ea\u4e9b\u6700\u8fd1\u9130\u5c45\u7684\u8cc7\u6599\u9032\u884c\u9810\u6e2c\u7684\u3002 - \u8c9d\u8449\u65af\u7db2\u7d61\u6a21\u578b (Bayesian Network Model) - \u901a\u904e\u6a5f\u7387\u6a21\u578b\u8868\u793a\u7279\u5fb5\u4e4b\u9593\u7684\u689d\u4ef6\u4f9d\u8cf4\u95dc\u4fc2\uff0c\u53ef\u7528\u65bc\u63a8\u8ad6\u548c\u9810\u6e2c\u3002 \u96d6\u7136\u96a8\u6a5f\u68ee\u6797\u548cXGBoost\u901a\u5e38\u88ab\u8a8d\u70ba\u662f\u6bd4\u8f03\u53ef\u89e3\u91cb\u7684tree-based\u7cfb\u5217\u6a21\u578b\uff0c\u56e0\u70ba\u5176\u7d50\u69cb\u76f8\u5c0d\u7c21\u55ae\uff0c\u53ef\u4ee5\u76f4\u89c0\u5730\u7406\u89e3\u6bcf\u500b\u6c7a\u7b56\u7684\u4f9d\u64da\u3002\u4f46\u5b83\u5011\u4e0d\u7b97\u662fInterpretable Models\uff0c\u56e0\u70ba\u5176\u6c7a\u7b56\u904e\u7a0b\u662f\u7531\u591a\u500b\u5f31\u5206\u985e\u5668\u6216\u6c7a\u7b56\u6a39\u5171\u540c\u6c7a\u5b9a\uff0c\u5176\u6574\u9ad4\u89e3\u91cb\u6027\u8f03\u96e3\u638c\u63e1\uff0c\u9700\u8981\u900f\u904e\u5176\u4ed6\u89e3\u91cb\u65b9\u6cd5\u4f86\u9032\u884c\u89e3\u91cb\u3002 Post hoc Explanations \u6307\u7684\u662f\u5728\u6a21\u578b\u8a13\u7df4\u5b8c\u7562\u5f8c\uff0c\u4f7f\u7528\u984d\u5916\u7684\u89e3\u91cb\u65b9\u6cd5\u4f86\u7406\u89e3\u6a21\u578b\u7684\u884c\u70ba\u548c\u6c7a\u7b56\u904e\u7a0b\u3002\u9019\u4e9b\u65b9\u6cd5\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u4e9b\u6578\u64da\u53ef\u8996\u5316\u6216\u7d71\u8a08\u6280\u8853\uff0c\u4f86\u986f\u793a\u6a21\u578b\u4e2d\u4e0d\u540c\u7279\u5fb5\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u4ee5\u53ca\u9019\u4e9b\u7279\u5fb5\u5c0d\u6a21\u578b\u7d50\u679c\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5e38\u898b\u7684 Post hoc \u89e3\u91cb\u65b9\u6cd5\u5305\u62ec Permutation Importance\u3001Partial Dependence Plot (PDP)\u3001Accumulated Local Effects (ALE)\u3001SHapley Additive exPlanations (SHAP)\u3001Local Interpretable Model-agnostic Explanations (LIME) \u7b49\u7b49\u3002\u9019\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff0c\u5305\u62ec\u6c7a\u7b56\u6a39\u3001\u795e\u7d93\u7db2\u7d61\u3001\u652f\u6301\u5411\u91cf\u6a5f\u7b49\u7b49\u3002 \u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb: - Local Interpretable Model-agnostic Explanations ( LIME ) - SHapley Additive exPlanations ( SHAP )","title":"Interpretable Models vs. Post hoc Explanations"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#global-vs-local-explanations","text":"\u525b\u6240\u63d0\u5230\u7684\u6a21\u578b\u8a13\u7df4\u5b8c\u4e8b\u5f8c\u89e3\u91cb\u7684\u65b9\u6cd5\u53c8\u53ef\u5206\u70ba Global \u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba\u4ee5\u53ca Local \u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u884c\u70ba\u3002Global \u7684\u65b9\u6cd5\u7684\u76ee\u7684\u662f\u7406\u89e3\u6a21\u578b\u5c0d\u6240\u6709\u6578\u64da\u9ede\u7684\u9810\u6e2c\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u7279\u5b9a\u7684\u6578\u64da\u9ede\u6216\u89c0\u6e2c\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u5e38\u6d89\u53ca\u5230\u89e3\u91cb\u6a21\u578b\u4e2d\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u5373\u54ea\u4e9b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u5f71\u97ff\u6700\u5927\u3002 \u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\uff0c\u4f8b\u5982\uff1a - Permutation Importance\uff1a\u96a8\u6a5f\u91cd\u6392\u7279\u5fb5\uff0c\u8a08\u7b97\u5c0d\u6a21\u578b\u6e96\u78ba\u5ea6\u7684\u5f71\u97ff - Partial Dependence Plot (PDP)\uff1a\u986f\u793a\u67d0\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6 - Accumulated Local Effects (ALE)\uff1a\u4f30\u8a08\u67d0\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u7a0b\u5ea6 - SHapley Additive exPlanations (SHAP)\uff1a\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u9810\u6e2c\u503c\u7684\u8ca2\u737b\u7a0b\u5ea6 \u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u884c\u70ba\uff0c\u4f8b\u5982\uff1a - Local Interpretable Model-agnostic Explanations (LIME)\uff1a\u901a\u904e\u751f\u6210\u5c40\u90e8\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u4f86\u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u7684\u7d50\u679c\u3002 - SHapley Additive exPlanations (SHAP)\uff1a\u900f\u904e\u7d66\u6bcf\u500b\u7279\u5fb5\u4e00\u500b\u6b0a\u91cd\uff0c\u8a08\u7b97\u5176\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u8ca2\u737b\u3002 - ICE\uff08Individual Conditional Expectation\uff09\uff1a\u8207 PDP \u985e\u4f3c\uff0c\u4e0d\u540c\u4e4b\u8655\u5728\u65bc ICE \u5c07\u6bcf\u500b\u6a23\u672c\u8996\u70ba\u4e00\u500b\u7368\u7acb\u7684\u500b\u9ad4\uff0c\u800c PDP \u5247\u5c07\u6240\u6709\u6a23\u672c\u8996\u70ba\u540c\u4e00\u500b\u6574\u9ad4\u3002 SHAP \u53ef\u4ee5\u540c\u6642\u7528\u65bc\u5206\u6790\u5168\u5c40\u548c\u5c40\u90e8\u8ca2\u737b\uff0c\u4e26\u63d0\u4f9b\u6709\u95dc\u6bcf\u500b\u7279\u5fb5\u5982\u4f55\u5f71\u97ff\u6a21\u578b\u9810\u6e2c\u7684\u8a73\u7d30\u8a0a\u606f\u3002","title":"Global vs. Local Explanations"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#model-agnostic-vs-model-specific","text":"\u6700\u5f8c XAI \u7684\u65b9\u6cd5\u53c8\u53ef\u7d30\u5206\u70ba Model Agnostic \u548c Model Specific \u5169\u7a2e\u3002Model Agnostic \u7684\u65b9\u6cd5\u662f\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\uff0c\u4f8b\u5982\u5148\u524d\u63d0\u5230\u7684 LIME \u548c SHAP \u90fd\u662f\u900f\u904e\u8cc7\u6599\u642d\u914d\u65b9\u6cd5\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u7d93\u5178\u65b9\u6cd5\u3002 Model Agnostic \u4e0d\u8003\u616e\u6a21\u578b\u672c\u8eab\uff0c\u53ea\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u65b9\u6cd5\uff1a - LIME\u3001SHAP\u3001PDP\u3001ICE\u3001ALE - Anchor\uff1a\u900f\u904e\u627e\u5c0b\u53ef\u4ee5\u5c0d\u9810\u6e2c\u7d50\u679c\u7522\u751f\u91cd\u8981\u5f71\u97ff\u7684\u689d\u4ef6\u898f\u5247\uff0c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002 - Surrogate Model\uff1a\u4f7f\u7528\u53e6\u4e00\u500b\u6a21\u578b\u4f86\u8fd1\u4f3c\u6a21\u64ec\u539f\u59cb\u6a21\u578b\uff0c\u4e26\u4ee5\u6b64\u6a21\u578b\u4f86\u9032\u884c\u89e3\u91cb\u3002\u5e38\u7528\u7684\u6a21\u578b\u5305\u62ec\u7dda\u6027\u6a21\u578b\u3001\u6c7a\u7b56\u6a39\u7b49\u3002 \u800c Model Specific \u7684\u65b9\u6cd5\u5247\u662f\u91dd\u5c0d\u7279\u5b9a\u6a21\u578b\u4f86\u9032\u884c\u89e3\u91cb\u3002\u4f8b\u5982\uff0c\u6c7a\u7b56\u6a39\u7cfb\u5217\u7684\u6f14\u7b97\u6cd5\u900f\u904e\u6a39\u7684\u5206\u652f\u53ef\u77e5\u9053\u6bcf\u500b\u7bc0\u9ede\u7684\u6c7a\u7b56\uff0c\u800c\u795e\u7d93\u7db2\u8def\u900f\u904e\u68af\u5ea6\u4e0b\u964d\u6cd5\u5247\u53ef\u5206\u6790\u6bcf\u500b\u53c3\u6578\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\u3002\u9019\u4e9b\u65b9\u6cd5\u6709\u52a9\u65bc\u4e86\u89e3\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\uff0c\u4f46\u7f3a\u9ede\u5728\u65bc\u9650\u5236\u5728\u7279\u5b9a\u6a21\u578b\u4e0a\u3002 Model Specific \u8003\u616e\u6a21\u578b\u672c\u8eab\uff0c\u89e3\u91cb\u6a21\u578b\u672c\u8eab\u7684\u65b9\u6cd5\uff1a - Tree-based model\uff1a\u900f\u904e\u6a39\u7684\u5206\u652f\u53ef\u4ee5\u77e5\u9053\u6bcf\u500b\u7bc0\u9ede\u7684\u6c7a\u7b56\uff0c\u4ee5\u53ca\u6bcf\u500b\u8b8a\u6578\u5c0d\u65bc\u6c7a\u7b56\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002 - \u795e\u7d93\u7db2\u8def\uff1a\u900f\u904e\u68af\u5ea6\u4e0b\u964d\u6cd5\u53ef\u4ee5\u5206\u6790\u6bcf\u500b\u53c3\u6578\u5c0d\u65bc\u8f38\u51fa\u7684\u5f71\u97ff\uff0c\u6216\u662f\u4f7f\u7528\u985e\u795e\u7d93\u7db2\u8def\u7684\u53ef\u8996\u5316\u6280\u8853\u4f86\u89e3\u91cb\u6a21\u578b\u3002 - \u6a21\u578b\u878d\u5408\u65b9\u6cd5(Stacking)\uff1a\u900f\u904e\u5c07\u591a\u500b\u6a21\u578b\u9032\u884c\u7d50\u5408\uff0c\u53ef\u4ee5\u9032\u4e00\u6b65\u63d0\u5347\u9810\u6e2c\u6e96\u78ba\u5ea6\u4e26\u63a2\u7d22\u6bcf\u500b\u6a21\u578b\u5c0d\u65bc\u6574\u9ad4\u9810\u6e2c\u7684\u8ca2\u737b\u3002","title":"Model Agnostic vs. Model Specific"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#python-xai","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Python \u53ef\u89e3\u91cb AI \u5de5\u5177\uff1a SHAP (SHapley Additive exPlanations)\uff1a\u53ef\u89e3\u91cb\u6027\u6a5f\u5668\u5b78\u7fd2\u5de5\u5177\uff0c\u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u7684\u89e3\u91cb\uff0c\u4e26\u900f\u904e Shapley \u503c\u8a08\u7b97\u5f71\u97ff\u9810\u6e2c\u7684\u56e0\u7d20\u8ca2\u737b\u5ea6\u3002 LIME (Local Interpretable Model-Agnostic Explanations)\uff1a\u4e00\u7a2e\u5c40\u90e8\u89e3\u91cb\u6a21\u578b\u7684\u5de5\u5177\uff0c\u80fd\u5920\u89e3\u91cb\u6a21\u578b\u5728\u55ae\u500b\u9810\u6e2c\u4e2d\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u4e0d\u8003\u616e\u6a21\u578b\u672c\u8eab\u3002 scikit-learn Inspection \uff1a sklearn \u5957\u4ef6\u4e2d\u7684 inspection \u63d0\u4f9b\u4e86\u89e3\u91cb\u6574\u500b\u6a21\u578b\u884c\u70ba\u7684\u65b9\u6cd5\uff0c\u5e6b\u52a9\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u4ee5\u53ca\u89c0\u5bdf\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002 ELI5 (Explain Like I'm Five)\uff1a\u652f\u6301\u591a\u7a2e\u6a21\u578b\u89e3\u91cb\uff0c\u5305\u62ec\u7dda\u6027\u6a21\u578b\u3001\u6c7a\u7b56\u6a39\u3001\u96a8\u6a5f\u68ee\u6797\u7b49\uff0c\u53ef\u7528\u65bc\u89e3\u91cb\u5168\u5c40\u548c\u5c40\u90e8\u7684\u9810\u6e2c\u3002 InterpretML \uff1a\u4e00\u500b\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u89e3\u91cb\u5de5\u5177\uff0c\u63d0\u4f9b\u5168\u5c40\u548c\u5c40\u90e8\u7684\u89e3\u91cb\uff0c\u4e26\u4e14\u53ef\u4ee5\u89e3\u91cb\u591a\u500b\u6a21\u578b\u4e4b\u9593\u7684\u6bd4\u8f03\u3002 What-if Tool \uff1aGoogle \u958b\u767c\u7684\u4e00\u7a2e\u4ea4\u4e92\u5f0f\u53ef\u89e3\u91cb\u6027\u5de5\u5177\uff0c\u80fd\u5920\u5c55\u793a\u7279\u5b9a\u8f38\u5165\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\uff0c\u4e26\u63d0\u4f9b\u8abf\u6574\u8f38\u5165\u4ee5\u89c0\u5bdf\u9810\u6e2c\u7d50\u679c\u7684\u529f\u80fd\u3002 Shapash \uff1a\u662f\u4e00\u500b\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u81ea\u52d5\u5316\u5831\u544a\u5de5\u5177\uff0c\u53ef\u4ee5\u5e6b\u52a9\u4f7f\u7528\u8005\u5feb\u901f\u89e3\u91cb\u4e26\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002 \u9664\u4e86\u4e0a\u8ff0\u5e7e\u500b\u4e4b\u5916\u9084\u5305\u62ec scikit-explain, Skope-rules, DTREEviz, H2O, Yellowbrick, PDPbox, Skater, Ciu, Dalex, Lofo, Anchor, PyCEbox, Alibi, Captum, AIX360, OmniXAI, L2X\u3002\u9019\u4e9b\u90fd\u53ef\u4ee5\u900f\u904e Python \u4f86\u8f14\u52a9\u6211\u5011\u89e3\u91cb\u8a13\u7df4\u597d\u7684\u6a21\u578b\u3002 \u672c\u7cfb\u5217\u5c07\u6703\u6311\u9078\u5e7e\u500b\u5177\u6709\u4ee3\u8868\u6027\u7684\u5de5\u5177\u4ecb\u7d39\u7d66\u5404\u4f4d\u90a6\u53cb","title":"Python XAI \u7684\u5957\u4ef6\u6709\u54ea\u4e9b\uff1f"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#_1","text":"\u6700\u5f8c\u7528\u9019\u5f35\u5716\u8868\u505a\u500b\u7e3d\u7d50\uff0c\u4e26\u7d71\u6574\u4e86\u4eca\u5929\u6240\u5b78\u7fd2\u7684\u5167\u5bb9\u3002\u7c21\u55ae\u4f86\u8aaa\uff0c\u8981\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u7d50\u679c\uff0c\u53ef\u4ee5\u63a1\u7528\u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb\u6216\u6a21\u578b\u672c\u8eab\u53ef\u89e3\u91cb\u7684\u65b9\u5f0f\u3002\u900f\u904e\u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb\uff0c\u6211\u5011\u53ef\u4ee5\u9032\u4e00\u6b65\u4e86\u89e3\u6a21\u578b\u5728\u7279\u5b9a\u6578\u64da\u4e0a\u7684\u8868\u73fe\uff0c\u4ee5\u53ca\u6a21\u578b\u80cc\u5f8c\u7684\u63a8\u8ad6\u904e\u7a0b\u3002\u800c\u6a21\u578b\u672c\u8eab\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u5247\u53ef\u4ee5\u63d0\u4f9b\u76f4\u63a5\u7684\u89e3\u91cb\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u5728\u4e0d\u540c\u60c5\u6cc1\u4e0b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u6b64\u5916\uff0c\u89e3\u91cb\u6574\u500b\u6a21\u578b\u53ef\u4ee5\u63ed\u793a\u6a21\u578b\u7684\u6574\u9ad4\u7d50\u69cb\u548c\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u800c\u89e3\u91cb\u55ae\u7b46\u9810\u6e2c\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5982\u4f55\u9032\u884c\u500b\u5225\u9810\u6e2c\u3002\u900f\u904e\u8cc7\u6599\u89e3\u91cb\u53ef\u4ee5\u89e3\u91cb\u5404\u7a2e\u4e0d\u540c\u985e\u578b\u7684\u6a21\u578b\uff0c\u800c\u7279\u5b9a\u6a21\u578b\u89e3\u91cb\u5247\u5c08\u6ce8\u65bc\u91dd\u5c0d\u7279\u5b9a\u985e\u578b\u7684\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002 \u660e\u5929\u6211\u5011\u5c31\u4f86\u8ac7\u8ac7\u9019\u4e9b\u95dc\u65bc\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u7684\u6307\u6a19","title":"\u5c0f\u7d50"},{"location":"2.\u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316:XAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def/#reference","text":"Explainable AI Cheat Sheet by Jay Alammar (Arpeggio) Developing and Experimenting on Approaches to Explainability in AI Systems","title":"Reference"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/","text":"[Day 20] Gradient-Based\uff1a\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u68af\u5ea6\u8a0a\u606f\u626e\u6f14\u8457\u95dc\u9375\u7684\u89d2\u8272\uff0c\u5c24\u5176\u5728\u795e\u7d93\u7db2\u8def\u7684\u8a13\u7df4\u904e\u7a0b\u4e2d\u3002\u68af\u5ea6\u4ee3\u8868\u4e86\u51fd\u6578\u76f8\u5c0d\u65bc\u53c3\u6578\u7684\u8b8a\u5316\u7387\uff0c\u5b83\u544a\u8a34\u6211\u5011\u5982\u4f55\u8abf\u6574\u795e\u7d93\u7db2\u8def\u7684\u6b0a\u91cd\u548c\u53c3\u6578\uff0c\u4ee5\u6700\u5c0f\u5316\u6216\u6700\u5927\u5316\u4e00\u500b\u7279\u5b9a\u7684\u640d\u5931\u51fd\u6578\u3002\u56e0\u6b64\u68af\u5ea6\u4e0b\u964d\u6cd5\u662f\u512a\u5316\u795e\u7d93\u7db2\u8def\u7684\u4e3b\u8981\u624b\u6bb5\u4e4b\u4e00\uff0c\u5b83\u4f9d\u8cf4\u68af\u5ea6\u8a0a\u606f\u4f86\u66f4\u65b0\u6a21\u578b\u7684\u53c3\u6578\uff0c\u4f7f\u5176\u66f4\u597d\u5730\u9069\u61c9\u8a13\u7df4\u6578\u64da\u3002 \u7136\u800c\u4eca\u5929\u8981\u8ac7\u7684\u662f\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def\uff0c\u4e5f\u5c31\u662f\u7576\u8a13\u7df4\u4e00\u500b\u795e\u7d93\u7db2\u8def\u5f8c\uff0c\u900f\u904e\u8a08\u7b97\u795e\u7d93\u7db2\u8def\u5c0d\u65bc\u8f38\u5165\u5f71\u50cf\u7684\u68af\u5ea6\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u4e86\u89e3\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\uff08\u4f8b\u5982\u50cf\u7d20\uff09\u5c0d\u65bc\u795e\u7d93\u7db2\u8def\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u4e26\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u76f8\u95dc\u6587\u737b\uff0c\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u8a0a\u606f\u4f86\u8868\u793a\u8f38\u5165\u5f71\u50cf\u4e2d\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u5ea6\uff1a Image-Specific Class Saliency (Simonyan et al., 2014)\uff1a\u8a72\u65b9\u6cd5\u8a08\u7b97\u6307\u5b9a\u7684\u985e\u5225\u7684\u8f38\u51fa\u5c0d\u8f38\u5165\u5f71\u50cf\u7684\u640d\u5931\u51fd\u6578\u68af\u5ea6\uff0c\u5f97\u5230\u4e00\u500b\u53cd\u6620\u8f38\u5165\u7279\u5fb5\u5f71\u97ff\u7684 Saliency Map\u3002 Input X Gradient (Shrikumar et al., 2016)\uff1a\u9019\u7a2e\u65b9\u6cd5\u7c21\u55ae\u5730\u5c07\u8f38\u5165\u5f71\u50cf\u7684\u68af\u5ea6\u8207\u8f38\u5165\u5f71\u50cf\u672c\u8eab\u76f8\u4e58\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u50cf\u7d20\u7684\u91cd\u8981\u5ea6\u3002\u9019\u53ef\u4ee5\u986f\u793a\u54ea\u4e9b\u50cf\u7d20\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u5177\u6709\u6700\u5927\u7684\u5f71\u97ff\u3002 SmoothGrad (Smikov et al., 2017)\uff1a\u6b64\u65b9\u6cd5\u5c07\u8f38\u5165\u5f71\u50cf\u9032\u884c n \u6b21\u5fae\u5c0f\u64fe\u52d5\uff0c\u7136\u5f8c\u8a08\u7b97\u9019\u4e9b\u64fe\u52d5\u4e0b\u7684\u68af\u5ea6\uff0c\u6700\u5f8c\u5c07\u5b83\u5011\u5e73\u5747\uff0c\u7372\u5f97\u7a69\u5b9a\u7684 Saliency Map\u3002 Integrated Gradients (Sundararajan et al., 2017)\uff1a\u9019\u662f\u4e00\u7a2e\u65b9\u6cd5\uff0c\u901a\u904e\u5c0d\u8f38\u5165\u7279\u5fb5\u7684\u6574\u5408\u4f86\u8a08\u7b97\u68af\u5ea6\uff0c\u4ee5\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7a2e\u5e73\u6ed1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\u7a0b\u5ea6\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u55ae\u4e00\u9ede\u7684\u68af\u5ea6\u3002 Grad-CAM \uff08Ancona et al., 2016\uff09\uff1a\u5b83\u7d50\u5408\u4e86\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u7684\u68af\u5ea6\u8a0a\u606f\u548c\u7279\u5fb5\u5716\uff0c\u4ee5\u751f\u6210\u4e00\u500b\u66f4\u5177\u8996\u89ba\u89e3\u91cb\u6027\u7684\u71b1\u5716\uff0c\u986f\u793a\u54ea\u4e9b\u5340\u57df\u5728\u5716\u50cf\u4e2d\u89f8\u767c\u4e86\u7279\u5b9a\u985e\u5225\u7684\u9810\u6e2c\u3002 \u900f\u904e\u6b0a\u91cd\u8207\u8f38\u5165\u7684\u7279\u5fb5\u4f86\u6c7a\u5b9a Attribution Attribution (\u6b78\u56e0)\u662f\u4e00\u500b\u7528\u65bc\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u7684\u8853\u8a9e\uff0c\u5b83\u6307\u7684\u662f\u8a66\u5716\u7406\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u5982\u4f55\u505a\u51fa\u7279\u5b9a\u9810\u6e2c\u6216\u6c7a\u7b56\u7684\u904e\u7a0b\u3002\u4ee5\u4e0b\u4f7f\u7528\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u8ff4\u6b78\u4f8b\u5b50\uff0c\u89e3\u91cb attribution \u7684\u6982\u5ff5\u3002\u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5\u6703\u5f71\u97ff\u6a21\u578b\u6700\u7d42\u7684\u8f38\u51fa\u7d50\u679c\uff0c\u90a3\u6211\u60f3\u77e5\u9053\u9019\u5169\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u6027\u5206\u5225\u6709\u591a\u5927\u3002\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u504f\u5fae\u5206\uff08Partial Derivatives\uff09\u4f86\u9032\u884c\u5206\u6790\u3002\u9019\u662f\u6578\u5b78\u4e0a\u7684\u4e00\u500b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8a08\u7b97\u67d0\u500b\u51fd\u6578\u5c0d\u65bc\u5176\u4e2d\u4e00\u500b\u8b8a\u6578\u7684\u504f\u5c0e\u6578\uff0c\u4ee5\u8a55\u4f30\u8a72\u8b8a\u6578\u5c0d\u51fd\u6578\u503c\u7684\u5f71\u97ff\u3002 \u6211\u5011\u53ef\u4ee5\u7528\u4e00\u500b\u7c21\u55ae\u7684\u4f8b\u5b50\u4f86\u89e3\u91cb\u5982\u4f55\u8a08\u7b97\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u5982\u4e0b\uff1a \u9019\u500b\u6a21\u578b\u6709\u5169\u500b\u7279\u5fb5\uff0cx1 \u548c x2\uff0c\u5b83\u5011\u5206\u5225\u4e58\u4ee5\u4e0d\u540c\u7684\u6b0a\u91cd2\u548c3\u3002\u73fe\u5728\u6211\u5011\u60f3\u77e5\u9053 x1 \u548c x2 \u5c0d y \u7684\u5f71\u97ff\u7a0b\u5ea6\u3002 \u9996\u5148\uff0c\u6211\u5011\u8a08\u7b97\u5c0dx1\u7684\u504f\u5c0e\u6578\uff1a \u2202y/\u2202x1 = 2 \u9019\u8868\u793a\u7576 x1 \u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0cy \u6703\u589e\u52a02\u500b\u55ae\u4f4d\u3002\u6240\u4ee5\uff0cx1\u5c0d y \u7684\u5f71\u97ff\u662f\u6b63\u5411\u7684\uff0c\u4e26\u4e14\u5f71\u97ff\u7a0b\u5ea6\u70ba2\u3002 \u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u8a08\u7b97\u5c0d x2 \u7684\u504f\u5c0e\u6578\uff1a \u2202y/\u2202x2 = 3 \u9019\u8868\u793a\u7576 x2 \u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0cy \u6703\u589e\u52a03\u500b\u55ae\u4f4d\u3002\u6240\u4ee5\uff0cx2 \u5c0d y \u7684\u5f71\u97ff\u4e5f\u662f\u6b63\u5411\u7684\uff0c\u4e26\u4e14\u5f71\u97ff\u7a0b\u5ea6\u70ba3\u3002 \u6839\u64da\u9019\u500b\u4f8b\u5b50\uff0c\u6211\u5011\u53ef\u4ee5\u5f97\u51fa\u7d50\u8ad6\uff0cx2 \u5c0d y \u7684\u5f71\u97ff\u7a0b\u5ea6\u6bd4 x1 \u5927\uff0c\u56e0\u70ba \u2202y/\u2202x2 \u7684\u7d55\u5c0d\u503c\u5927\u65bc \u2202y/\u2202x1 \u7684\u7d55\u5c0d\u503c\u3002\u9019\u662f\u4e00\u500b\u6975\u7c21\u55ae\u7684\u4f8b\u5b50\uff0c\u5be6\u969b\u4e0a\u7684\u6a21\u578b\u53ef\u80fd\u66f4\u8907\u96dc\uff0c\u4f46\u9019\u500b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4f86\u8a55\u4f30\u4e0d\u540c\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u76f8\u5c0d\u5f71\u97ff\u7a0b\u5ea6\u3002\u6b64\u5916\u9019\u500b\u65b9\u6cd5\u5047\u8a2d\u6a21\u578b\u662f\u7dda\u6027\u7684\uff0c\u4e26\u4e14\u7279\u5fb5\u4e4b\u9593\u4e0d\u5b58\u5728\u4ea4\u4e92\u4f5c\u7528\uff0c\u5c0d\u65bc\u8907\u96dc\u7684\u975e\u7dda\u6027\u6a21\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u968e\u6cf0\u52d2\u5c55\u958b\u5f0f\u628a\u5b83\u8fd1\u4f3c\u6210\u7dda\u6027\u6a21\u578b\u3002 Image-Specific Class Saliency (Sensitivity Analysis) \u9019\u88e1\u4ecb\u7d39\u4e00\u500b\u7c21\u55ae\u7684 Gradient-Based \u65b9\u6cd5\uff0c\u5c31\u662f Image-Specific Class Saliency(\u5716\u50cf\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027)\uff0c\u4e5f\u6709\u4e9b\u6587\u737b\u7a31\u5b83 Sensitivity Analysis (\u654f\u611f\u5ea6\u5206\u6790)\u3002\u53ef\u4ee5\u85c9\u7531\u8a08\u7b97\u8f38\u5165\u5716\u50cf\u7684\u6bcf\u500b pixel \u7684\u68af\u5ea6\uff0c\u7372\u53d6 Saliency Map\u3002\u6574\u9ad4\u6b65\u9a5f\u6d41\u7a0b\u5982\u4e0b\uff1a \u6a21\u578b\u63a8\u8ad6\uff1a\u9996\u5148\u5c07\u4e00\u5f35\u5f71\u50cf\u9935\u5165\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u524d\u5411\u50b3\u905e\uff0c\u7372\u5f97\u6a21\u578b\u5c0d\u8a72\u5716\u50cf\u7684\u5206\u985e\u7d50\u679c\u3002 \u8a08\u7b97\u68af\u5ea6\uff1a\u91dd\u5c0d\u6211\u5011\u611f\u8208\u8da3\u7684\u5206\u985e\u985e\u5225\uff0c\u8a08\u7b97\u8a72\u985e\u5225\u5206\u6578\u76f8\u5c0d\u65bc\u8f38\u5165\u50cf\u7d20\u7684\u68af\u5ea6\u3002\u9019\u4e9b\u68af\u5ea6\u503c\u53cd\u6620\u4e86\u6bcf\u500b\u50cf\u7d20\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6\u3002 \u8996\u89ba\u5316\u7d50\u679c\uff1a\u5c07\u8a08\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u8996\u89ba\u5316\u5448\u73fe\u3002\u53ef\u4ee5\u9078\u64c7\u986f\u793a\u7d55\u5c0d\u503c\u7684\u68af\u5ea6\uff0c\u6216\u8005\u5c07\u6b63\u8ca2\u737b\u548c\u8ca0\u8ca2\u737b\u5206\u958b\u5448\u73fe\uff0c\u4ee5\u7a81\u986f\u5716\u50cf\u4e2d\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u5f71\u97ff\u6700\u5927\u7684\u5340\u57df\u3002\u9019\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u70ba\u4f55\u5c07\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u7279\u5b9a\u90e8\u5206\u4ee5\u505a\u51fa\u7279\u5b9a\u7684\u5206\u985e\u6c7a\u7b56\u3002 \u5c0d\u6578\u5b78\u8207\u63a8\u5c0e\u904e\u7a0b\u6709\u8208\u8da3\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u4ee5\u4e0b\u9019\u4efd\u96fb\u5b50\u66f8\u3002\u5728\u6587\u4e2d\u4f5c\u8005\u7a31\u4e0a\u8ff0\u65b9\u6cd5\u70ba Vanilla Gradient\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a vanilla-gradient-saliency-maps Gradient-Based \u65b9\u6cd5\u5be6\u4f5c (Image-Specific Class Saliency) \u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u6240\u4f7f\u7528\u7684\u9810\u8a13\u7df4\u6a21\u578b\u70ba ResNet50\u3002\u4f7f\u7528\u7684\u65b9\u5f0f\u8ddf\u6628\u5929\u5e7e\u4e4e\u4e00\u6a21\u4e00\u6a23\uff0c\u90fd\u662f\u63a1\u7528 tf.keras.applications \u5167\u5efa\u6240\u63d0\u4f9b\u7684\u6a21\u578b\u53c3\u6578\u3002ResNet50 \u7a81\u7834\u4e86\u6df1\u5ea6\u795e\u7d93\u7db2\u8def Deep \u7684\u53d7\u9650\uff0c\u5f15\u5165\u4e86\u6b98\u5dee\u5b78\u7fd2\u7684\u6982\u5ff5\u3002\u901a\u5e38\u96a8\u8457\u795e\u7d93\u7db2\u8def\u5c64\u6578\u7684\u589e\u52a0\uff0c\u6a21\u578b\u7684\u6027\u80fd\u6703\u8b8a\u5f97\u66f4\u597d\uff0c\u4f46\u5728\u4e00\u5b9a\u6df1\u5ea6\u5f8c\uff0c\u6a21\u578b\u6703\u906d\u9047\u68af\u5ea6\u6d88\u5931\u6216\u68af\u5ea6\u7206\u70b8\u7684\u554f\u984c\uff0c\u5c0e\u81f4\u8a13\u7df4\u8b8a\u5f97\u56f0\u96e3\u3002\u56e0\u6b64 ResNet \u5f15\u5165 Residual Block\uff08\u6b98\u5dee\u6a21\u584a\uff09\u5141\u8a31\u8a0a\u606f\u5728\u4e0d\u540c\u5c64\u4e4b\u9593\u8df3\u8e8d\uff08\u5373\u8df3\u904e\u67d0\u4e9b\u5c64\uff09\uff0c\u9032\u800c\u89e3\u6c7a\u4e86\u9019\u500b\u554f\u984c\u3002 ResNet \u8ad6\u6587\uff1a Deep Residual Learning for Image Recognition (CVPR 2016 best paper) \u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(ResNet50) \u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 ResNet50 \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.resnet50 import ResNet50 from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb ResNet50 \u6a21\u578b model = ResNet50 ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 ResNet50 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.resnet50 import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 ResNet50 \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 pred_class_idx \u5247\u662f\u9810\u6e2c\u7684\u6a19\u7c64\u7d22\u5f15\uff0c\u6700\u5f8c\u6a21\u578b\u89e3\u91cb\u6703\u9700\u8981\u7528\u5230\u5b83\u3002 from tensorflow.keras.applications.resnet50 import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class_idx = pred_proba . argmax ( axis = 1 )[ 0 ] # \u627e\u5230\u5177\u6709\u6700\u9ad8\u6a5f\u7387\u7684\u985e\u5225\u7d22\u5f15 pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 60%\u3002\u6709\u8208\u8da3\u7684\u8b80\u8005\uff0c\u4e5f\u53ef\u4ee5\u8ddf\u6628\u5929\u7684\u6a21\u578b\u9032\u884c\u6bd4\u8f03\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" ) Image-Specific Class Saliency \u5be6\u4f5c \u9996\u5148\u6211\u5011\u5c07\u6b64\u6f14\u7b97\u6cd5\u5305\u88dd\u6210\u4e00\u500b\u51fd\u5f0f\u65b9\u4fbf\u547c\u53eb\u3002\u9019\u4e00\u500b\u51fd\u5f0f\u4e3b\u8981\u63a5\u53d7\u5169\u500b\u53c3\u6578\uff1a image: \u5305\u542b\u4e00\u7d44\u5716\u50cf\u7684\u8f38\u5165\u6578\u64da\uff0c\u9019\u4e9b\u5716\u50cf\u662f\u8981\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027\u7684\u5c0d\u8c61\u3002 target_class_idx: \u6307\u5b9a\u8981\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027\u7684\u76ee\u6a19\u985e\u5225\u7684\u6a19\u7c64\u7d22\u5f15\u3002 \u5176\u4e2d\u70ba\u4e86\u8981\u9032\u884c\u68af\u5ea6\u7684\u8a08\u7b97\uff0c\u6211\u5011\u9700\u8981\u5c07\u8f38\u5165\u7684\u5716\u7247\u5f9e numpy array \u8f49\u63db\u6210 TensorFlow Tensor \u683c\u5f0f\u3002\u6700\u5f8c\u7684 return \u662f\u8a08\u7b97\u76ee\u6a19\u985e\u5225\u6a5f\u7387 probs \u5c0d\u65bc\u8f38\u5165\u5716\u50cf image \u7684\u68af\u5ea6\u3002 tape.gradient \u51fd\u6578\u63a5\u53d7\u5169\u500b\u53c3\u6578\uff0c\u5206\u5225\u662f\u68af\u5ea6\u7684\u76ee\u6a19\u548c\u539f\u5f71\u50cf\uff0c\u9019\u88e1\u6211\u5011\u5e0c\u671b\u8a08\u7b97\u76ee\u6a19\u662f probs \u76f8\u5c0d\u65bc\u8f38\u5165\u5f71\u50cf image \u3002 def compute_gradients ( image , target_class_idx ): image = tf . convert_to_tensor ( image ) # \u5c07\u8f38\u5165\u7684\u5f71\u50cf\u8f49\u63db\u70ba TensorFlow \u5f35\u91cf with tf . GradientTape () as tape : # \u7528\u65bc\u8a08\u7b97\u68af\u5ea6 tape . watch ( image ) # \u76e3\u63a7\u5716\u50cf\uff0c\u4ee5\u4fbf\u8a08\u7b97\u5176\u68af\u5ea6 predictions = model ( image ) # \u4f7f\u7528\u6a21\u578b\u9032\u884c\u9810\u6e2c probs = predictions [:, target_class_idx ] # \u53d6\u5f97\u76ee\u6a19\u985e\u5225\u7684\u9810\u6e2c\u6a5f\u7387 return tape . gradient ( probs , image ) # \u8a08\u7b97\u6a5f\u7387\u5c0d\u65bc\u5f71\u50cf\u7684\u68af\u5ea6\u4e26\u8fd4\u56de \u63a5\u8457\u6211\u5011\u99ac\u4e0a\u5c07\u525b\u525b\u6e2c\u8a66\u7684 RestNet50 \u9810\u6e2c\u9b25\u725b\u7352\u7684\u7d50\u679c\u653e\u9032\u53bb\u6b64\u51fd\u5f0f\u9032\u884c\u89e3\u91cb\u3002\u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u76ee\u7684\u662f\u8a08\u7b97\u68af\u5ea6\u4e26\u751f\u6210\u4e00\u500b\u6b78\u56e0\u906e\u7f69\uff08attribution mask\uff09\u3002\u9996\u5148\u547c\u53eb compute_gradients \u51fd\u5f0f\uff0c\u4e26\u50b3\u5165\u4e00\u500b\u5f71\u50cf x \u548c\u76ee\u6a19\u985e\u5225\u7684\u7d22\u5f15 pred_class_idx\u3002\u8a72\u51fd\u5f0f\u6703\u8a08\u7b97\u5f71\u50cf\u5c0d\u65bc\u76ee\u6a19\u985e\u5225\u7684\u68af\u5ea6\uff0c\u4e26\u5c07\u7d50\u679c\u5132\u5b58\u5728 gradients \u8b8a\u6578\u4e2d\u3002 \u63a5\u8457\u4f7f\u7528 tf.squeeze \u51fd\u5f0f\u5c07 gradients \u5f35\u91cf\u7684\u591a\u9918\u7dad\u5ea6\u53bb\u9664\uff0c\u7136\u5f8c\u4f7f\u7528 tf.math.abs \u51fd\u5f0f\u8a08\u7b97\u7d55\u5c0d\u503c\u3002\u9019\u6a23\u505a\u662f\u70ba\u4e86\u78ba\u4fdd\u68af\u5ea6\u7684\u6b63\u8ca0\u865f\u4e0d\u5f71\u97ff\u6b78\u56e0\u906e\u7f69\u7684\u751f\u6210\u3002\u6700\u5f8c\u4f7f\u7528 tf.reduce_sum \u51fd\u5f0f\u5c07\u8a08\u7b97\u7d50\u679c\u6cbf\u8457\u6700\u5f8c\u4e00\u500b\u7dad\u5ea6\uff08\u901a\u9053\u8ef8\uff09\u76f8\u52a0\uff0c\u751f\u6210\u6700\u7d42\u7684\u6b78\u56e0\u906e\u7f69\uff0c\u4e26\u5c07\u7d50\u679c\u5132\u5b58\u5728 attribution_mask \u8b8a\u6578\u4e2d\u3002 # \u8a08\u7b97\u6a5f\u7387\u5c0d\u65bc\u5f71\u50cf\u7684\u68af\u5ea6 gradients = compute_gradients ( image = x , target_class_idx = pred_class_idx ) # \u7522\u751f\u53ef\u89e3\u91cb\u7684\u906e\u7f69 attribution_mask = tf . reduce_sum ( tf . math . abs ( tf . squeeze ( gradients )), axis =- 1 ) \u6700\u5f8c\u8b93\u6211\u5011\u77a7\u77a7\u7d50\u679c\u3002 import matplotlib.cm as cm fig , axs = plt . subplots ( nrows = 1 , ncols = 3 , squeeze = False , figsize = ( 16 , 8 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}) axs [ 0 , 0 ] . set_title ( 'Original image' , fontsize = 20 ) axs [ 0 , 0 ] . imshow ( image / 255 ) axs [ 0 , 1 ] . set_title ( 'Attribution Mask' , fontsize = 20 ) axs [ 0 , 1 ] . imshow ( attribution_mask , cmap = cm . inferno ) axs [ 0 , 2 ] . set_title ( 'Overlay' , fontsize = 20 ) axs [ 0 , 2 ] . imshow ( attribution_mask , cmap = cm . inferno ) axs [ 0 , 2 ] . imshow ( image / 255 , alpha = 0.4 ) Reference Towards better understanding of gradient-based attribution methods for Deep Neural Networks \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 02 \u57fa\u65bc\u68af\u5ea6\u7684\u65b9\u6cd5 (Gradient-Based): Sensitivity analysis, SmoothGrad, Integrated Gradients","title":"[Day 20] Gradient-Based\uff1a\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#day-20-gradient-based","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u68af\u5ea6\u8a0a\u606f\u626e\u6f14\u8457\u95dc\u9375\u7684\u89d2\u8272\uff0c\u5c24\u5176\u5728\u795e\u7d93\u7db2\u8def\u7684\u8a13\u7df4\u904e\u7a0b\u4e2d\u3002\u68af\u5ea6\u4ee3\u8868\u4e86\u51fd\u6578\u76f8\u5c0d\u65bc\u53c3\u6578\u7684\u8b8a\u5316\u7387\uff0c\u5b83\u544a\u8a34\u6211\u5011\u5982\u4f55\u8abf\u6574\u795e\u7d93\u7db2\u8def\u7684\u6b0a\u91cd\u548c\u53c3\u6578\uff0c\u4ee5\u6700\u5c0f\u5316\u6216\u6700\u5927\u5316\u4e00\u500b\u7279\u5b9a\u7684\u640d\u5931\u51fd\u6578\u3002\u56e0\u6b64\u68af\u5ea6\u4e0b\u964d\u6cd5\u662f\u512a\u5316\u795e\u7d93\u7db2\u8def\u7684\u4e3b\u8981\u624b\u6bb5\u4e4b\u4e00\uff0c\u5b83\u4f9d\u8cf4\u68af\u5ea6\u8a0a\u606f\u4f86\u66f4\u65b0\u6a21\u578b\u7684\u53c3\u6578\uff0c\u4f7f\u5176\u66f4\u597d\u5730\u9069\u61c9\u8a13\u7df4\u6578\u64da\u3002 \u7136\u800c\u4eca\u5929\u8981\u8ac7\u7684\u662f\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def\uff0c\u4e5f\u5c31\u662f\u7576\u8a13\u7df4\u4e00\u500b\u795e\u7d93\u7db2\u8def\u5f8c\uff0c\u900f\u904e\u8a08\u7b97\u795e\u7d93\u7db2\u8def\u5c0d\u65bc\u8f38\u5165\u5f71\u50cf\u7684\u68af\u5ea6\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u4e86\u89e3\u6bcf\u500b\u8f38\u5165\u7279\u5fb5\uff08\u4f8b\u5982\u50cf\u7d20\uff09\u5c0d\u65bc\u795e\u7d93\u7db2\u8def\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u4e26\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u7684\u6c7a\u7b56\u904e\u7a0b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u76f8\u95dc\u6587\u737b\uff0c\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u8a0a\u606f\u4f86\u8868\u793a\u8f38\u5165\u5f71\u50cf\u4e2d\u6bcf\u500b\u7279\u5fb5\u7684\u91cd\u8981\u5ea6\uff1a Image-Specific Class Saliency (Simonyan et al., 2014)\uff1a\u8a72\u65b9\u6cd5\u8a08\u7b97\u6307\u5b9a\u7684\u985e\u5225\u7684\u8f38\u51fa\u5c0d\u8f38\u5165\u5f71\u50cf\u7684\u640d\u5931\u51fd\u6578\u68af\u5ea6\uff0c\u5f97\u5230\u4e00\u500b\u53cd\u6620\u8f38\u5165\u7279\u5fb5\u5f71\u97ff\u7684 Saliency Map\u3002 Input X Gradient (Shrikumar et al., 2016)\uff1a\u9019\u7a2e\u65b9\u6cd5\u7c21\u55ae\u5730\u5c07\u8f38\u5165\u5f71\u50cf\u7684\u68af\u5ea6\u8207\u8f38\u5165\u5f71\u50cf\u672c\u8eab\u76f8\u4e58\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u50cf\u7d20\u7684\u91cd\u8981\u5ea6\u3002\u9019\u53ef\u4ee5\u986f\u793a\u54ea\u4e9b\u50cf\u7d20\u5c0d\u65bc\u6a21\u578b\u7684\u9810\u6e2c\u5177\u6709\u6700\u5927\u7684\u5f71\u97ff\u3002 SmoothGrad (Smikov et al., 2017)\uff1a\u6b64\u65b9\u6cd5\u5c07\u8f38\u5165\u5f71\u50cf\u9032\u884c n \u6b21\u5fae\u5c0f\u64fe\u52d5\uff0c\u7136\u5f8c\u8a08\u7b97\u9019\u4e9b\u64fe\u52d5\u4e0b\u7684\u68af\u5ea6\uff0c\u6700\u5f8c\u5c07\u5b83\u5011\u5e73\u5747\uff0c\u7372\u5f97\u7a69\u5b9a\u7684 Saliency Map\u3002 Integrated Gradients (Sundararajan et al., 2017)\uff1a\u9019\u662f\u4e00\u7a2e\u65b9\u6cd5\uff0c\u901a\u904e\u5c0d\u8f38\u5165\u7279\u5fb5\u7684\u6574\u5408\u4f86\u8a08\u7b97\u68af\u5ea6\uff0c\u4ee5\u8a55\u4f30\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7a2e\u5e73\u6ed1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\u7a0b\u5ea6\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u55ae\u4e00\u9ede\u7684\u68af\u5ea6\u3002 Grad-CAM \uff08Ancona et al., 2016\uff09\uff1a\u5b83\u7d50\u5408\u4e86\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u7684\u68af\u5ea6\u8a0a\u606f\u548c\u7279\u5fb5\u5716\uff0c\u4ee5\u751f\u6210\u4e00\u500b\u66f4\u5177\u8996\u89ba\u89e3\u91cb\u6027\u7684\u71b1\u5716\uff0c\u986f\u793a\u54ea\u4e9b\u5340\u57df\u5728\u5716\u50cf\u4e2d\u89f8\u767c\u4e86\u7279\u5b9a\u985e\u5225\u7684\u9810\u6e2c\u3002","title":"[Day 20] Gradient-Based\uff1a\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#attribution","text":"Attribution (\u6b78\u56e0)\u662f\u4e00\u500b\u7528\u65bc\u6a5f\u5668\u5b78\u7fd2\u548c\u6df1\u5ea6\u5b78\u7fd2\u9818\u57df\u7684\u8853\u8a9e\uff0c\u5b83\u6307\u7684\u662f\u8a66\u5716\u7406\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u5982\u4f55\u505a\u51fa\u7279\u5b9a\u9810\u6e2c\u6216\u6c7a\u7b56\u7684\u904e\u7a0b\u3002\u4ee5\u4e0b\u4f7f\u7528\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u8ff4\u6b78\u4f8b\u5b50\uff0c\u89e3\u91cb attribution \u7684\u6982\u5ff5\u3002\u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5\u6703\u5f71\u97ff\u6a21\u578b\u6700\u7d42\u7684\u8f38\u51fa\u7d50\u679c\uff0c\u90a3\u6211\u60f3\u77e5\u9053\u9019\u5169\u500b\u7279\u5fb5\u7684\u5f71\u97ff\u6027\u5206\u5225\u6709\u591a\u5927\u3002\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u504f\u5fae\u5206\uff08Partial Derivatives\uff09\u4f86\u9032\u884c\u5206\u6790\u3002\u9019\u662f\u6578\u5b78\u4e0a\u7684\u4e00\u500b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8a08\u7b97\u67d0\u500b\u51fd\u6578\u5c0d\u65bc\u5176\u4e2d\u4e00\u500b\u8b8a\u6578\u7684\u504f\u5c0e\u6578\uff0c\u4ee5\u8a55\u4f30\u8a72\u8b8a\u6578\u5c0d\u51fd\u6578\u503c\u7684\u5f71\u97ff\u3002 \u6211\u5011\u53ef\u4ee5\u7528\u4e00\u500b\u7c21\u55ae\u7684\u4f8b\u5b50\u4f86\u89e3\u91cb\u5982\u4f55\u8a08\u7b97\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u5982\u4e0b\uff1a \u9019\u500b\u6a21\u578b\u6709\u5169\u500b\u7279\u5fb5\uff0cx1 \u548c x2\uff0c\u5b83\u5011\u5206\u5225\u4e58\u4ee5\u4e0d\u540c\u7684\u6b0a\u91cd2\u548c3\u3002\u73fe\u5728\u6211\u5011\u60f3\u77e5\u9053 x1 \u548c x2 \u5c0d y \u7684\u5f71\u97ff\u7a0b\u5ea6\u3002 \u9996\u5148\uff0c\u6211\u5011\u8a08\u7b97\u5c0dx1\u7684\u504f\u5c0e\u6578\uff1a \u2202y/\u2202x1 = 2 \u9019\u8868\u793a\u7576 x1 \u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0cy \u6703\u589e\u52a02\u500b\u55ae\u4f4d\u3002\u6240\u4ee5\uff0cx1\u5c0d y \u7684\u5f71\u97ff\u662f\u6b63\u5411\u7684\uff0c\u4e26\u4e14\u5f71\u97ff\u7a0b\u5ea6\u70ba2\u3002 \u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u8a08\u7b97\u5c0d x2 \u7684\u504f\u5c0e\u6578\uff1a \u2202y/\u2202x2 = 3 \u9019\u8868\u793a\u7576 x2 \u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0cy \u6703\u589e\u52a03\u500b\u55ae\u4f4d\u3002\u6240\u4ee5\uff0cx2 \u5c0d y \u7684\u5f71\u97ff\u4e5f\u662f\u6b63\u5411\u7684\uff0c\u4e26\u4e14\u5f71\u97ff\u7a0b\u5ea6\u70ba3\u3002 \u6839\u64da\u9019\u500b\u4f8b\u5b50\uff0c\u6211\u5011\u53ef\u4ee5\u5f97\u51fa\u7d50\u8ad6\uff0cx2 \u5c0d y \u7684\u5f71\u97ff\u7a0b\u5ea6\u6bd4 x1 \u5927\uff0c\u56e0\u70ba \u2202y/\u2202x2 \u7684\u7d55\u5c0d\u503c\u5927\u65bc \u2202y/\u2202x1 \u7684\u7d55\u5c0d\u503c\u3002\u9019\u662f\u4e00\u500b\u6975\u7c21\u55ae\u7684\u4f8b\u5b50\uff0c\u5be6\u969b\u4e0a\u7684\u6a21\u578b\u53ef\u80fd\u66f4\u8907\u96dc\uff0c\u4f46\u9019\u500b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4f86\u8a55\u4f30\u4e0d\u540c\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u76f8\u5c0d\u5f71\u97ff\u7a0b\u5ea6\u3002\u6b64\u5916\u9019\u500b\u65b9\u6cd5\u5047\u8a2d\u6a21\u578b\u662f\u7dda\u6027\u7684\uff0c\u4e26\u4e14\u7279\u5fb5\u4e4b\u9593\u4e0d\u5b58\u5728\u4ea4\u4e92\u4f5c\u7528\uff0c\u5c0d\u65bc\u8907\u96dc\u7684\u975e\u7dda\u6027\u6a21\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u968e\u6cf0\u52d2\u5c55\u958b\u5f0f\u628a\u5b83\u8fd1\u4f3c\u6210\u7dda\u6027\u6a21\u578b\u3002","title":"\u900f\u904e\u6b0a\u91cd\u8207\u8f38\u5165\u7684\u7279\u5fb5\u4f86\u6c7a\u5b9a Attribution"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#image-specific-class-saliency-sensitivity-analysis","text":"\u9019\u88e1\u4ecb\u7d39\u4e00\u500b\u7c21\u55ae\u7684 Gradient-Based \u65b9\u6cd5\uff0c\u5c31\u662f Image-Specific Class Saliency(\u5716\u50cf\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027)\uff0c\u4e5f\u6709\u4e9b\u6587\u737b\u7a31\u5b83 Sensitivity Analysis (\u654f\u611f\u5ea6\u5206\u6790)\u3002\u53ef\u4ee5\u85c9\u7531\u8a08\u7b97\u8f38\u5165\u5716\u50cf\u7684\u6bcf\u500b pixel \u7684\u68af\u5ea6\uff0c\u7372\u53d6 Saliency Map\u3002\u6574\u9ad4\u6b65\u9a5f\u6d41\u7a0b\u5982\u4e0b\uff1a \u6a21\u578b\u63a8\u8ad6\uff1a\u9996\u5148\u5c07\u4e00\u5f35\u5f71\u50cf\u9935\u5165\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u524d\u5411\u50b3\u905e\uff0c\u7372\u5f97\u6a21\u578b\u5c0d\u8a72\u5716\u50cf\u7684\u5206\u985e\u7d50\u679c\u3002 \u8a08\u7b97\u68af\u5ea6\uff1a\u91dd\u5c0d\u6211\u5011\u611f\u8208\u8da3\u7684\u5206\u985e\u985e\u5225\uff0c\u8a08\u7b97\u8a72\u985e\u5225\u5206\u6578\u76f8\u5c0d\u65bc\u8f38\u5165\u50cf\u7d20\u7684\u68af\u5ea6\u3002\u9019\u4e9b\u68af\u5ea6\u503c\u53cd\u6620\u4e86\u6bcf\u500b\u50cf\u7d20\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6\u3002 \u8996\u89ba\u5316\u7d50\u679c\uff1a\u5c07\u8a08\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u8996\u89ba\u5316\u5448\u73fe\u3002\u53ef\u4ee5\u9078\u64c7\u986f\u793a\u7d55\u5c0d\u503c\u7684\u68af\u5ea6\uff0c\u6216\u8005\u5c07\u6b63\u8ca2\u737b\u548c\u8ca0\u8ca2\u737b\u5206\u958b\u5448\u73fe\uff0c\u4ee5\u7a81\u986f\u5716\u50cf\u4e2d\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u5f71\u97ff\u6700\u5927\u7684\u5340\u57df\u3002\u9019\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u70ba\u4f55\u5c07\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u7279\u5b9a\u90e8\u5206\u4ee5\u505a\u51fa\u7279\u5b9a\u7684\u5206\u985e\u6c7a\u7b56\u3002 \u5c0d\u6578\u5b78\u8207\u63a8\u5c0e\u904e\u7a0b\u6709\u8208\u8da3\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u4ee5\u4e0b\u9019\u4efd\u96fb\u5b50\u66f8\u3002\u5728\u6587\u4e2d\u4f5c\u8005\u7a31\u4e0a\u8ff0\u65b9\u6cd5\u70ba Vanilla Gradient\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a vanilla-gradient-saliency-maps","title":"Image-Specific Class Saliency (Sensitivity Analysis)"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#gradient-based-image-specific-class-saliency","text":"\u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u6240\u4f7f\u7528\u7684\u9810\u8a13\u7df4\u6a21\u578b\u70ba ResNet50\u3002\u4f7f\u7528\u7684\u65b9\u5f0f\u8ddf\u6628\u5929\u5e7e\u4e4e\u4e00\u6a21\u4e00\u6a23\uff0c\u90fd\u662f\u63a1\u7528 tf.keras.applications \u5167\u5efa\u6240\u63d0\u4f9b\u7684\u6a21\u578b\u53c3\u6578\u3002ResNet50 \u7a81\u7834\u4e86\u6df1\u5ea6\u795e\u7d93\u7db2\u8def Deep \u7684\u53d7\u9650\uff0c\u5f15\u5165\u4e86\u6b98\u5dee\u5b78\u7fd2\u7684\u6982\u5ff5\u3002\u901a\u5e38\u96a8\u8457\u795e\u7d93\u7db2\u8def\u5c64\u6578\u7684\u589e\u52a0\uff0c\u6a21\u578b\u7684\u6027\u80fd\u6703\u8b8a\u5f97\u66f4\u597d\uff0c\u4f46\u5728\u4e00\u5b9a\u6df1\u5ea6\u5f8c\uff0c\u6a21\u578b\u6703\u906d\u9047\u68af\u5ea6\u6d88\u5931\u6216\u68af\u5ea6\u7206\u70b8\u7684\u554f\u984c\uff0c\u5c0e\u81f4\u8a13\u7df4\u8b8a\u5f97\u56f0\u96e3\u3002\u56e0\u6b64 ResNet \u5f15\u5165 Residual Block\uff08\u6b98\u5dee\u6a21\u584a\uff09\u5141\u8a31\u8a0a\u606f\u5728\u4e0d\u540c\u5c64\u4e4b\u9593\u8df3\u8e8d\uff08\u5373\u8df3\u904e\u67d0\u4e9b\u5c64\uff09\uff0c\u9032\u800c\u89e3\u6c7a\u4e86\u9019\u500b\u554f\u984c\u3002 ResNet \u8ad6\u6587\uff1a Deep Residual Learning for Image Recognition (CVPR 2016 best paper)","title":"Gradient-Based \u65b9\u6cd5\u5be6\u4f5c (Image-Specific Class Saliency)"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#resnet50","text":"\u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 ResNet50 \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.resnet50 import ResNet50 from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb ResNet50 \u6a21\u578b model = ResNet50 ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 ResNet50 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.resnet50 import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 ResNet50 \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 pred_class_idx \u5247\u662f\u9810\u6e2c\u7684\u6a19\u7c64\u7d22\u5f15\uff0c\u6700\u5f8c\u6a21\u578b\u89e3\u91cb\u6703\u9700\u8981\u7528\u5230\u5b83\u3002 from tensorflow.keras.applications.resnet50 import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class_idx = pred_proba . argmax ( axis = 1 )[ 0 ] # \u627e\u5230\u5177\u6709\u6700\u9ad8\u6a5f\u7387\u7684\u985e\u5225\u7d22\u5f15 pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 60%\u3002\u6709\u8208\u8da3\u7684\u8b80\u8005\uff0c\u4e5f\u53ef\u4ee5\u8ddf\u6628\u5929\u7684\u6a21\u578b\u9032\u884c\u6bd4\u8f03\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" )","title":"\u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(ResNet50)"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#image-specific-class-saliency","text":"\u9996\u5148\u6211\u5011\u5c07\u6b64\u6f14\u7b97\u6cd5\u5305\u88dd\u6210\u4e00\u500b\u51fd\u5f0f\u65b9\u4fbf\u547c\u53eb\u3002\u9019\u4e00\u500b\u51fd\u5f0f\u4e3b\u8981\u63a5\u53d7\u5169\u500b\u53c3\u6578\uff1a image: \u5305\u542b\u4e00\u7d44\u5716\u50cf\u7684\u8f38\u5165\u6578\u64da\uff0c\u9019\u4e9b\u5716\u50cf\u662f\u8981\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027\u7684\u5c0d\u8c61\u3002 target_class_idx: \u6307\u5b9a\u8981\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u986f\u8457\u6027\u7684\u76ee\u6a19\u985e\u5225\u7684\u6a19\u7c64\u7d22\u5f15\u3002 \u5176\u4e2d\u70ba\u4e86\u8981\u9032\u884c\u68af\u5ea6\u7684\u8a08\u7b97\uff0c\u6211\u5011\u9700\u8981\u5c07\u8f38\u5165\u7684\u5716\u7247\u5f9e numpy array \u8f49\u63db\u6210 TensorFlow Tensor \u683c\u5f0f\u3002\u6700\u5f8c\u7684 return \u662f\u8a08\u7b97\u76ee\u6a19\u985e\u5225\u6a5f\u7387 probs \u5c0d\u65bc\u8f38\u5165\u5716\u50cf image \u7684\u68af\u5ea6\u3002 tape.gradient \u51fd\u6578\u63a5\u53d7\u5169\u500b\u53c3\u6578\uff0c\u5206\u5225\u662f\u68af\u5ea6\u7684\u76ee\u6a19\u548c\u539f\u5f71\u50cf\uff0c\u9019\u88e1\u6211\u5011\u5e0c\u671b\u8a08\u7b97\u76ee\u6a19\u662f probs \u76f8\u5c0d\u65bc\u8f38\u5165\u5f71\u50cf image \u3002 def compute_gradients ( image , target_class_idx ): image = tf . convert_to_tensor ( image ) # \u5c07\u8f38\u5165\u7684\u5f71\u50cf\u8f49\u63db\u70ba TensorFlow \u5f35\u91cf with tf . GradientTape () as tape : # \u7528\u65bc\u8a08\u7b97\u68af\u5ea6 tape . watch ( image ) # \u76e3\u63a7\u5716\u50cf\uff0c\u4ee5\u4fbf\u8a08\u7b97\u5176\u68af\u5ea6 predictions = model ( image ) # \u4f7f\u7528\u6a21\u578b\u9032\u884c\u9810\u6e2c probs = predictions [:, target_class_idx ] # \u53d6\u5f97\u76ee\u6a19\u985e\u5225\u7684\u9810\u6e2c\u6a5f\u7387 return tape . gradient ( probs , image ) # \u8a08\u7b97\u6a5f\u7387\u5c0d\u65bc\u5f71\u50cf\u7684\u68af\u5ea6\u4e26\u8fd4\u56de \u63a5\u8457\u6211\u5011\u99ac\u4e0a\u5c07\u525b\u525b\u6e2c\u8a66\u7684 RestNet50 \u9810\u6e2c\u9b25\u725b\u7352\u7684\u7d50\u679c\u653e\u9032\u53bb\u6b64\u51fd\u5f0f\u9032\u884c\u89e3\u91cb\u3002\u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u76ee\u7684\u662f\u8a08\u7b97\u68af\u5ea6\u4e26\u751f\u6210\u4e00\u500b\u6b78\u56e0\u906e\u7f69\uff08attribution mask\uff09\u3002\u9996\u5148\u547c\u53eb compute_gradients \u51fd\u5f0f\uff0c\u4e26\u50b3\u5165\u4e00\u500b\u5f71\u50cf x \u548c\u76ee\u6a19\u985e\u5225\u7684\u7d22\u5f15 pred_class_idx\u3002\u8a72\u51fd\u5f0f\u6703\u8a08\u7b97\u5f71\u50cf\u5c0d\u65bc\u76ee\u6a19\u985e\u5225\u7684\u68af\u5ea6\uff0c\u4e26\u5c07\u7d50\u679c\u5132\u5b58\u5728 gradients \u8b8a\u6578\u4e2d\u3002 \u63a5\u8457\u4f7f\u7528 tf.squeeze \u51fd\u5f0f\u5c07 gradients \u5f35\u91cf\u7684\u591a\u9918\u7dad\u5ea6\u53bb\u9664\uff0c\u7136\u5f8c\u4f7f\u7528 tf.math.abs \u51fd\u5f0f\u8a08\u7b97\u7d55\u5c0d\u503c\u3002\u9019\u6a23\u505a\u662f\u70ba\u4e86\u78ba\u4fdd\u68af\u5ea6\u7684\u6b63\u8ca0\u865f\u4e0d\u5f71\u97ff\u6b78\u56e0\u906e\u7f69\u7684\u751f\u6210\u3002\u6700\u5f8c\u4f7f\u7528 tf.reduce_sum \u51fd\u5f0f\u5c07\u8a08\u7b97\u7d50\u679c\u6cbf\u8457\u6700\u5f8c\u4e00\u500b\u7dad\u5ea6\uff08\u901a\u9053\u8ef8\uff09\u76f8\u52a0\uff0c\u751f\u6210\u6700\u7d42\u7684\u6b78\u56e0\u906e\u7f69\uff0c\u4e26\u5c07\u7d50\u679c\u5132\u5b58\u5728 attribution_mask \u8b8a\u6578\u4e2d\u3002 # \u8a08\u7b97\u6a5f\u7387\u5c0d\u65bc\u5f71\u50cf\u7684\u68af\u5ea6 gradients = compute_gradients ( image = x , target_class_idx = pred_class_idx ) # \u7522\u751f\u53ef\u89e3\u91cb\u7684\u906e\u7f69 attribution_mask = tf . reduce_sum ( tf . math . abs ( tf . squeeze ( gradients )), axis =- 1 ) \u6700\u5f8c\u8b93\u6211\u5011\u77a7\u77a7\u7d50\u679c\u3002 import matplotlib.cm as cm fig , axs = plt . subplots ( nrows = 1 , ncols = 3 , squeeze = False , figsize = ( 16 , 8 ), subplot_kw = { 'xticks' :[], 'yticks' :[]}) axs [ 0 , 0 ] . set_title ( 'Original image' , fontsize = 20 ) axs [ 0 , 0 ] . imshow ( image / 255 ) axs [ 0 , 1 ] . set_title ( 'Attribution Mask' , fontsize = 20 ) axs [ 0 , 1 ] . imshow ( attribution_mask , cmap = cm . inferno ) axs [ 0 , 2 ] . set_title ( 'Overlay' , fontsize = 20 ) axs [ 0 , 2 ] . imshow ( attribution_mask , cmap = cm . inferno ) axs [ 0 , 2 ] . imshow ( image / 255 , alpha = 0.4 )","title":"Image-Specific Class Saliency \u5be6\u4f5c"},{"location":"20.Gradient-Based:\u5229\u7528\u68af\u5ea6\u8a0a\u606f\u89e3\u91cb\u795e\u7d93\u7db2\u8def/#reference","text":"Towards better understanding of gradient-based attribution methods for Deep Neural Networks \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 02 \u57fa\u65bc\u68af\u5ea6\u7684\u65b9\u6cd5 (Gradient-Based): Sensitivity analysis, SmoothGrad, Integrated Gradients","title":"Reference"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/","text":"[Day 21] Propagation-Based\uff1a\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027 \u4eca\u5929\u6240\u8981\u8ac7 Propagation-Based \u65b9\u6cd5\u5728 CNN \u4e2d\u7684\u4f5c\u7528\u662f\u900f\u904e\u8a08\u7b97\u68af\u5ea6\u3001\u53cd\u5411\u50b3\u64ad\u6216\u4e0d\u540c\u5c64\u7684\u7279\u5fb5\u4f86\u91cf\u5316\u6bcf\u500b\u50cf\u7d20\u6216\u7279\u5fb5\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\u3002 \u5f9e\u6628\u5929\u7684 Gradient-based \u65b9\u6cd5\u6211\u5011\u4e86\u89e3\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4f86\u4f30\u7b97\u6bcf\u500b\u8f38\u5165\u5716\u7247\u7684\u50cf\u7d20\u8207\u6700\u7d42\u5206\u985e\u7d50\u679c\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u900f\u904e\u8a08\u7b97\u6bcf\u500b\u8f38\u5165\u5716\u7247\u50cf\u7d20\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\uff0c\u6211\u5011\u53ef\u4ee5\u77ad\u89e3\u5b83\u5011\u5c0d\u65bc\u5206\u985e\u6a19\u7c64\u7684\u9810\u6e2c\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002\u6700\u7d42\u9019\u4e9b\u8ca2\u737b\u7684\u7e3d\u548c\u7b49\u540c\u65bc\u8a72\u5716\u50cf\u5c0d\u65bc\u5206\u985e\u7d50\u679c\u7684\u9810\u6e2c\u3002\u4e8b\u5be6\u4e0a\u9019\u500b\u6982\u5ff5\u53ef\u4ee5\u5728 CNN \u7684\u6bcf\u4e00\u5c64\u90fd\u61c9\u7528\uff0c\u5373\u63a8\u65b7\u6bcf\u500b\u7279\u5fb5\u5716\u4e2d\u7684\u7279\u5fb5\u8207\u6700\u7d42\u7d50\u679c\u4e4b\u9593\u7684\u76f8\u95dc\u6027\u3002\u9019\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u5f9e\u6700\u7d42\u8f38\u51fa\u5c64\u958b\u59cb\u56de\u6eaf\uff0c\u800c\u4e0d\u50c5\u50c5\u91dd\u5c0d\u8f38\u5165\u5c64\u8a08\u7b97\u68af\u5ea6\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u5169\u7bc7\u8457\u540d\u7684 Propagation-Based \u76f8\u95dc\u6587\u737b\uff1a Layer-wise Relevance Propagation (LRP) (Bach et al., 2015)\uff1a\u900f\u904e\u6cf0\u52d2\u5206\u89e3\u4f86\u53cd\u5411\u50b3\u905e\u795e\u7d93\u7db2\u8def\uff0c\u4ee5\u9054\u5230\u8b58\u5225\u91cd\u8981\u50cf\u7d20\u7684\u65b9\u6cd5\u3002 DeepLIFT (Shrikumar et al., 2017)\uff1a\u662f\u4e00\u7a2e\u6539\u9032\u7684\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u7528\u65bc\u751f\u6210\u71b1\u5716\u4ee5\u986f\u793a\u795e\u7d93\u7db2\u8def\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u5c31\u662f\u57fa\u65bc SHAP \u548c DeepLIFT \u7b97\u6cd5\u3002 Layer-wise relevance propagation Layer-wise relevance propagation \u662f\u4e00\u7a2e Propagation-Based \u65b9\u6cd5\u7684\u5be6\u4f8b\uff0c\u7528\u65bc\u7406\u89e3\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u5c0d\u8f38\u5165\u6578\u64da\u7684\u9810\u6e2c\u662f\u5982\u4f55\u5f62\u6210\u7684\uff0c\u4e26\u5c07\u5176\u5206\u89e3\u6210\u55ae\u500b\u8f38\u5165\u7dad\u5ea6\u7684\u76f8\u95dc\u6027\u5206\u6578\u3002\u9019\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u795e\u7d93\u7db2\u8def\u4e2d\u54ea\u4e9b\u90e8\u5206\u5c0d\u6700\u7d42\u9810\u6e2c\u8ca2\u737b\u6700\u5927\uff0c\u5c0d\u65bc\u6a21\u578b\u7684\u89e3\u91cb\u548c\u53ef\u89e3\u91cb\u6027\u975e\u5e38\u6709\u7528\u3002\u8a72\u65b9\u6cd5\u88ab\u64f4\u5c55\u5230\u8655\u7406\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u7684\u7279\u6b8a\u975e\u7dda\u6027\u64cd\u4f5c\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u9019\u4e9b\u7db2\u8def\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u5f9e\u4e0b\u5716\u53ef\u898b\uff0c\u5de6\u5074\u8f38\u5165\u4e00\u5f35\u5716\u7247\uff0c\u7d93\u904e\u7db2\u8def\u4e2d\u7684\u4e00\u7cfb\u5217\u795e\u7d93\u5143\u8a08\u7b97\u5f8c\u5f97\u5230\u8f38\u51fa\u7d50\u679c xf\u3002\u9019\u500b\u8f38\u51fa xf \u7b49\u540c\u65bc Rf\uff0c\u5be6\u969b\u4e0a\u662f\u6bcf\u4e00\u5c64\u7684\u7279\u5fb5\u7d93\u904e\u76f8\u95dc\u6027\u8a08\u7b97\u5f8c\u7e3d\u548c\u7684\u7d50\u679c\u3002\u56e0\u6b64\u53f3\u5074\u7684\u90e8\u5206\u8868\u793a\u5f9e\u8f38\u51fa\u7d50\u679c\u958b\u59cb\uff0c\u900f\u904e\u5c64\u5c64\u50b3\u905e\uff0c\u5c07\u91cd\u8981\u8a0a\u606f\u56de\u994b\u5230\u6700\u521d\u7684\u8f38\u5165\u5716\u7247\u4e2d\u3002 Input: \u8f38\u5165\u662f\u4e00\u5f35\u5716\u50cf\uff0c\u5176\u4e2d\u5305\u542b\u50cf\u7d20\u503c {xp}\uff0c\u9019\u4e9b\u50cf\u7d20\u503c\u8868\u793a\u4e86\u5716\u50cf\u4e2d\u7684\u7279\u5fb5\u3002 Forward Propagation: \u5c07\u50cf\u7d20\u503c {xp} \u901a\u904e\u795e\u7d93\u7db2\u8def\u9032\u884c\u6b63\u5411\u50b3\u64ad\u3002\u5728\u795e\u7d93\u7db2\u8def\u4e2d\uff0c\u7d93\u904e\u591a\u500b\u5c64\u6b21\u7684\u8a08\u7b97\uff0c\u7372\u5f97\u4e00\u500b\u5f97\u5206 f(x)\uff0c\u8a72\u5f97\u5206\u6307\u793a\u4e86\u985e\u5225 \u8c93 \u7684\u5b58\u5728\u3002\u9019\u500b\u5f97\u5206\u662f\u7531\u8f38\u51fa\u795e\u7d93\u5143 xf \u8868\u793a\u7684\uff0cxf \u7684\u503c\u7de8\u78bc\u4e86\u5716\u50cf\u4e2d\u662f\u5426\u5305\u542b\u8c93\u7684\u8a0a\u606f\u3002 Relevance Calculation: \u63a5\u4e0b\u4f86\uff0c\u8a08\u7b97\u8f38\u51fa\u795e\u7d93\u5143 xf \u7684\u76f8\u5c0d\u91cd\u8981\u6027\uff08relevance\uff09\uff0c\u9019\u500b\u76f8\u5c0d\u91cd\u8981\u6027\u8a18\u70ba Rf\uff0c\u901a\u5e38\u662f xf \u7684\u503c\u672c\u8eab\u3002\u9019\u8868\u793a\u8f38\u51fa\u795e\u7d93\u5143\u5c0d\u65bc\u985e\u5225 \u8c93 \u7684\u5b58\u5728\u6709\u591a\u5927\u7684\u8ca2\u737b\u3002 Backpropagation of Relevance: \u5f9e\u9802\u5c64\u958b\u59cb\uff0c\u5c07\u76f8\u5c0d\u91cd\u8981\u6027 Rf \u9032\u884c\u53cd\u5411\u50b3\u64ad\uff0c\u50b3\u64ad\u5230\u8f03\u4f4e\u7684\u5c64\u6b21\u3002\u9019\u4e9b\u76f8\u5c0d\u91cd\u8981\u6027\uff08Rp\uff09\u88ab\u5206\u914d\u7d66\u4e86\u6240\u6709\u50cf\u7d20 {xp}\uff0c\u8868\u793a\u4e86\u5b83\u5011\u5c0d\u65bc\u6700\u7d42\u985e\u5225\u5206\u985e\u7684\u8ca2\u737b\u3002 Relevance Redistribution: \u6700\u4f4e\u96b1\u85cf\u5c64\u7684\u6700\u5f8c\u4e00\u500b\u795e\u7d93\u5143\u88ab\u8a8d\u70ba\u5c0d\u65bc\u66f4\u9ad8\u5c64\u6b21\u7684\u91cd\u8981\u6027\u8f03\u5927\uff0c\u56e0\u6b64\u5b83\u5c07\u5176\u5206\u914d\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u91cd\u65b0\u5206\u914d\u5230\u50cf\u7d20\u4e0a\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u9019\u500b\u795e\u7d93\u5143\u5c07\u5f71\u97ff\u5716\u50cf\u4e2d\u67d0\u4e9b\u7279\u5b9a\u5340\u57df\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u3002 Heatmap Generation: \u901a\u904e\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u4e86\u50cf\u7d20 {xp} \u7684\u76f8\u5c0d\u91cd\u8981\u6027 heatmap\uff0c\u9019\u500b\u71b1\u5716\u986f\u793a\u4e86\u5716\u50cf\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc\u6700\u7d42\u985e\u5225\u5206\u985e\u66f4\u52a0\u91cd\u8981\u3002\u71b1\u5716\u53ef\u7528\u65bc\u53ef\u8996\u5316\u6a21\u578b\u5c0d\u5716\u50cf\u7684\u95dc\u6ce8\u9ede\uff0c\u4ee5\u53ca\u5728\u5716\u50cf\u4e2d\u54ea\u4e9b\u5340\u57df\u5305\u542b\u4e86\u6709\u95dc\u985e\u5225 \u8c93 \u7684\u8a0a\u606f\u3002 \u6211\u5011\u53ef\u4ee5\u767c\u73fe LRP \u65b9\u6cd5\u4e3b\u8981\u662f\u5f9e\u6700\u7d42\u8f38\u51fa\u5c64\u9010\u6b65\u8ffd\u6eaf\u5230\u8f38\u5165\u5c64\uff0c\u9010\u5c64\u7406\u89e3\u524d\u5c64\u91cd\u8981\u7684\u795e\u7d93\u5143\u662f\u5982\u4f55\u5f71\u97ff\u8f38\u51fa\u7684\uff0c\u4ee5\u6b64\u4f86\u7372\u5f97\u89e3\u91cb\u6027\u3002\u4e0b\u9762\u516c\u5f0f Ri \u5c31\u662f\u7b2c i \u5c64\u7bc0\u9ede\u7684 Relevance\uff0c\u8981\u8a08\u7b97\u5b83\u5c31\u662f Rj \u7b2c j \u5c64\u6240\u6709\u7bc0\u9ede\u7684 Relevance \u4e26\u4e58\u4e0a\u4e00\u500b\u6b0a\u91cd\uff0c\u9019\u500b\u6b0a\u91cd\u5c31\u662f xi \u7bc0\u9ede\u7d93\u904e\u8a08\u7b97\u5f80\u4e0b\u4e00\u5c64\u50b3\u905e\u7684\u6578\u503c\u3002 \u4ee5\u4e0b\u9019\u4e09\u7a2e\u4e0d\u540c\u7684 LRP \u898f\u5247\u662f\u7528\u4f86\u8abf\u6574\u76f8\u5c0d\u91cd\u8981\u6027\u5728\u4e0d\u540c\u795e\u7d93\u7db2\u8def\u5c64\u6b21\u4e4b\u9593\u7684\u50b3\u64ad\u65b9\u5f0f\u3002\u5b83\u5011\u6709\u52a9\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u4e26\u63d0\u4f9b\u4e86\u5c0d\u6a21\u578b\u4e2d\u4e0d\u540c\u5c64\u6b21\u795e\u7d93\u5143\u8ca2\u737b\u7684\u4e0d\u540c\u7406\u89e3\u3002\u6839\u64da\u795e\u7d93\u5143\u6240\u5728\u7684\u5c64\u6b21\uff0c\u9078\u64c7\u9069\u7576\u7684 LRP \u898f\u5247\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\u3002 1. Basic Rule (LRP-0): \u61c9\u7528\u5c64\u7d1a: LRP-0 \u4e3b\u8981\u7528\u65bc\u6df1\u5c64\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8f03\u9ad8\u5c64\u6b21\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: \u5728 LRP-0 \u4e2d\uff0c\u76f8\u5c0d\u91cd\u8981\u6027\uff08relevance\uff09\u6703\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u800c\u4e14\u50b3\u905e\u7684\u65b9\u5f0f\u662f\u57fa\u65bc\u67d0\u7a2e\u6b0a\u91cd\u5206\u4f48\u7684\u3002\u9019\u7a2e\u6b0a\u91cd\u5206\u4f48\u53ef\u4ee5\u57fa\u65bc\u795e\u7d93\u7db2\u8def\u7684\u7d50\u69cb\u548c\u9023\u63a5\u4f86\u8a08\u7b97\uff0c\u4ee5\u78ba\u4fdd\u76f8\u5c0d\u91cd\u8981\u6027\u80fd\u5920\u5408\u7406\u5730\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u9593\u63a5\u63d0\u9ad8\u4e86\u8f03\u9ad8\u5c64\u6b21\u7684\u8ca2\u737b\u3002 2. Epsilon Rule (LRP-\u03b5): \u61c9\u7528\u5c64\u7d1a: LRP-\u03b5 \u901a\u5e38\u61c9\u7528\u65bc\u4e2d\u5c64\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8655\u65bc\u4e2d\u9593\u4f4d\u7f6e\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: \u5728 LRP-\u03b5 \u4e2d\uff0c\u76f8\u5c0d\u91cd\u8981\u6027\u6703\u4ee5\u66f4\u5e73\u5747\u7684\u65b9\u5f0f\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u4e0d\u50cf LRP-0 \u90a3\u9ebc\u5c08\u6ce8\u65bc\u5c11\u6578\u9ad8\u5ea6\u76f8\u5c0d\u91cd\u8981\u7684\u795e\u7d93\u5143\u3002\u9019\u7a2e\u65b9\u6cd5\u6709\u52a9\u65bc\u5e73\u8861\u8a0a\u606f\u7684\u50b3\u905e\uff0c\u4ee5\u66f4\u5168\u9762\u5730\u8003\u616e\u4e2d\u9593\u5c64\u6b21\u7684\u8ca2\u737b\u3002 3. Gamma Rule (LRP-\u03b3): \u61c9\u7528\u5c64\u7d1a: LRP-\u03b3 \u901a\u5e38\u61c9\u7528\u65bc\u8f03\u6dfa\u5c64\u7684\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8f03\u4f4e\u5c64\u6b21\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: LRP-\u03b3 \u6703\u66f4\u5f37\u8abf\u76f8\u5c0d\u91cd\u8981\u6027\u5728\u8f03\u4f4e\u5c64\u795e\u7d93\u5143\u4e4b\u9593\u7684\u5206\u4f48\uff0c\u9019\u610f\u5473\u8457\u76f8\u5c0d\u91cd\u8981\u6027\u6703\u66f4\u52a0\u96c6\u4e2d\u65bc\u8f03\u4f4e\u5c64\u7684\u7279\u5b9a\u795e\u7d93\u5143\u3002\u9019\u6709\u52a9\u65bc\u89e3\u91cb\u6a21\u578b\u70ba\u4ec0\u9ebc\u6703\u5c0d\u67d0\u4e9b\u8f38\u5165\u7279\u5fb5\u7522\u751f\u5f37\u70c8\u7684\u53cd\u61c9\uff0c\u4e26\u4e14\u80fd\u5920\u5c07\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u66f4\u6e05\u6670\u5730\u95dc\u806f\u5230\u8f03\u4f4e\u5c64\u6b21\u7684\u7279\u5fb5\u3002 \u5be6\u9a57\u7d50\u679c \u8b93\u6211\u5011\u4f86\u89c0\u5bdf\u4e0d\u540c\u8a08\u7b97\u65b9\u6cd5\u5c0d\u6700\u7d42\u89e3\u91cb\u6027\u7684\u5f71\u97ff\u3002\u5728\u4e0b\u5716\u4e2d\uff0c\u7d05\u8272\u7684\u9ede\u4ee3\u8868\u5c0d\u8fa8\u8b58\u7d50\u679c\u6709\u6b63\u5411\u5e6b\u52a9\uff0c\u800c\u85cd\u8272\u7684\u9ede\u5247\u4ee3\u8868\u6709\u8ca0\u5411\u7684\u5f71\u97ff\u3002\u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u5230\u4ee5\u4e0b\u60c5\u6cc1\uff1a\u7576\u4f7f\u7528 LRP-0 \u6642\uff0c\u7522\u751f\u4e86\u76f8\u7576\u591a\u7684\u96dc\u8a0a\uff1bLRP-\u03b5 \u7684\u6548\u679c\u770b\u8d77\u4f86\u76f8\u5c0d\u4e0d\u932f\uff0c\u4e26\u4e14\u6e1b\u5c11\u4e86\u96dc\u8a0a\u9ede\u7684\u51fa\u73fe\uff1b\u800c\u6700\u53f3\u908a\u7684 LRP-\u03b3 \u5247\u6c92\u6709\u51fa\u73fe\u5c0d\u8fa8\u8b58\u7d50\u679c\u6709\u8ca0\u9762\u5f71\u97ff\u7684\u9ede\uff0c\u56e0\u6b64\u6c92\u6709\u85cd\u8272\u9ede\u3002\u6700\u5f8c\u8ad6\u6587\u53c8\u63d0\u4e86\u4e00\u7a2e\u65b9\u6cd5\u662f\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u4f9d\u64da\u4e0d\u540c\u5c64\u4f7f\u7528\u4e0d\u540c\u7684\u8a08\u7b97\u65b9\u6cd5\uff0c\u5176\u4e2d\u5728\u6700\u5f8c\u7684\u5168\u9023\u968e\u5c64\u4f7f\u7528 LRP-0\uff0c\u5728\u6df1\u5c64\u53d6\u5f97\u6bd4\u8f03\u591a\u7279\u5fb5\u7684\u5730\u65b9\u4f7f\u7528 LRP-\u03b5\uff0c\u5728\u6dfa\u5c64\u7684\u5730\u65b9\u4f7f\u7528 LRP-\u03b3\u3002\u6700\u7d42\u7684\u7d50\u679c\u770b\u8d77\u4f86\u9060\u6bd4\u4e09\u500b\u55ae\u7368\u4f7f\u7528\u6548\u679c\u986f\u8457\u3002 \u5404\u4f4d\u53ef\u4ee5\u8a66\u8a66\u770b\u9019\u500b\u4e92\u52d5 \u7db2\u7ad9 \uff0c\u88e1\u9762\u5be6\u73fe\u4e86 LRP \u65b9\u6cd5\uff0c\u4e26\u53ef\u4ee5\u8abf\u6574\u53c3\u6578\u63a7\u5236\u89e3\u91cb\u6027\u3002 DeepLIFT DeepLIFT \u662f\u4e00\u7a2e\u53cd\u5411\u50b3\u64ad\u7684\u65b9\u6cd5\uff0c\u985e\u4f3c\u65bc LRP\u3002\u6bcf\u500b\u55ae\u5143 i \u90fd\u88ab\u5206\u914d\u4e00\u500b\u6b78\u56e0\u503c\uff0c\u8868\u793a\u8a72\u55ae\u5143\u5c0d\u65bc\u539f\u59cb\u7db2\u8def\u8f38\u5165 x \u7684\u6fc0\u767c\u76f8\u5c0d\u65bc\u67d0\u500b\u53c3\u8003\u8f38\u5165 x\u0304 \u7684\u76f8\u5c0d\u6548\u61c9\u3002\u53ef\u4ee5\u53c3\u8003\u4e0b\u65b9\u516c\u5f0f3\uff1a \u5c0d\u65bc\u6240\u6709\u96b1\u85cf\u5c64\u55ae\u5143\uff0c\u53c3\u8003\u503c z\u0304ji \u662f\u901a\u904e\u5c0d\u7db2\u8def\u9032\u884c\u524d\u5411\u50b3\u905e\uff0c\u4f7f\u7528\u57fa\u6e96\u8f38\u5165 x\u0304 \uff0c\u4e26\u8a18\u9304\u6bcf\u500b\u55ae\u5143\u7684\u6fc0\u767c\u6578\u503c\u4f86\u78ba\u5b9a\u7684\u3002\u8207 LRP \u4e00\u6a23\uff0c\u57fa\u6e96\u901a\u5e38\u9078\u64c7\u70ba\u96f6\u3002\u76f8\u95dc\u6027\u50b3\u64ad\u904e\u7a0b\u53ef\u4ee5\u901a\u904e\u4e0b\u65b9\u516c\u5f0f4\u63cf\u8ff0\u3002 \u7c21\u55ae\u4f86\u8aaa DeepLIFT \u7406\u8ad6\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u5c07\u6a21\u578b\u7684\u8f38\u5165\u7279\u5fb5\u6b78\u56e0\u5230\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5ea6\uff0c\u4ee5\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u904e\u7a0b\u3002\u5982\u679c\u8981\u5be6\u4f5c DeepLIFT \u53ef\u4ee5\u53c3\u8003\u539f\u59cb\u8ad6\u6587\u5728 GitHub \u7684\u958b\u6e90\u5957\u4ef6 DeepLIFT: Deep Learning Important FeaTures \u3002\u6b64\u5916\u5728 SHAP \u5957\u4ef6\u63d0\u4f9b\u7684 DeepExplainer \u89e3\u91cb\u65b9\u6cd5\u5c31\u662f DeepLIFT \u548c Shapely values \u7684\u7d50\u5408\u3002\u8a73\u7d30\u7684\u5be6\u4f5c\u5167\u5bb9\u53ef\u4ee5\u53c3\u8003 [Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb \u3002 Reference Explaining NonLinear Classification Decisions with Deep Taylor Decomposition Towards better understanding of gradient-based attribution methods for Deep Neural Networks \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 03 \u57fa\u65bc\u50b3\u64ad\u7684\u65b9\u6cd5 (Propagation-Based): Layer-Wise Relevance Propagation","title":"[Day 21] Propagation-Based\uff1a\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#day-21-propagation-based","text":"\u4eca\u5929\u6240\u8981\u8ac7 Propagation-Based \u65b9\u6cd5\u5728 CNN \u4e2d\u7684\u4f5c\u7528\u662f\u900f\u904e\u8a08\u7b97\u68af\u5ea6\u3001\u53cd\u5411\u50b3\u64ad\u6216\u4e0d\u540c\u5c64\u7684\u7279\u5fb5\u4f86\u91cf\u5316\u6bcf\u500b\u50cf\u7d20\u6216\u7279\u5fb5\u5c0d\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\u3002 \u5f9e\u6628\u5929\u7684 Gradient-based \u65b9\u6cd5\u6211\u5011\u4e86\u89e3\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4f86\u4f30\u7b97\u6bcf\u500b\u8f38\u5165\u5716\u7247\u7684\u50cf\u7d20\u8207\u6700\u7d42\u5206\u985e\u7d50\u679c\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u900f\u904e\u8a08\u7b97\u6bcf\u500b\u8f38\u5165\u5716\u7247\u50cf\u7d20\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u7d50\u679c\u7684\u5f71\u97ff\uff0c\u6211\u5011\u53ef\u4ee5\u77ad\u89e3\u5b83\u5011\u5c0d\u65bc\u5206\u985e\u6a19\u7c64\u7684\u9810\u6e2c\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002\u6700\u7d42\u9019\u4e9b\u8ca2\u737b\u7684\u7e3d\u548c\u7b49\u540c\u65bc\u8a72\u5716\u50cf\u5c0d\u65bc\u5206\u985e\u7d50\u679c\u7684\u9810\u6e2c\u3002\u4e8b\u5be6\u4e0a\u9019\u500b\u6982\u5ff5\u53ef\u4ee5\u5728 CNN \u7684\u6bcf\u4e00\u5c64\u90fd\u61c9\u7528\uff0c\u5373\u63a8\u65b7\u6bcf\u500b\u7279\u5fb5\u5716\u4e2d\u7684\u7279\u5fb5\u8207\u6700\u7d42\u7d50\u679c\u4e4b\u9593\u7684\u76f8\u95dc\u6027\u3002\u9019\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u5f9e\u6700\u7d42\u8f38\u51fa\u5c64\u958b\u59cb\u56de\u6eaf\uff0c\u800c\u4e0d\u50c5\u50c5\u91dd\u5c0d\u8f38\u5165\u5c64\u8a08\u7b97\u68af\u5ea6\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u5169\u7bc7\u8457\u540d\u7684 Propagation-Based \u76f8\u95dc\u6587\u737b\uff1a Layer-wise Relevance Propagation (LRP) (Bach et al., 2015)\uff1a\u900f\u904e\u6cf0\u52d2\u5206\u89e3\u4f86\u53cd\u5411\u50b3\u905e\u795e\u7d93\u7db2\u8def\uff0c\u4ee5\u9054\u5230\u8b58\u5225\u91cd\u8981\u50cf\u7d20\u7684\u65b9\u6cd5\u3002 DeepLIFT (Shrikumar et al., 2017)\uff1a\u662f\u4e00\u7a2e\u6539\u9032\u7684\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u7528\u65bc\u751f\u6210\u71b1\u5716\u4ee5\u986f\u793a\u795e\u7d93\u7db2\u8def\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3002SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u5c31\u662f\u57fa\u65bc SHAP \u548c DeepLIFT \u7b97\u6cd5\u3002","title":"[Day 21] Propagation-Based\uff1a\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#layer-wise-relevance-propagation","text":"Layer-wise relevance propagation \u662f\u4e00\u7a2e Propagation-Based \u65b9\u6cd5\u7684\u5be6\u4f8b\uff0c\u7528\u65bc\u7406\u89e3\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u5c0d\u8f38\u5165\u6578\u64da\u7684\u9810\u6e2c\u662f\u5982\u4f55\u5f62\u6210\u7684\uff0c\u4e26\u5c07\u5176\u5206\u89e3\u6210\u55ae\u500b\u8f38\u5165\u7dad\u5ea6\u7684\u76f8\u95dc\u6027\u5206\u6578\u3002\u9019\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u795e\u7d93\u7db2\u8def\u4e2d\u54ea\u4e9b\u90e8\u5206\u5c0d\u6700\u7d42\u9810\u6e2c\u8ca2\u737b\u6700\u5927\uff0c\u5c0d\u65bc\u6a21\u578b\u7684\u89e3\u91cb\u548c\u53ef\u89e3\u91cb\u6027\u975e\u5e38\u6709\u7528\u3002\u8a72\u65b9\u6cd5\u88ab\u64f4\u5c55\u5230\u8655\u7406\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u7684\u7279\u6b8a\u975e\u7dda\u6027\u64cd\u4f5c\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u9019\u4e9b\u7db2\u8def\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u5f9e\u4e0b\u5716\u53ef\u898b\uff0c\u5de6\u5074\u8f38\u5165\u4e00\u5f35\u5716\u7247\uff0c\u7d93\u904e\u7db2\u8def\u4e2d\u7684\u4e00\u7cfb\u5217\u795e\u7d93\u5143\u8a08\u7b97\u5f8c\u5f97\u5230\u8f38\u51fa\u7d50\u679c xf\u3002\u9019\u500b\u8f38\u51fa xf \u7b49\u540c\u65bc Rf\uff0c\u5be6\u969b\u4e0a\u662f\u6bcf\u4e00\u5c64\u7684\u7279\u5fb5\u7d93\u904e\u76f8\u95dc\u6027\u8a08\u7b97\u5f8c\u7e3d\u548c\u7684\u7d50\u679c\u3002\u56e0\u6b64\u53f3\u5074\u7684\u90e8\u5206\u8868\u793a\u5f9e\u8f38\u51fa\u7d50\u679c\u958b\u59cb\uff0c\u900f\u904e\u5c64\u5c64\u50b3\u905e\uff0c\u5c07\u91cd\u8981\u8a0a\u606f\u56de\u994b\u5230\u6700\u521d\u7684\u8f38\u5165\u5716\u7247\u4e2d\u3002 Input: \u8f38\u5165\u662f\u4e00\u5f35\u5716\u50cf\uff0c\u5176\u4e2d\u5305\u542b\u50cf\u7d20\u503c {xp}\uff0c\u9019\u4e9b\u50cf\u7d20\u503c\u8868\u793a\u4e86\u5716\u50cf\u4e2d\u7684\u7279\u5fb5\u3002 Forward Propagation: \u5c07\u50cf\u7d20\u503c {xp} \u901a\u904e\u795e\u7d93\u7db2\u8def\u9032\u884c\u6b63\u5411\u50b3\u64ad\u3002\u5728\u795e\u7d93\u7db2\u8def\u4e2d\uff0c\u7d93\u904e\u591a\u500b\u5c64\u6b21\u7684\u8a08\u7b97\uff0c\u7372\u5f97\u4e00\u500b\u5f97\u5206 f(x)\uff0c\u8a72\u5f97\u5206\u6307\u793a\u4e86\u985e\u5225 \u8c93 \u7684\u5b58\u5728\u3002\u9019\u500b\u5f97\u5206\u662f\u7531\u8f38\u51fa\u795e\u7d93\u5143 xf \u8868\u793a\u7684\uff0cxf \u7684\u503c\u7de8\u78bc\u4e86\u5716\u50cf\u4e2d\u662f\u5426\u5305\u542b\u8c93\u7684\u8a0a\u606f\u3002 Relevance Calculation: \u63a5\u4e0b\u4f86\uff0c\u8a08\u7b97\u8f38\u51fa\u795e\u7d93\u5143 xf \u7684\u76f8\u5c0d\u91cd\u8981\u6027\uff08relevance\uff09\uff0c\u9019\u500b\u76f8\u5c0d\u91cd\u8981\u6027\u8a18\u70ba Rf\uff0c\u901a\u5e38\u662f xf \u7684\u503c\u672c\u8eab\u3002\u9019\u8868\u793a\u8f38\u51fa\u795e\u7d93\u5143\u5c0d\u65bc\u985e\u5225 \u8c93 \u7684\u5b58\u5728\u6709\u591a\u5927\u7684\u8ca2\u737b\u3002 Backpropagation of Relevance: \u5f9e\u9802\u5c64\u958b\u59cb\uff0c\u5c07\u76f8\u5c0d\u91cd\u8981\u6027 Rf \u9032\u884c\u53cd\u5411\u50b3\u64ad\uff0c\u50b3\u64ad\u5230\u8f03\u4f4e\u7684\u5c64\u6b21\u3002\u9019\u4e9b\u76f8\u5c0d\u91cd\u8981\u6027\uff08Rp\uff09\u88ab\u5206\u914d\u7d66\u4e86\u6240\u6709\u50cf\u7d20 {xp}\uff0c\u8868\u793a\u4e86\u5b83\u5011\u5c0d\u65bc\u6700\u7d42\u985e\u5225\u5206\u985e\u7684\u8ca2\u737b\u3002 Relevance Redistribution: \u6700\u4f4e\u96b1\u85cf\u5c64\u7684\u6700\u5f8c\u4e00\u500b\u795e\u7d93\u5143\u88ab\u8a8d\u70ba\u5c0d\u65bc\u66f4\u9ad8\u5c64\u6b21\u7684\u91cd\u8981\u6027\u8f03\u5927\uff0c\u56e0\u6b64\u5b83\u5c07\u5176\u5206\u914d\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u91cd\u65b0\u5206\u914d\u5230\u50cf\u7d20\u4e0a\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u9019\u500b\u795e\u7d93\u5143\u5c07\u5f71\u97ff\u5716\u50cf\u4e2d\u67d0\u4e9b\u7279\u5b9a\u5340\u57df\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u3002 Heatmap Generation: \u901a\u904e\u4ee5\u4e0a\u6b65\u9a5f\uff0c\u5f97\u5230\u4e86\u50cf\u7d20 {xp} \u7684\u76f8\u5c0d\u91cd\u8981\u6027 heatmap\uff0c\u9019\u500b\u71b1\u5716\u986f\u793a\u4e86\u5716\u50cf\u4e2d\u54ea\u4e9b\u5340\u57df\u5c0d\u65bc\u6700\u7d42\u985e\u5225\u5206\u985e\u66f4\u52a0\u91cd\u8981\u3002\u71b1\u5716\u53ef\u7528\u65bc\u53ef\u8996\u5316\u6a21\u578b\u5c0d\u5716\u50cf\u7684\u95dc\u6ce8\u9ede\uff0c\u4ee5\u53ca\u5728\u5716\u50cf\u4e2d\u54ea\u4e9b\u5340\u57df\u5305\u542b\u4e86\u6709\u95dc\u985e\u5225 \u8c93 \u7684\u8a0a\u606f\u3002 \u6211\u5011\u53ef\u4ee5\u767c\u73fe LRP \u65b9\u6cd5\u4e3b\u8981\u662f\u5f9e\u6700\u7d42\u8f38\u51fa\u5c64\u9010\u6b65\u8ffd\u6eaf\u5230\u8f38\u5165\u5c64\uff0c\u9010\u5c64\u7406\u89e3\u524d\u5c64\u91cd\u8981\u7684\u795e\u7d93\u5143\u662f\u5982\u4f55\u5f71\u97ff\u8f38\u51fa\u7684\uff0c\u4ee5\u6b64\u4f86\u7372\u5f97\u89e3\u91cb\u6027\u3002\u4e0b\u9762\u516c\u5f0f Ri \u5c31\u662f\u7b2c i \u5c64\u7bc0\u9ede\u7684 Relevance\uff0c\u8981\u8a08\u7b97\u5b83\u5c31\u662f Rj \u7b2c j \u5c64\u6240\u6709\u7bc0\u9ede\u7684 Relevance \u4e26\u4e58\u4e0a\u4e00\u500b\u6b0a\u91cd\uff0c\u9019\u500b\u6b0a\u91cd\u5c31\u662f xi \u7bc0\u9ede\u7d93\u904e\u8a08\u7b97\u5f80\u4e0b\u4e00\u5c64\u50b3\u905e\u7684\u6578\u503c\u3002 \u4ee5\u4e0b\u9019\u4e09\u7a2e\u4e0d\u540c\u7684 LRP \u898f\u5247\u662f\u7528\u4f86\u8abf\u6574\u76f8\u5c0d\u91cd\u8981\u6027\u5728\u4e0d\u540c\u795e\u7d93\u7db2\u8def\u5c64\u6b21\u4e4b\u9593\u7684\u50b3\u64ad\u65b9\u5f0f\u3002\u5b83\u5011\u6709\u52a9\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u4e26\u63d0\u4f9b\u4e86\u5c0d\u6a21\u578b\u4e2d\u4e0d\u540c\u5c64\u6b21\u795e\u7d93\u5143\u8ca2\u737b\u7684\u4e0d\u540c\u7406\u89e3\u3002\u6839\u64da\u795e\u7d93\u5143\u6240\u5728\u7684\u5c64\u6b21\uff0c\u9078\u64c7\u9069\u7576\u7684 LRP \u898f\u5247\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"Layer-wise relevance propagation"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#1-basic-rule-lrp-0","text":"\u61c9\u7528\u5c64\u7d1a: LRP-0 \u4e3b\u8981\u7528\u65bc\u6df1\u5c64\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8f03\u9ad8\u5c64\u6b21\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: \u5728 LRP-0 \u4e2d\uff0c\u76f8\u5c0d\u91cd\u8981\u6027\uff08relevance\uff09\u6703\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u800c\u4e14\u50b3\u905e\u7684\u65b9\u5f0f\u662f\u57fa\u65bc\u67d0\u7a2e\u6b0a\u91cd\u5206\u4f48\u7684\u3002\u9019\u7a2e\u6b0a\u91cd\u5206\u4f48\u53ef\u4ee5\u57fa\u65bc\u795e\u7d93\u7db2\u8def\u7684\u7d50\u69cb\u548c\u9023\u63a5\u4f86\u8a08\u7b97\uff0c\u4ee5\u78ba\u4fdd\u76f8\u5c0d\u91cd\u8981\u6027\u80fd\u5920\u5408\u7406\u5730\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u9593\u63a5\u63d0\u9ad8\u4e86\u8f03\u9ad8\u5c64\u6b21\u7684\u8ca2\u737b\u3002","title":"1. Basic Rule (LRP-0):"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#2-epsilon-rule-lrp-","text":"\u61c9\u7528\u5c64\u7d1a: LRP-\u03b5 \u901a\u5e38\u61c9\u7528\u65bc\u4e2d\u5c64\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8655\u65bc\u4e2d\u9593\u4f4d\u7f6e\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: \u5728 LRP-\u03b5 \u4e2d\uff0c\u76f8\u5c0d\u91cd\u8981\u6027\u6703\u4ee5\u66f4\u5e73\u5747\u7684\u65b9\u5f0f\u50b3\u905e\u5230\u8f03\u4f4e\u5c64\u7684\u795e\u7d93\u5143\uff0c\u4e0d\u50cf LRP-0 \u90a3\u9ebc\u5c08\u6ce8\u65bc\u5c11\u6578\u9ad8\u5ea6\u76f8\u5c0d\u91cd\u8981\u7684\u795e\u7d93\u5143\u3002\u9019\u7a2e\u65b9\u6cd5\u6709\u52a9\u65bc\u5e73\u8861\u8a0a\u606f\u7684\u50b3\u905e\uff0c\u4ee5\u66f4\u5168\u9762\u5730\u8003\u616e\u4e2d\u9593\u5c64\u6b21\u7684\u8ca2\u737b\u3002","title":"2. Epsilon Rule (LRP-\u03b5):"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#3-gamma-rule-lrp-","text":"\u61c9\u7528\u5c64\u7d1a: LRP-\u03b3 \u901a\u5e38\u61c9\u7528\u65bc\u8f03\u6dfa\u5c64\u7684\u795e\u7d93\u5143\uff0c\u5373\u795e\u7d93\u7db2\u8def\u4e2d\u8f03\u4f4e\u5c64\u6b21\u7684\u795e\u7d93\u5143\u3002 \u904b\u4f5c\u539f\u7406: LRP-\u03b3 \u6703\u66f4\u5f37\u8abf\u76f8\u5c0d\u91cd\u8981\u6027\u5728\u8f03\u4f4e\u5c64\u795e\u7d93\u5143\u4e4b\u9593\u7684\u5206\u4f48\uff0c\u9019\u610f\u5473\u8457\u76f8\u5c0d\u91cd\u8981\u6027\u6703\u66f4\u52a0\u96c6\u4e2d\u65bc\u8f03\u4f4e\u5c64\u7684\u7279\u5b9a\u795e\u7d93\u5143\u3002\u9019\u6709\u52a9\u65bc\u89e3\u91cb\u6a21\u578b\u70ba\u4ec0\u9ebc\u6703\u5c0d\u67d0\u4e9b\u8f38\u5165\u7279\u5fb5\u7522\u751f\u5f37\u70c8\u7684\u53cd\u61c9\uff0c\u4e26\u4e14\u80fd\u5920\u5c07\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u66f4\u6e05\u6670\u5730\u95dc\u806f\u5230\u8f03\u4f4e\u5c64\u6b21\u7684\u7279\u5fb5\u3002","title":"3. Gamma Rule (LRP-\u03b3):"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#_1","text":"\u8b93\u6211\u5011\u4f86\u89c0\u5bdf\u4e0d\u540c\u8a08\u7b97\u65b9\u6cd5\u5c0d\u6700\u7d42\u89e3\u91cb\u6027\u7684\u5f71\u97ff\u3002\u5728\u4e0b\u5716\u4e2d\uff0c\u7d05\u8272\u7684\u9ede\u4ee3\u8868\u5c0d\u8fa8\u8b58\u7d50\u679c\u6709\u6b63\u5411\u5e6b\u52a9\uff0c\u800c\u85cd\u8272\u7684\u9ede\u5247\u4ee3\u8868\u6709\u8ca0\u5411\u7684\u5f71\u97ff\u3002\u6211\u5011\u4e5f\u53ef\u4ee5\u89c0\u5bdf\u5230\u4ee5\u4e0b\u60c5\u6cc1\uff1a\u7576\u4f7f\u7528 LRP-0 \u6642\uff0c\u7522\u751f\u4e86\u76f8\u7576\u591a\u7684\u96dc\u8a0a\uff1bLRP-\u03b5 \u7684\u6548\u679c\u770b\u8d77\u4f86\u76f8\u5c0d\u4e0d\u932f\uff0c\u4e26\u4e14\u6e1b\u5c11\u4e86\u96dc\u8a0a\u9ede\u7684\u51fa\u73fe\uff1b\u800c\u6700\u53f3\u908a\u7684 LRP-\u03b3 \u5247\u6c92\u6709\u51fa\u73fe\u5c0d\u8fa8\u8b58\u7d50\u679c\u6709\u8ca0\u9762\u5f71\u97ff\u7684\u9ede\uff0c\u56e0\u6b64\u6c92\u6709\u85cd\u8272\u9ede\u3002\u6700\u5f8c\u8ad6\u6587\u53c8\u63d0\u4e86\u4e00\u7a2e\u65b9\u6cd5\u662f\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u4f9d\u64da\u4e0d\u540c\u5c64\u4f7f\u7528\u4e0d\u540c\u7684\u8a08\u7b97\u65b9\u6cd5\uff0c\u5176\u4e2d\u5728\u6700\u5f8c\u7684\u5168\u9023\u968e\u5c64\u4f7f\u7528 LRP-0\uff0c\u5728\u6df1\u5c64\u53d6\u5f97\u6bd4\u8f03\u591a\u7279\u5fb5\u7684\u5730\u65b9\u4f7f\u7528 LRP-\u03b5\uff0c\u5728\u6dfa\u5c64\u7684\u5730\u65b9\u4f7f\u7528 LRP-\u03b3\u3002\u6700\u7d42\u7684\u7d50\u679c\u770b\u8d77\u4f86\u9060\u6bd4\u4e09\u500b\u55ae\u7368\u4f7f\u7528\u6548\u679c\u986f\u8457\u3002 \u5404\u4f4d\u53ef\u4ee5\u8a66\u8a66\u770b\u9019\u500b\u4e92\u52d5 \u7db2\u7ad9 \uff0c\u88e1\u9762\u5be6\u73fe\u4e86 LRP \u65b9\u6cd5\uff0c\u4e26\u53ef\u4ee5\u8abf\u6574\u53c3\u6578\u63a7\u5236\u89e3\u91cb\u6027\u3002","title":"\u5be6\u9a57\u7d50\u679c"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#deeplift","text":"DeepLIFT \u662f\u4e00\u7a2e\u53cd\u5411\u50b3\u64ad\u7684\u65b9\u6cd5\uff0c\u985e\u4f3c\u65bc LRP\u3002\u6bcf\u500b\u55ae\u5143 i \u90fd\u88ab\u5206\u914d\u4e00\u500b\u6b78\u56e0\u503c\uff0c\u8868\u793a\u8a72\u55ae\u5143\u5c0d\u65bc\u539f\u59cb\u7db2\u8def\u8f38\u5165 x \u7684\u6fc0\u767c\u76f8\u5c0d\u65bc\u67d0\u500b\u53c3\u8003\u8f38\u5165 x\u0304 \u7684\u76f8\u5c0d\u6548\u61c9\u3002\u53ef\u4ee5\u53c3\u8003\u4e0b\u65b9\u516c\u5f0f3\uff1a \u5c0d\u65bc\u6240\u6709\u96b1\u85cf\u5c64\u55ae\u5143\uff0c\u53c3\u8003\u503c z\u0304ji \u662f\u901a\u904e\u5c0d\u7db2\u8def\u9032\u884c\u524d\u5411\u50b3\u905e\uff0c\u4f7f\u7528\u57fa\u6e96\u8f38\u5165 x\u0304 \uff0c\u4e26\u8a18\u9304\u6bcf\u500b\u55ae\u5143\u7684\u6fc0\u767c\u6578\u503c\u4f86\u78ba\u5b9a\u7684\u3002\u8207 LRP \u4e00\u6a23\uff0c\u57fa\u6e96\u901a\u5e38\u9078\u64c7\u70ba\u96f6\u3002\u76f8\u95dc\u6027\u50b3\u64ad\u904e\u7a0b\u53ef\u4ee5\u901a\u904e\u4e0b\u65b9\u516c\u5f0f4\u63cf\u8ff0\u3002 \u7c21\u55ae\u4f86\u8aaa DeepLIFT \u7406\u8ad6\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u5c07\u6a21\u578b\u7684\u8f38\u5165\u7279\u5fb5\u6b78\u56e0\u5230\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u5ea6\uff0c\u4ee5\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u904e\u7a0b\u3002\u5982\u679c\u8981\u5be6\u4f5c DeepLIFT \u53ef\u4ee5\u53c3\u8003\u539f\u59cb\u8ad6\u6587\u5728 GitHub \u7684\u958b\u6e90\u5957\u4ef6 DeepLIFT: Deep Learning Important FeaTures \u3002\u6b64\u5916\u5728 SHAP \u5957\u4ef6\u63d0\u4f9b\u7684 DeepExplainer \u89e3\u91cb\u65b9\u6cd5\u5c31\u662f DeepLIFT \u548c Shapely values \u7684\u7d50\u5408\u3002\u8a73\u7d30\u7684\u5be6\u4f5c\u5167\u5bb9\u53ef\u4ee5\u53c3\u8003 [Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb \u3002","title":"DeepLIFT"},{"location":"21.Propagation-Based:\u63a2\u7d22\u53cd\u5411\u50b3\u64ad\u6cd5\u7684\u53ef\u89e3\u91cb\u6027/#reference","text":"Explaining NonLinear Classification Decisions with Deep Taylor Decomposition Towards better understanding of gradient-based attribution methods for Deep Neural Networks \u53ef\u89e3\u91cb AI (XAI) \u7cfb\u5217 \u2014 03 \u57fa\u65bc\u50b3\u64ad\u7684\u65b9\u6cd5 (Propagation-Based): Layer-Wise Relevance Propagation","title":"Reference"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/","text":"[Day 22] CAM-Based\uff1a\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def \u7bc4\u4f8b\u7a0b\u5f0f\uff1a CAM\uff08Class Activation Mapping\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u6a21\u578b\u5728\u5716\u50cf\u5206\u985e\u4efb\u52d9\u4e2d\u7684\u9810\u6e2c\u7684\u6280\u8853\u3002\u5b83\u7684\u76ee\u7684\u662f\u751f\u6210\u4e00\u500b\u8996\u89ba\u5316\u7684\u71b1\u5716\uff0c\u4ee5\u986f\u793a\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u5340\u57df\uff0c\u4ee5\u53ca\u9019\u4e9b\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u67d0\u4e00\u985e\u5225\u7684\u8ca2\u737b\u3002\u4ee5\u4e0b\u662f\u8fd1\u5e74\u4f86\u8207 CAM \u76f8\u95dc\u7684\u8b8a\u5f62\u65b9\u6cd5\u7684\u6574\u7406\uff1a CAM (Class Activation Mapping) (Zhou et al. 2015): \u57fa\u672c\u7684CAM\u65b9\u6cd5\u662f\u7528\u4f86\u89e3\u91cbCNN\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u901a\u904e\u5c07\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u8207\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u76f8\u7d50\u5408\uff0c\u751f\u6210\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\uff0c\u4ee5\u986f\u793a\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u6ce8\u610f\u529b\u5206\u4f48\u3002 Grad-CAM (Gradient-weighted Class Activation Mapping) (Ancona et al. 2016): Grad-CAM\u5efa\u7acb\u5728CAM\u7684\u57fa\u790e\u4e0a\uff0c\u4f7f\u7528\u68af\u5ea6\u8a0a\u606f\u4f86\u66f4\u6e96\u78ba\u5730\u8a08\u7b97\u7279\u5fb5\u5716\u4e0a\u7684\u6b0a\u91cd\u3002\u5b83\u901a\u904e\u5c07\u5377\u7a4d\u5c64\u7684\u68af\u5ea6\u503c\u8207\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u751f\u6210\u71b1\u5716\uff0c\u4ee5\u8996\u89ba\u5316\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u95dc\u6ce8\u9ede\u3002 Grad-CAM++ (Chattopadhyay et al. 2017): Grad-CAM++\u662fGrad-CAM\u7684\u9032\u4e00\u6b65\u6539\u9032\u7248\u672c\uff0c\u5b83\u5f15\u5165\u4e86\u591a\u5c3a\u5ea6\u7279\u5fb5\u5716\u7684\u6982\u5ff5\uff0c\u4ee5\u63d0\u9ad8\u5c0d\u65bc\u7d30\u5fae\u7d30\u7bc0\u7684\u89e3\u91cb\u80fd\u529b\u3002\u5b83\u4f7f\u7528\u591a\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4f86\u751f\u6210\u66f4\u5177\u7d30\u7bc0\u7684\u71b1\u5716\u3002 Score-CAM (Haofan et al. 2020): Score-CAM\u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u9810\u6e2c\u7684\u65b9\u6cd5\uff0c\u5b83\u901a\u904e\u5c07\u901a\u9053\u7684\u5206\u6578\uff08score\uff09\u548c\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u751f\u6210\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\u3002\u5b83\u65e8\u5728\u63d0\u9ad8CAM\u65b9\u6cd5\u7684\u6027\u80fd\uff0c\u4e26\u6e1b\u5c11\u566a\u8072\u3002 \u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\uff0c\u5c07\u4ecb\u7d39 CAM \u548c Grad-CAM \u7684\u5dee\u5225\uff0c\u6700\u5f8c\u4f7f\u7528 TensorFlow \u4f86\u793a\u7bc4\u5982\u4f55\u904b\u7528 Grad-CAM \u65b9\u6cd5\u4f86\u89e3\u91cb CNN \u6a21\u578b\u3002 CAM CAM \u5728 2015 \u5e74\u88ab\u63d0\u51fa\uff0c\u8ad6\u6587\u540d\u7a31\u70ba Learning Deep Features for Discriminative Localization \uff0c\u5b83\u7684\u4e3b\u8981\u6982\u5ff5\u662f\u5c07 CNN \u7684\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4e4b\u5f8c\u63a5\u4e0a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c64(Global Average Pooling Layer)\u8207\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u76f8\u7d50\u5408\u3002\u9996\u5148\u8a08\u7b97\u6bcf\u500b\u985e\u5225\u7684\u6b0a\u91cd\uff0c\u9019\u4e9b\u6b0a\u91cd\u662f\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u8207\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u76f8\u4e58\u5f8c\u7684\u7e3d\u548c\u3002\u63a5\u8457\u5c07\u9019\u4e9b\u6b0a\u91cd\u61c9\u7528\u5230\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4e0a\uff0c\u751f\u6210\u4e00\u500b\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\u3002\u9019\u500b\u71b1\u5716\u986f\u793a\u4e86\u5c0d\u65bc\u67d0\u4e00\u7279\u5b9a\u985e\u5225\uff0c\u5716\u50cf\u7684\u4e0d\u540c\u5340\u57df\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u3002\u6700\u5f8c\u71b1\u5716\u7d93\u904e\u9069\u7576\u7684\u6b63\u898f\u5316\u8655\u7406\uff0c\u4ee5\u78ba\u4fdd\u5b83\u53ef\u4ee5\u88ab\u8996\u89ba\u5316\u4e26\u8207\u539f\u59cb\u5716\u50cf\u5c3a\u5bf8\u5c0d\u61c9\u3002 \u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08Global Average Pooling\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u4e2d\u7684\u7279\u5fb5\u6620\u5c04\u7684\u64cd\u4f5c\u3002\u5b83\u901a\u5e38\u7528\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u6700\u5f8c\u4e00\u5c64\uff0c\u4ee5\u5e6b\u52a9\u7e2e\u6e1b\u7279\u5fb5\u5716\u7684\u7dad\u5ea6\u4e26\u751f\u6210\u4e00\u500b\u56fa\u5b9a\u5927\u5c0f\u7684\u8f38\u51fa\uff0c\u4ee5\u4f9b\u5f8c\u7e8c\u7684\u5206\u985e\u6216\u56de\u6b78\u4efb\u52d9\u4f7f\u7528\u3002\u5168\u5c40\u5e73\u5747\u6c60\u5316\u7684\u904e\u7a0b\u975e\u5e38\u7c21\u55ae\uff0c\u4ee5\u4e0b\u7528\u4e00\u5f35\u7279\u5fb5\u5716\u70ba\u4f8b\uff0c\u5047\u8a2d pool size 4*4 \u4e5f\u5c31\u662f\u5c0d\u6574\u5f35\u5716\u505a\u5e73\u5747\u5f97\u5230 24 \u9019\u5c31\u662f\u4e00\u500b\u901a\u9053(\u4e00\u5f35\u7279\u5fb5\u5716) GAP \u5f8c\u7684\u7d50\u679c\u3002 \u7c21\u55ae\u4f86\u8aaa\u5168\u5c40\u5e73\u5747\u6c60\u5316\u505a\u6cd5\u5c6c\u65bc\u7a7a\u9593\u7dad\u5ea6\u7684\u4e00\u7a2e\u7279\u5fb5\u58d3\u7e2e\uff0c\u56e0\u70ba\u9019\u500b\u5be6\u6578\u662f\u6839\u64da\u6240\u6709\u7279\u5fb5\u503c\u8a08\u7b97\u51fa\u4f86\u7684\uff0c\u6240\u4ee5\u5728\u67d0\u7a2e\u7a0b\u5ea6\u4e0a\u5177\u6709\u5e73\u5747\u611f\u53d7\u91ce\uff0c\u6700\u5f8c\u4fdd\u6301\u901a\u9053\u6578\u4e0d\u8b8a\uff0c\u6240\u4ee5\u6700\u5f8c\u8f38\u51fa\u5927\u5c0f\u70ba 1x1xC\uff1a \u7d93\u904e\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08GAP\uff09\u5f8c\uff0c\u6211\u5011\u5f97\u5230\u4e86\u4e00\u500b\u5305\u542b\u6b0a\u91cd w \u7684\u50cf\u7d20\u9663\u5217\u3002\u9019\u4e9b\u6b0a\u91cd w \u53cd\u6620\u4e86\u6bcf\u5f35\u7279\u5fb5\u5716\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u67d0\u500b\u985e\u5225\u7684\u91cd\u8981\u6027\u3002\u66f4\u5927\u7684\u6b0a\u91cd\u503c\u8868\u793a\u76f8\u61c9\u7279\u5fb5\u5716\u5c0d\u65bc\u8a72\u5206\u985e\u7684\u8ca2\u737b\u66f4\u5927\u3002 \u70ba\u4e86\u66f4\u597d\u5730\u7406\u89e3\u9019\u4e9b\u6b0a\u91cd\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u5b83\u5011\u61c9\u7528\u65bc\u6574\u5f35\u7279\u5fb5\u5716\u4e0a\u7684\u6bcf\u500b\u50cf\u7d20\u9ede\uff0c\u7136\u5f8c\u9032\u884c\u758a\u52a0\u3002\u9019\u6a23\u505a\u7684\u597d\u8655\u662f\u6211\u5011\u53ef\u4ee5\u6839\u64da\u6bcf\u5f35\u7279\u5fb5\u5716\u7684\u91cd\u8981\u6027\u4f86\u96c6\u4e2d\u95dc\u6ce8\u4e0d\u540c\u7684\u5340\u57df\u3002\u5982\u679c\u67d0\u7279\u5b9a\u5206\u985e\u7684\u6b0a\u91cd w \u5f88\u5927\uff0c\u90a3\u9ebc\u8a72\u5206\u985e\u6240\u5c0d\u61c9\u7684\u7279\u5fb5\u5716\u5c07\u5728\u9032\u884c\u758a\u52a0\u6642\u5177\u6709\u66f4\u5927\u7684\u5f71\u97ff\u3002\u76f8\u53cd\uff0c\u6b0a\u91cd\u63a5\u8fd1\u65bc0\u7684\u7279\u5fb5\u5716\u5c0d\u65bc\u6700\u7d42\u7684\u95dc\u6ce8\u5ea6\u8f03\u4f4e\uff0c\u56e0\u6b64\u5b83\u5011\u88ab\u8996\u70ba\u4e0d\u592a\u91cd\u8981\u7684\u90e8\u5206\u3002 \u6b64\u65b9\u6cd5\u78ba\u5be6\u70ba\u89e3\u91cb CNN \u6a21\u578b\u7684\u9810\u6e2c\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u57fa\u790e\uff0c\u4f46\u5b83\u5b58\u5728\u4e00\u500b\u660e\u986f\u7684\u9650\u5236\uff0c\u5373\u53d7\u5230\u4e86\u7db2\u8def\u67b6\u69cb\u7684\u9650\u5236\u3002\u56e0\u70ba\u5982\u679c\u8981\u4f7f\u7528 CAM \u89e3\u91cb\uff0c\u5728 CNN \u67b6\u69cb\u7576\u4e2d\u6700\u5f8c\u4e00\u5c64\u4e00\u5b9a\u8981\u63a5\u4e0a GAP \u5c64\u3002\u96a8\u5f8c\u7684\u65b9\u6cd5\uff0c\u5982Grad-CAM\u548c\u5176\u8b8a\u7a2e\uff0c\u8a66\u5716\u514b\u670d\u9019\u4e9b\u9650\u5236\uff0c\u4f7f\u89e3\u91cb\u6027\u65b9\u6cd5\u66f4\u5177\u901a\u7528\u6027\uff0c\u9069\u7528\u65bc\u5404\u7a2e\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u3002 Grad-CAM \u5f9e CAM \u7684\u4ecb\u7d39\u4e2d\uff0c\u6211\u5011\u4e86\u89e3\u5230\u5be6\u73fe CAM \u6240\u9700\u7684\u4e00\u500b\u95dc\u9375\u689d\u4ef6\u662f\u5fc5\u9808\u52a0\u5165\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08GAP\uff09\u5c64\u3002\u7136\u800c\u9019\u7a2e\u8981\u6c42\u5728\u67d0\u7a2e\u7a0b\u5ea6\u4e0a\u9650\u5236\u4e86\u7db2\u8def\u67b6\u69cb\u7684\u81ea\u7531\u5ea6\uff0c\u56e0\u70ba\u6a21\u578b\u5fc5\u9808\u5305\u542b GAP \u5c64\u624d\u80fd\u4f7f\u7528 CAM\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5982\u679c\u6211\u5011\u5805\u6301\u8981\u6c42\u6a21\u578b\u7684\u6700\u5f8c\u4e00\u5c64\u5fc5\u9808\u662fGAP\u5c64\uff0c\u9019\u53ef\u80fd\u6703\u5f71\u97ff\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3002\u56e0\u6b64 Grad-CAM \u5728\u9019\u65b9\u9762\u89e3\u9664\u4e86\u9019\u7a2e\u9650\u5236\uff0c\u5b83\u51fa\u81ea\u65bc\u9019\u908a\u8ad6\u6587 Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization \u3002\u4f7f\u7528 Grad-CAM \u6211\u5011\u53ef\u4ee5\u5c0d\u4e00\u822c\u7684 CNN \u67b6\u69cb\u9032\u884c\u89e3\u91cb\uff0c\u800c\u4e0d\u9700\u8981\u5f37\u5236\u8981\u6c42\u6a21\u578b\u7684\u6700\u5f8c\u4e00\u5c64\u5fc5\u9808\u662f GAP \u5c64\u3002\u9019\u610f\u5473\u8457\u6211\u5011\u53ef\u4ee5\u66f4\u9748\u6d3b\u5730\u61c9\u7528 Grad-CAM \u4f86\u7372\u5f97 CNN \u5c0d\u8f38\u5165\u5716\u7247\u7684\u95dc\u6ce8\u5340\u57df\uff0c\u800c\u7121\u9700\u5c0d\u6a21\u578b\u9032\u884c\u5927\u5e45\u5ea6\u7684\u4fee\u6539\uff0c\u540c\u6642\u4e0d\u6703\u660e\u986f\u5f71\u97ff\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3002 \u5f9e\u4e0b\u5716\u4e2d\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u4e0d\u8ad6\u662f\u5168\u9023\u63a5\u5c64\u3001RNN\u3001LSTM\uff0c\u6216\u8005\u66f4\u8907\u96dc\u7684\u7db2\u8def\u6a21\u578b\uff0c\u90fd\u53ef\u4ee5\u900f\u904e Grad-CAM \u53d6\u5f97\u795e\u7d93\u7db2\u7d61\u7684\u5206\u985e\u95dc\u6ce8\u5340\u57df\u71b1\u529b\u5716\u3002 \u7c21\u55ae\u4f86\u8aaa Grad-CAM \u7684\u95dc\u9375\u5728\u65bc\u80fd\u5920\u900f\u904e\u53cd\u5411\u50b3\u64ad\u8a08\u7b97\u7528\u65bc CAM \u7684\u6b0a\u91cd \ud835\udc64\u3002\u6211\u5011\u53ef\u4ee5\u91dd\u5c0d\u6bcf\u500b\u7279\u5fb5\u5716\u9032\u884c\u53cd\u5411\u50b3\u64ad\uff0c\u8a08\u7b97\u68af\u5ea6\u7684\u5e73\u5747\u503c\uff0c\u4ee5\u7372\u5f97\u76f8\u5c0d\u61c9\u7684\u6b0a\u91cd\u3002\u6700\u5f8c\uff0c\u5c07\u9019\u4e9b\u6b0a\u91cd\uff08\ud835\udc4a\u2081, \ud835\udc4a\u2082, \u2026, \ud835\udc4a\ud835\udc5b\uff09\u8207\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u7136\u5f8c\u9032\u884c\u7e3d\u548c\uff0c\u5c31\u53ef\u4ee5\u89c0\u5bdf\u5230\u4e0d\u540c\u4f4d\u7f6e\u5c0d\u8f38\u51fa\u7684\u5f71\u97ff\u3002 CAM-Based \u65b9\u6cd5\u5be6\u4f5c (Grad-CAM) \u4eca\u5929\u7684\u7bc4\u4f8b\u5c07\u4f7f\u7528 Xception \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u793a\u7bc4\u5982\u4f55\u900f\u904e Grad-CAM \u89e3\u91cb\u6a21\u578b\u63a8\u8ad6\u7d50\u679c\u3002Xception \u7684\u540d\u7a31\u662f\u7531 Extreme Inception \u884d\u751f\u800c\u4f86\uff0c\u56e0\u70ba\u5b83\u57fa\u65bc Inception v3 \u67b6\u69cb\u7684\u6982\u5ff5\uff0c\u4e26\u5c0d\u4e00\u4e9b\u5730\u65b9\u9032\u884c\u4e86\u6975\u7aef\u64f4\u5c55\u548c\u6539\u9032\u3002 Xception \u8ad6\u6587\uff1a Xception: Deep Learning with Depthwise Separable Convolutions \u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(Xception) \u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 Xception \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.xception import Xception from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb Xception \u6a21\u578b model = Xception ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 Xception \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.xception import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 Xception \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 from tensorflow.keras.applications.xception import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 48%\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" ) Grad-CAM \u5be6\u4f5c \u9019\u6bb5\u51fd\u5f0f\u4e3b\u8981\u7528\u65bc\u751f\u6210Grad-CAM\u71b1\u5716\uff0c\u4ee5\u8996\u89ba\u5316\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\u7d50\u679c\u7684\u89e3\u91cb\u6027\u3002\u9996\u5148\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u6a21\u578b grad_model\uff0c\u8a72\u6a21\u578b\u63a5\u53d7\u76f8\u540c\u7684\u8f38\u5165\u5716\u50cf\uff0c\u4f46\u540c\u6642\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u548c\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9019\u662f\u70ba\u4e86\u80fd\u5920\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u68af\u5ea6\u3002\u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528 TensorFlow \u7684 GradientTape \u4f86\u8a18\u9304\u8a08\u7b97\u68af\u5ea6\u3002\u5b83\u8a08\u7b97\u4e86\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\uff0c\u540c\u6642\u8a18\u9304\u4e86\u5c0d\u61c9\u65bc\u7279\u5b9a\u985e\u5225\u7684\u5206\u985e\u795e\u7d93\u5143\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u8f38\u51fa\u7684\u68af\u5ea6\u3002\u7136\u5f8c\u8a08\u7b97\u9019\u4e9b\u68af\u5ea6\u7684\u5e73\u5747\u5f37\u5ea6 pooled_grads\uff0c\u4e26\u53d6\u5f97\u4e00\u500b\u5411\u91cf\u505a\u70ba\u6b0a\u91cd\uff0c\u6bcf\u500b\u5143\u7d20\u5c0d\u61c9\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u901a\u9053\u3002\u63a5\u8457\u5c07\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u8207 pooled_grads \u505a\u9ede\u7a4d\uff0c\u9019\u500b\u64cd\u4f5c\u5f37\u8abf\u4e86\u5c0d\u65bc\u7279\u5b9a\u985e\u5225\u9810\u6e2c\u91cd\u8981\u7684\u7279\u5fb5\u5716\u5340\u57df\u3002\u5f97\u5230\u7684\u7d50\u679c\u662f\u4e00\u500b\u71b1\u5716\uff0c\u5176\u4e2d\u6bcf\u500b\u50cf\u7d20\u503c\u8868\u793a\u76f8\u61c9\u4f4d\u7f6e\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u7684\u91cd\u8981\u6027\u3002\u6700\u5f8c\u70ba\u4e86\u8996\u89ba\u5316\uff0c\u5c07\u71b1\u5716\u7684\u503c\u6b63\u898f\u5316\u70ba\u4ecb\u65bc0\u548c1\u4e4b\u9593\uff0c\u4ee5\u4fbf\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u8996\u89ba\u5316\u3002 def make_gradcam_heatmap ( img_array , model , last_conv_layer_name , pred_index = None ): # \u5efa\u7acb\u4e00\u500b\u6a21\u578b\uff0c\u540c\u6642\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u548c\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c grad_model = tf . keras . models . Model ( model . inputs , [ model . get_layer ( last_conv_layer_name ) . output , model . output ] ) # \u8a08\u7b97\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\u985e\u5225\uff0c\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u68af\u5ea6 with tf . GradientTape () as tape : last_conv_layer_output , preds = grad_model ( img_array ) if pred_index is None : pred_index = tf . argmax ( preds [ 0 ]) class_channel = preds [:, pred_index ] # \u8f38\u51fa\u5206\u985e\u795e\u7d93\u5143\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u7279\u5fb5\u5716\u7684\u68af\u5ea6 grads = tape . gradient ( class_channel , last_conv_layer_output ) # \u9019\u662f\u4e00\u500b\u5411\u91cf\uff0c\u5176\u4e2d\u6bcf\u500b\u6578\u5b57\u90fd\u662f\u7279\u5b9a\u7279\u5fb5\u5716\u901a\u9053\u4e0a\u7684\u68af\u5ea6\u7684\u5e73\u5747\u5f37\u5ea6 pooled_grads = tf . reduce_mean ( grads , axis = ( 0 , 1 , 2 )) # \u5c07\u7279\u5fb5\u5716\u4e58\u4ee5\u6b0a\u91cd\uff0c\u7b49\u65bc\u8a72\u7279\u5fb5\u5716\u4e2d\u7684\u67d0\u4e9b\u5340\u57df\u5c0d\u65bc\u8a72\u5206\u985e\u7684\u91cd\u8981\u6027 last_conv_layer_output = last_conv_layer_output [ 0 ] heatmap = last_conv_layer_output @ pooled_grads [ ... , tf . newaxis ] heatmap = tf . squeeze ( heatmap ) # \u7136\u5f8c\u5c07\u6240\u6709\u901a\u9053\u76f8\u52a0\u4ee5\u7372\u5f97\u71b1\u5716 # \u70ba\u4e86\u8996\u89ba\u5316\uff0c\u5c07\u71b1\u5716\u6b63\u898f\u53160~1\u4e4b\u9593 heatmap = tf . maximum ( heatmap , 0 ) / tf . math . reduce_max ( heatmap ) return heatmap . numpy () \u63a5\u4e0b\u4f86\u6211\u5011\u5be6\u969b\u5c07\u5f71\u50cf\u3001\u6a21\u578b\u4ee5\u53ca\u6700\u5f8c\u4e00\u5c64\u5377\u7a4d\u7684\u540d\u7a31\u9935\u5165\u6211\u5011\u525b\u525b\u5efa\u7acb\u7684\u51fd\u5f0f\uff0c\u7136\u5f8c\u7e6a\u88fd\u51fa\u4e00\u5f35\u71b1\u5716\u3002\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u4f7f\u7528\u7684\u662f Xception \u6a21\u578b\u67b6\u69cb\uff0c\u5176\u6700\u5f8c\u4e00\u5c64\u5377\u7a4d\u5c64\u7684\u540d\u7a31\u70ba block14_sepconv2_act \u3002\u5982\u679c\u4e0d\u77e5\u9053\u6700\u5f8c\u4e00\u5c64\u7684\u540d\u7a31\u662f\u4ec0\u9ebc\uff0c\u53ef\u4ee5\u900f\u904e model.summary() \u4f86\u67e5\u770b\u6a21\u578b\u7684\u7d50\u69cb\uff0c\u7136\u5f8c\u5c0b\u627e\u6700\u5f8c\u4e00\u500b Conv2D \u5c64\u7684\u540d\u7a31\u3002 # \u7522\u751f class activation heatmap last_conv_layer_name = \"block14_sepconv2_act\" heatmap = make_gradcam_heatmap ( x , model , last_conv_layer_name ) # \u986f\u793a heatmap plt . matshow ( heatmap ) plt . show () \u7531\u65bc\u6700\u5f8c\u4e00\u5c64\u7684\u5377\u7a4d\u7279\u5fb5\u5716\u5927\u5c0f\u70ba (None, 7, 7, 2048) \uff0c\u56e0\u6b64\u6700\u5f8c\u8a08\u7b97\u51fa\u4f86\u7684\u71b1\u5716\u5927\u5c0f\u70ba\u4e00\u5f35\u5c07\u904e\u6b63\u898f\u5316\u7684 7*7 \u50cf\u7d20\u5927\u5c0f\u7684\u71b1\u5716\u3002 \u6700\u5f8c\u9019\u6bb5\u7a0b\u5f0f\u662f\u5c07\u525b\u525b\u5f97\u5230\u7684\u71b1\u5716\u8207\u539f\u59cb\u5f71\u50cf\u9032\u884c\u758a\u5408\u8996\u89ba\u5316\u7d50\u679c\u3002\u6b64\u51fd\u5f0f\u63a5\u53d7\u56db\u500b\u4e3b\u8981\u7684\u8f38\u5165\u53c3\u6578\uff1a img_path: \u8f38\u5165\u5716\u50cf\u7684\u8def\u5f91\uff0c\u9019\u662f\u8981\u89e3\u91cb\u7684\u5716\u50cf\u3002 heatmap: Grad-CAM \u71b1\u5716\uff0c\u8868\u793a\u6a21\u578b\u5c0d\u5716\u50cf\u4e2d\u4e0d\u540c\u5340\u57df\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002 cam_path: \u8f38\u51fa\u7684\u71b1\u5716\u5716\u50cf\u6a94\u6848\u7684\u8def\u5f91\u3002 alpha: \u63a7\u5236\u758a\u52a0\u71b1\u5716\u548c\u539f\u59cb\u5716\u50cf\u7684\u900f\u660e\u5ea6\u3002 import matplotlib.cm as cm from IPython.display import Image , display def save_and_display_gradcam ( img_path , heatmap , cam_path = \"cam.jpg\" , alpha = 0.4 ): # \u8f09\u5165\u539f\u59cb\u5716\u50cf img = tf . keras . utils . load_img ( img_path ) img = tf . keras . utils . img_to_array ( img ) # \u5c07\u71b1\u5716\u91cd\u65b0\u7e2e\u653e\u52300-255\u7684\u7bc4\u570d heatmap = np . uint8 ( 255 * heatmap ) # \u4f7f\u7528Jet\u8272\u5f69\u6620\u5c04\u5c07\u71b1\u5716\u4e0a\u8272 jet = cm . get_cmap ( \"jet\" ) # \u4f7f\u7528Jet\u8272\u5f69\u6620\u5c04\u7684RGB\u503c jet_colors = jet ( np . arange ( 256 ))[:, : 3 ] jet_heatmap = jet_colors [ heatmap ] # \u5275\u5efa\u5e36\u6709RGB\u8272\u5f69\u7684\u71b1\u5716\u5716\u50cf jet_heatmap = tf . keras . utils . array_to_img ( jet_heatmap ) jet_heatmap = jet_heatmap . resize (( img . shape [ 1 ], img . shape [ 0 ])) jet_heatmap = tf . keras . utils . img_to_array ( jet_heatmap ) # \u5728\u539f\u59cb\u5716\u50cf\u4e0a\u758a\u52a0\u71b1\u5716 superimposed_img = jet_heatmap * alpha + img superimposed_img = tf . keras . utils . array_to_img ( superimposed_img ) # \u5132\u5b58\u758a\u52a0\u5f8c\u7684\u5716\u50cf superimposed_img . save ( cam_path ) # \u986f\u793aGrad CAM display ( Image ( cam_path )) save_and_display_gradcam ( './dataset/cat_dog.jpg' , heatmap ) \u6700\u5f8c\u6211\u5011\u5c31\u80fd\u5f97\u5230\u4e00\u5f35\u5b8c\u6574\u7684 Grad-CAM \u89e3\u91cb\u5716\u4e86\u3002\u5f9e\u5716\u4e2d\u53ef\u5f88\u660e\u986f\u77e5\u9053\u6a21\u578b\u8fa8\u8b58\u4e00\u96bb\u72d7\u662f\u95dc\u6ce8\u5f71\u50cf\u4e2d\u7684\u54ea\u4e00\u500b\u7279\u5fb5\u4f5c\u70ba\u5224\u65b7\u4f9d\u64da\u3002 \u5982\u679c\u60f3\u900f\u904e\u7b2c\u4e09\u65b9\u5957\u4ef6\u9032\u884c CNN \u6a21\u578b\u89e3\u91cb\u4e5f\u53ef\u4ee5\u4f7f\u7528 tf_explain \uff0c\u5b83\u662f\u4e00\u500b\u91dd\u5c0d TensorFlow \u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u89e3\u91cb\u7684 Python \u5957\u4ef6\u3002\u5167\u5efa\u63d0\u4f9b\u4e86\u591a\u7a2e\u65b9\u6cd5\uff0c\u4e26\u900f\u904e\u71b1\u529b\u5716\u53ef\u4ee5\u7528\u4f86\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u5b78\u5230\u95dc\u9375\u7279\u5fb5\u3002 Reference Grad-CAM class activation visualization","title":"[Day 22] CAM-Based\uff1a\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#day-22-cam-based","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a CAM\uff08Class Activation Mapping\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u6a21\u578b\u5728\u5716\u50cf\u5206\u985e\u4efb\u52d9\u4e2d\u7684\u9810\u6e2c\u7684\u6280\u8853\u3002\u5b83\u7684\u76ee\u7684\u662f\u751f\u6210\u4e00\u500b\u8996\u89ba\u5316\u7684\u71b1\u5716\uff0c\u4ee5\u986f\u793a\u6a21\u578b\u5728\u5716\u50cf\u4e2d\u95dc\u6ce8\u7684\u5340\u57df\uff0c\u4ee5\u53ca\u9019\u4e9b\u5340\u57df\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u67d0\u4e00\u985e\u5225\u7684\u8ca2\u737b\u3002\u4ee5\u4e0b\u662f\u8fd1\u5e74\u4f86\u8207 CAM \u76f8\u95dc\u7684\u8b8a\u5f62\u65b9\u6cd5\u7684\u6574\u7406\uff1a CAM (Class Activation Mapping) (Zhou et al. 2015): \u57fa\u672c\u7684CAM\u65b9\u6cd5\u662f\u7528\u4f86\u89e3\u91cbCNN\u6a21\u578b\u7684\u9810\u6e2c\uff0c\u901a\u904e\u5c07\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u8207\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u76f8\u7d50\u5408\uff0c\u751f\u6210\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\uff0c\u4ee5\u986f\u793a\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u6ce8\u610f\u529b\u5206\u4f48\u3002 Grad-CAM (Gradient-weighted Class Activation Mapping) (Ancona et al. 2016): Grad-CAM\u5efa\u7acb\u5728CAM\u7684\u57fa\u790e\u4e0a\uff0c\u4f7f\u7528\u68af\u5ea6\u8a0a\u606f\u4f86\u66f4\u6e96\u78ba\u5730\u8a08\u7b97\u7279\u5fb5\u5716\u4e0a\u7684\u6b0a\u91cd\u3002\u5b83\u901a\u904e\u5c07\u5377\u7a4d\u5c64\u7684\u68af\u5ea6\u503c\u8207\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u751f\u6210\u71b1\u5716\uff0c\u4ee5\u8996\u89ba\u5316\u6a21\u578b\u5c0d\u65bc\u4e0d\u540c\u985e\u5225\u7684\u95dc\u6ce8\u9ede\u3002 Grad-CAM++ (Chattopadhyay et al. 2017): Grad-CAM++\u662fGrad-CAM\u7684\u9032\u4e00\u6b65\u6539\u9032\u7248\u672c\uff0c\u5b83\u5f15\u5165\u4e86\u591a\u5c3a\u5ea6\u7279\u5fb5\u5716\u7684\u6982\u5ff5\uff0c\u4ee5\u63d0\u9ad8\u5c0d\u65bc\u7d30\u5fae\u7d30\u7bc0\u7684\u89e3\u91cb\u80fd\u529b\u3002\u5b83\u4f7f\u7528\u591a\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4f86\u751f\u6210\u66f4\u5177\u7d30\u7bc0\u7684\u71b1\u5716\u3002 Score-CAM (Haofan et al. 2020): Score-CAM\u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u9810\u6e2c\u7684\u65b9\u6cd5\uff0c\u5b83\u901a\u904e\u5c07\u901a\u9053\u7684\u5206\u6578\uff08score\uff09\u548c\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u751f\u6210\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\u3002\u5b83\u65e8\u5728\u63d0\u9ad8CAM\u65b9\u6cd5\u7684\u6027\u80fd\uff0c\u4e26\u6e1b\u5c11\u566a\u8072\u3002 \u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\uff0c\u5c07\u4ecb\u7d39 CAM \u548c Grad-CAM \u7684\u5dee\u5225\uff0c\u6700\u5f8c\u4f7f\u7528 TensorFlow \u4f86\u793a\u7bc4\u5982\u4f55\u904b\u7528 Grad-CAM \u65b9\u6cd5\u4f86\u89e3\u91cb CNN \u6a21\u578b\u3002","title":"[Day 22] CAM-Based\uff1a\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#cam","text":"CAM \u5728 2015 \u5e74\u88ab\u63d0\u51fa\uff0c\u8ad6\u6587\u540d\u7a31\u70ba Learning Deep Features for Discriminative Localization \uff0c\u5b83\u7684\u4e3b\u8981\u6982\u5ff5\u662f\u5c07 CNN \u7684\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4e4b\u5f8c\u63a5\u4e0a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c64(Global Average Pooling Layer)\u8207\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u76f8\u7d50\u5408\u3002\u9996\u5148\u8a08\u7b97\u6bcf\u500b\u985e\u5225\u7684\u6b0a\u91cd\uff0c\u9019\u4e9b\u6b0a\u91cd\u662f\u5168\u9023\u63a5\u5c64\u7684\u6b0a\u91cd\u8207\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u76f8\u4e58\u5f8c\u7684\u7e3d\u548c\u3002\u63a5\u8457\u5c07\u9019\u4e9b\u6b0a\u91cd\u61c9\u7528\u5230\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u4e0a\uff0c\u751f\u6210\u4e00\u500b\u985e\u5225\u7279\u5b9a\u7684\u71b1\u5716\u3002\u9019\u500b\u71b1\u5716\u986f\u793a\u4e86\u5c0d\u65bc\u67d0\u4e00\u7279\u5b9a\u985e\u5225\uff0c\u5716\u50cf\u7684\u4e0d\u540c\u5340\u57df\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u3002\u6700\u5f8c\u71b1\u5716\u7d93\u904e\u9069\u7576\u7684\u6b63\u898f\u5316\u8655\u7406\uff0c\u4ee5\u78ba\u4fdd\u5b83\u53ef\u4ee5\u88ab\u8996\u89ba\u5316\u4e26\u8207\u539f\u59cb\u5716\u50cf\u5c3a\u5bf8\u5c0d\u61c9\u3002 \u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08Global Average Pooling\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff08CNN\uff09\u4e2d\u7684\u7279\u5fb5\u6620\u5c04\u7684\u64cd\u4f5c\u3002\u5b83\u901a\u5e38\u7528\u65bc\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u6700\u5f8c\u4e00\u5c64\uff0c\u4ee5\u5e6b\u52a9\u7e2e\u6e1b\u7279\u5fb5\u5716\u7684\u7dad\u5ea6\u4e26\u751f\u6210\u4e00\u500b\u56fa\u5b9a\u5927\u5c0f\u7684\u8f38\u51fa\uff0c\u4ee5\u4f9b\u5f8c\u7e8c\u7684\u5206\u985e\u6216\u56de\u6b78\u4efb\u52d9\u4f7f\u7528\u3002\u5168\u5c40\u5e73\u5747\u6c60\u5316\u7684\u904e\u7a0b\u975e\u5e38\u7c21\u55ae\uff0c\u4ee5\u4e0b\u7528\u4e00\u5f35\u7279\u5fb5\u5716\u70ba\u4f8b\uff0c\u5047\u8a2d pool size 4*4 \u4e5f\u5c31\u662f\u5c0d\u6574\u5f35\u5716\u505a\u5e73\u5747\u5f97\u5230 24 \u9019\u5c31\u662f\u4e00\u500b\u901a\u9053(\u4e00\u5f35\u7279\u5fb5\u5716) GAP \u5f8c\u7684\u7d50\u679c\u3002 \u7c21\u55ae\u4f86\u8aaa\u5168\u5c40\u5e73\u5747\u6c60\u5316\u505a\u6cd5\u5c6c\u65bc\u7a7a\u9593\u7dad\u5ea6\u7684\u4e00\u7a2e\u7279\u5fb5\u58d3\u7e2e\uff0c\u56e0\u70ba\u9019\u500b\u5be6\u6578\u662f\u6839\u64da\u6240\u6709\u7279\u5fb5\u503c\u8a08\u7b97\u51fa\u4f86\u7684\uff0c\u6240\u4ee5\u5728\u67d0\u7a2e\u7a0b\u5ea6\u4e0a\u5177\u6709\u5e73\u5747\u611f\u53d7\u91ce\uff0c\u6700\u5f8c\u4fdd\u6301\u901a\u9053\u6578\u4e0d\u8b8a\uff0c\u6240\u4ee5\u6700\u5f8c\u8f38\u51fa\u5927\u5c0f\u70ba 1x1xC\uff1a \u7d93\u904e\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08GAP\uff09\u5f8c\uff0c\u6211\u5011\u5f97\u5230\u4e86\u4e00\u500b\u5305\u542b\u6b0a\u91cd w \u7684\u50cf\u7d20\u9663\u5217\u3002\u9019\u4e9b\u6b0a\u91cd w \u53cd\u6620\u4e86\u6bcf\u5f35\u7279\u5fb5\u5716\u5c0d\u65bc\u6700\u7d42\u9810\u6e2c\u67d0\u500b\u985e\u5225\u7684\u91cd\u8981\u6027\u3002\u66f4\u5927\u7684\u6b0a\u91cd\u503c\u8868\u793a\u76f8\u61c9\u7279\u5fb5\u5716\u5c0d\u65bc\u8a72\u5206\u985e\u7684\u8ca2\u737b\u66f4\u5927\u3002 \u70ba\u4e86\u66f4\u597d\u5730\u7406\u89e3\u9019\u4e9b\u6b0a\u91cd\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u5b83\u5011\u61c9\u7528\u65bc\u6574\u5f35\u7279\u5fb5\u5716\u4e0a\u7684\u6bcf\u500b\u50cf\u7d20\u9ede\uff0c\u7136\u5f8c\u9032\u884c\u758a\u52a0\u3002\u9019\u6a23\u505a\u7684\u597d\u8655\u662f\u6211\u5011\u53ef\u4ee5\u6839\u64da\u6bcf\u5f35\u7279\u5fb5\u5716\u7684\u91cd\u8981\u6027\u4f86\u96c6\u4e2d\u95dc\u6ce8\u4e0d\u540c\u7684\u5340\u57df\u3002\u5982\u679c\u67d0\u7279\u5b9a\u5206\u985e\u7684\u6b0a\u91cd w \u5f88\u5927\uff0c\u90a3\u9ebc\u8a72\u5206\u985e\u6240\u5c0d\u61c9\u7684\u7279\u5fb5\u5716\u5c07\u5728\u9032\u884c\u758a\u52a0\u6642\u5177\u6709\u66f4\u5927\u7684\u5f71\u97ff\u3002\u76f8\u53cd\uff0c\u6b0a\u91cd\u63a5\u8fd1\u65bc0\u7684\u7279\u5fb5\u5716\u5c0d\u65bc\u6700\u7d42\u7684\u95dc\u6ce8\u5ea6\u8f03\u4f4e\uff0c\u56e0\u6b64\u5b83\u5011\u88ab\u8996\u70ba\u4e0d\u592a\u91cd\u8981\u7684\u90e8\u5206\u3002 \u6b64\u65b9\u6cd5\u78ba\u5be6\u70ba\u89e3\u91cb CNN \u6a21\u578b\u7684\u9810\u6e2c\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u57fa\u790e\uff0c\u4f46\u5b83\u5b58\u5728\u4e00\u500b\u660e\u986f\u7684\u9650\u5236\uff0c\u5373\u53d7\u5230\u4e86\u7db2\u8def\u67b6\u69cb\u7684\u9650\u5236\u3002\u56e0\u70ba\u5982\u679c\u8981\u4f7f\u7528 CAM \u89e3\u91cb\uff0c\u5728 CNN \u67b6\u69cb\u7576\u4e2d\u6700\u5f8c\u4e00\u5c64\u4e00\u5b9a\u8981\u63a5\u4e0a GAP \u5c64\u3002\u96a8\u5f8c\u7684\u65b9\u6cd5\uff0c\u5982Grad-CAM\u548c\u5176\u8b8a\u7a2e\uff0c\u8a66\u5716\u514b\u670d\u9019\u4e9b\u9650\u5236\uff0c\u4f7f\u89e3\u91cb\u6027\u65b9\u6cd5\u66f4\u5177\u901a\u7528\u6027\uff0c\u9069\u7528\u65bc\u5404\u7a2e\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u3002","title":"CAM"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#grad-cam","text":"\u5f9e CAM \u7684\u4ecb\u7d39\u4e2d\uff0c\u6211\u5011\u4e86\u89e3\u5230\u5be6\u73fe CAM \u6240\u9700\u7684\u4e00\u500b\u95dc\u9375\u689d\u4ef6\u662f\u5fc5\u9808\u52a0\u5165\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08GAP\uff09\u5c64\u3002\u7136\u800c\u9019\u7a2e\u8981\u6c42\u5728\u67d0\u7a2e\u7a0b\u5ea6\u4e0a\u9650\u5236\u4e86\u7db2\u8def\u67b6\u69cb\u7684\u81ea\u7531\u5ea6\uff0c\u56e0\u70ba\u6a21\u578b\u5fc5\u9808\u5305\u542b GAP \u5c64\u624d\u80fd\u4f7f\u7528 CAM\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5982\u679c\u6211\u5011\u5805\u6301\u8981\u6c42\u6a21\u578b\u7684\u6700\u5f8c\u4e00\u5c64\u5fc5\u9808\u662fGAP\u5c64\uff0c\u9019\u53ef\u80fd\u6703\u5f71\u97ff\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3002\u56e0\u6b64 Grad-CAM \u5728\u9019\u65b9\u9762\u89e3\u9664\u4e86\u9019\u7a2e\u9650\u5236\uff0c\u5b83\u51fa\u81ea\u65bc\u9019\u908a\u8ad6\u6587 Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization \u3002\u4f7f\u7528 Grad-CAM \u6211\u5011\u53ef\u4ee5\u5c0d\u4e00\u822c\u7684 CNN \u67b6\u69cb\u9032\u884c\u89e3\u91cb\uff0c\u800c\u4e0d\u9700\u8981\u5f37\u5236\u8981\u6c42\u6a21\u578b\u7684\u6700\u5f8c\u4e00\u5c64\u5fc5\u9808\u662f GAP \u5c64\u3002\u9019\u610f\u5473\u8457\u6211\u5011\u53ef\u4ee5\u66f4\u9748\u6d3b\u5730\u61c9\u7528 Grad-CAM \u4f86\u7372\u5f97 CNN \u5c0d\u8f38\u5165\u5716\u7247\u7684\u95dc\u6ce8\u5340\u57df\uff0c\u800c\u7121\u9700\u5c0d\u6a21\u578b\u9032\u884c\u5927\u5e45\u5ea6\u7684\u4fee\u6539\uff0c\u540c\u6642\u4e0d\u6703\u660e\u986f\u5f71\u97ff\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3002 \u5f9e\u4e0b\u5716\u4e2d\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u4e0d\u8ad6\u662f\u5168\u9023\u63a5\u5c64\u3001RNN\u3001LSTM\uff0c\u6216\u8005\u66f4\u8907\u96dc\u7684\u7db2\u8def\u6a21\u578b\uff0c\u90fd\u53ef\u4ee5\u900f\u904e Grad-CAM \u53d6\u5f97\u795e\u7d93\u7db2\u7d61\u7684\u5206\u985e\u95dc\u6ce8\u5340\u57df\u71b1\u529b\u5716\u3002 \u7c21\u55ae\u4f86\u8aaa Grad-CAM \u7684\u95dc\u9375\u5728\u65bc\u80fd\u5920\u900f\u904e\u53cd\u5411\u50b3\u64ad\u8a08\u7b97\u7528\u65bc CAM \u7684\u6b0a\u91cd \ud835\udc64\u3002\u6211\u5011\u53ef\u4ee5\u91dd\u5c0d\u6bcf\u500b\u7279\u5fb5\u5716\u9032\u884c\u53cd\u5411\u50b3\u64ad\uff0c\u8a08\u7b97\u68af\u5ea6\u7684\u5e73\u5747\u503c\uff0c\u4ee5\u7372\u5f97\u76f8\u5c0d\u61c9\u7684\u6b0a\u91cd\u3002\u6700\u5f8c\uff0c\u5c07\u9019\u4e9b\u6b0a\u91cd\uff08\ud835\udc4a\u2081, \ud835\udc4a\u2082, \u2026, \ud835\udc4a\ud835\udc5b\uff09\u8207\u7279\u5fb5\u5716\u76f8\u4e58\uff0c\u7136\u5f8c\u9032\u884c\u7e3d\u548c\uff0c\u5c31\u53ef\u4ee5\u89c0\u5bdf\u5230\u4e0d\u540c\u4f4d\u7f6e\u5c0d\u8f38\u51fa\u7684\u5f71\u97ff\u3002","title":"Grad-CAM"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#cam-based-grad-cam","text":"\u4eca\u5929\u7684\u7bc4\u4f8b\u5c07\u4f7f\u7528 Xception \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u793a\u7bc4\u5982\u4f55\u900f\u904e Grad-CAM \u89e3\u91cb\u6a21\u578b\u63a8\u8ad6\u7d50\u679c\u3002Xception \u7684\u540d\u7a31\u662f\u7531 Extreme Inception \u884d\u751f\u800c\u4f86\uff0c\u56e0\u70ba\u5b83\u57fa\u65bc Inception v3 \u67b6\u69cb\u7684\u6982\u5ff5\uff0c\u4e26\u5c0d\u4e00\u4e9b\u5730\u65b9\u9032\u884c\u4e86\u6975\u7aef\u64f4\u5c55\u548c\u6539\u9032\u3002 Xception \u8ad6\u6587\uff1a Xception: Deep Learning with Depthwise Separable Convolutions","title":"CAM-Based \u65b9\u6cd5\u5be6\u4f5c (Grad-CAM)"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#xception","text":"\u9996\u5148\u4f7f\u7528 TensorFlow \u8f09\u5165 Xception \u6a21\u578b\uff0c\u5c07\u8f38\u5165\u5f35\u91cf(tensor)\u9023\u63a5\u5230\u9810\u8a13\u7df4\u7684\u795e\u7d93\u7db2\u8def\u5c64\uff0c imagenet \u8868\u793a\u4f7f\u7528\u5728 ImageNet \u8cc7\u6599\u96c6\u4e0a\u9810\u8a13\u7df4\u7684\u6b0a\u91cd\u3002 include_top=True \u8868\u793a\u8f38\u51fa\u5305\u62ec\u6a21\u578b\u7684\u6700\u5f8c\u5206\u985e\u5c64(\u5168\u9023\u63a5\u5c64)\uff0c\u6b64\u6a21\u578b\u901a\u5e38\u7528\u65bc\u5f71\u50cf\u5206\u985e\u4efb\u52d9\u3002 from tensorflow.keras.applications.xception import Xception from tensorflow.keras.layers import Input # \u5efa\u7acb\u4e00\u500b\u8f38\u5165\u5f35\u91cf\uff0c\u6307\u5b9a\u5716\u50cf\u5927\u5c0f\u70ba224x224\uff08RGB\u8272\u5f69\u901a\u9053\uff09 input_tensor = Input ( shape = ( 224 , 224 , 3 )) # \u5efa\u7acb Xception \u6a21\u578b model = Xception ( input_tensor = input_tensor , weights = 'imagenet' , include_top = True ) \u63a5\u8457\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u5c0d\u5176\u9032\u884c\u9810\u8655\u7406\u3002\u5176\u4e2d np.expand_dims() \u7684\u76ee\u7684\u662f\u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6\uff0c\u9019\u88e1\u5c07\u5716\u50cf\u5305\u88dd\u5728\u4e00\u500b\u6279\u6b21(batch)\u4e2d\uff0c\u901a\u5e38\u662f\u4e00\u500b\u6279\u6b21\u53ea\u6709\u4e00\u5f35\u5716\u50cf\u3002\u6700\u5f8c\u4f7f\u7528 Xception \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np import tensorflow as tf from tensorflow.keras.applications.xception import preprocess_input # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( './dataset/cat_dog.jpg' ) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 # \u9810\u8655\u7406\u5716\u50cf x = preprocess_input ( x ) \u78ba\u8a8d\u8f38\u5165\u5f71\u50cf\u90fd\u5b8c\u6210\u8655\u7406\u904e\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5df2\u5efa\u7acb\u7684 Xception \u6a21\u578b\u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c\uff0c\u8fd4\u56de\u5206\u985e\u6a5f\u7387\u3002\u6700\u5f8c\u518d\u4f7f\u7528 decode_predictions() \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\uff0c\u4e26\u53d6\u5f97\u985e\u5225\u540d\u7a31\u548c\u76f8\u5c0d\u61c9\u7684\u9810\u6e2c\u6a5f\u7387\u3002 from tensorflow.keras.applications.xception import decode_predictions # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class = decode_predictions ( pred_proba , top = 1 )[ 0 ][ 0 ] # \u89e3\u6790\u53d6\u5f97\u9810\u6e2c\u7d50\u679c \u6211\u5011\u5148\u4f86\u770b\u770b\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c\u3002\u96d6\u7136\u9019\u5f35\u5f71\u50cf\u540c\u6642\u6709\u4e00\u96bb\u8c93\u548c\u72d7\uff0c\u4f46\u6a21\u578b\u5728\u795e\u7d93\u7db2\u8def\u4e2d\u5148\u6293\u53d6\u5230\u72d7\u7684\u91cd\u8981\u7279\u5fb5(\u4f8b\u5982\uff1a\u9f3b\u5b50\u3001\u5634\u5df4)\uff0c\u56e0\u6b64\u6700\u7d42\u6a21\u578b\u9810\u6e2c bull_mastiff (\u9b25\u725b\u7352)\uff0c\u8a72\u985e\u5225\u7684\u6a5f\u7387\u503c\u6709 48%\u3002 import matplotlib.pylab as plt plt . imshow ( image . astype ( 'uint8' )) plt . axis ( 'off' ) predicted_class_name = pred_class [ 1 ] _ = plt . title ( f \"Prediction: { predicted_class_name } { pred_class [ 2 ] : .2f } \" )","title":"\u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(Xception)"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#grad-cam_1","text":"\u9019\u6bb5\u51fd\u5f0f\u4e3b\u8981\u7528\u65bc\u751f\u6210Grad-CAM\u71b1\u5716\uff0c\u4ee5\u8996\u89ba\u5316\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\u7d50\u679c\u7684\u89e3\u91cb\u6027\u3002\u9996\u5148\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u6a21\u578b grad_model\uff0c\u8a72\u6a21\u578b\u63a5\u53d7\u76f8\u540c\u7684\u8f38\u5165\u5716\u50cf\uff0c\u4f46\u540c\u6642\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u548c\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u9019\u662f\u70ba\u4e86\u80fd\u5920\u8a08\u7b97\u7279\u5b9a\u985e\u5225\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u68af\u5ea6\u3002\u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528 TensorFlow \u7684 GradientTape \u4f86\u8a18\u9304\u8a08\u7b97\u68af\u5ea6\u3002\u5b83\u8a08\u7b97\u4e86\u6a21\u578b\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\uff0c\u540c\u6642\u8a18\u9304\u4e86\u5c0d\u61c9\u65bc\u7279\u5b9a\u985e\u5225\u7684\u5206\u985e\u795e\u7d93\u5143\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u8f38\u51fa\u7684\u68af\u5ea6\u3002\u7136\u5f8c\u8a08\u7b97\u9019\u4e9b\u68af\u5ea6\u7684\u5e73\u5747\u5f37\u5ea6 pooled_grads\uff0c\u4e26\u53d6\u5f97\u4e00\u500b\u5411\u91cf\u505a\u70ba\u6b0a\u91cd\uff0c\u6bcf\u500b\u5143\u7d20\u5c0d\u61c9\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u7279\u5fb5\u5716\u901a\u9053\u3002\u63a5\u8457\u5c07\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u8207 pooled_grads \u505a\u9ede\u7a4d\uff0c\u9019\u500b\u64cd\u4f5c\u5f37\u8abf\u4e86\u5c0d\u65bc\u7279\u5b9a\u985e\u5225\u9810\u6e2c\u91cd\u8981\u7684\u7279\u5fb5\u5716\u5340\u57df\u3002\u5f97\u5230\u7684\u7d50\u679c\u662f\u4e00\u500b\u71b1\u5716\uff0c\u5176\u4e2d\u6bcf\u500b\u50cf\u7d20\u503c\u8868\u793a\u76f8\u61c9\u4f4d\u7f6e\u5c0d\u65bc\u8a72\u985e\u5225\u9810\u6e2c\u7684\u91cd\u8981\u6027\u3002\u6700\u5f8c\u70ba\u4e86\u8996\u89ba\u5316\uff0c\u5c07\u71b1\u5716\u7684\u503c\u6b63\u898f\u5316\u70ba\u4ecb\u65bc0\u548c1\u4e4b\u9593\uff0c\u4ee5\u4fbf\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u8996\u89ba\u5316\u3002 def make_gradcam_heatmap ( img_array , model , last_conv_layer_name , pred_index = None ): # \u5efa\u7acb\u4e00\u500b\u6a21\u578b\uff0c\u540c\u6642\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u548c\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c grad_model = tf . keras . models . Model ( model . inputs , [ model . get_layer ( last_conv_layer_name ) . output , model . output ] ) # \u8a08\u7b97\u5c0d\u65bc\u8f38\u5165\u5716\u50cf\u7684\u9810\u6e2c\u985e\u5225\uff0c\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u68af\u5ea6 with tf . GradientTape () as tape : last_conv_layer_output , preds = grad_model ( img_array ) if pred_index is None : pred_index = tf . argmax ( preds [ 0 ]) class_channel = preds [:, pred_index ] # \u8f38\u51fa\u5206\u985e\u795e\u7d93\u5143\u76f8\u5c0d\u65bc\u6700\u5f8c\u4e00\u500b\u5377\u7a4d\u5c64\u7684\u8f38\u51fa\u7279\u5fb5\u5716\u7684\u68af\u5ea6 grads = tape . gradient ( class_channel , last_conv_layer_output ) # \u9019\u662f\u4e00\u500b\u5411\u91cf\uff0c\u5176\u4e2d\u6bcf\u500b\u6578\u5b57\u90fd\u662f\u7279\u5b9a\u7279\u5fb5\u5716\u901a\u9053\u4e0a\u7684\u68af\u5ea6\u7684\u5e73\u5747\u5f37\u5ea6 pooled_grads = tf . reduce_mean ( grads , axis = ( 0 , 1 , 2 )) # \u5c07\u7279\u5fb5\u5716\u4e58\u4ee5\u6b0a\u91cd\uff0c\u7b49\u65bc\u8a72\u7279\u5fb5\u5716\u4e2d\u7684\u67d0\u4e9b\u5340\u57df\u5c0d\u65bc\u8a72\u5206\u985e\u7684\u91cd\u8981\u6027 last_conv_layer_output = last_conv_layer_output [ 0 ] heatmap = last_conv_layer_output @ pooled_grads [ ... , tf . newaxis ] heatmap = tf . squeeze ( heatmap ) # \u7136\u5f8c\u5c07\u6240\u6709\u901a\u9053\u76f8\u52a0\u4ee5\u7372\u5f97\u71b1\u5716 # \u70ba\u4e86\u8996\u89ba\u5316\uff0c\u5c07\u71b1\u5716\u6b63\u898f\u53160~1\u4e4b\u9593 heatmap = tf . maximum ( heatmap , 0 ) / tf . math . reduce_max ( heatmap ) return heatmap . numpy () \u63a5\u4e0b\u4f86\u6211\u5011\u5be6\u969b\u5c07\u5f71\u50cf\u3001\u6a21\u578b\u4ee5\u53ca\u6700\u5f8c\u4e00\u5c64\u5377\u7a4d\u7684\u540d\u7a31\u9935\u5165\u6211\u5011\u525b\u525b\u5efa\u7acb\u7684\u51fd\u5f0f\uff0c\u7136\u5f8c\u7e6a\u88fd\u51fa\u4e00\u5f35\u71b1\u5716\u3002\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u4f7f\u7528\u7684\u662f Xception \u6a21\u578b\u67b6\u69cb\uff0c\u5176\u6700\u5f8c\u4e00\u5c64\u5377\u7a4d\u5c64\u7684\u540d\u7a31\u70ba block14_sepconv2_act \u3002\u5982\u679c\u4e0d\u77e5\u9053\u6700\u5f8c\u4e00\u5c64\u7684\u540d\u7a31\u662f\u4ec0\u9ebc\uff0c\u53ef\u4ee5\u900f\u904e model.summary() \u4f86\u67e5\u770b\u6a21\u578b\u7684\u7d50\u69cb\uff0c\u7136\u5f8c\u5c0b\u627e\u6700\u5f8c\u4e00\u500b Conv2D \u5c64\u7684\u540d\u7a31\u3002 # \u7522\u751f class activation heatmap last_conv_layer_name = \"block14_sepconv2_act\" heatmap = make_gradcam_heatmap ( x , model , last_conv_layer_name ) # \u986f\u793a heatmap plt . matshow ( heatmap ) plt . show () \u7531\u65bc\u6700\u5f8c\u4e00\u5c64\u7684\u5377\u7a4d\u7279\u5fb5\u5716\u5927\u5c0f\u70ba (None, 7, 7, 2048) \uff0c\u56e0\u6b64\u6700\u5f8c\u8a08\u7b97\u51fa\u4f86\u7684\u71b1\u5716\u5927\u5c0f\u70ba\u4e00\u5f35\u5c07\u904e\u6b63\u898f\u5316\u7684 7*7 \u50cf\u7d20\u5927\u5c0f\u7684\u71b1\u5716\u3002 \u6700\u5f8c\u9019\u6bb5\u7a0b\u5f0f\u662f\u5c07\u525b\u525b\u5f97\u5230\u7684\u71b1\u5716\u8207\u539f\u59cb\u5f71\u50cf\u9032\u884c\u758a\u5408\u8996\u89ba\u5316\u7d50\u679c\u3002\u6b64\u51fd\u5f0f\u63a5\u53d7\u56db\u500b\u4e3b\u8981\u7684\u8f38\u5165\u53c3\u6578\uff1a img_path: \u8f38\u5165\u5716\u50cf\u7684\u8def\u5f91\uff0c\u9019\u662f\u8981\u89e3\u91cb\u7684\u5716\u50cf\u3002 heatmap: Grad-CAM \u71b1\u5716\uff0c\u8868\u793a\u6a21\u578b\u5c0d\u5716\u50cf\u4e2d\u4e0d\u540c\u5340\u57df\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002 cam_path: \u8f38\u51fa\u7684\u71b1\u5716\u5716\u50cf\u6a94\u6848\u7684\u8def\u5f91\u3002 alpha: \u63a7\u5236\u758a\u52a0\u71b1\u5716\u548c\u539f\u59cb\u5716\u50cf\u7684\u900f\u660e\u5ea6\u3002 import matplotlib.cm as cm from IPython.display import Image , display def save_and_display_gradcam ( img_path , heatmap , cam_path = \"cam.jpg\" , alpha = 0.4 ): # \u8f09\u5165\u539f\u59cb\u5716\u50cf img = tf . keras . utils . load_img ( img_path ) img = tf . keras . utils . img_to_array ( img ) # \u5c07\u71b1\u5716\u91cd\u65b0\u7e2e\u653e\u52300-255\u7684\u7bc4\u570d heatmap = np . uint8 ( 255 * heatmap ) # \u4f7f\u7528Jet\u8272\u5f69\u6620\u5c04\u5c07\u71b1\u5716\u4e0a\u8272 jet = cm . get_cmap ( \"jet\" ) # \u4f7f\u7528Jet\u8272\u5f69\u6620\u5c04\u7684RGB\u503c jet_colors = jet ( np . arange ( 256 ))[:, : 3 ] jet_heatmap = jet_colors [ heatmap ] # \u5275\u5efa\u5e36\u6709RGB\u8272\u5f69\u7684\u71b1\u5716\u5716\u50cf jet_heatmap = tf . keras . utils . array_to_img ( jet_heatmap ) jet_heatmap = jet_heatmap . resize (( img . shape [ 1 ], img . shape [ 0 ])) jet_heatmap = tf . keras . utils . img_to_array ( jet_heatmap ) # \u5728\u539f\u59cb\u5716\u50cf\u4e0a\u758a\u52a0\u71b1\u5716 superimposed_img = jet_heatmap * alpha + img superimposed_img = tf . keras . utils . array_to_img ( superimposed_img ) # \u5132\u5b58\u758a\u52a0\u5f8c\u7684\u5716\u50cf superimposed_img . save ( cam_path ) # \u986f\u793aGrad CAM display ( Image ( cam_path )) save_and_display_gradcam ( './dataset/cat_dog.jpg' , heatmap ) \u6700\u5f8c\u6211\u5011\u5c31\u80fd\u5f97\u5230\u4e00\u5f35\u5b8c\u6574\u7684 Grad-CAM \u89e3\u91cb\u5716\u4e86\u3002\u5f9e\u5716\u4e2d\u53ef\u5f88\u660e\u986f\u77e5\u9053\u6a21\u578b\u8fa8\u8b58\u4e00\u96bb\u72d7\u662f\u95dc\u6ce8\u5f71\u50cf\u4e2d\u7684\u54ea\u4e00\u500b\u7279\u5fb5\u4f5c\u70ba\u5224\u65b7\u4f9d\u64da\u3002 \u5982\u679c\u60f3\u900f\u904e\u7b2c\u4e09\u65b9\u5957\u4ef6\u9032\u884c CNN \u6a21\u578b\u89e3\u91cb\u4e5f\u53ef\u4ee5\u4f7f\u7528 tf_explain \uff0c\u5b83\u662f\u4e00\u500b\u91dd\u5c0d TensorFlow \u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u89e3\u91cb\u7684 Python \u5957\u4ef6\u3002\u5167\u5efa\u63d0\u4f9b\u4e86\u591a\u7a2e\u65b9\u6cd5\uff0c\u4e26\u900f\u904e\u71b1\u529b\u5716\u53ef\u4ee5\u7528\u4f86\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u5b78\u5230\u95dc\u9375\u7279\u5fb5\u3002","title":"Grad-CAM \u5be6\u4f5c"},{"location":"22.CAM-Based:\u5982\u4f55\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def/#reference","text":"Grad-CAM class activation visualization","title":"Reference"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/","text":"[Day 23] Attention-Based\uff1a\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u8fd1\u5e74\u4f86\u6ce8\u610f\u529b\u6a5f\u5236\uff08Attention Mechanism\uff09\u5df2\u7d93\u6210\u70ba\u6df1\u5ea6\u5b78\u7fd2\u548c\u795e\u7d93\u7db2\u8def\u9818\u57df\u7684\u4e00\u500b\u91cd\u8981\u7814\u7a76\u3002\u5b83\u4e0d\u50c5\u80fd\u5920\u6539\u5584\u6a21\u578b\u7684\u6027\u80fd\uff0c\u9084\u53ef\u4ee5\u589e\u5f37\u6a21\u578b\u7684\u89e3\u91cb\u6027\u30022018 \u5e74\u5716\u9748\u734e\u5f97\u4e3b\u540c\u6642\u4e5f\u662f\u6df1\u5ea6\u5b78\u7fd2\u4e09\u5927\u5de8\u982d\u4e4b\u4e00\u7684 Yoshua Bengio \u4e5f\u66fe\u7d93\u8aaa\u904e\uff1a Attention is a core ingredient of \u2018conscious\u2019 AI \u3002\u900f\u904e\u6709\u610f\u8b58\u7684\u8a8d\u77e5\u7cfb\u7d71\uff0c\u9032\u4e00\u6b65\u6a21\u4eff\u4eba\u985e\u7684\u884c\u70ba\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u5b78\u7fd2\u7684\u6548\u679c\uff0c\u9019\u5c31\u662f\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7814\u7a76\u4e3b\u984c\u3002\u5728\u524d\u5e7e\u5929\u7684\u6587\u7ae0\u4e2d\u6211\u5011\u5b78\u7fd2\u4e86\u8a31\u591a CNN \u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5982 Perturbation-Based\u3001Gradient-Based\u3001Propagation-Based\u3001CAM-Based\u7b49\uff0c\u5728\u89e3\u91cb CNN \u6a21\u578b\u65b9\u9762\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002\u70ba\u4e86\u514b\u670d\u9019\u4e9b\u5c40\u9650\u6027\uff0c\u7814\u7a76\u4eba\u54e1\u958b\u59cb\u63a1\u7528\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u4e26\u5c07\u6240\u8b02\u7684 Attention Layer \u5176\u5d4c\u5165\u5230 CNN \u6a21\u578b\u4e2d\uff0c\u4ee5\u5be6\u73fe\u66f4\u597d\u7684\u89e3\u91cb\u6027\u548c\u6027\u80fd\u3002\u7576\u7136\u6ce8\u610f\u529b\u6a5f\u5236\u4e0d\u50c5\u50c5\u53ea\u4fb7\u9650\u5728\u5716\u50cf\u8b58\u5225\u4efb\u52d9\u4e0a\uff0c\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u53ca\u8a9e\u97f3\u8655\u7406\u4e5f\u53ef\u4ee5\u7528\u5230\u6b64\u6280\u8853\uff0c\u9019\u4e5f\u610f\u5473\u8457\u5404\u7a2e\u795e\u7d93\u7db2\u8def\u90fd\u53ef\u4ee5\u5957\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u6982\u5ff5\u3002\u7136\u800c\u5728\u4eca\u5929\u7684\u6587\u7ae0\u5167\u5bb9\u7576\u4e2d\uff0c\u6211\u5011\u5c07\u95dc\u6ce8\u5728\u5982\u4f55\u900f\u904e\u6ce8\u610f\u529b\u6a5f\u5236\u61c9\u7528\u5728\u5716\u50cf\u8b58\u5225\u4efb\u52d9\u4e0a\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u6dfa\u8ac7\u6709\u610f\u8b58\u7684 AI\uff1a \u6ce8\u610f\u529b\u6a5f\u5236\u4ecb\u7d39 \u6ce8\u610f\u529b\u6a5f\u5236\u7684\u512a\u52e2 \u5728\u63a2\u8a0e\u5982\u4f55\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u4f86\u89e3\u91cb CNN \u6a21\u578b\u4e4b\u524d\uff0c\u8b93\u6211\u5011\u9996\u5148\u7406\u89e3\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u512a\u52e2\u3002\u6ce8\u610f\u529b\u6a5f\u5236\u5141\u8a31\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u4e0d\u540c\u90e8\u5206\u8abf\u6574\u5176\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u9019\u4f7f\u5f97\u6a21\u578b\u66f4\u80fd\u5920\u7406\u89e3\u548c\u89e3\u91cb\u8907\u96dc\u7684\u6578\u64da\u3002\u76f8\u6bd4\u65bc\u50b3\u7d71\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u6ce8\u610f\u529b\u6a5f\u5236\u66f4\u5177\u9748\u6d3b\u6027\uff0c\u80fd\u5920\u5f9e\u7279\u5fb5\u5716\u4e2d\u81ea\u52d5\u5b78\u7fd2\u95dc\u9375\u8a0a\u606f\uff0c\u4e26\u5c07\u5176\u7d0d\u5165\u6c7a\u7b56\u904e\u7a0b\u3002 \u5728\u6ce8\u610f\u529b\u6a5f\u5236\u4e2d\uff0c\u6211\u5011\u901a\u5e38\u4f7f\u7528\u4e00\u7d44\u5411\u91cf\u6b0a\u91cd\uff08\u6216\u5206\u6578\uff09\u4f86\u6307\u793a\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u5e8f\u5217\u6642\u5c0d\u4e0d\u540c\u90e8\u5206\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002\u8b93\u6211\u5011\u4ee5\u6578\u5b78\u7b26\u865f\u4f86\u8868\u793a\uff1a \u8f38\u5165\u5e8f\u5217\uff1a\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u9577\u5ea6\u70baN\u7684\u8f38\u5165\u5e8f\u5217\uff0c\u901a\u5e38\u8868\u793a\u70baX = [x\u2081, x\u2082, ..., x\u1d3a]\uff0c\u5176\u4e2d\u6bcf\u500bx\u1d62\u662f\u4e00\u500b\u7279\u5fb5\u6216\u6642\u9593\u5e8f\u5217\u7684\u8868\u793a\u3002 \u6ce8\u610f\u529b\u6b0a\u91cd\uff1a\u6211\u5011\u5f15\u5165\u4e00\u500b\u6ce8\u610f\u529b\u6b0a\u91cd\u5411\u91cfA = [a\u2081, a\u2082, ..., a\u1d3a]\uff0c\u5176\u4e2d\u6bcf\u500ba\u1d62\u4ee3\u8868\u6a21\u578b\u5c0d\u8f38\u5165\u5e8f\u5217\u4e2d\u76f8\u61c9\u4f4d\u7f6e\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002\u9019\u4e9b\u6b0a\u91cd\u901a\u5e38\u662f\u5be6\u6578\uff0c\u4e26\u6eff\u8db3\u6b63\u898f\u5316\u689d\u4ef6\uff0c\u5373\u2211a\u1d62 = 1\uff08\u6ce8\u610f\u529b\u6a5f\u5236\u7e3d\u548c\u70ba1\uff09\u3002 \u5411\u91cf\u6b0a\u91cd\u5728\u6578\u5b78\u4e0a\u4ee3\u8868\u4e86\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u5b83\u5011\u6c7a\u5b9a\u4e86\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u5e8f\u5217\u6642\u7684\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u4e26\u6709\u52a9\u65bc\u63d0\u9ad8\u6a21\u578b\u7684\u6548\u80fd\u548c\u89e3\u91cb\u6027\u3002\u5957\u7528\u5728\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u6211\u5011\u53ef\u4ee5\u8a08\u7b97\u6bcf\u4e00\u500b\u7279\u5fb5\u5716(feature maps)\u6240\u5c0d\u61c9\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\uff0c\u4e26\u53ef\u4ee5\u77e5\u9053\u9014\u4e2d\u54ea\u500b\u4f4d\u7f6e\u662f\u6a21\u578b\u95dc\u6ce8\u7684\u5730\u65b9\u3002\u90a3\u8a72\u5982\u4f55\u8a08\u7b97\u6ce8\u610f\u529b\u5206\u6578\u5462\uff1f\u9019\u5c31\u662f\u53e6\u4e00\u9580\u5b78\u8853\u7814\u7a76\u5728\u63a2\u8a0e\u7684\u4e8b\u60c5\uff0c\u56e0\u70ba\u4ed6\u6709\u975e\u5e38\u591a\u7684\u6280\u5de7\u53ef\u4ee5\u8a08\u7b97\u9019\u4e9b\u6ce8\u610f\u529b\u5206\u6578\u3002\u4e0b\u5716\u5c31\u662f\u53d6\u81ea\u4e00\u7bc7 BAM: Bottleneck Attention Module \u7814\u7a76\uff0c\u5728\u5377\u7a4d\u5c64\u9593\u52a0\u5165\u4e00\u500b\u6ce8\u610f\u529b\u6a21\u584a\uff0c\u4e26\u5c07\u542b\u6709\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7279\u5fb5\u5716\u7e6a\u88fd\u51fa\u4f86\uff0c\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u771f\u7684\u6709\u95dc\u6ce8\u5230\u91cd\u9ede\u5340\u57df\u3002 \u6ce8\u610f\u529b\u6a5f\u5236\u65bc\u96fb\u8166\u8996\u89ba\u6a21\u578b \u6ce8\u610f\u6a5f\u5236\u88ab\u5f15\u5165\u5230\u96fb\u8166\u8996\u89ba\u4e2d\uff0c\u5176\u76ee\u7684\u662f\u6a21\u4eff\u4eba\u985e\u8996\u89ba\u7cfb\u7d71\u3002\u9019\u7a2e\u6ce8\u610f\u6a5f\u5236\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u500b\u57fa\u65bc\u8f38\u5165\u5716\u50cf\u7279\u5fb5\u7684\u52d5\u614b\u6b0a\u91cd\u8abf\u6574\u904e\u7a0b\u3002\u5176\u4e2d\u9019\u7bc7\u8ad6\u6587 Attention Mechanisms in Computer Vision: A Survey \u7e3d\u7d50\u4e86\u96fb\u8166\u8996\u89ba\u4e2d\u7684\u5404\u7a2e\u6ce8\u610f\u6a5f\u5236\uff0c\u4e26\u5c0d\u6240\u6709 CV Attention \u7814\u7a76\u9032\u884c\u5206\u985e\u3002\u76f8\u95dc\u7684\u8ad6\u6587\u7814\u7a76\u6574\u7406\u4e5f\u80fd\u53c3\u8003 GitHub \u4e0a\u7684\u5c08\u6848 Awesome-Vision-Attentions \u539f\u4f5c\u8005\u7d71\u6574\u4e86\u8fd1\u5e74\u96fb\u8166\u8996\u89ba\u9818\u57df\u4e2d\u5404\u7a2e\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7814\u7a76\u3002\u5c31\u6ce8\u610f\u529b\u95dc\u6ce8\u7684\u57df\u4f86\u5206\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u516d\u7a2e\uff1a \u901a\u9053\u6ce8\u610f\u529b (Channel Attention) \u7a7a\u9593\u6ce8\u610f\u529b (Spatial Attention) \u6642\u9593\u6ce8\u610f\u529b (Temporal Attention) \u5206\u652f\u6ce8\u610f\u529b (Branch Attention) \u901a\u9053\u7a7a\u9593\u6ce8\u610f\u529b (Channel & Spatial Attention) \u6642\u7a7a\u6ce8\u610f\u529b (Spatial & Temporal Attention) \u5ef6\u4f38\u95b1\u8b80\uff1a \u96fb\u8166\u8996\u89ba\u4e2d\u7684\u6ce8\u610f\u529b\u6a5f\u5236 \u6ce8\u610f\u529b\u6a5f\u5236\u65bc Transformer \u6a21\u578b \u81ea\u5f9e2017\u5e74Google\u767c\u8868\u4e86 Attention Is All You Need \u9019\u7bc7\u8ad6\u6587\uff0cTransformer \u67b6\u69cb\u7684\u63d0\u51fa\u5b8c\u5168\u6539\u8b8a\u4e86\u795e\u7d93\u7db2\u8def\u7684\u5c40\u52e2\u3002\u5728\u9019\u7bc7\u8ad6\u6587\u4e2d\uff0c\u4ed6\u5011\u5f15\u5165\u4e86\u4e00\u7a2e\u7a31\u70ba Transformer \u7684\u7db2\u8def\u7d50\u69cb\uff0c\u5b83\u4e0d\u518d\u4f9d\u8cf4\u65bc RNN \u6216 CNN\uff0c\u800c\u662f\u5b8c\u5168\u63a1\u7528\u4e86\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\uff08self-attention mechanism\uff09\u3002\u9019\u7a2e\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u5141\u8a31\u6a21\u578b\u5728 Encoder-Decoder \u4e4b\u9593\u66f4\u9748\u6d3b\u5730\u64cd\u4f5c\uff0c\u70ba\u6df1\u5ea6\u5b78\u7fd2\u5e36\u4f86\u4e86\u66f4\u591a\u7684\u9748\u6d3b\u6027\u3002\u7136\u800c self-attention \u9019\u6a23\u7684\u6280\u8853\u61c9\u7528\u5728\u96fb\u8166\u8996\u89ba\u4e2d\u662f\u5c6c\u65bc\u525b\u525b\u63d0\u5230\u7684\u516d\u5927\u9805\u4e2d\u7684 \u7a7a\u9593\u6ce8\u610f\u529b (Spatial Attention)\u9019\u4e00\u5927\u985e\u3002 \u5728\u96fb\u8166\u8996\u89ba\u9818\u57df\uff0cTransformer \u67b6\u69cb\u7684\u8b8a\u5f62\u548c\u7d93\u5178\u7db2\u8def\u76f8\u7d50\u5408\u5df2\u7d93\u7522\u751f\u4e86\u591a\u500b\u6210\u529f\u7684\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 Transformer \u67b6\u69cb\u7684\u7d93\u5178\u6216\u77e5\u540d\u6a21\u578b\u7684\u8b8a\u5f62\uff1a Vision Transformer \uff08ViT\uff09(Dosovitskiy et al., 2020) Google Research \uff1aVision Transformer\u662f\u5c07Transformer\u67b6\u69cb\u61c9\u7528\u65bc\u5716\u50cf\u5206\u985e\u7684\u7d93\u5178\u6a21\u578b\u3002\u5b83\u5c07\u5716\u50cf\u5206\u5272\u70ba\u4e00\u7cfb\u5217\u56fa\u5b9a\u5927\u5c0f\u7684\u584a\uff0c\u7136\u5f8c\u5c07\u5b83\u5011\u8f49\u63db\u6210\u5e8f\u5217\uff0c\u4e26\u4f7f\u7528Transformer\u4e2d\u7684Encoder\u4f86\u8655\u7406\u9019\u500b\u5e8f\u5217\u9054\u5230\u5f71\u50cf\u5206\u985e\u3002 Data-efficient Image Transformer \uff08DeiT\uff09(Touvron et al., 2020) Facebook AI \uff1aDeiT\u662f\u4e00\u7a2e\u6578\u64da\u9ad8\u6548\u7684Vision Transformer\uff0c\u900f\u904e\u6578\u64da\u589e\u5f37\u548c\u77e5\u8b58\u84b8\u993e\u6280\u8853\uff0c\u80fd\u5920\u5728\u8cc7\u6599\u6709\u9650\u7684\u72c0\u6cc1\u4e0b\uff0c\u540c\u6642\u80fd\u5920\u4fdd\u6301\u8ddfViT\u4e00\u6a23\u7684\u6548\u679c\u751a\u81f3\u6bd4\u7528CNN\u7684\u7db2\u8def\u9084\u4f86\u5f97\u597d\u3002 MobileViT (Mehta et al., 2021) Apple \uff1aMobileViT\u662f\u4e00\u500b\u5c08\u70ba\u79fb\u52d5\u8a2d\u5099\u512a\u5316\u7684\u8b8a\u7a2eVision Transformer\u6a21\u578b\uff0c\u5b83\u4fdd\u6301\u4e86\u9ad8\u6027\u80fd\u7684\u540c\u6642\uff0c\u5177\u6709\u66f4\u5c0f\u7684\u6a21\u578b\u5927\u5c0f\u548c\u66f4\u4f4e\u7684\u8a08\u7b97\u6210\u672c\u3002 Swin Transformer (Liu et al., 2021) Microsoft Research \uff1aSwin Transformer\u662f\u4e00\u7a2e\u591a\u5c3a\u5ea6\u7279\u5fb5\u5efa\u6a21\u7684\u6a21\u578b\uff0c\u900f\u904e\u6ed1\u52d5\u7a97\u53e3\u7684\u65b9\u6cd5\u9032\u884c\u6ce8\u610f\u529b\u6a5f\u5236\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8655\u7406\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5fb5\u3002\u5b83\u5728\u5716\u50cf\u5206\u985e\u3001\u7269\u9ad4\u6aa2\u6e2c\u548c\u5206\u5272\u7b49\u4efb\u52d9\u4e0a\u53d6\u5f97\u4e86\u512a\u7570\u7684\u6210\u7e3e\u3002 Class-Attention in Image Transformers \uff08CaiT\uff09(Touvron et al., 2021) Facebook AI \uff1aCaiT\u662f\u4e00\u7a2e\u57fa\u65bcTransformer\u7684\u6a21\u578b\uff0c\u5b83\u5f15\u5165\u4e86\u985e\u5225\u611f\u77e5\uff08class-aware\uff09\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u4ee5\u6539\u5584\u5716\u50cf\u5206\u985e\u6027\u80fd\u3002\u9019\u7a2e\u6a21\u578b\u901a\u5e38\u5c0d\u5716\u50cf\u4e2d\u4e0d\u540c\u985e\u5225\u7684\u8a0a\u606f\u9032\u884c\u66f4\u597d\u7684\u5efa\u6a21\u3002 \u5f9e\u4e0a\u8ff0\u8ad6\u6587\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u5927\u591a\u6578\u7814\u7a76\u5de5\u4f5c\u90fd\u4f86\u81ea\u5927\u578b\u4f01\u696d\u6216\u7814\u7a76\u6a5f\u69cb\uff0c\u9019\u662f\u56e0\u70ba\u8a13\u7df4 Transformer \u6a21\u578b\u9700\u8981\u9f90\u5927\u7684\u8cc7\u6599\u96c6\u548c\u8a08\u7b97\u8cc7\u6e90\u3002\u56e0\u6b64\u8981\u9032\u5165 Transformer \u7684\u7814\u7a76\u9818\u57df\uff0c\u9700\u8981\u5177\u5099\u8c50\u5bcc\u7684\u8cc7\u6e90\u6295\u5165\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u50cf\u6700\u8fd1\u5099\u53d7\u95dc\u6ce8\u7684 ChatGPT\uff0c\u80cc\u5f8c\u4f9d\u8cf4\u65bc\u5927\u578b\u8a9e\u8a00\u6a21\u578b\uff08LLM\uff09\uff0c\u4f8b\u5982 GPT\u3001PaLM \u548c LLaMA ...\u7b49\uff0c\u9019\u4e9b\u8a9e\u8a00\u6a21\u578b\u90fd\u5efa\u7acb\u5728Transformer \u67b6\u69cb\u4e4b\u4e0a\uff0c\u8a13\u7df4\u4e00\u6b21\u53ef\u80fd\u9700\u8981\u6578\u5343\u842c\u751a\u81f3\u5104\u7d1a\u7684\u6210\u672c\u3002\u5e78\u904b\u7684\u662f\uff0c\u9019\u4e9b\u6a5f\u69cb\u901a\u5e38\u6703\u91cb\u51fa\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u901a\u904e\u5fae\u8abf\u6216\u9077\u79fb\u5b78\u7fd2\u7b49\u65b9\u5f0f\u4f86\u6eff\u8db3\u6211\u5011\u7684\u9700\u6c42\u3002 Attention-Based \u5be6\u4f5c (Vision Transformer) \u4eca\u5929\u7684\u7bc4\u4f8b\u5c07\u4f7f\u7528 Vision Transformer \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u793a\u7bc4\u5982\u4f55\u900f\u904e Attention Rollout \u65b9\u6cd5\u89e3\u91cb\u6a21\u578b\u63a8\u8ad6\u7d50\u679c\u3002Transformer \u5df2\u7d93\u6210\u70ba\u71b1\u9580\u7684\u795e\u7d93\u7db2\u8def\u67b6\u69cb\uff0c\u4e26\u5ee3\u6cdb\u61c9\u7528\u65bc\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u4efb\u52d9\uff0c\u50cf\u662f\u73fe\u4eca\u6700\u706b\u7d05\u7684 ChatGPT \u80cc\u5f8c\u7684\u8a9e\u8a00\u6a21\u578b\u4e5f\u662f\u57fa\u65bc\u6ce8\u610f\u529b\u6a5f\u5236\u7684 Transformer \u67b6\u69cb\u70ba\u57fa\u5e95\u3002\u5b83\u7684\u6210\u529f\u6e90\u65bc 2017 \u5e74 Google \u63d0\u51fa\u7684 \"Attention Is All You Need\"\u3002\u9019\u4e00\u91cd\u5927\u7a81\u7834\u4fc3\u4f7f Google \u5718\u968a\u5c07 Transformer \u67b6\u69cb\u4e2d\u7684 Encoder \u62bd\u96e2\u51fa\u4f86\uff0c\u5275\u9020\u4e86 Vision Transformer\uff08ViT\uff09\uff0c\u7528\u65bc\u5f71\u50cf\u5206\u985e\u6280\u8853\u3002\u6b64\u5916\uff0cViT \u653e\u68c4\u4e86 CNN \u5c64\uff0c\u8f49\u800c\u4f7f\u7528\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u9032\u884c\u8a08\u7b97\uff0c\u5728\u5206\u985e\u554f\u984c\u4e0a\u53d6\u5f97\u4e86\u512a\u7570\u7684\u6210\u7e3e\u3002 Vision Transformer \u8ad6\u6587\uff1a An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale \u5ef6\u4f38\u95b1\u8b80\uff1a [\u8ad6\u6587\u5c0e\u8b80] Vision Transformer (ViT) \u9644\u7a0b\u5f0f\u78bc\u5be6\u4f5c \u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u5be6\u4f5c\u4e2d\u6211\u5011\u4e0d\u6703\u624b\u523b\u6574\u500b ViT \u7db2\u8def\u67b6\u69cb\uff0c\u4e5f\u4e0d\u6703\u5f9e\u982d\u81ea\u5df1\u8a13\u7df4\u6a21\u578b\u3002\u800c\u662f\u4f7f\u7528\u975e\u5b98\u65b9\u5df2\u8a13\u7df4\u597d\u7684\u9810\u8a13\u7df4\u6a21\u578b\u9032\u884c\u5c55\u793a\u3002\u9996\u5148\u8981\u5b89\u88dd vit-keras \u5957\u4ef6\uff0c\u9019\u662f\u4e00\u500b\u975e\u5b98\u65b9\u7684 Keras \u7248\u672c\u5be6\u4f5c\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u62ff\u5b83\u4f86\u505a\u9077\u79fb\u5b78\u7fd2\u3002\u9664\u6b64\u4e4b\u5916\u9084\u9700\u8981\u5b89\u88dd tensorflow_addons \u5b83\u662f TensorFlow \u7684\u4e00\u500b\u9644\u52a0\u5eab\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u984d\u5916\u7684\u81ea\u5b9a\u7fa9\u64cd\u4f5c\u548c\u5c64\uff0c\u4ee5\u64f4\u5c55 TensorFlow \u7684\u529f\u80fd\uff0c\u56e0\u70ba\u5be6\u4f5c ViT \u6703\u9700\u8981\u7528\u5230\u50cf\u662f gelu \u7684\u6fc0\u767c\u51fd\u6578\u3002 pip install vit-keras pip install tensorflow_addons \u5fc5\u9808\u78ba\u4fdd\u96fb\u8166\u5df2\u5148\u5b89\u88dd TensorFlow2.0 \u4ee5\u4e0a \u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5275\u5efa\u4e00\u500b Vision Transformer \u6a21\u578b\uff0c\u4e26\u7372\u53d6 ImageNet \u5206\u985e\u7684\u985e\u5225\u5217\u8868\u3002\u8a72\u6a21\u578b\u53ef\u4ee5\u7528\u65bc\u5716\u50cf\u5206\u985e\u7b49\u4efb\u52d9\u3002\u5176\u4e2d\u6211\u5011\u662f\u63a1\u7528 vit_b16 \u7684\u7db2\u8def\u67b6\u69cb\uff0cb16 \u4e2d\u7684 16 \u8868\u793a\u8457\u6bcf\u500b\u5716\u50cf\u7684\u8f38\u5165\u90fd\u88ab\u5206\u5272\u6210\u4e86\u56fa\u5b9a\u5927\u5c0f\u7684\u5716\u50cf\u584a\uff08\u6216\u7a31\u70ba \"patches\"\uff09\uff0c\u9019\u4e9b\u5716\u50cf\u584a\u7684\u5927\u5c0f\u70ba 16x16 \u50cf\u7d20\u3002\u9019\u4e9b\u5716\u50cf\u584a\u88ab\u7528\u4f5c\u6a21\u578b\u7684\u8f38\u5165\uff0c\u4e26\u901a\u904e\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u4f86\u6355\u6349\u5716\u50cf\u4e2d\u7684\u5168\u5c40\u8a0a\u606f\u3002 import numpy as np import matplotlib.pyplot as plt from vit_keras import vit , utils , visualize # \u4f7f\u7528vit\u51fd\u6578\u5275\u5efaVision Transformer\u6a21\u578b image_size = 224 # \u8a2d\u5b9a\u8f38\u5165\u5716\u50cf\u7684\u5927\u5c0f\u70ba 224x224 \u50cf\u7d20 model = vit . vit_b16 ( image_size = image_size , activation = 'sigmoid' , # \u8f38\u51fa\u4f7f\u7528 sigmoid \u6fc0\u767c\u51fd\u6578 pretrained = True , # \u4f7f\u7528\u9810\u8a13\u7df4\u6b0a\u91cd include_top = True , # \u5305\u62ec\u9802\u90e8\uff08\u5206\u985e\u5c64\uff09 pretrained_top = True # \u4f7f\u7528\u9810\u8a13\u7df4\u7684\u9802\u90e8\u6b0a\u91cd ) # \u53d6\u5f97 ImageNet \u5206\u985e\u7684\u985e\u5225 classes = utils . get_imagenet_classes () \u5728ViT\u7684\u7814\u7a76\u548c\u5be6\u73fe\u904e\u7a0b\u4e2d\uff0c\u51fa\u73fe\u4e86\u591a\u7a2e\u4e0d\u540c\u7684\u67b6\u69cb\u8b8a\u5f62\uff0c\u4ee5\u9069\u61c9\u4e0d\u540c\u7684\u4efb\u52d9\u548c\u9700\u6c42\u3002\u4ee5\u4e0b\u662f vit-keras \u5957\u4ef6\u4e2d\u6240\u63d0\u4f9b\u7684 ViT \u67b6\u69cb\u8b8a\u5f62\uff1a ViT Base Models\uff1a ViT B16 \uff08Vision Transformer Base with 16x16 patches\uff09 ViT B32 \uff08Vision Transformer Base with 32x32 patches\uff09 ViT Large Models\uff1a ViT L16 \uff08Vision Transformer Large with 16x16 patches\uff09 ViT L32 \uff08Vision Transformer Large with 32x32 patches\uff09 vit-keras \u5957\u4ef6\u76ee\u524d\u5c1a\u672a\u63d0\u4f9b ViT-Huge \u6a21\u578b\u7684\u5be6\u73fe\uff0c\u56e0\u70ba\u9019\u9700\u8981\u4f7f\u7528 JFT: 300M images of 18K classes \u9019\u500b\u8cc7\u6599\u96c6\u9032\u884c\u8a13\u7df4\u3002\u6b64\u5916\u9019\u500b\u8cc7\u6599\u96c6\u662f\u7531 Google \u5167\u90e8\u6536\u96c6\u7684\uff0c\u4e26\u4e14\u5c1a\u672a\u91cb\u51fa\u70ba\u958b\u6e90\u8cc7\u6599\u96c6\u3002 \u63a5\u4e0b\u4f86\u5be6\u969b\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u4e26\u4f7f\u7528\u525b\u525b\u6240\u5efa\u7acb\u7684 ViT \u6a21\u578b\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u8f38\u51fa\u6a21\u578b\u5c0d\u5716\u50cf\u7684\u9810\u6e2c\u7d50\u679c\u3002 url = 'https://upload.wikimedia.org/wikipedia/commons/b/bc/Free%21_ %283987584939% 29.jpg' image = utils . read ( url , image_size ) # \u8f09\u5165\u5716\u7247 x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 x = vit . preprocess_inputs ( x ) # \u9810\u8655\u7406\u5716\u50cf # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class = pred_proba [ 0 ] . argmax () # \u53d6\u5f97\u9810\u6e2c\u6a19\u7c64\u7d22\u5f15 predicted_class_name = classes [ pred_class ] # \u53d6\u5f97\u9810\u6e2c\u6a19\u7c64\u540d\u7a31 print ( 'Prediction:' , predicted_class_name ) \u8f38\u51fa\u7d50\u679c\uff1a Prediction: Eskimo dog, husky \u6700\u5f8c\u4f7f\u7528\u8ad6\u6587\u4e2d\u6240\u63d0\u5230\u7684 Attention Rollout \u65b9\u6cd5\u4f86\u8a08\u7b97 ViT \u6a21\u578b\u4e2d\u5f9e output token \u5230\u8f38\u5165\u5716\u50cf\u7684\u6ce8\u610f\u529b\u6620\u5c04\u3002\u7c21\u55ae\u4f86\u8aaa Attention Rollout \u5c31\u662f\u8a08\u7b97\u5f9e\u5e95\u5c64\u5230\u9ad8\u5c64\u7684 Attention \u77e9\u9663\u7684\u4e58\u7a4d\u3002\u5177\u9ad4\u800c\u8a00\uff0cAttention Rollout \u7684\u6b65\u9a5f\u5305\u62ec\uff1a \u8a08\u7b97\u5e73\u5747\u6ce8\u610f\u529b\u6b0a\u91cd\uff1a \u9996\u5148\u8a08\u7b97\u6a21\u578b\u4e2d\u6240\u6709\u6ce8\u610f\u529b\u982d\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\u7684\u5e73\u5747\u503c\uff0c\u5f97\u5230\u4e00\u500b\u4ee3\u8868\u5e73\u5747\u6ce8\u610f\u529b\u7684\u77e9\u9663\u3002 \u905e\u8ff4\u76f8\u4e58\uff1a \u63a5\u4e0b\u4f86\uff0c\u5c07\u9019\u500b\u5e73\u5747\u6ce8\u610f\u529b\u77e9\u9663\u8207\u6a21\u578b\u7684\u4e0d\u540c\u5c64\u6b21\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\u77e9\u9663\u9032\u884c\u905e\u8ff4\u6027\u76f8\u4e58\u3002\u9019\u610f\u5473\u8457\u5c07\u4e0d\u540c\u5c64\u6b21\u7684\u6ce8\u610f\u529b\u9032\u884c\u6df7\u5408\uff0c\u4ee5\u6355\u6349\u6a21\u578b\u5c0d\u8f38\u5165\u7684\u7d9c\u5408\u6ce8\u610f\u529b\u5206\u4f48\u3002 \u5f97\u5230\u6700\u7d42\u6ce8\u610f\u529b\u5206\u4f48\uff1a \u6700\u5f8c\u9019\u500b\u905e\u8ff4\u76f8\u4e58\u64cd\u4f5c\u7522\u751f\u4e86\u6700\u7d42\u7684\u6ce8\u610f\u529b\u5206\u4f48\uff0c\u63cf\u8ff0\u4e86\u6a21\u578b\u5982\u4f55\u5728\u4e0d\u540c\u5c64\u6b21\u4e0a\u95dc\u6ce8\u8f38\u5165\u6578\u64da\u7684\u4e0d\u540c\u90e8\u5206\u3002 Attention Rollout \u8a73\u7d30\u5be6\u4f5c\u53ef\u4ee5\u53c3\u8003\u9019\u500b\u5957\u4ef6\u7684 \u539f\u59cb\u7a0b\u5f0f \u3002 # \u8a08\u7b97 Attention Rollout attention_map = visualize . attention_map ( model = model , image = image ) # \u7e6a\u88fd\u7d50\u679c fig , ( ax1 , ax2 ) = plt . subplots ( ncols = 2 ) ax1 . axis ( 'off' ) ax2 . axis ( 'off' ) ax1 . set_title ( 'Original' ) ax2 . set_title ( 'Attention Map' ) _ = ax1 . imshow ( image ) _ = ax2 . imshow ( attention_map ) Reference Explained: Attention Visualization with Attention Rollout Intro to Transformers and Transformer Explainability \u5176\u4ed6\u6709\u7528\u8cc7\u8a0a - Vision Transformer(ViT)\u91cd\u9ede\u7b46\u8a18 - Transformer\u53ef\u89e3\u91cb\u6027\u8207\u8996\u89ba\u5316 Vision Transformers Need Registers - Meta 2023 Paper: https://arxiv.org/abs/2309.16588","title":"[Day 23] Attention-Based\uff1a\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#day-23-attention-basedcnn","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u8fd1\u5e74\u4f86\u6ce8\u610f\u529b\u6a5f\u5236\uff08Attention Mechanism\uff09\u5df2\u7d93\u6210\u70ba\u6df1\u5ea6\u5b78\u7fd2\u548c\u795e\u7d93\u7db2\u8def\u9818\u57df\u7684\u4e00\u500b\u91cd\u8981\u7814\u7a76\u3002\u5b83\u4e0d\u50c5\u80fd\u5920\u6539\u5584\u6a21\u578b\u7684\u6027\u80fd\uff0c\u9084\u53ef\u4ee5\u589e\u5f37\u6a21\u578b\u7684\u89e3\u91cb\u6027\u30022018 \u5e74\u5716\u9748\u734e\u5f97\u4e3b\u540c\u6642\u4e5f\u662f\u6df1\u5ea6\u5b78\u7fd2\u4e09\u5927\u5de8\u982d\u4e4b\u4e00\u7684 Yoshua Bengio \u4e5f\u66fe\u7d93\u8aaa\u904e\uff1a Attention is a core ingredient of \u2018conscious\u2019 AI \u3002\u900f\u904e\u6709\u610f\u8b58\u7684\u8a8d\u77e5\u7cfb\u7d71\uff0c\u9032\u4e00\u6b65\u6a21\u4eff\u4eba\u985e\u7684\u884c\u70ba\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u5b78\u7fd2\u7684\u6548\u679c\uff0c\u9019\u5c31\u662f\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7814\u7a76\u4e3b\u984c\u3002\u5728\u524d\u5e7e\u5929\u7684\u6587\u7ae0\u4e2d\u6211\u5011\u5b78\u7fd2\u4e86\u8a31\u591a CNN \u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5982 Perturbation-Based\u3001Gradient-Based\u3001Propagation-Based\u3001CAM-Based\u7b49\uff0c\u5728\u89e3\u91cb CNN \u6a21\u578b\u65b9\u9762\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002\u70ba\u4e86\u514b\u670d\u9019\u4e9b\u5c40\u9650\u6027\uff0c\u7814\u7a76\u4eba\u54e1\u958b\u59cb\u63a1\u7528\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u4e26\u5c07\u6240\u8b02\u7684 Attention Layer \u5176\u5d4c\u5165\u5230 CNN \u6a21\u578b\u4e2d\uff0c\u4ee5\u5be6\u73fe\u66f4\u597d\u7684\u89e3\u91cb\u6027\u548c\u6027\u80fd\u3002\u7576\u7136\u6ce8\u610f\u529b\u6a5f\u5236\u4e0d\u50c5\u50c5\u53ea\u4fb7\u9650\u5728\u5716\u50cf\u8b58\u5225\u4efb\u52d9\u4e0a\uff0c\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u53ca\u8a9e\u97f3\u8655\u7406\u4e5f\u53ef\u4ee5\u7528\u5230\u6b64\u6280\u8853\uff0c\u9019\u4e5f\u610f\u5473\u8457\u5404\u7a2e\u795e\u7d93\u7db2\u8def\u90fd\u53ef\u4ee5\u5957\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u6982\u5ff5\u3002\u7136\u800c\u5728\u4eca\u5929\u7684\u6587\u7ae0\u5167\u5bb9\u7576\u4e2d\uff0c\u6211\u5011\u5c07\u95dc\u6ce8\u5728\u5982\u4f55\u900f\u904e\u6ce8\u610f\u529b\u6a5f\u5236\u61c9\u7528\u5728\u5716\u50cf\u8b58\u5225\u4efb\u52d9\u4e0a\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u6dfa\u8ac7\u6709\u610f\u8b58\u7684 AI\uff1a \u6ce8\u610f\u529b\u6a5f\u5236\u4ecb\u7d39","title":"[Day 23] Attention-Based\uff1a\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#_1","text":"\u5728\u63a2\u8a0e\u5982\u4f55\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u4f86\u89e3\u91cb CNN \u6a21\u578b\u4e4b\u524d\uff0c\u8b93\u6211\u5011\u9996\u5148\u7406\u89e3\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u512a\u52e2\u3002\u6ce8\u610f\u529b\u6a5f\u5236\u5141\u8a31\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u4e0d\u540c\u90e8\u5206\u8abf\u6574\u5176\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u9019\u4f7f\u5f97\u6a21\u578b\u66f4\u80fd\u5920\u7406\u89e3\u548c\u89e3\u91cb\u8907\u96dc\u7684\u6578\u64da\u3002\u76f8\u6bd4\u65bc\u50b3\u7d71\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u6ce8\u610f\u529b\u6a5f\u5236\u66f4\u5177\u9748\u6d3b\u6027\uff0c\u80fd\u5920\u5f9e\u7279\u5fb5\u5716\u4e2d\u81ea\u52d5\u5b78\u7fd2\u95dc\u9375\u8a0a\u606f\uff0c\u4e26\u5c07\u5176\u7d0d\u5165\u6c7a\u7b56\u904e\u7a0b\u3002 \u5728\u6ce8\u610f\u529b\u6a5f\u5236\u4e2d\uff0c\u6211\u5011\u901a\u5e38\u4f7f\u7528\u4e00\u7d44\u5411\u91cf\u6b0a\u91cd\uff08\u6216\u5206\u6578\uff09\u4f86\u6307\u793a\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u5e8f\u5217\u6642\u5c0d\u4e0d\u540c\u90e8\u5206\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002\u8b93\u6211\u5011\u4ee5\u6578\u5b78\u7b26\u865f\u4f86\u8868\u793a\uff1a \u8f38\u5165\u5e8f\u5217\uff1a\u5047\u8a2d\u6211\u5011\u6709\u4e00\u500b\u9577\u5ea6\u70baN\u7684\u8f38\u5165\u5e8f\u5217\uff0c\u901a\u5e38\u8868\u793a\u70baX = [x\u2081, x\u2082, ..., x\u1d3a]\uff0c\u5176\u4e2d\u6bcf\u500bx\u1d62\u662f\u4e00\u500b\u7279\u5fb5\u6216\u6642\u9593\u5e8f\u5217\u7684\u8868\u793a\u3002 \u6ce8\u610f\u529b\u6b0a\u91cd\uff1a\u6211\u5011\u5f15\u5165\u4e00\u500b\u6ce8\u610f\u529b\u6b0a\u91cd\u5411\u91cfA = [a\u2081, a\u2082, ..., a\u1d3a]\uff0c\u5176\u4e2d\u6bcf\u500ba\u1d62\u4ee3\u8868\u6a21\u578b\u5c0d\u8f38\u5165\u5e8f\u5217\u4e2d\u76f8\u61c9\u4f4d\u7f6e\u7684\u95dc\u6ce8\u7a0b\u5ea6\u3002\u9019\u4e9b\u6b0a\u91cd\u901a\u5e38\u662f\u5be6\u6578\uff0c\u4e26\u6eff\u8db3\u6b63\u898f\u5316\u689d\u4ef6\uff0c\u5373\u2211a\u1d62 = 1\uff08\u6ce8\u610f\u529b\u6a5f\u5236\u7e3d\u548c\u70ba1\uff09\u3002 \u5411\u91cf\u6b0a\u91cd\u5728\u6578\u5b78\u4e0a\u4ee3\u8868\u4e86\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u5b83\u5011\u6c7a\u5b9a\u4e86\u6a21\u578b\u5728\u8655\u7406\u8f38\u5165\u5e8f\u5217\u6642\u7684\u95dc\u6ce8\u7a0b\u5ea6\uff0c\u4e26\u6709\u52a9\u65bc\u63d0\u9ad8\u6a21\u578b\u7684\u6548\u80fd\u548c\u89e3\u91cb\u6027\u3002\u5957\u7528\u5728\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u4e2d\u6211\u5011\u53ef\u4ee5\u8a08\u7b97\u6bcf\u4e00\u500b\u7279\u5fb5\u5716(feature maps)\u6240\u5c0d\u61c9\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\uff0c\u4e26\u53ef\u4ee5\u77e5\u9053\u9014\u4e2d\u54ea\u500b\u4f4d\u7f6e\u662f\u6a21\u578b\u95dc\u6ce8\u7684\u5730\u65b9\u3002\u90a3\u8a72\u5982\u4f55\u8a08\u7b97\u6ce8\u610f\u529b\u5206\u6578\u5462\uff1f\u9019\u5c31\u662f\u53e6\u4e00\u9580\u5b78\u8853\u7814\u7a76\u5728\u63a2\u8a0e\u7684\u4e8b\u60c5\uff0c\u56e0\u70ba\u4ed6\u6709\u975e\u5e38\u591a\u7684\u6280\u5de7\u53ef\u4ee5\u8a08\u7b97\u9019\u4e9b\u6ce8\u610f\u529b\u5206\u6578\u3002\u4e0b\u5716\u5c31\u662f\u53d6\u81ea\u4e00\u7bc7 BAM: Bottleneck Attention Module \u7814\u7a76\uff0c\u5728\u5377\u7a4d\u5c64\u9593\u52a0\u5165\u4e00\u500b\u6ce8\u610f\u529b\u6a21\u584a\uff0c\u4e26\u5c07\u542b\u6709\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7279\u5fb5\u5716\u7e6a\u88fd\u51fa\u4f86\uff0c\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u771f\u7684\u6709\u95dc\u6ce8\u5230\u91cd\u9ede\u5340\u57df\u3002","title":"\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u512a\u52e2"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#_2","text":"\u6ce8\u610f\u6a5f\u5236\u88ab\u5f15\u5165\u5230\u96fb\u8166\u8996\u89ba\u4e2d\uff0c\u5176\u76ee\u7684\u662f\u6a21\u4eff\u4eba\u985e\u8996\u89ba\u7cfb\u7d71\u3002\u9019\u7a2e\u6ce8\u610f\u6a5f\u5236\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u500b\u57fa\u65bc\u8f38\u5165\u5716\u50cf\u7279\u5fb5\u7684\u52d5\u614b\u6b0a\u91cd\u8abf\u6574\u904e\u7a0b\u3002\u5176\u4e2d\u9019\u7bc7\u8ad6\u6587 Attention Mechanisms in Computer Vision: A Survey \u7e3d\u7d50\u4e86\u96fb\u8166\u8996\u89ba\u4e2d\u7684\u5404\u7a2e\u6ce8\u610f\u6a5f\u5236\uff0c\u4e26\u5c0d\u6240\u6709 CV Attention \u7814\u7a76\u9032\u884c\u5206\u985e\u3002\u76f8\u95dc\u7684\u8ad6\u6587\u7814\u7a76\u6574\u7406\u4e5f\u80fd\u53c3\u8003 GitHub \u4e0a\u7684\u5c08\u6848 Awesome-Vision-Attentions \u539f\u4f5c\u8005\u7d71\u6574\u4e86\u8fd1\u5e74\u96fb\u8166\u8996\u89ba\u9818\u57df\u4e2d\u5404\u7a2e\u6ce8\u610f\u529b\u6a5f\u5236\u7684\u7814\u7a76\u3002\u5c31\u6ce8\u610f\u529b\u95dc\u6ce8\u7684\u57df\u4f86\u5206\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u516d\u7a2e\uff1a \u901a\u9053\u6ce8\u610f\u529b (Channel Attention) \u7a7a\u9593\u6ce8\u610f\u529b (Spatial Attention) \u6642\u9593\u6ce8\u610f\u529b (Temporal Attention) \u5206\u652f\u6ce8\u610f\u529b (Branch Attention) \u901a\u9053\u7a7a\u9593\u6ce8\u610f\u529b (Channel & Spatial Attention) \u6642\u7a7a\u6ce8\u610f\u529b (Spatial & Temporal Attention) \u5ef6\u4f38\u95b1\u8b80\uff1a \u96fb\u8166\u8996\u89ba\u4e2d\u7684\u6ce8\u610f\u529b\u6a5f\u5236","title":"\u6ce8\u610f\u529b\u6a5f\u5236\u65bc\u96fb\u8166\u8996\u89ba\u6a21\u578b"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#transformer","text":"\u81ea\u5f9e2017\u5e74Google\u767c\u8868\u4e86 Attention Is All You Need \u9019\u7bc7\u8ad6\u6587\uff0cTransformer \u67b6\u69cb\u7684\u63d0\u51fa\u5b8c\u5168\u6539\u8b8a\u4e86\u795e\u7d93\u7db2\u8def\u7684\u5c40\u52e2\u3002\u5728\u9019\u7bc7\u8ad6\u6587\u4e2d\uff0c\u4ed6\u5011\u5f15\u5165\u4e86\u4e00\u7a2e\u7a31\u70ba Transformer \u7684\u7db2\u8def\u7d50\u69cb\uff0c\u5b83\u4e0d\u518d\u4f9d\u8cf4\u65bc RNN \u6216 CNN\uff0c\u800c\u662f\u5b8c\u5168\u63a1\u7528\u4e86\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\uff08self-attention mechanism\uff09\u3002\u9019\u7a2e\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u5141\u8a31\u6a21\u578b\u5728 Encoder-Decoder \u4e4b\u9593\u66f4\u9748\u6d3b\u5730\u64cd\u4f5c\uff0c\u70ba\u6df1\u5ea6\u5b78\u7fd2\u5e36\u4f86\u4e86\u66f4\u591a\u7684\u9748\u6d3b\u6027\u3002\u7136\u800c self-attention \u9019\u6a23\u7684\u6280\u8853\u61c9\u7528\u5728\u96fb\u8166\u8996\u89ba\u4e2d\u662f\u5c6c\u65bc\u525b\u525b\u63d0\u5230\u7684\u516d\u5927\u9805\u4e2d\u7684 \u7a7a\u9593\u6ce8\u610f\u529b (Spatial Attention)\u9019\u4e00\u5927\u985e\u3002 \u5728\u96fb\u8166\u8996\u89ba\u9818\u57df\uff0cTransformer \u67b6\u69cb\u7684\u8b8a\u5f62\u548c\u7d93\u5178\u7db2\u8def\u76f8\u7d50\u5408\u5df2\u7d93\u7522\u751f\u4e86\u591a\u500b\u6210\u529f\u7684\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 Transformer \u67b6\u69cb\u7684\u7d93\u5178\u6216\u77e5\u540d\u6a21\u578b\u7684\u8b8a\u5f62\uff1a Vision Transformer \uff08ViT\uff09(Dosovitskiy et al., 2020) Google Research \uff1aVision Transformer\u662f\u5c07Transformer\u67b6\u69cb\u61c9\u7528\u65bc\u5716\u50cf\u5206\u985e\u7684\u7d93\u5178\u6a21\u578b\u3002\u5b83\u5c07\u5716\u50cf\u5206\u5272\u70ba\u4e00\u7cfb\u5217\u56fa\u5b9a\u5927\u5c0f\u7684\u584a\uff0c\u7136\u5f8c\u5c07\u5b83\u5011\u8f49\u63db\u6210\u5e8f\u5217\uff0c\u4e26\u4f7f\u7528Transformer\u4e2d\u7684Encoder\u4f86\u8655\u7406\u9019\u500b\u5e8f\u5217\u9054\u5230\u5f71\u50cf\u5206\u985e\u3002 Data-efficient Image Transformer \uff08DeiT\uff09(Touvron et al., 2020) Facebook AI \uff1aDeiT\u662f\u4e00\u7a2e\u6578\u64da\u9ad8\u6548\u7684Vision Transformer\uff0c\u900f\u904e\u6578\u64da\u589e\u5f37\u548c\u77e5\u8b58\u84b8\u993e\u6280\u8853\uff0c\u80fd\u5920\u5728\u8cc7\u6599\u6709\u9650\u7684\u72c0\u6cc1\u4e0b\uff0c\u540c\u6642\u80fd\u5920\u4fdd\u6301\u8ddfViT\u4e00\u6a23\u7684\u6548\u679c\u751a\u81f3\u6bd4\u7528CNN\u7684\u7db2\u8def\u9084\u4f86\u5f97\u597d\u3002 MobileViT (Mehta et al., 2021) Apple \uff1aMobileViT\u662f\u4e00\u500b\u5c08\u70ba\u79fb\u52d5\u8a2d\u5099\u512a\u5316\u7684\u8b8a\u7a2eVision Transformer\u6a21\u578b\uff0c\u5b83\u4fdd\u6301\u4e86\u9ad8\u6027\u80fd\u7684\u540c\u6642\uff0c\u5177\u6709\u66f4\u5c0f\u7684\u6a21\u578b\u5927\u5c0f\u548c\u66f4\u4f4e\u7684\u8a08\u7b97\u6210\u672c\u3002 Swin Transformer (Liu et al., 2021) Microsoft Research \uff1aSwin Transformer\u662f\u4e00\u7a2e\u591a\u5c3a\u5ea6\u7279\u5fb5\u5efa\u6a21\u7684\u6a21\u578b\uff0c\u900f\u904e\u6ed1\u52d5\u7a97\u53e3\u7684\u65b9\u6cd5\u9032\u884c\u6ce8\u610f\u529b\u6a5f\u5236\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8655\u7406\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5fb5\u3002\u5b83\u5728\u5716\u50cf\u5206\u985e\u3001\u7269\u9ad4\u6aa2\u6e2c\u548c\u5206\u5272\u7b49\u4efb\u52d9\u4e0a\u53d6\u5f97\u4e86\u512a\u7570\u7684\u6210\u7e3e\u3002 Class-Attention in Image Transformers \uff08CaiT\uff09(Touvron et al., 2021) Facebook AI \uff1aCaiT\u662f\u4e00\u7a2e\u57fa\u65bcTransformer\u7684\u6a21\u578b\uff0c\u5b83\u5f15\u5165\u4e86\u985e\u5225\u611f\u77e5\uff08class-aware\uff09\u7684\u6ce8\u610f\u529b\u6a5f\u5236\uff0c\u4ee5\u6539\u5584\u5716\u50cf\u5206\u985e\u6027\u80fd\u3002\u9019\u7a2e\u6a21\u578b\u901a\u5e38\u5c0d\u5716\u50cf\u4e2d\u4e0d\u540c\u985e\u5225\u7684\u8a0a\u606f\u9032\u884c\u66f4\u597d\u7684\u5efa\u6a21\u3002 \u5f9e\u4e0a\u8ff0\u8ad6\u6587\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u5927\u591a\u6578\u7814\u7a76\u5de5\u4f5c\u90fd\u4f86\u81ea\u5927\u578b\u4f01\u696d\u6216\u7814\u7a76\u6a5f\u69cb\uff0c\u9019\u662f\u56e0\u70ba\u8a13\u7df4 Transformer \u6a21\u578b\u9700\u8981\u9f90\u5927\u7684\u8cc7\u6599\u96c6\u548c\u8a08\u7b97\u8cc7\u6e90\u3002\u56e0\u6b64\u8981\u9032\u5165 Transformer \u7684\u7814\u7a76\u9818\u57df\uff0c\u9700\u8981\u5177\u5099\u8c50\u5bcc\u7684\u8cc7\u6e90\u6295\u5165\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u50cf\u6700\u8fd1\u5099\u53d7\u95dc\u6ce8\u7684 ChatGPT\uff0c\u80cc\u5f8c\u4f9d\u8cf4\u65bc\u5927\u578b\u8a9e\u8a00\u6a21\u578b\uff08LLM\uff09\uff0c\u4f8b\u5982 GPT\u3001PaLM \u548c LLaMA ...\u7b49\uff0c\u9019\u4e9b\u8a9e\u8a00\u6a21\u578b\u90fd\u5efa\u7acb\u5728Transformer \u67b6\u69cb\u4e4b\u4e0a\uff0c\u8a13\u7df4\u4e00\u6b21\u53ef\u80fd\u9700\u8981\u6578\u5343\u842c\u751a\u81f3\u5104\u7d1a\u7684\u6210\u672c\u3002\u5e78\u904b\u7684\u662f\uff0c\u9019\u4e9b\u6a5f\u69cb\u901a\u5e38\u6703\u91cb\u51fa\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u901a\u904e\u5fae\u8abf\u6216\u9077\u79fb\u5b78\u7fd2\u7b49\u65b9\u5f0f\u4f86\u6eff\u8db3\u6211\u5011\u7684\u9700\u6c42\u3002","title":"\u6ce8\u610f\u529b\u6a5f\u5236\u65bc Transformer \u6a21\u578b"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#attention-based-vision-transformer","text":"\u4eca\u5929\u7684\u7bc4\u4f8b\u5c07\u4f7f\u7528 Vision Transformer \u9810\u8a13\u7df4\u6a21\u578b\u4f86\u793a\u7bc4\u5982\u4f55\u900f\u904e Attention Rollout \u65b9\u6cd5\u89e3\u91cb\u6a21\u578b\u63a8\u8ad6\u7d50\u679c\u3002Transformer \u5df2\u7d93\u6210\u70ba\u71b1\u9580\u7684\u795e\u7d93\u7db2\u8def\u67b6\u69cb\uff0c\u4e26\u5ee3\u6cdb\u61c9\u7528\u65bc\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u4efb\u52d9\uff0c\u50cf\u662f\u73fe\u4eca\u6700\u706b\u7d05\u7684 ChatGPT \u80cc\u5f8c\u7684\u8a9e\u8a00\u6a21\u578b\u4e5f\u662f\u57fa\u65bc\u6ce8\u610f\u529b\u6a5f\u5236\u7684 Transformer \u67b6\u69cb\u70ba\u57fa\u5e95\u3002\u5b83\u7684\u6210\u529f\u6e90\u65bc 2017 \u5e74 Google \u63d0\u51fa\u7684 \"Attention Is All You Need\"\u3002\u9019\u4e00\u91cd\u5927\u7a81\u7834\u4fc3\u4f7f Google \u5718\u968a\u5c07 Transformer \u67b6\u69cb\u4e2d\u7684 Encoder \u62bd\u96e2\u51fa\u4f86\uff0c\u5275\u9020\u4e86 Vision Transformer\uff08ViT\uff09\uff0c\u7528\u65bc\u5f71\u50cf\u5206\u985e\u6280\u8853\u3002\u6b64\u5916\uff0cViT \u653e\u68c4\u4e86 CNN \u5c64\uff0c\u8f49\u800c\u4f7f\u7528\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u9032\u884c\u8a08\u7b97\uff0c\u5728\u5206\u985e\u554f\u984c\u4e0a\u53d6\u5f97\u4e86\u512a\u7570\u7684\u6210\u7e3e\u3002 Vision Transformer \u8ad6\u6587\uff1a An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale \u5ef6\u4f38\u95b1\u8b80\uff1a [\u8ad6\u6587\u5c0e\u8b80] Vision Transformer (ViT) \u9644\u7a0b\u5f0f\u78bc\u5be6\u4f5c \u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u5be6\u4f5c\u4e2d\u6211\u5011\u4e0d\u6703\u624b\u523b\u6574\u500b ViT \u7db2\u8def\u67b6\u69cb\uff0c\u4e5f\u4e0d\u6703\u5f9e\u982d\u81ea\u5df1\u8a13\u7df4\u6a21\u578b\u3002\u800c\u662f\u4f7f\u7528\u975e\u5b98\u65b9\u5df2\u8a13\u7df4\u597d\u7684\u9810\u8a13\u7df4\u6a21\u578b\u9032\u884c\u5c55\u793a\u3002\u9996\u5148\u8981\u5b89\u88dd vit-keras \u5957\u4ef6\uff0c\u9019\u662f\u4e00\u500b\u975e\u5b98\u65b9\u7684 Keras \u7248\u672c\u5be6\u4f5c\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u62ff\u5b83\u4f86\u505a\u9077\u79fb\u5b78\u7fd2\u3002\u9664\u6b64\u4e4b\u5916\u9084\u9700\u8981\u5b89\u88dd tensorflow_addons \u5b83\u662f TensorFlow \u7684\u4e00\u500b\u9644\u52a0\u5eab\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u984d\u5916\u7684\u81ea\u5b9a\u7fa9\u64cd\u4f5c\u548c\u5c64\uff0c\u4ee5\u64f4\u5c55 TensorFlow \u7684\u529f\u80fd\uff0c\u56e0\u70ba\u5be6\u4f5c ViT \u6703\u9700\u8981\u7528\u5230\u50cf\u662f gelu \u7684\u6fc0\u767c\u51fd\u6578\u3002 pip install vit-keras pip install tensorflow_addons \u5fc5\u9808\u78ba\u4fdd\u96fb\u8166\u5df2\u5148\u5b89\u88dd TensorFlow2.0 \u4ee5\u4e0a \u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5275\u5efa\u4e00\u500b Vision Transformer \u6a21\u578b\uff0c\u4e26\u7372\u53d6 ImageNet \u5206\u985e\u7684\u985e\u5225\u5217\u8868\u3002\u8a72\u6a21\u578b\u53ef\u4ee5\u7528\u65bc\u5716\u50cf\u5206\u985e\u7b49\u4efb\u52d9\u3002\u5176\u4e2d\u6211\u5011\u662f\u63a1\u7528 vit_b16 \u7684\u7db2\u8def\u67b6\u69cb\uff0cb16 \u4e2d\u7684 16 \u8868\u793a\u8457\u6bcf\u500b\u5716\u50cf\u7684\u8f38\u5165\u90fd\u88ab\u5206\u5272\u6210\u4e86\u56fa\u5b9a\u5927\u5c0f\u7684\u5716\u50cf\u584a\uff08\u6216\u7a31\u70ba \"patches\"\uff09\uff0c\u9019\u4e9b\u5716\u50cf\u584a\u7684\u5927\u5c0f\u70ba 16x16 \u50cf\u7d20\u3002\u9019\u4e9b\u5716\u50cf\u584a\u88ab\u7528\u4f5c\u6a21\u578b\u7684\u8f38\u5165\uff0c\u4e26\u901a\u904e\u81ea\u6ce8\u610f\u529b\u6a5f\u5236\u4f86\u6355\u6349\u5716\u50cf\u4e2d\u7684\u5168\u5c40\u8a0a\u606f\u3002 import numpy as np import matplotlib.pyplot as plt from vit_keras import vit , utils , visualize # \u4f7f\u7528vit\u51fd\u6578\u5275\u5efaVision Transformer\u6a21\u578b image_size = 224 # \u8a2d\u5b9a\u8f38\u5165\u5716\u50cf\u7684\u5927\u5c0f\u70ba 224x224 \u50cf\u7d20 model = vit . vit_b16 ( image_size = image_size , activation = 'sigmoid' , # \u8f38\u51fa\u4f7f\u7528 sigmoid \u6fc0\u767c\u51fd\u6578 pretrained = True , # \u4f7f\u7528\u9810\u8a13\u7df4\u6b0a\u91cd include_top = True , # \u5305\u62ec\u9802\u90e8\uff08\u5206\u985e\u5c64\uff09 pretrained_top = True # \u4f7f\u7528\u9810\u8a13\u7df4\u7684\u9802\u90e8\u6b0a\u91cd ) # \u53d6\u5f97 ImageNet \u5206\u985e\u7684\u985e\u5225 classes = utils . get_imagenet_classes () \u5728ViT\u7684\u7814\u7a76\u548c\u5be6\u73fe\u904e\u7a0b\u4e2d\uff0c\u51fa\u73fe\u4e86\u591a\u7a2e\u4e0d\u540c\u7684\u67b6\u69cb\u8b8a\u5f62\uff0c\u4ee5\u9069\u61c9\u4e0d\u540c\u7684\u4efb\u52d9\u548c\u9700\u6c42\u3002\u4ee5\u4e0b\u662f vit-keras \u5957\u4ef6\u4e2d\u6240\u63d0\u4f9b\u7684 ViT \u67b6\u69cb\u8b8a\u5f62\uff1a ViT Base Models\uff1a ViT B16 \uff08Vision Transformer Base with 16x16 patches\uff09 ViT B32 \uff08Vision Transformer Base with 32x32 patches\uff09 ViT Large Models\uff1a ViT L16 \uff08Vision Transformer Large with 16x16 patches\uff09 ViT L32 \uff08Vision Transformer Large with 32x32 patches\uff09 vit-keras \u5957\u4ef6\u76ee\u524d\u5c1a\u672a\u63d0\u4f9b ViT-Huge \u6a21\u578b\u7684\u5be6\u73fe\uff0c\u56e0\u70ba\u9019\u9700\u8981\u4f7f\u7528 JFT: 300M images of 18K classes \u9019\u500b\u8cc7\u6599\u96c6\u9032\u884c\u8a13\u7df4\u3002\u6b64\u5916\u9019\u500b\u8cc7\u6599\u96c6\u662f\u7531 Google \u5167\u90e8\u6536\u96c6\u7684\uff0c\u4e26\u4e14\u5c1a\u672a\u91cb\u51fa\u70ba\u958b\u6e90\u8cc7\u6599\u96c6\u3002 \u63a5\u4e0b\u4f86\u5be6\u969b\u8f09\u5165\u4e00\u5f35\u5716\u50cf\uff0c\u4e26\u4f7f\u7528\u525b\u525b\u6240\u5efa\u7acb\u7684 ViT \u6a21\u578b\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u8f38\u51fa\u6a21\u578b\u5c0d\u5716\u50cf\u7684\u9810\u6e2c\u7d50\u679c\u3002 url = 'https://upload.wikimedia.org/wikipedia/commons/b/bc/Free%21_ %283987584939% 29.jpg' image = utils . read ( url , image_size ) # \u8f09\u5165\u5716\u7247 x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 x = vit . preprocess_inputs ( x ) # \u9810\u8655\u7406\u5716\u50cf # \u9032\u884c\u5716\u50cf\u5206\u985e\u9810\u6e2c pred_proba = model . predict ( x ) # \u8fd4\u56de\u5206\u985e\u6a5f\u7387 # \u89e3\u6790\u9810\u6e2c\u7d50\u679c pred_class = pred_proba [ 0 ] . argmax () # \u53d6\u5f97\u9810\u6e2c\u6a19\u7c64\u7d22\u5f15 predicted_class_name = classes [ pred_class ] # \u53d6\u5f97\u9810\u6e2c\u6a19\u7c64\u540d\u7a31 print ( 'Prediction:' , predicted_class_name ) \u8f38\u51fa\u7d50\u679c\uff1a Prediction: Eskimo dog, husky \u6700\u5f8c\u4f7f\u7528\u8ad6\u6587\u4e2d\u6240\u63d0\u5230\u7684 Attention Rollout \u65b9\u6cd5\u4f86\u8a08\u7b97 ViT \u6a21\u578b\u4e2d\u5f9e output token \u5230\u8f38\u5165\u5716\u50cf\u7684\u6ce8\u610f\u529b\u6620\u5c04\u3002\u7c21\u55ae\u4f86\u8aaa Attention Rollout \u5c31\u662f\u8a08\u7b97\u5f9e\u5e95\u5c64\u5230\u9ad8\u5c64\u7684 Attention \u77e9\u9663\u7684\u4e58\u7a4d\u3002\u5177\u9ad4\u800c\u8a00\uff0cAttention Rollout \u7684\u6b65\u9a5f\u5305\u62ec\uff1a \u8a08\u7b97\u5e73\u5747\u6ce8\u610f\u529b\u6b0a\u91cd\uff1a \u9996\u5148\u8a08\u7b97\u6a21\u578b\u4e2d\u6240\u6709\u6ce8\u610f\u529b\u982d\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\u7684\u5e73\u5747\u503c\uff0c\u5f97\u5230\u4e00\u500b\u4ee3\u8868\u5e73\u5747\u6ce8\u610f\u529b\u7684\u77e9\u9663\u3002 \u905e\u8ff4\u76f8\u4e58\uff1a \u63a5\u4e0b\u4f86\uff0c\u5c07\u9019\u500b\u5e73\u5747\u6ce8\u610f\u529b\u77e9\u9663\u8207\u6a21\u578b\u7684\u4e0d\u540c\u5c64\u6b21\u7684\u6ce8\u610f\u529b\u6b0a\u91cd\u77e9\u9663\u9032\u884c\u905e\u8ff4\u6027\u76f8\u4e58\u3002\u9019\u610f\u5473\u8457\u5c07\u4e0d\u540c\u5c64\u6b21\u7684\u6ce8\u610f\u529b\u9032\u884c\u6df7\u5408\uff0c\u4ee5\u6355\u6349\u6a21\u578b\u5c0d\u8f38\u5165\u7684\u7d9c\u5408\u6ce8\u610f\u529b\u5206\u4f48\u3002 \u5f97\u5230\u6700\u7d42\u6ce8\u610f\u529b\u5206\u4f48\uff1a \u6700\u5f8c\u9019\u500b\u905e\u8ff4\u76f8\u4e58\u64cd\u4f5c\u7522\u751f\u4e86\u6700\u7d42\u7684\u6ce8\u610f\u529b\u5206\u4f48\uff0c\u63cf\u8ff0\u4e86\u6a21\u578b\u5982\u4f55\u5728\u4e0d\u540c\u5c64\u6b21\u4e0a\u95dc\u6ce8\u8f38\u5165\u6578\u64da\u7684\u4e0d\u540c\u90e8\u5206\u3002 Attention Rollout \u8a73\u7d30\u5be6\u4f5c\u53ef\u4ee5\u53c3\u8003\u9019\u500b\u5957\u4ef6\u7684 \u539f\u59cb\u7a0b\u5f0f \u3002 # \u8a08\u7b97 Attention Rollout attention_map = visualize . attention_map ( model = model , image = image ) # \u7e6a\u88fd\u7d50\u679c fig , ( ax1 , ax2 ) = plt . subplots ( ncols = 2 ) ax1 . axis ( 'off' ) ax2 . axis ( 'off' ) ax1 . set_title ( 'Original' ) ax2 . set_title ( 'Attention Map' ) _ = ax1 . imshow ( image ) _ = ax2 . imshow ( attention_map )","title":"Attention-Based \u5be6\u4f5c (Vision Transformer)"},{"location":"23.Attention-Based:\u4f7f\u7528\u6ce8\u610f\u529b\u6a5f\u5236\u89e3\u91cbCNN\u6a21\u578b/#reference","text":"Explained: Attention Visualization with Attention Rollout Intro to Transformers and Transformer Explainability \u5176\u4ed6\u6709\u7528\u8cc7\u8a0a - Vision Transformer(ViT)\u91cd\u9ede\u7b46\u8a18 - Transformer\u53ef\u89e3\u91cb\u6027\u8207\u8996\u89ba\u5316 Vision Transformers Need Registers - Meta 2023 Paper: https://arxiv.org/abs/2309.16588","title":"Reference"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/","text":"[Day 24] LSTM\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5f9e\u6642\u5e8f\u8cc7\u6599\u89e3\u6790\u4eba\u9ad4\u59ff\u614b\u9810\u6e2c \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u9019\u500b\u7cfb\u5217\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u4ecb\u7d39\u4e86\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u4e2d\u7684DNN\uff08\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff09\u548cCNN\uff08\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff09\uff0c\u4ee5\u53ca\u5b83\u5011\u5982\u4f55\u900f\u904e\u4e0d\u540c\u7684\u65b9\u6cd5\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002\u4eca\u5929\uff0c\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e\u5982\u4f55\u4f7f\u7528 Deep SHAP \u65b9\u6cd5\u4f86\u89e3\u91cb\u9577\u77ed\u671f\u8a18\u61b6\u7db2\u8def\uff08LSTM\uff09\u6a21\u578b\u3002LSTM \u662f\u4e00\u7a2e\u7279\u6b8a\u985e\u578b\u7684\u5faa\u74b0\u795e\u7d93\u7db2\u8def\uff08RNN\uff09\uff0c\u7528\u65bc\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4ee5\u53ca\u5177\u6709\u9577\u671f\u4f9d\u8cf4\u6027\u7684\u5e8f\u5217\u4efb\u52d9\u3002LSTM \u7684\u4e3b\u8981\u7279\u9ede\u662f\u5b83\u80fd\u5920\u6709\u6548\u5730\u6355\u6349\u548c\u8a18\u61b6\u904e\u53bb\u7684\u8a0a\u606f\uff0c\u4ee5\u4fbf\u5728\u8655\u7406\u672a\u4f86\u7684\u6642\u9593\u6b65\u6642\u9032\u884c\u9810\u6e2c\u3002 LSTM \u4e4b\u6240\u4ee5\u5f37\u5927\uff0c\u662f\u56e0\u70ba\u5b83\u5177\u6709\u4ee5\u4e0b\u95dc\u9375\u7d50\u69cb\u548c\u6a5f\u5236\uff1a - Cell State\uff1a LSTM\u5177\u6709\u8a18\u61b6\u55ae\u5143\uff0c\u53ef\u4ee5\u5b58\u5132\u548c\u6aa2\u7d22\u904e\u53bb\u7684\u8a0a\u606f\uff0c\u9019\u4f7f\u5f97\u5b83\u80fd\u5920\u8655\u7406\u9577\u5e8f\u5217\u8cc7\u6599\uff0c\u4e26\u4fdd\u6301\u5c0d\u5e8f\u5217\u4e2d\u5148\u524d\u8a0a\u606f\u7684\u9069\u7576\u8a18\u61b6\u3002 - Hidden State\uff1aLSTM\u9084\u5177\u6709\u4e00\u500b\u96b1\u85cf\u72c0\u614b\uff0c\u5b83\u662f\u6839\u64da\u7576\u524d\u8f38\u5165\u548c\u5148\u524d\u7684\u96b1\u85cf\u72c0\u614b\u8a08\u7b97\u800c\u4f86\u3002\u96b1\u85cf\u72c0\u614b\u5305\u542b\u4e86\u7576\u524d\u6642\u9593\u6b65\u7684\u4fe1\u606f\uff0c\u4e26\u7528\u65bc\u751f\u6210\u9810\u6e2c\u3002 - \u4e09\u500b\u63a7\u5236\u9580(Gate)\uff1aLSTM\u5305\u542b\u4e09\u500b\u8a0a\u606f\u63a7\u5236\u55ae\u5143\u7684\u7d50\u69cb\uff0c\u5206\u5225\u662f\u907a\u5fd8\u9580\uff08Forget Gate\uff09\u3001\u8f38\u5165\u9580\uff08Input Gate\uff09\u548c\u8f38\u51fa\u9580\uff08Output Gate\uff09\uff0c\u901a\u5e38\u6703\u642d\u914dCell State\u548cHidden State\u63a7\u5236\u8f38\u51fa\u8a0a\u606f\u3002 Deep SHAP \u4ecb\u7d39\u53ef\u4ee5\u53c3\u8003\uff1a [Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb [\u5be6\u4f5c] Mobile Health Human Behavior Analysis \u5728\u4eca\u65e5\u7684\u7bc4\u4f8b\u4e2d\u6211\u5011\u5c07\u63a1\u7528 Mobile HEALTH \u516c\u958b\u8cc7\u6599\u96c6\uff0c\u4ee5\u5efa\u7acb LSTM \u6642\u9593\u5e8f\u5217\u6a21\u578b\uff0c\u4e26\u7528\u65bc\u9810\u6e2c\u4eba\u9ad4\u52d5\u4f5c\u8fa8\u8b58\u3002\u8a72\u8cc7\u6599\u96c6\u5305\u542b\u4e86\u5341\u540d\u4f86\u81ea\u4e0d\u540c\u65cf\u7fa4\u7684\u5fd7\u9858\u8005\uff0c\u5728\u53c3\u8207\u5404\u9805\u6d3b\u52d5\u6642\uff0c\u8a18\u9304\u4e86\u4ed6\u5011\u7684\u5916\u90e8\u611f\u6e2c\u5668\u6578\u503c\u548c\u751f\u7406\u8a0a\u865f\u3002\u63a5\u4e0b\u4f86\u7684\u5be6\u4f5c\u4e2d\uff0c\u6211\u5011\u50c5\u4f7f\u7528\u4e86\u5176\u4e2d\u4e00\u4f4d\u53d7\u8a66\u8005\u7684\u5de6\u8173\u8e1d\u4e09\u8ef8\u52a0\u901f\u5ea6\uff08x\u3001y\u3001z\uff09\u548c\u9640\u87ba\u5100\uff08x\u3001y\u3001z\uff09\u7684\u8cc7\u6599\uff0c\u7e3d\u5171\u6709\u516d\u9805\u7279\u5fb5\u3002\u9019\u4e9b\u8cc7\u6599\u4ee5\u6bcf\u79d250\u6b21\u7684\u53d6\u6a23\u7387\u9032\u884c\u8a18\u9304(50Hz)\uff0c\u6bcf\u7a2e\u4e0d\u540c\u7684\u52d5\u4f5c\u5206\u5225\u6301\u7e8c\u4e86\u4e00\u5206\u9418\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e94\u7a2e\u59ff\u614b\uff1a L1: \u7ad9\u7acb (1 min) L2: \u975c\u5750 (1 min) L3: \u5e73\u8eba (1 min) L4: \u8d70\u8def (1 min) L5: \u4e0a\u6a13 (1 min) \u5f9e\u4e0b\u5716\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u524d500\u500b\u8cc7\u6599\u9ede\uff08\u7d04\u70ba10\u79d2\u9593\u9694\uff09\u7684\u8a0a\u865f\u8b8a\u5316\u60c5\u6cc1\u3002\u5728\u9019\u6bb5\u6642\u9593\u5167\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\u7ad9\u7acb\u3001\u975c\u5750\u548c\u5e73\u8eba\u7b49\u72c0\u614b\u7684\u8a0a\u865f\u8b8a\u5316\u76f8\u5c0d\u8f03\u5e73\u7a69\uff0c\u4f46\u4ecd\u53ef\u4ee5\u901a\u904e\u65cb\u8f49\u89d2\u5ea6\u548c\u65b9\u4f4d\u7684\u8b8a\u5316\u4f86\u9032\u884c\u8fa8\u8b58\u3002\u6b64\u5916\u8d70\u8def\u548c\u4e0a\u6a13\u7b49\u52d5\u4f5c\u5247\u5c55\u73fe\u51fa\u660e\u986f\u7684\u8a0a\u865f\u9031\u671f\u6027\uff0c\u9019\u4e9b\u7279\u5fb5\u53ef\u4ee5\u88ab\u7528\u4f86\u9032\u884c\u52d5\u4f5c\u8fa8\u8b58\u3002 \u539f\u59cb\u8cc7\u6599\u55ae\u4f4d\uff1a\u52a0\u901f\u5ea6(m/s^2), \u9640\u87ba\u5100\u89d2\u901f\u5ea6(deg/s) \u8f09\u5165\u8cc7\u6599\u96c6 \u9996\u5148\u6211\u5011\u900f\u904e pandas \u5957\u4ef6\u8b80\u53d6\u4e00\u4f4d\u53d7\u8a66\u8005\u7684\u8a13\u7df4\u8cc7\u6599\u3002\u9019\u4e00\u4efd csv \u6a94\u6848\u4e2d\u5171\u6709 161280 \u7b46\u8cc7\u6599\uff0c\u5176\u4e2d\u5305\u542b\u6578\u5165\u8a0a\u865f\u4ee5\u53ca\u76f8\u5c0d\u61c9\u6a19\u7c64\u5171\u67097\u500b\u6b04\u4f4d\u3002 \u8f38\u5165\u7279\u5fb5 acc_l_ankle_x(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6x) acc_l_ankle_y(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6y) acc_l_ankle_z(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6z) \u8f38\u51fa\u6a19\u7c64 Label 0~12 (\u4eca\u65e5\u7bc4\u4f8b\u53ea\u62ffL1~L5) import pandas as pd df_data = pd . read_csv ( 'https://github.com/andy6804tw/crazyai-xai/raw/main/dataset/mHealth_subject1.csv' ) x_feature_names = [ 'acc_l_ankle_x' , 'acc_l_ankle_y' , 'acc_l_ankle_z' , 'gyro_l_ankle_x' , 'gyro_l_ankle_y' , 'gyro_l_ankle_z' ] y_feature_name = [ 'label' ] y_label_names = [ '\u7ad9\u7acb' , '\u975c\u5750' , '\u5e73\u8eba' , '\u8d70\u8def' , '\u4e0a\u6a13' ] df_data = df_data [ x_feature_names + y_feature_name ] \u9019\u4e00\u4efd\u8cc7\u6599\u96c6\u7e3d\u5171\u6709 L0~L12 \u517113\u7a2e\u6a19\u7c64\u5404\u81ea\u4ee3\u8868\u4e0d\u540c\u7684\u59ff\u614b\uff0c\u5176\u4e2d\u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u6211\u5011\u50c5\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63d0\u53d6 L1~L5 \u4e94\u7a2e\u985e\u5225\uff0c\u4f9d\u5e8f\u5206\u5225\u4ee3\u8868 \u7ad9\u7acb \u3001 \u975c\u5750 \u3001 \u5e73\u8eba \u3001 \u8d70\u8def \u3001 \u4e0a\u6a13 \u3002 L1 = df_data . loc [ df_data . label == 1 ] #L1: \u7ad9\u7acb (1 min) L2 = df_data . loc [ df_data . label == 2 ] #L2: \u975c\u5750 (1 min) L3 = df_data . loc [ df_data . label == 3 ] #L3: \u5e73\u8eba (1 min) L4 = df_data . loc [ df_data . label == 4 ] #L4: \u8d70\u8def (1 min) L5 = df_data . loc [ df_data . label == 5 ] #L5: \u4e0a\u6a13 (1 min) \u8cc7\u6599\u9810\u8655\u7406 \u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6839\u64da\u6307\u5b9a\u7684\u7a97\u53e3\u5927\u5c0f\uff08window_size\uff09\u548c\u9593\u9694\uff08shift\uff09\uff0c\u5f9e\u7d66\u5b9a\u7684\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4e2d\u63d0\u53d6\u89c0\u5bdf\u8cc7\u6599\uff08X\uff09\u548c\u76f8\u61c9\u7684\u9810\u6e2c\u8cc7\u6599\uff08y\uff09\u3002\u6bcf\u500b\u89c0\u5bdf\u8cc7\u6599\u662f\u4e00\u500b\u9023\u7e8c\u6642\u9593\u6bb5\u5167\u7684\u8cc7\u6599\uff0c\u800c\u9810\u6e2c\u8cc7\u6599\u5247\u662f\u8a72\u6642\u9593\u6bb5\u5f8c\u7684\u4e00\u500b\u6642\u9593\u9ede\u7684\u7279\u5b9a\u7279\u5fb5\u503c\u3002 # \u6293\u53d6window_size\u7684\u8cc7\u6599\u4f5c\u70ba\u89c0\u5bdf\u8cc7\u6599(x), \u9810\u6e2c\u4e0b\u4e00\u6642\u9593\u9ede\u6b65\u614b(y) def window_data ( data , window_size , shift ): X = [] y = [] i = 0 while ( i + window_size ) <= len ( data ) - 1 : # \u5c07\u9023\u7e8c\u7684window_size\u6642\u9593\u6bb5\u5167\u7684\u8cc7\u6599\uff08\u53bb\u9664\u6700\u5f8c\u4e00\u500b\u7279\u5fb5label\uff09\u4f5c\u70ba\u89c0\u5bdf\u8cc7\u6599x X . append ( data [ i : i + window_size , : - 1 ]) # \u5c07\u63a5\u4e0b\u4f86\u7684\u4e00\u500b\u6642\u9593\u9ede\u7684\u7b2c6\u500b\u7279\u5fb5\uff08\u6a19\u7c64\uff09\u4f5c\u70ba\u9810\u6e2c\u8cc7\u6599y y . append ( data [ i + window_size , 6 ]) i += shift # \u79fb\u52d5\u7d22\u5f15\uff0c\u4ee5\u7e7c\u7e8c\u6293\u53d6\u4e0b\u4e00\u7b46\u8cc7\u6599 X = np . array ( X ) y = np . array ( y ) . reshape ( - 1 ) assert len ( X ) == len ( y ) # \u78ba\u4fdd\u89c0\u5bdf\u8cc7\u6599\u548c\u9810\u6e2c\u8cc7\u6599\u7684\u6578\u91cf\u4e00\u81f4 return X , y # \u8fd4\u56de\u8655\u7406\u5f8c\u7684\u6642\u5e8f\u8cc7\u6599\u548c\u9810\u6e2c\u8cc7\u6599 \u7c21\u55ae\u4f86\u8aaa\u4ee5\u7ad9\u7acb\u8cc7\u6599\u63a1\u6a23\u70ba\u4f8b\uff0c\u7d041\u5206\u94183072\u7b46\u7684\u8cc7\u6599\uff0c\u6bcf\u7b46\u6642\u5e8f\u8cc7\u6599\u53d6\u8996\u7a97\u5927\u5c0f100\u9ede\u8cc7\u6599\uff0c\u63a5\u8457\u79fb\u52d520\u9ede\u518d\u53e6\u5916\u6536\u96c6\u3002\u56e0\u6b64\u6bcf\u7b46\u8a13\u7df4\u8cc7\u6599\u7684\u8f38\u5165\u7dad\u5ea6\u61c9\u8a72\u70ba (100,6)\uff0c100\u4ee3\u8868 window_size \u4e5f\u5c31\u662f\u8981\u770b\u5e7e\u7b46\u7684\u8cc7\u6599\u9ede\uff0c\u800c 6 \u4ee3\u8868\u4e0d\u540c\u611f\u6e2c\u5668\u6240\u622a\u53d6\u7684\u6578\u503c\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6(x,y,z)\u548c\u9640\u87ba\u5100(x,y,z)\u3002\u6211\u5011\u5206\u5225\u5c07 L1~L5 \u8cc7\u6599\u4f9d\u64da\u6642\u9593\u9ede\u9032\u884c\u63a1\u6a23\u7d44\u6210\u591a\u7b46\u6642\u5e8f\u8cc7\u6599\uff0c\u6700\u5f8c\u518d\u900f\u904e np.concatenate() \u5c07\u6240\u6709\u8cc7\u6599\u5408\u4f75\u6210 X \u548c y\u3002\u53e6\u5916\u9700\u6ce8\u610f\u7684\u662f\u5728\u8655\u7406 y \u7684\u6642\u5019 -1 \u64cd\u4f5c\u662f\u70ba\u4e86\u5c07\u6a19\u7c64\u5f9e 1\u30012\u30013\u30014\u30015 \u8f49\u63db\u70ba 0\u30011\u30012\u30013\u30014\uff0c\u4f7f\u6a19\u7c64\u5f9e0\u958b\u59cb\u7de8\u865f\uff0c\u56e0\u70ba\u5728\u8a13\u7df4\u795e\u7d93\u7db2\u8def\u7684\u6642\u5019\u5206\u985e\u7684\u6a19\u7c64\u90fd\u662f\u5f9e0\u958b\u59cb\u3002 # \u8490\u96c6\u516d\u500b\u8a0a\u865f100\u500b\u6642\u9593\u9ede(window_size)\uff0c\u6bcf\u7b46\u8cc7\u6599\u63a1\u6a23\u79fb\u52d520\u500b\u8cc7\u6599\u9ede X_L1 , y_L1 = window_data ( L1 . values , window_size = 100 , shift = 20 ) X_L2 , y_L2 = window_data ( L2 . values , window_size = 100 , shift = 20 ) X_L3 , y_L3 = window_data ( L3 . values , window_size = 100 , shift = 20 ) X_L4 , y_L4 = window_data ( L4 . values , window_size = 100 , shift = 20 ) X_L5 , y_L5 = window_data ( L5 . values , window_size = 100 , shift = 20 ) X = np . concatenate ([ X_L1 , X_L2 , X_L3 , X_L4 , X_L5 ]) y = np . concatenate ([ y_L1 , y_L2 , y_L3 , y_L4 , y_L5 ]) - 1 # \u6a19\u7c64\u8981\u5f9e0\u958b\u59cb\u6545\u5168\u90e8\u6e1b\u4e00 print ( \"X shape: \" , X . shape ) print ( \"y shape: \" , y . shape ) \u8f38\u51fa\u7d50\u679c\u53ef\u4ee5\u770b\u5230\u7e3d\u5171\u6709 745 \u7b46\u8cc7\u6599\uff0c window_size \u70ba 100\uff0c\u6bcf\u4e00\u7b46\u6642\u5e8f\u8cc7\u6599\u5171\u6709 6 \u9805\u7279\u5fb5\u3002 X shape: (745, 100, 6) y shape: (745,) \u8cc7\u6599\u6e96\u5099\u5c31\u7dd2\u5f8c\u6700\u5f8c\u4e00\u500b\u6b65\u9a5f\u5c31\u662f\u5c07 X \u548c y \u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.1 , random_state = 42 , stratify = y ) print ( \"X_train shape = \" , X_train . shape ) print ( \"X_test shape = \" , X_test . shape ) print ( \"y_train shape = \" , y_train . shape ) print ( \"y_test shape = \" , y_test . shape ) \u8f38\u51fa\u7d50\u679c\uff1a X_train shape = (670, 100, 6) X_test shape = (75, 100, 6) y_train shape = (670,) y_test shape = (75,) LSTM \u6a21\u578b\u5efa\u7acb \u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u4f7f\u7528 Tensorflow2.0 Functional API \u642d\u5efa\u795e\u7d93\u7db2\u8def\u3002\u6b64\u6a21\u578b\u67b6\u69cb\u662f\u7528\u65bc\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4e26\u9032\u884c\u5206\u985e\u4efb\u52d9\u3002\u6a21\u578b\u7684\u8f38\u5165\u662f\u5177\u67096\u500b\u50b3\u611f\u5668\u7279\u5fb5\u7684\u6642\u9593\u5e8f\u5217\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u5305\u542b100\u500b\u6642\u9593\u9ede\u3002\u6a21\u578b\u5305\u62ec\u4e00\u500b LSTM \u96b1\u85cf\u5c64\uff0c\u7528\u65bc\u6355\u6349\u6642\u9593\u5e8f\u5217\u7684\u6642\u9593\u76f8\u95dc\u6027\uff0c\u5176\u4e2d return_sequences=True \u4e26\u5c07\u6bcf\u500b\u795e\u7d93\u5143\u7684\u96b1\u85cf\u72c0\u614b(hidden_state)\u56de\u50b3\uff0c\u4e26\u900f\u904e Flatten() \u5c07\u6240\u6709\u6642\u9593\u7684\u96b1\u85cf\u72c0\u614b\u6524\u5e73\u6210\u4e00\u7dad\u5411\u91cf\u50b3\u7d66\u8f38\u51fa\u5c64\u3002\u6700\u5f8c\u901a\u904e\u4e00\u500b\u5168\u9023\u63a5\u5c64\u9032\u884c\u5206\u985e\uff0c\u5c07\u8f38\u5165\u8cc7\u6599\u5206\u70ba5\u500b\u4e0d\u540c\u7684\u985e\u5225\u3002 from tensorflow.keras.models import Model from tensorflow.keras import models from tensorflow.keras import layers from tensorflow.compat.v1.keras.backend import get_session tf . compat . v1 . disable_v2_behavior () num_sensor = 6 window_size = 100 def build_model (): model_input = layers . Input ( shape = ( window_size , num_sensor )) # \u7b2c\u4e00\u5c64\u96b1\u85cf\u5c64 x = layers . LSTM ( 2 , activation = 'relu' , return_sequences = True , return_state = False )( model_input ) x = layers . Flatten ()( x ) # \u8f38\u51fa\u5c64 model_output = layers . Dense ( 5 , activation = 'softmax' )( x ) return Model ( model_input , model_output ) \u7531\u65bc SHAP \u76ee\u524d\u9084\u5c1a\u672a\u652f\u63f4 TF2.4 \u7248\u672c\u4ee5\u4e0a\uff0c\u56e0\u6b64\u5fc5\u9808\u900f\u904e tf.compat.v1.disable_v2_behavior() \u95dc\u9589\u4e00\u4e9b 2.0 \u7248\u672c\u7684\u9032\u968e API\u3002 \u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528\u5148\u524d\u5b9a\u7fa9\u7684 build_model() \u51fd\u6578\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u795e\u7d93\u7db2\u7d61\u6a21\u578b\uff0c\u4e26\u5c07\u9019\u500b\u6a21\u578b\u5b58\u5132\u5728 model \u8b8a\u6578\u4e2d\u3002\u6700\u5f8c\u4f7f\u7528 model.summary() \u5370\u51fa\u6a21\u578b\u7684\u6458\u8981\u8a0a\u606f\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7d50\u69cb\u3001\u6bcf\u4e00\u5c64\u7684\u53c3\u6578\u6578\u91cf\u7b49\u3002 tf . keras . backend . clear_session () model = build_model () model . summary () \u6a21\u578b\u6e96\u5099\u5c31\u7dd2\u5f8c\u5373\u53ef\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u3002\u7531\u65bc\u6211\u5011\u6c92\u6709\u91dd\u5c0d\u8f38\u51fa\u6a19\u7c64\u9032\u884c one-hot encoding \u56e0\u6b64\u53ef\u4ee5\u5728 loss \u6307\u5b9a sparse_categorical_crossentropy \uff0c\u9019\u6a23\u5728\u6a21\u578b\u8a13\u7df4\u904e\u7a0b\u4e2d\u81ea\u52d5\u5730\u6703\u9032\u884c\u984d\u5916\u8655\u7406\u4ee5\u5229\u65bc cross entropy \u7684\u8a08\u7b97\u3002\u7531\u65bc\u8a13\u7df4\u8cc7\u6599\u6c92\u6709\u5f88\u591a\uff0c\u56e0\u6b64\u6279\u6b21\u5927\u5c0f\u8a2d\u70ba 4 \u8868\u793a\u6bcf\u6b21\u8a13\u7df4\u904e\u7a0b\u4e2d\uff0c\u6a21\u578b\u6703\u540c\u6642\u8655\u74064\u7b46\u8a13\u7df4\u8cc7\u6599\u3002\u8a13\u7df4\u8fed\u4ee3\u6b21\u6578\u70ba 10 \u6b21\u3002\u6700\u5f8c\u4f7f\u7528\u8a13\u7df4\u6578\u64da X_train \u548c y_train \u4f86\u8a13\u7df4\u6a21\u578b\u3002 # \u7de8\u8b6f\u6a21\u578b model . compile ( loss = 'sparse_categorical_crossentropy' , optimizer = 'adam' , metrics = [ 'acc' ]) # \u8a13\u7df4\u6a21\u578b history = model . fit ( X_train , y_train , validation_split = 0.1 , batch_size = 4 , epochs = 10 ) Deep SHAP \u89e3\u91cb LSTM \u6a21\u578b \u9019\u88e1\u63a1\u7528 SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u9032\u884c\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u89e3\u91cb\uff0c\u5b83\u7d50\u5408\u4e86 DeepLIFT \u548c Shapely values \u7684\u6982\u5ff5\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u9996\u5148\u5efa\u7acb\u4e00\u500b DeepExplainer \u89e3\u91cb\u5668\uff0c\u4ed6\u9664\u4e86 DNN \u6a21\u578b\u53ef\u4ee5\u89e3\u91cb\u4e4b\u5916\uff0c\u5176\u4ed6\u985e\u578b\u7684\u795e\u7d93\u7db2\u8def\u50cf\u662f LSTM\u3001CNN\u30011DCNN \u90fd\u53ef\u4ee5\u900f\u904e\u5b83\u4f86\u5c0d\u6a21\u578b\u9032\u884c\u7279\u5fb5\u6b78\u56e0\u7684\u91cd\u8981\u6027\u89e3\u91cb\u3002\u53e6\u5916\u5728\u4f30\u8a08 Shapely values \u6642\uff0c\u53ef\u4ee5\u8f38\u5165\u8981\u89e3\u91cb\u7684\u8cc7\u6599\u3002\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5c07\u4f7f\u752875\u7b46\u6e2c\u8a66\u96c6\u8cc7\u6599\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002 import shap shap . initjs () # \u4f7f\u7528 Deep SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . DeepExplainer ( model = model , data = X_train ) # \u4f30\u8a08 Shapely values shap_values = explainer . shap_values ( X_test ) \u7531\u65bc\u6211\u5011\u9700\u8981\u8655\u7406\u5927\u91cf\u7684\u6e2c\u8a66\u96c6\u8cc7\u6599\uff0c\u6240\u4ee5\u8f38\u5165\u8cc7\u6599\u7684\u7dad\u5ea6\u70ba(75, 100, 6)\u3002\u9019\u88e1\u7684\u6bcf\u500b\u6578\u503c\u4ee3\u8868\u7684\u542b\u7fa9\u5206\u5225\u662f(\u8cc7\u6599\u7b46\u6578, \u6642\u9593\u7a97\u53e3\u5927\u5c0f, \u7279\u5fb5\u6578)\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u5728\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u8a08\u7b97 Shapely values \u6642\uff0c\u8f38\u51fa\u7684\u7dad\u5ea6\u5c07\u662f(5, 75, 100, 6)\u3002\u9019\u662f\u56e0\u70ba\u9019\u500b\u6a21\u578b\u662f\u4e00\u500b\u8f38\u51fa\u4e94\u985e\u5225\u6a5f\u7387\u7684\u5206\u985e\u4efb\u52d9\uff0c\u6240\u4ee5\u5728\u8a08\u7b97 Shapely values \u6642\uff0c\u6703\u91dd\u5c0d\u6bcf\u4e00\u7b46\u8cc7\u6599\u5206\u5225\u8a08\u7b97\u4e94\u500b\u985e\u5225\u5c0d\u61c9\u7684 Shapely values\u3002 # 5\u500b\u985e\u5225, 75\u7b46\u6e2c\u8a66\u8cc7\u6599, 100\u500b\u6642\u9593\u9ede, 6\u500b\u7279\u5fb5 np . array ( shap_values ) . shape \u8f38\u51fa\u7d50\u679c\uff1a (5, 75, 100, 6) SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u91dd\u5c0d75\u7b46\u6e2c\u8a66\u8cc7\u6599\u9032\u884c\u6bcf\u500b\u985e\u5225\u7684\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u6392\u5e8f\u3002\u63a5\u8457\u900f\u904e\u8b8a\u6578 label \u7684\u8a2d\u5b9a\u53ef\u4ee5\u89c0\u5bdf\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c\u3002\u7531\u65bc Shapely values \u6703\u91dd\u5c0d\u7a97\u53e3\u7684\u5927\u5c0f\u9032\u884c\u6bcf\u500b\u6642\u9593\u9ede\u7684\u7279\u5fb5\u6b78\u56e0\u8a08\u7b97\u3002\u56e0\u6b64\u6bcf\u7b46\u8cc7\u6599\u5728\u67d0\u500b\u985e\u5225\u7684 Shapely values \u7dad\u5ea6\u662f\u4e8c\u7dad\u7684(100, 6)\uff0c\u6240\u4ee5\u5728\u9032\u884c\u5168\u5c40\u6a21\u578b\u89e3\u91cb\u524d\u8981\u624b\u52d5\u7684\u5c07\u6bcf\u7b46\u6e2c\u8a66\u8cc7\u6599\u7684\u6642\u9593\u9ede\u6839\u64da\u6bcf\u500b\u7279\u5fb5\u7dad\u5ea6\u9032\u884c\u76f8\u52a0\u5f97\u5230\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002\u6700\u5f8c\u8a08\u7b97\u51fa\u4f86\u516d\u500b\u6578\u503c\u518d\u901a\u904e\u4e00\u500b\u6a19\u6e96\u5316\uff0c\u5f97\u5230\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c\u3002 def normalize_array ( arr ): # \u8a08\u7b97\u9663\u5217\u4e2d\u6240\u6709\u5143\u7d20\u7684\u7e3d\u548c total = sum ( arr ) # \u6b63\u898f\u5316\u6bcf\u500b\u5143\u7d20 normalized_arr = [ x / total for x in arr ] return normalized_arr # \u7372\u5f97\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c # 0:\u7ad9\u7acb\u30011:\u975c\u5750\u30012:\u5e73\u8eba\u30013:\u8d70\u8def\u30014:\u4e0a\u6a13 label = 0 shap_value = np . array ( shap_values ) shap_value = np . absolute ( shap_value [ label ]) shap_value = np . sum ( shap_value , axis = 1 ) SHAP_list = [ np . sum ( shap_value [:, 0 ]), np . sum ( shap_value [:, 1 ]), np . sum ( shap_value [:, 2 ]), np . sum ( shap_value [:, 3 ]), np . sum ( shap_value [:, 4 ]), np . sum ( shap_value [:, 5 ])] plt . barh ( x_feature_names , normalize_array ( SHAP_list ), label = y_label_names [ label ], color = '#028bfb' ) plt . legend () plt . show () \u6211\u5011\u53ef\u4ee5\u53c3\u7167\u6587\u7ae0\u4e00\u958b\u59cb\u89c0\u5bdf\u539f\u59cb\u8a0a\u865f\u5716\uff0c\u4e26\u767c\u73fe\u5404\u7a2e\u6b65\u614b\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u900f\u904e\u52a0\u901f\u5ea6\u898f\u8a0a\u865f\u9032\u884c\u5224\u65b7\u3002\u56e0\u6b64\u5728\u6a21\u578b\u7684\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u4e3b\u8981\u4f9d\u8cf4\u65bc\u52a0\u901f\u5ea6\u8cc7\u8a0a\uff0c\u5177\u9ad4\u4f86\u8aaa\u662f acc_x\u3001acc_y \u548c acc_z \u9019\u4e09\u9805\u8cc7\u8a0a\u3002\u679c\u7136\u5728 SHAP \u6a21\u578b\u89e3\u91cb\u4e2d\uff0c\u5224\u65b7\u5404\u7a2e\u985e\u5225\u7684\u91cd\u8981\u6027\u90fd\u662f\u4ee5\u90a3\u4e09\u9805\u8cc7\u8a0a\u70ba\u4e3b\u8981\u4f9d\u64da\u3002\u53e6\u5916\u9700\u6ce8\u610f\u7684\u662f\uff0c\u5728\u672c\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5c1a\u672a\u5c0d\u6240\u6709\u8cc7\u6599\u9032\u884c\u6a19\u6e96\u5316\uff0c\u56e0\u6b64\u5404\u4f4d\u8b80\u8005\u4e5f\u53ef\u4ee5\u5617\u8a66\u5c0d\u8cc7\u6599\u9032\u884c\u6a19\u6e96\u5316\uff0c\u770b\u770b\u662f\u5426\u6703\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u7522\u751f\u4e0d\u540c\u7684\u89e3\u91cb\u7d50\u679c\u3002 SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u4e2d\u9078\u53d6\u4e8675\u7b46\u8cc7\u6599\u4f5c\u70ba\u6e2c\u8a66\u96c6\u3002\u525b\u624d\u63d0\u5230\u7684\u5168\u5c40\u89e3\u91cb\u662f\u91dd\u5c0d\u901975\u7b46\u8cc7\u6599\u7684\u6574\u9ad4\u5e73\u5747\u9032\u884c\u7684\u89e3\u91cb\u3002\u73fe\u5728\u6211\u5011\u53ef\u4ee5\u9032\u4e00\u6b65\u91dd\u5c0d\u6bcf\u4e00\u7b46\u6578\u64da\u9032\u884c\u89e3\u91cb\u5206\u6790\u3002\u5728\u4e0b\u9762\u7a0b\u5f0f\u4e2d\u7684 index \u88ab\u8a2d\u5b9a\u70ba0\uff0c\u9019\u8868\u793a\u6211\u5011\u8981\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u3002\u7136\u5f8c\uff0c\u6211\u5011\u4f7f\u7528force_plot\u51fd\u5f0f\u5c0d\u9019\u7b46\u8cc7\u6599\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u5c07\u5206\u6790\u7d50\u679c\u4ee5\u8996\u89ba\u5316\u65b9\u5f0f\u5448\u73fe\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 pred_class = model . predict ( X_test [[ index ]]) . argmax () pred_proba = model . predict ( X_test [[ index ]])[ 0 ][ pred_class ] print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { pred_class } \u6a5f\u7387\u503c: { pred_proba } ' ) print ( f '\u771f\u5be6\u7b54\u6848: { int ( y_test [ index ]) } ' ) shap_value = shap_values [ pred_class ][ index ] shap_value = shap_value . sum ( axis = 0 ) shap . force_plot ( explainer . expected_value [ pred_class ], shap_value , feature_names = x_feature_names ) \u5f9e\u4e0b\u5716\u8996\u89ba\u5316\u89e3\u91cb\u7d50\u679c\u53ef\u4ee5\u770b\u5230\u6a21\u578b\u5728\u9019\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u6a19\u7c64 1\uff08\u975c\u5750\uff09\uff0c\u5176\u6a5f\u7387\u503c\u70ba 0.99\u3002\u7d05\u8272\u7684\u7279\u5fb5\u8868\u793a\u5c07\u6b63\u5411\u7684\u5f71\u97ff\u8f38\u51fa\u6a5f\u7387\uff0c\u6703\u4f7f\u503c\u5347\u9ad8\uff0c\u85cd\u8272\u7684\u5247\u76f8\u53cd\uff0c\u6703\u7528\u4f86\u964d\u4f4e\u8f38\u51fa\u6a5f\u7387\u3002 SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u7684\u89c0\u5bdf\u8a72\u7b46\u8cc7\u6599\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u67d0\u500b\u985e\u5225\u7684 Shapely values \u6578\u503c\uff0c\u4ee5\u53ca\u5224\u65b7\u8a72\u985e\u5225\u7684\u57fa\u6e96\u503c\u662f\u591a\u5c11\u3002\u4e0b\u5716\u4e2d\u6bcf\u500b\u7279\u5fb5\u76f8\u5c0d\u61c9\u7684 Shapely value \u7d2f\u52a0\uff0c\u4e26\u52a0\u4e0a\u57fa\u6e96\u503c E[f(x)]=0.206 \u6700\u7d42\u76f8\u52a0\u7684\u7d50\u679c\u5c31\u662f\u8a72\u7b46\u6e2c\u8a66\u8cc7\u6599\u9810\u6e2c\u67d0\u985e\u7684\u7684\u6a5f\u7387\u503c\u3002 pred_class = model . predict ( X_test [[ index ]]) . argmax () pred_proba = model . predict ( X_test [[ index ]])[ 0 ][ pred_class ] shap_value = np . array ( shap_values ) shap_value = np . expand_dims (( shap_value [ pred_class ])[ index ], axis = 0 ) shap_value = np . sum ( shap_value , axis = 1 )[ 0 ] shap . waterfall_plot ( shap . Explanation ( values = shap_value , base_values = explainer . expected_value [ pred_class ], feature_names = x_feature_names )) \u4e0b\u5716\u7bc4\u4f8b\u662f\u9810\u6e2c\u7b2c\u4e00\u7b46\u6e2c\u8a66\u8cc7\u6599\u5728\u6a19\u7c64\u70ba1\u7684\u6642\u5019\u7684 Shapely values \u6578\u503c\u3002 \u52a0\u7e3d\u7d50\u679c\uff1a 0.206-3.245-0.815+4.84+0.138-2.142+2.017=0.99 \u5c0f\u7d50 \u500b\u4eba\u76ee\u524d\u89c0\u5bdf SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u5728\u5b98\u65b9\u7684\u4f8b\u5b50\u4e2d\u662f LSTM \u81ea\u7136\u8a9e\u8a00\u7684\u4f8b\u5b50\u70ba\u4e3b\u3002\u7136\u800c\u5728 LSTM \u6a21\u578b\u65bc\u5206\u985e\u6216\u8ff4\u6b78\u7684\u6a21\u578b\uff0cSHAP \u5957\u4ef6\u7121\u6cd5\u76f4\u63a5\u9032\u884c\u89e3\u91cb\uff0c\u5fc5\u9808\u900f\u904e\u5c0f\u5c0f\u7684\u524d\u8655\u7406\u900f\u904e\u7279\u5fb5\u7684\u7dad\u5ea6\u5c07\u6bcf\u500b\u6642\u9593\u56e0\u5b50\u7684 Shapely values \u5148\u52a0\u7e3d\u518d\u9001\u9032\u53bb force_plot \u9032\u884c\u89e3\u91cb\u3002\u6b64\u5916\u76ee\u524d\u5957\u4ef6\u5c1a\u672a\u91dd\u5c0d\u6700\u65b0\u7248 TensorFlow \u9032\u884c\u512a\u5316\uff0c\u6240\u4ee5\u4f7f\u7528\u4e0a\u6703\u53d7\u5230\u4e00\u4e9b\u9650\u5236\u3002\u5982\u679c\u5c0d\u6642\u9593\u5e8f\u5217\u6a21\u578b\u89e3\u91cb\u6709\u9700\u6c42\u7684\u8b80\u8005\uff0c\u4e5f\u53ef\u4ee5\u53c3\u8003 TimeSHAP: Explaining Recurrent Models through Sequence Perturbations \u9019\u7bc7\u7814\u7a76\uff0c\u4ee5\u53ca\u76f8\u95dc\u7684\u5be6\u4f5c TimeSHAP \u9019\u4e9b\u8cc7\u6e90\u6216\u8a31\u6703\u66f4\u9069\u5408\u8655\u7406\u6642\u9593\u5e8f\u5217\u6a21\u578b\u7684\u89e3\u91cb\u9700\u6c42\u3002 Reference [forecast][LSTM+SHAP]Applied SHAP on the polynomial equation case with LSTM algorithm","title":"[Day 24] LSTM\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5f9e\u6642\u5e8f\u8cc7\u6599\u89e3\u6790\u4eba\u9ad4\u59ff\u614b\u9810\u6e2c"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#day-24-lstm","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u9019\u500b\u7cfb\u5217\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u4ecb\u7d39\u4e86\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u4e2d\u7684DNN\uff08\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff09\u548cCNN\uff08\u5377\u7a4d\u795e\u7d93\u7db2\u8def\uff09\uff0c\u4ee5\u53ca\u5b83\u5011\u5982\u4f55\u900f\u904e\u4e0d\u540c\u7684\u65b9\u6cd5\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002\u4eca\u5929\uff0c\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e\u5982\u4f55\u4f7f\u7528 Deep SHAP \u65b9\u6cd5\u4f86\u89e3\u91cb\u9577\u77ed\u671f\u8a18\u61b6\u7db2\u8def\uff08LSTM\uff09\u6a21\u578b\u3002LSTM \u662f\u4e00\u7a2e\u7279\u6b8a\u985e\u578b\u7684\u5faa\u74b0\u795e\u7d93\u7db2\u8def\uff08RNN\uff09\uff0c\u7528\u65bc\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4ee5\u53ca\u5177\u6709\u9577\u671f\u4f9d\u8cf4\u6027\u7684\u5e8f\u5217\u4efb\u52d9\u3002LSTM \u7684\u4e3b\u8981\u7279\u9ede\u662f\u5b83\u80fd\u5920\u6709\u6548\u5730\u6355\u6349\u548c\u8a18\u61b6\u904e\u53bb\u7684\u8a0a\u606f\uff0c\u4ee5\u4fbf\u5728\u8655\u7406\u672a\u4f86\u7684\u6642\u9593\u6b65\u6642\u9032\u884c\u9810\u6e2c\u3002 LSTM \u4e4b\u6240\u4ee5\u5f37\u5927\uff0c\u662f\u56e0\u70ba\u5b83\u5177\u6709\u4ee5\u4e0b\u95dc\u9375\u7d50\u69cb\u548c\u6a5f\u5236\uff1a - Cell State\uff1a LSTM\u5177\u6709\u8a18\u61b6\u55ae\u5143\uff0c\u53ef\u4ee5\u5b58\u5132\u548c\u6aa2\u7d22\u904e\u53bb\u7684\u8a0a\u606f\uff0c\u9019\u4f7f\u5f97\u5b83\u80fd\u5920\u8655\u7406\u9577\u5e8f\u5217\u8cc7\u6599\uff0c\u4e26\u4fdd\u6301\u5c0d\u5e8f\u5217\u4e2d\u5148\u524d\u8a0a\u606f\u7684\u9069\u7576\u8a18\u61b6\u3002 - Hidden State\uff1aLSTM\u9084\u5177\u6709\u4e00\u500b\u96b1\u85cf\u72c0\u614b\uff0c\u5b83\u662f\u6839\u64da\u7576\u524d\u8f38\u5165\u548c\u5148\u524d\u7684\u96b1\u85cf\u72c0\u614b\u8a08\u7b97\u800c\u4f86\u3002\u96b1\u85cf\u72c0\u614b\u5305\u542b\u4e86\u7576\u524d\u6642\u9593\u6b65\u7684\u4fe1\u606f\uff0c\u4e26\u7528\u65bc\u751f\u6210\u9810\u6e2c\u3002 - \u4e09\u500b\u63a7\u5236\u9580(Gate)\uff1aLSTM\u5305\u542b\u4e09\u500b\u8a0a\u606f\u63a7\u5236\u55ae\u5143\u7684\u7d50\u69cb\uff0c\u5206\u5225\u662f\u907a\u5fd8\u9580\uff08Forget Gate\uff09\u3001\u8f38\u5165\u9580\uff08Input Gate\uff09\u548c\u8f38\u51fa\u9580\uff08Output Gate\uff09\uff0c\u901a\u5e38\u6703\u642d\u914dCell State\u548cHidden State\u63a7\u5236\u8f38\u51fa\u8a0a\u606f\u3002 Deep SHAP \u4ecb\u7d39\u53ef\u4ee5\u53c3\u8003\uff1a [Day 17] \u89e3\u6790\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\uff1a\u4f7f\u7528Deep SHAP\u9032\u884c\u6a21\u578b\u89e3\u91cb","title":"[Day 24] LSTM\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5f9e\u6642\u5e8f\u8cc7\u6599\u89e3\u6790\u4eba\u9ad4\u59ff\u614b\u9810\u6e2c"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#mobile-health-human-behavior-analysis","text":"\u5728\u4eca\u65e5\u7684\u7bc4\u4f8b\u4e2d\u6211\u5011\u5c07\u63a1\u7528 Mobile HEALTH \u516c\u958b\u8cc7\u6599\u96c6\uff0c\u4ee5\u5efa\u7acb LSTM \u6642\u9593\u5e8f\u5217\u6a21\u578b\uff0c\u4e26\u7528\u65bc\u9810\u6e2c\u4eba\u9ad4\u52d5\u4f5c\u8fa8\u8b58\u3002\u8a72\u8cc7\u6599\u96c6\u5305\u542b\u4e86\u5341\u540d\u4f86\u81ea\u4e0d\u540c\u65cf\u7fa4\u7684\u5fd7\u9858\u8005\uff0c\u5728\u53c3\u8207\u5404\u9805\u6d3b\u52d5\u6642\uff0c\u8a18\u9304\u4e86\u4ed6\u5011\u7684\u5916\u90e8\u611f\u6e2c\u5668\u6578\u503c\u548c\u751f\u7406\u8a0a\u865f\u3002\u63a5\u4e0b\u4f86\u7684\u5be6\u4f5c\u4e2d\uff0c\u6211\u5011\u50c5\u4f7f\u7528\u4e86\u5176\u4e2d\u4e00\u4f4d\u53d7\u8a66\u8005\u7684\u5de6\u8173\u8e1d\u4e09\u8ef8\u52a0\u901f\u5ea6\uff08x\u3001y\u3001z\uff09\u548c\u9640\u87ba\u5100\uff08x\u3001y\u3001z\uff09\u7684\u8cc7\u6599\uff0c\u7e3d\u5171\u6709\u516d\u9805\u7279\u5fb5\u3002\u9019\u4e9b\u8cc7\u6599\u4ee5\u6bcf\u79d250\u6b21\u7684\u53d6\u6a23\u7387\u9032\u884c\u8a18\u9304(50Hz)\uff0c\u6bcf\u7a2e\u4e0d\u540c\u7684\u52d5\u4f5c\u5206\u5225\u6301\u7e8c\u4e86\u4e00\u5206\u9418\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e94\u7a2e\u59ff\u614b\uff1a L1: \u7ad9\u7acb (1 min) L2: \u975c\u5750 (1 min) L3: \u5e73\u8eba (1 min) L4: \u8d70\u8def (1 min) L5: \u4e0a\u6a13 (1 min) \u5f9e\u4e0b\u5716\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u524d500\u500b\u8cc7\u6599\u9ede\uff08\u7d04\u70ba10\u79d2\u9593\u9694\uff09\u7684\u8a0a\u865f\u8b8a\u5316\u60c5\u6cc1\u3002\u5728\u9019\u6bb5\u6642\u9593\u5167\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\u7ad9\u7acb\u3001\u975c\u5750\u548c\u5e73\u8eba\u7b49\u72c0\u614b\u7684\u8a0a\u865f\u8b8a\u5316\u76f8\u5c0d\u8f03\u5e73\u7a69\uff0c\u4f46\u4ecd\u53ef\u4ee5\u901a\u904e\u65cb\u8f49\u89d2\u5ea6\u548c\u65b9\u4f4d\u7684\u8b8a\u5316\u4f86\u9032\u884c\u8fa8\u8b58\u3002\u6b64\u5916\u8d70\u8def\u548c\u4e0a\u6a13\u7b49\u52d5\u4f5c\u5247\u5c55\u73fe\u51fa\u660e\u986f\u7684\u8a0a\u865f\u9031\u671f\u6027\uff0c\u9019\u4e9b\u7279\u5fb5\u53ef\u4ee5\u88ab\u7528\u4f86\u9032\u884c\u52d5\u4f5c\u8fa8\u8b58\u3002 \u539f\u59cb\u8cc7\u6599\u55ae\u4f4d\uff1a\u52a0\u901f\u5ea6(m/s^2), \u9640\u87ba\u5100\u89d2\u901f\u5ea6(deg/s)","title":"[\u5be6\u4f5c] Mobile Health Human Behavior Analysis"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#_1","text":"\u9996\u5148\u6211\u5011\u900f\u904e pandas \u5957\u4ef6\u8b80\u53d6\u4e00\u4f4d\u53d7\u8a66\u8005\u7684\u8a13\u7df4\u8cc7\u6599\u3002\u9019\u4e00\u4efd csv \u6a94\u6848\u4e2d\u5171\u6709 161280 \u7b46\u8cc7\u6599\uff0c\u5176\u4e2d\u5305\u542b\u6578\u5165\u8a0a\u865f\u4ee5\u53ca\u76f8\u5c0d\u61c9\u6a19\u7c64\u5171\u67097\u500b\u6b04\u4f4d\u3002 \u8f38\u5165\u7279\u5fb5 acc_l_ankle_x(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6x) acc_l_ankle_y(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6y) acc_l_ankle_z(\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6z) \u8f38\u51fa\u6a19\u7c64 Label 0~12 (\u4eca\u65e5\u7bc4\u4f8b\u53ea\u62ffL1~L5) import pandas as pd df_data = pd . read_csv ( 'https://github.com/andy6804tw/crazyai-xai/raw/main/dataset/mHealth_subject1.csv' ) x_feature_names = [ 'acc_l_ankle_x' , 'acc_l_ankle_y' , 'acc_l_ankle_z' , 'gyro_l_ankle_x' , 'gyro_l_ankle_y' , 'gyro_l_ankle_z' ] y_feature_name = [ 'label' ] y_label_names = [ '\u7ad9\u7acb' , '\u975c\u5750' , '\u5e73\u8eba' , '\u8d70\u8def' , '\u4e0a\u6a13' ] df_data = df_data [ x_feature_names + y_feature_name ] \u9019\u4e00\u4efd\u8cc7\u6599\u96c6\u7e3d\u5171\u6709 L0~L12 \u517113\u7a2e\u6a19\u7c64\u5404\u81ea\u4ee3\u8868\u4e0d\u540c\u7684\u59ff\u614b\uff0c\u5176\u4e2d\u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u6211\u5011\u50c5\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63d0\u53d6 L1~L5 \u4e94\u7a2e\u985e\u5225\uff0c\u4f9d\u5e8f\u5206\u5225\u4ee3\u8868 \u7ad9\u7acb \u3001 \u975c\u5750 \u3001 \u5e73\u8eba \u3001 \u8d70\u8def \u3001 \u4e0a\u6a13 \u3002 L1 = df_data . loc [ df_data . label == 1 ] #L1: \u7ad9\u7acb (1 min) L2 = df_data . loc [ df_data . label == 2 ] #L2: \u975c\u5750 (1 min) L3 = df_data . loc [ df_data . label == 3 ] #L3: \u5e73\u8eba (1 min) L4 = df_data . loc [ df_data . label == 4 ] #L4: \u8d70\u8def (1 min) L5 = df_data . loc [ df_data . label == 5 ] #L5: \u4e0a\u6a13 (1 min)","title":"\u8f09\u5165\u8cc7\u6599\u96c6"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#_2","text":"\u9019\u6bb5\u7a0b\u5f0f\u78bc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6839\u64da\u6307\u5b9a\u7684\u7a97\u53e3\u5927\u5c0f\uff08window_size\uff09\u548c\u9593\u9694\uff08shift\uff09\uff0c\u5f9e\u7d66\u5b9a\u7684\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4e2d\u63d0\u53d6\u89c0\u5bdf\u8cc7\u6599\uff08X\uff09\u548c\u76f8\u61c9\u7684\u9810\u6e2c\u8cc7\u6599\uff08y\uff09\u3002\u6bcf\u500b\u89c0\u5bdf\u8cc7\u6599\u662f\u4e00\u500b\u9023\u7e8c\u6642\u9593\u6bb5\u5167\u7684\u8cc7\u6599\uff0c\u800c\u9810\u6e2c\u8cc7\u6599\u5247\u662f\u8a72\u6642\u9593\u6bb5\u5f8c\u7684\u4e00\u500b\u6642\u9593\u9ede\u7684\u7279\u5b9a\u7279\u5fb5\u503c\u3002 # \u6293\u53d6window_size\u7684\u8cc7\u6599\u4f5c\u70ba\u89c0\u5bdf\u8cc7\u6599(x), \u9810\u6e2c\u4e0b\u4e00\u6642\u9593\u9ede\u6b65\u614b(y) def window_data ( data , window_size , shift ): X = [] y = [] i = 0 while ( i + window_size ) <= len ( data ) - 1 : # \u5c07\u9023\u7e8c\u7684window_size\u6642\u9593\u6bb5\u5167\u7684\u8cc7\u6599\uff08\u53bb\u9664\u6700\u5f8c\u4e00\u500b\u7279\u5fb5label\uff09\u4f5c\u70ba\u89c0\u5bdf\u8cc7\u6599x X . append ( data [ i : i + window_size , : - 1 ]) # \u5c07\u63a5\u4e0b\u4f86\u7684\u4e00\u500b\u6642\u9593\u9ede\u7684\u7b2c6\u500b\u7279\u5fb5\uff08\u6a19\u7c64\uff09\u4f5c\u70ba\u9810\u6e2c\u8cc7\u6599y y . append ( data [ i + window_size , 6 ]) i += shift # \u79fb\u52d5\u7d22\u5f15\uff0c\u4ee5\u7e7c\u7e8c\u6293\u53d6\u4e0b\u4e00\u7b46\u8cc7\u6599 X = np . array ( X ) y = np . array ( y ) . reshape ( - 1 ) assert len ( X ) == len ( y ) # \u78ba\u4fdd\u89c0\u5bdf\u8cc7\u6599\u548c\u9810\u6e2c\u8cc7\u6599\u7684\u6578\u91cf\u4e00\u81f4 return X , y # \u8fd4\u56de\u8655\u7406\u5f8c\u7684\u6642\u5e8f\u8cc7\u6599\u548c\u9810\u6e2c\u8cc7\u6599 \u7c21\u55ae\u4f86\u8aaa\u4ee5\u7ad9\u7acb\u8cc7\u6599\u63a1\u6a23\u70ba\u4f8b\uff0c\u7d041\u5206\u94183072\u7b46\u7684\u8cc7\u6599\uff0c\u6bcf\u7b46\u6642\u5e8f\u8cc7\u6599\u53d6\u8996\u7a97\u5927\u5c0f100\u9ede\u8cc7\u6599\uff0c\u63a5\u8457\u79fb\u52d520\u9ede\u518d\u53e6\u5916\u6536\u96c6\u3002\u56e0\u6b64\u6bcf\u7b46\u8a13\u7df4\u8cc7\u6599\u7684\u8f38\u5165\u7dad\u5ea6\u61c9\u8a72\u70ba (100,6)\uff0c100\u4ee3\u8868 window_size \u4e5f\u5c31\u662f\u8981\u770b\u5e7e\u7b46\u7684\u8cc7\u6599\u9ede\uff0c\u800c 6 \u4ee3\u8868\u4e0d\u540c\u611f\u6e2c\u5668\u6240\u622a\u53d6\u7684\u6578\u503c\u5de6\u8173\u8e1d\u52a0\u901f\u5ea6(x,y,z)\u548c\u9640\u87ba\u5100(x,y,z)\u3002\u6211\u5011\u5206\u5225\u5c07 L1~L5 \u8cc7\u6599\u4f9d\u64da\u6642\u9593\u9ede\u9032\u884c\u63a1\u6a23\u7d44\u6210\u591a\u7b46\u6642\u5e8f\u8cc7\u6599\uff0c\u6700\u5f8c\u518d\u900f\u904e np.concatenate() \u5c07\u6240\u6709\u8cc7\u6599\u5408\u4f75\u6210 X \u548c y\u3002\u53e6\u5916\u9700\u6ce8\u610f\u7684\u662f\u5728\u8655\u7406 y \u7684\u6642\u5019 -1 \u64cd\u4f5c\u662f\u70ba\u4e86\u5c07\u6a19\u7c64\u5f9e 1\u30012\u30013\u30014\u30015 \u8f49\u63db\u70ba 0\u30011\u30012\u30013\u30014\uff0c\u4f7f\u6a19\u7c64\u5f9e0\u958b\u59cb\u7de8\u865f\uff0c\u56e0\u70ba\u5728\u8a13\u7df4\u795e\u7d93\u7db2\u8def\u7684\u6642\u5019\u5206\u985e\u7684\u6a19\u7c64\u90fd\u662f\u5f9e0\u958b\u59cb\u3002 # \u8490\u96c6\u516d\u500b\u8a0a\u865f100\u500b\u6642\u9593\u9ede(window_size)\uff0c\u6bcf\u7b46\u8cc7\u6599\u63a1\u6a23\u79fb\u52d520\u500b\u8cc7\u6599\u9ede X_L1 , y_L1 = window_data ( L1 . values , window_size = 100 , shift = 20 ) X_L2 , y_L2 = window_data ( L2 . values , window_size = 100 , shift = 20 ) X_L3 , y_L3 = window_data ( L3 . values , window_size = 100 , shift = 20 ) X_L4 , y_L4 = window_data ( L4 . values , window_size = 100 , shift = 20 ) X_L5 , y_L5 = window_data ( L5 . values , window_size = 100 , shift = 20 ) X = np . concatenate ([ X_L1 , X_L2 , X_L3 , X_L4 , X_L5 ]) y = np . concatenate ([ y_L1 , y_L2 , y_L3 , y_L4 , y_L5 ]) - 1 # \u6a19\u7c64\u8981\u5f9e0\u958b\u59cb\u6545\u5168\u90e8\u6e1b\u4e00 print ( \"X shape: \" , X . shape ) print ( \"y shape: \" , y . shape ) \u8f38\u51fa\u7d50\u679c\u53ef\u4ee5\u770b\u5230\u7e3d\u5171\u6709 745 \u7b46\u8cc7\u6599\uff0c window_size \u70ba 100\uff0c\u6bcf\u4e00\u7b46\u6642\u5e8f\u8cc7\u6599\u5171\u6709 6 \u9805\u7279\u5fb5\u3002 X shape: (745, 100, 6) y shape: (745,) \u8cc7\u6599\u6e96\u5099\u5c31\u7dd2\u5f8c\u6700\u5f8c\u4e00\u500b\u6b65\u9a5f\u5c31\u662f\u5c07 X \u548c y \u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.model_selection import train_test_split X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.1 , random_state = 42 , stratify = y ) print ( \"X_train shape = \" , X_train . shape ) print ( \"X_test shape = \" , X_test . shape ) print ( \"y_train shape = \" , y_train . shape ) print ( \"y_test shape = \" , y_test . shape ) \u8f38\u51fa\u7d50\u679c\uff1a X_train shape = (670, 100, 6) X_test shape = (75, 100, 6) y_train shape = (670,) y_test shape = (75,)","title":"\u8cc7\u6599\u9810\u8655\u7406"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#lstm","text":"\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u4f7f\u7528 Tensorflow2.0 Functional API \u642d\u5efa\u795e\u7d93\u7db2\u8def\u3002\u6b64\u6a21\u578b\u67b6\u69cb\u662f\u7528\u65bc\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u4e26\u9032\u884c\u5206\u985e\u4efb\u52d9\u3002\u6a21\u578b\u7684\u8f38\u5165\u662f\u5177\u67096\u500b\u50b3\u611f\u5668\u7279\u5fb5\u7684\u6642\u9593\u5e8f\u5217\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u5305\u542b100\u500b\u6642\u9593\u9ede\u3002\u6a21\u578b\u5305\u62ec\u4e00\u500b LSTM \u96b1\u85cf\u5c64\uff0c\u7528\u65bc\u6355\u6349\u6642\u9593\u5e8f\u5217\u7684\u6642\u9593\u76f8\u95dc\u6027\uff0c\u5176\u4e2d return_sequences=True \u4e26\u5c07\u6bcf\u500b\u795e\u7d93\u5143\u7684\u96b1\u85cf\u72c0\u614b(hidden_state)\u56de\u50b3\uff0c\u4e26\u900f\u904e Flatten() \u5c07\u6240\u6709\u6642\u9593\u7684\u96b1\u85cf\u72c0\u614b\u6524\u5e73\u6210\u4e00\u7dad\u5411\u91cf\u50b3\u7d66\u8f38\u51fa\u5c64\u3002\u6700\u5f8c\u901a\u904e\u4e00\u500b\u5168\u9023\u63a5\u5c64\u9032\u884c\u5206\u985e\uff0c\u5c07\u8f38\u5165\u8cc7\u6599\u5206\u70ba5\u500b\u4e0d\u540c\u7684\u985e\u5225\u3002 from tensorflow.keras.models import Model from tensorflow.keras import models from tensorflow.keras import layers from tensorflow.compat.v1.keras.backend import get_session tf . compat . v1 . disable_v2_behavior () num_sensor = 6 window_size = 100 def build_model (): model_input = layers . Input ( shape = ( window_size , num_sensor )) # \u7b2c\u4e00\u5c64\u96b1\u85cf\u5c64 x = layers . LSTM ( 2 , activation = 'relu' , return_sequences = True , return_state = False )( model_input ) x = layers . Flatten ()( x ) # \u8f38\u51fa\u5c64 model_output = layers . Dense ( 5 , activation = 'softmax' )( x ) return Model ( model_input , model_output ) \u7531\u65bc SHAP \u76ee\u524d\u9084\u5c1a\u672a\u652f\u63f4 TF2.4 \u7248\u672c\u4ee5\u4e0a\uff0c\u56e0\u6b64\u5fc5\u9808\u900f\u904e tf.compat.v1.disable_v2_behavior() \u95dc\u9589\u4e00\u4e9b 2.0 \u7248\u672c\u7684\u9032\u968e API\u3002 \u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528\u5148\u524d\u5b9a\u7fa9\u7684 build_model() \u51fd\u6578\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u795e\u7d93\u7db2\u7d61\u6a21\u578b\uff0c\u4e26\u5c07\u9019\u500b\u6a21\u578b\u5b58\u5132\u5728 model \u8b8a\u6578\u4e2d\u3002\u6700\u5f8c\u4f7f\u7528 model.summary() \u5370\u51fa\u6a21\u578b\u7684\u6458\u8981\u8a0a\u606f\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7d50\u69cb\u3001\u6bcf\u4e00\u5c64\u7684\u53c3\u6578\u6578\u91cf\u7b49\u3002 tf . keras . backend . clear_session () model = build_model () model . summary () \u6a21\u578b\u6e96\u5099\u5c31\u7dd2\u5f8c\u5373\u53ef\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u3002\u7531\u65bc\u6211\u5011\u6c92\u6709\u91dd\u5c0d\u8f38\u51fa\u6a19\u7c64\u9032\u884c one-hot encoding \u56e0\u6b64\u53ef\u4ee5\u5728 loss \u6307\u5b9a sparse_categorical_crossentropy \uff0c\u9019\u6a23\u5728\u6a21\u578b\u8a13\u7df4\u904e\u7a0b\u4e2d\u81ea\u52d5\u5730\u6703\u9032\u884c\u984d\u5916\u8655\u7406\u4ee5\u5229\u65bc cross entropy \u7684\u8a08\u7b97\u3002\u7531\u65bc\u8a13\u7df4\u8cc7\u6599\u6c92\u6709\u5f88\u591a\uff0c\u56e0\u6b64\u6279\u6b21\u5927\u5c0f\u8a2d\u70ba 4 \u8868\u793a\u6bcf\u6b21\u8a13\u7df4\u904e\u7a0b\u4e2d\uff0c\u6a21\u578b\u6703\u540c\u6642\u8655\u74064\u7b46\u8a13\u7df4\u8cc7\u6599\u3002\u8a13\u7df4\u8fed\u4ee3\u6b21\u6578\u70ba 10 \u6b21\u3002\u6700\u5f8c\u4f7f\u7528\u8a13\u7df4\u6578\u64da X_train \u548c y_train \u4f86\u8a13\u7df4\u6a21\u578b\u3002 # \u7de8\u8b6f\u6a21\u578b model . compile ( loss = 'sparse_categorical_crossentropy' , optimizer = 'adam' , metrics = [ 'acc' ]) # \u8a13\u7df4\u6a21\u578b history = model . fit ( X_train , y_train , validation_split = 0.1 , batch_size = 4 , epochs = 10 )","title":"LSTM \u6a21\u578b\u5efa\u7acb"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#deep-shap-lstm","text":"\u9019\u88e1\u63a1\u7528 SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u9032\u884c\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u6a21\u578b\u7684\u89e3\u91cb\uff0c\u5b83\u7d50\u5408\u4e86 DeepLIFT \u548c Shapely values \u7684\u6982\u5ff5\uff0c\u4ee5\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u9996\u5148\u5efa\u7acb\u4e00\u500b DeepExplainer \u89e3\u91cb\u5668\uff0c\u4ed6\u9664\u4e86 DNN \u6a21\u578b\u53ef\u4ee5\u89e3\u91cb\u4e4b\u5916\uff0c\u5176\u4ed6\u985e\u578b\u7684\u795e\u7d93\u7db2\u8def\u50cf\u662f LSTM\u3001CNN\u30011DCNN \u90fd\u53ef\u4ee5\u900f\u904e\u5b83\u4f86\u5c0d\u6a21\u578b\u9032\u884c\u7279\u5fb5\u6b78\u56e0\u7684\u91cd\u8981\u6027\u89e3\u91cb\u3002\u53e6\u5916\u5728\u4f30\u8a08 Shapely values \u6642\uff0c\u53ef\u4ee5\u8f38\u5165\u8981\u89e3\u91cb\u7684\u8cc7\u6599\u3002\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5c07\u4f7f\u752875\u7b46\u6e2c\u8a66\u96c6\u8cc7\u6599\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002 import shap shap . initjs () # \u4f7f\u7528 Deep SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . DeepExplainer ( model = model , data = X_train ) # \u4f30\u8a08 Shapely values shap_values = explainer . shap_values ( X_test ) \u7531\u65bc\u6211\u5011\u9700\u8981\u8655\u7406\u5927\u91cf\u7684\u6e2c\u8a66\u96c6\u8cc7\u6599\uff0c\u6240\u4ee5\u8f38\u5165\u8cc7\u6599\u7684\u7dad\u5ea6\u70ba(75, 100, 6)\u3002\u9019\u88e1\u7684\u6bcf\u500b\u6578\u503c\u4ee3\u8868\u7684\u542b\u7fa9\u5206\u5225\u662f(\u8cc7\u6599\u7b46\u6578, \u6642\u9593\u7a97\u53e3\u5927\u5c0f, \u7279\u5fb5\u6578)\u3002\u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u5728\u8655\u7406\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u8a08\u7b97 Shapely values \u6642\uff0c\u8f38\u51fa\u7684\u7dad\u5ea6\u5c07\u662f(5, 75, 100, 6)\u3002\u9019\u662f\u56e0\u70ba\u9019\u500b\u6a21\u578b\u662f\u4e00\u500b\u8f38\u51fa\u4e94\u985e\u5225\u6a5f\u7387\u7684\u5206\u985e\u4efb\u52d9\uff0c\u6240\u4ee5\u5728\u8a08\u7b97 Shapely values \u6642\uff0c\u6703\u91dd\u5c0d\u6bcf\u4e00\u7b46\u8cc7\u6599\u5206\u5225\u8a08\u7b97\u4e94\u500b\u985e\u5225\u5c0d\u61c9\u7684 Shapely values\u3002 # 5\u500b\u985e\u5225, 75\u7b46\u6e2c\u8a66\u8cc7\u6599, 100\u500b\u6642\u9593\u9ede, 6\u500b\u7279\u5fb5 np . array ( shap_values ) . shape \u8f38\u51fa\u7d50\u679c\uff1a (5, 75, 100, 6)","title":"Deep SHAP \u89e3\u91cb LSTM \u6a21\u578b"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#shap-summary-plot","text":"\u6211\u5011\u53ef\u4ee5\u91dd\u5c0d75\u7b46\u6e2c\u8a66\u8cc7\u6599\u9032\u884c\u6bcf\u500b\u985e\u5225\u7684\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u6392\u5e8f\u3002\u63a5\u8457\u900f\u904e\u8b8a\u6578 label \u7684\u8a2d\u5b9a\u53ef\u4ee5\u89c0\u5bdf\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c\u3002\u7531\u65bc Shapely values \u6703\u91dd\u5c0d\u7a97\u53e3\u7684\u5927\u5c0f\u9032\u884c\u6bcf\u500b\u6642\u9593\u9ede\u7684\u7279\u5fb5\u6b78\u56e0\u8a08\u7b97\u3002\u56e0\u6b64\u6bcf\u7b46\u8cc7\u6599\u5728\u67d0\u500b\u985e\u5225\u7684 Shapely values \u7dad\u5ea6\u662f\u4e8c\u7dad\u7684(100, 6)\uff0c\u6240\u4ee5\u5728\u9032\u884c\u5168\u5c40\u6a21\u578b\u89e3\u91cb\u524d\u8981\u624b\u52d5\u7684\u5c07\u6bcf\u7b46\u6e2c\u8a66\u8cc7\u6599\u7684\u6642\u9593\u9ede\u6839\u64da\u6bcf\u500b\u7279\u5fb5\u7dad\u5ea6\u9032\u884c\u76f8\u52a0\u5f97\u5230\u6bcf\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002\u6700\u5f8c\u8a08\u7b97\u51fa\u4f86\u516d\u500b\u6578\u503c\u518d\u901a\u904e\u4e00\u500b\u6a19\u6e96\u5316\uff0c\u5f97\u5230\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c\u3002 def normalize_array ( arr ): # \u8a08\u7b97\u9663\u5217\u4e2d\u6240\u6709\u5143\u7d20\u7684\u7e3d\u548c total = sum ( arr ) # \u6b63\u898f\u5316\u6bcf\u500b\u5143\u7d20 normalized_arr = [ x / total for x in arr ] return normalized_arr # \u7372\u5f97\u5728\u67d0\u6a19\u7c64\u4e0b\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6574\u9ad4\u5e73\u5747\u8ca2\u737b\u7684\u503c # 0:\u7ad9\u7acb\u30011:\u975c\u5750\u30012:\u5e73\u8eba\u30013:\u8d70\u8def\u30014:\u4e0a\u6a13 label = 0 shap_value = np . array ( shap_values ) shap_value = np . absolute ( shap_value [ label ]) shap_value = np . sum ( shap_value , axis = 1 ) SHAP_list = [ np . sum ( shap_value [:, 0 ]), np . sum ( shap_value [:, 1 ]), np . sum ( shap_value [:, 2 ]), np . sum ( shap_value [:, 3 ]), np . sum ( shap_value [:, 4 ]), np . sum ( shap_value [:, 5 ])] plt . barh ( x_feature_names , normalize_array ( SHAP_list ), label = y_label_names [ label ], color = '#028bfb' ) plt . legend () plt . show () \u6211\u5011\u53ef\u4ee5\u53c3\u7167\u6587\u7ae0\u4e00\u958b\u59cb\u89c0\u5bdf\u539f\u59cb\u8a0a\u865f\u5716\uff0c\u4e26\u767c\u73fe\u5404\u7a2e\u6b65\u614b\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u900f\u904e\u52a0\u901f\u5ea6\u898f\u8a0a\u865f\u9032\u884c\u5224\u65b7\u3002\u56e0\u6b64\u5728\u6a21\u578b\u7684\u63a8\u8ad6\u904e\u7a0b\u4e2d\uff0c\u4e3b\u8981\u4f9d\u8cf4\u65bc\u52a0\u901f\u5ea6\u8cc7\u8a0a\uff0c\u5177\u9ad4\u4f86\u8aaa\u662f acc_x\u3001acc_y \u548c acc_z \u9019\u4e09\u9805\u8cc7\u8a0a\u3002\u679c\u7136\u5728 SHAP \u6a21\u578b\u89e3\u91cb\u4e2d\uff0c\u5224\u65b7\u5404\u7a2e\u985e\u5225\u7684\u91cd\u8981\u6027\u90fd\u662f\u4ee5\u90a3\u4e09\u9805\u8cc7\u8a0a\u70ba\u4e3b\u8981\u4f9d\u64da\u3002\u53e6\u5916\u9700\u6ce8\u610f\u7684\u662f\uff0c\u5728\u672c\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5c1a\u672a\u5c0d\u6240\u6709\u8cc7\u6599\u9032\u884c\u6a19\u6e96\u5316\uff0c\u56e0\u6b64\u5404\u4f4d\u8b80\u8005\u4e5f\u53ef\u4ee5\u5617\u8a66\u5c0d\u8cc7\u6599\u9032\u884c\u6a19\u6e96\u5316\uff0c\u770b\u770b\u662f\u5426\u6703\u5c0d\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u7522\u751f\u4e0d\u540c\u7684\u89e3\u91cb\u7d50\u679c\u3002","title":"SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb)"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#shap-force-plot","text":"\u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u4e2d\u9078\u53d6\u4e8675\u7b46\u8cc7\u6599\u4f5c\u70ba\u6e2c\u8a66\u96c6\u3002\u525b\u624d\u63d0\u5230\u7684\u5168\u5c40\u89e3\u91cb\u662f\u91dd\u5c0d\u901975\u7b46\u8cc7\u6599\u7684\u6574\u9ad4\u5e73\u5747\u9032\u884c\u7684\u89e3\u91cb\u3002\u73fe\u5728\u6211\u5011\u53ef\u4ee5\u9032\u4e00\u6b65\u91dd\u5c0d\u6bcf\u4e00\u7b46\u6578\u64da\u9032\u884c\u89e3\u91cb\u5206\u6790\u3002\u5728\u4e0b\u9762\u7a0b\u5f0f\u4e2d\u7684 index \u88ab\u8a2d\u5b9a\u70ba0\uff0c\u9019\u8868\u793a\u6211\u5011\u8981\u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7684\u7b2c\u4e00\u7b46\u8cc7\u6599\u3002\u7136\u5f8c\uff0c\u6211\u5011\u4f7f\u7528force_plot\u51fd\u5f0f\u5c0d\u9019\u7b46\u8cc7\u6599\u9032\u884c\u9810\u6e2c\uff0c\u4e26\u5c07\u5206\u6790\u7d50\u679c\u4ee5\u8996\u89ba\u5316\u65b9\u5f0f\u5448\u73fe\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 pred_class = model . predict ( X_test [[ index ]]) . argmax () pred_proba = model . predict ( X_test [[ index ]])[ 0 ][ pred_class ] print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { pred_class } \u6a5f\u7387\u503c: { pred_proba } ' ) print ( f '\u771f\u5be6\u7b54\u6848: { int ( y_test [ index ]) } ' ) shap_value = shap_values [ pred_class ][ index ] shap_value = shap_value . sum ( axis = 0 ) shap . force_plot ( explainer . expected_value [ pred_class ], shap_value , feature_names = x_feature_names ) \u5f9e\u4e0b\u5716\u8996\u89ba\u5316\u89e3\u91cb\u7d50\u679c\u53ef\u4ee5\u770b\u5230\u6a21\u578b\u5728\u9019\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u6a19\u7c64 1\uff08\u975c\u5750\uff09\uff0c\u5176\u6a5f\u7387\u503c\u70ba 0.99\u3002\u7d05\u8272\u7684\u7279\u5fb5\u8868\u793a\u5c07\u6b63\u5411\u7684\u5f71\u97ff\u8f38\u51fa\u6a5f\u7387\uff0c\u6703\u4f7f\u503c\u5347\u9ad8\uff0c\u85cd\u8272\u7684\u5247\u76f8\u53cd\uff0c\u6703\u7528\u4f86\u964d\u4f4e\u8f38\u51fa\u6a5f\u7387\u3002","title":"SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#shap-waterfall-plot","text":"\u6211\u5011\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u7684\u89c0\u5bdf\u8a72\u7b46\u8cc7\u6599\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u8f38\u51fa\u67d0\u500b\u985e\u5225\u7684 Shapely values \u6578\u503c\uff0c\u4ee5\u53ca\u5224\u65b7\u8a72\u985e\u5225\u7684\u57fa\u6e96\u503c\u662f\u591a\u5c11\u3002\u4e0b\u5716\u4e2d\u6bcf\u500b\u7279\u5fb5\u76f8\u5c0d\u61c9\u7684 Shapely value \u7d2f\u52a0\uff0c\u4e26\u52a0\u4e0a\u57fa\u6e96\u503c E[f(x)]=0.206 \u6700\u7d42\u76f8\u52a0\u7684\u7d50\u679c\u5c31\u662f\u8a72\u7b46\u6e2c\u8a66\u8cc7\u6599\u9810\u6e2c\u67d0\u985e\u7684\u7684\u6a5f\u7387\u503c\u3002 pred_class = model . predict ( X_test [[ index ]]) . argmax () pred_proba = model . predict ( X_test [[ index ]])[ 0 ][ pred_class ] shap_value = np . array ( shap_values ) shap_value = np . expand_dims (( shap_value [ pred_class ])[ index ], axis = 0 ) shap_value = np . sum ( shap_value , axis = 1 )[ 0 ] shap . waterfall_plot ( shap . Explanation ( values = shap_value , base_values = explainer . expected_value [ pred_class ], feature_names = x_feature_names )) \u4e0b\u5716\u7bc4\u4f8b\u662f\u9810\u6e2c\u7b2c\u4e00\u7b46\u6e2c\u8a66\u8cc7\u6599\u5728\u6a19\u7c64\u70ba1\u7684\u6642\u5019\u7684 Shapely values \u6578\u503c\u3002 \u52a0\u7e3d\u7d50\u679c\uff1a 0.206-3.245-0.815+4.84+0.138-2.142+2.017=0.99","title":"SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#_3","text":"\u500b\u4eba\u76ee\u524d\u89c0\u5bdf SHAP \u5957\u4ef6\u4e2d\u7684 Deep SHAP \u5728\u5b98\u65b9\u7684\u4f8b\u5b50\u4e2d\u662f LSTM \u81ea\u7136\u8a9e\u8a00\u7684\u4f8b\u5b50\u70ba\u4e3b\u3002\u7136\u800c\u5728 LSTM \u6a21\u578b\u65bc\u5206\u985e\u6216\u8ff4\u6b78\u7684\u6a21\u578b\uff0cSHAP \u5957\u4ef6\u7121\u6cd5\u76f4\u63a5\u9032\u884c\u89e3\u91cb\uff0c\u5fc5\u9808\u900f\u904e\u5c0f\u5c0f\u7684\u524d\u8655\u7406\u900f\u904e\u7279\u5fb5\u7684\u7dad\u5ea6\u5c07\u6bcf\u500b\u6642\u9593\u56e0\u5b50\u7684 Shapely values \u5148\u52a0\u7e3d\u518d\u9001\u9032\u53bb force_plot \u9032\u884c\u89e3\u91cb\u3002\u6b64\u5916\u76ee\u524d\u5957\u4ef6\u5c1a\u672a\u91dd\u5c0d\u6700\u65b0\u7248 TensorFlow \u9032\u884c\u512a\u5316\uff0c\u6240\u4ee5\u4f7f\u7528\u4e0a\u6703\u53d7\u5230\u4e00\u4e9b\u9650\u5236\u3002\u5982\u679c\u5c0d\u6642\u9593\u5e8f\u5217\u6a21\u578b\u89e3\u91cb\u6709\u9700\u6c42\u7684\u8b80\u8005\uff0c\u4e5f\u53ef\u4ee5\u53c3\u8003 TimeSHAP: Explaining Recurrent Models through Sequence Perturbations \u9019\u7bc7\u7814\u7a76\uff0c\u4ee5\u53ca\u76f8\u95dc\u7684\u5be6\u4f5c TimeSHAP \u9019\u4e9b\u8cc7\u6e90\u6216\u8a31\u6703\u66f4\u9069\u5408\u8655\u7406\u6642\u9593\u5e8f\u5217\u6a21\u578b\u7684\u89e3\u91cb\u9700\u6c42\u3002","title":"\u5c0f\u7d50"},{"location":"24.LSTM\u7684\u53ef\u89e3\u91cb\u6027:\u89e3\u6790\u6b65\u614b\u5206\u985e\u4e2d\u7684\u6642\u5e8f\u8cc7\u6599/#reference","text":"[forecast][LSTM+SHAP]Applied SHAP on the polynomial equation case with LSTM algorithm","title":"Reference"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/","text":"[Day 25] XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c\uff1a\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u96a8\u8457\u9435\u4eba\u8cfd\u9032\u5165\u5c3e\u8072\uff0c\u76f8\u4fe1\u5404\u4f4d\u5df2\u7d93\u5c0d\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff08XAI\uff09\u9818\u57df\u6709\u4e86\u4e00\u4e9b\u521d\u6b65\u7684\u4e86\u89e3\u3002\u5728\u63a5\u4e0b\u4f86\u7684\u5e7e\u5929\u4e2d\uff0c\u6211\u60f3\u900f\u904e\u4e00\u4e9b\u5be6\u969b\u7684\u4f8b\u5b50\u4f86\u4ecb\u7d39 XAI \u7684\u5be6\u969b\u61c9\u7528\uff0c\u85c9\u6b64\u5c55\u793a\u5982\u4f55\u900f\u904e\u4eba\u5de5\u667a\u6167\u4f86\u89e3\u6c7a\u4f01\u696d\u4e2d\u7684\u6a5f\u5668\u5b78\u7fd2\u554f\u984c\u3002\u4eca\u5929\u8981\u4ecb\u7d39\u7684\u4f8b\u5b50\u6d89\u53ca\u5f71\u50cf\u8fa8\u8b58\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c\u3002\u5728\u5f71\u50cf\u8655\u7406\u4e2d\uff0c\u7455\u75b5\u6aa2\u6e2c\u662f\u4e00\u500b\u76f8\u7576\u91cd\u8981\u7684\u61c9\u7528\u9818\u57df\uff0c\u901a\u5e38\u7528\u65bc\u6aa2\u67e5\u88fd\u9020\u904e\u7a0b\u4e2d\u7684\u7522\u54c1\u6216\u6750\u6599\uff0c\u4ee5\u78ba\u4fdd\u5b83\u5011\u7684\u54c1\u8cea\u9054\u5230\u6a19\u6e96\u8981\u6c42\u3002\u9019\u500b\u61c9\u7528\u9818\u57df\u5728\u8a31\u591a\u4e0d\u540c\u7684\u884c\u696d\u4e2d\u90fd\u5177\u6709\u95dc\u9375\u7684\u5730\u4f4d\uff0c\u5305\u62ec\u88fd\u9020\u696d\u3001\u91ab\u7642\u3001\u77f3\u5316\u7522\u696d\u7b49\u7b49\u3002 [\u6848\u4f8b] \u8868\u9762\u88c2\u7d0b\u6aa2\u6e2c Surface Crack Detection Dataset \u662f\u4e00\u500b\u7528\u65bc\u6df7\u51dd\u571f\u8868\u9762\u88c2\u7e2b\u6aa2\u6e2c\u7684\u8cc7\u6599\u96c6\u3002\u9019\u500b\u8cc7\u6599\u96c6\u88ab\u5206\u6210\u5169\u500b\u985e\u5225\uff0c\u5206\u5225\u662f\u6b63\u9762\uff08\u6709\u88c2\u7e2b\uff09\u548c\u8ca0\u9762\uff08\u7121\u88c2\u7e2b\uff09\u3002\u9019\u5169\u985e\u5716\u50cf\u88ab\u5b58\u5132\u5728\u4e0d\u540c\u7684\u8cc7\u6599\u593e\u4e2d\uff0c\u4ee5\u4fbf\u9032\u884c\u5716\u50cf\u5206\u985e\u3002\u6bcf\u500b\u985e\u5225\u5305\u542b20000\u5f35\u5716\u50cf\uff0c\u7e3d\u5171\u670940000\u5f35\u5716\u50cf\uff0c\u6bcf\u5f35\u5716\u50cf\u7684\u89e3\u6790\u5ea6\u70ba227 x 227\u50cf\u7d20\uff0c\u4e26\u4e14\u662f\u5f69\u8272\u5716\u50cf\u3002 \u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(ResNet50) \u5728\u4eca\u5929\u7684\u5be6\u4f5c\u4e2d\uff0c\u6211\u5011\u5c07\u4f7f\u7528\u9810\u8a13\u7df4\u6a21\u578b\uff08ResNet50\uff09\u4f86\u57f7\u884c\u9077\u79fb\u5b78\u7fd2\uff08Transfer Learning\uff09\uff0c\u9019\u662f\u4e00\u7a2e\u61c9\u7528\u5728\u5206\u985e\u4efb\u52d9\u4e0a\u7684\u5b78\u7fd2\u65b9\u6cd5\u3002\u9077\u79fb\u5b78\u7fd2\u662f\u6307\uff0c\u6211\u5011\u5c07\u5148\u524d\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff08\u901a\u5e38\u662f\u5728\u5927\u578b\u6578\u64da\u96c6\u4e0a\u8a13\u7df4\u7684\u6a21\u578b\uff09\u61c9\u7528\u65bc\u65b0\u7684\u4efb\u52d9\u6216\u8cc7\u6599\u96c6\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u548c\u6e96\u78ba\u5ea6\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u5e38\u80fd\u5920\u7bc0\u7701\u8a13\u7df4\u65b0\u6a21\u578b\u6240\u9700\u7684\u5927\u91cf\u6642\u9593\u548c\u8cc7\u6e90\uff0c\u540c\u6642\u80fd\u5920\u66f4\u5feb\u5730\u9054\u5230\u826f\u597d\u7684\u7d50\u679c\u3002\u9996\u5148\u4f7f\u7528 TensorFlow \u5efa\u7acb\u4e86\u4e00\u500b\u9810\u8a13\u7df4\u7684 ResNet50 \u6a21\u578b\uff0c\u4e26\u4e14\u5c07\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\u8a2d\u70ba\u4e0d\u53ef\u8a13\u7df4\uff0c\u4e26\u4fdd\u7559\u539f\u59cb\u7684\u7279\u5fb5\u63d0\u53d6\u529f\u80fd\u3002\u7531\u65bc include_top \u8a2d\u5b9a\u70ba False \uff0c\u56e0\u6b64\u5fc5\u9808\u81ea\u5df1\u5efa\u7acb\u8f38\u51fa\u7684\u96b1\u85cf\u5c64\u8207\u8f38\u51fa\u5c64\u3002\u56e0\u6b64\u6211\u5011\u81ea\u5df1\u5efa\u7acb\u4e86 GlobalAveragePooling2D \u5c64\u5c07\u7279\u5fb5\u5716\u7684\u6bcf\u500b\u901a\u9053\u7684\u5e73\u5747\u503c\u8a08\u7b97\u70ba\u4e00\u500b\u6578\u503c\u3002\u63a5\u8457\u5728\u6a21\u578b\u7684\u8f38\u51fa\u5c64\u6dfb\u52a0\u4e00\u500b\u5177\u6709 sigmoid \u6fc0\u767c\u51fd\u6578\u7684\u5168\u9023\u63a5\u5c64\uff0c\u7528\u65bc\u4e8c\u5143\u5206\u985e\u3002\u6700\u5f8c\u6a21\u578b\u7de8\u8b6f\uff0c\u8a2d\u5b9a\u4e86\u512a\u5316\u5668\u3001\u640d\u5931\u51fd\u6578\u548c\u8a55\u4f30\u6307\u6a19\u3002 import tensorflow as tf from tensorflow.keras.models import Model from tensorflow.keras import layers from tensorflow.keras.applications.resnet import ResNet50 , preprocess_input from tensorflow.keras.optimizers import Adam img_size = 150 model_name = 'ResNet50' # \u4f7f\u7528\u9810\u8a13\u7df4\u7684ResNet50\u6a21\u578b pre_model = ResNet50 ( weights = 'imagenet' , include_top = False , input_shape = ( img_size , img_size , 3 )) # \u5c07\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\u8a2d\u70ba\u4e0d\u53ef\u8a13\u7df4 pre_model . trainable = False # \u96b1\u85cf\u5c64 x = layers . GlobalAveragePooling2D ()( pre_model . output ) # \u8f38\u51fa\u5c64 outputs = layers . Dense ( 1 , activation = 'sigmoid' )( x ) model = Model ( inputs = pre_model . inputs , outputs = outputs ) # \u8a2d\u5b9a\u512a\u5316\u5668 optimizer = Adam ( learning_rate = 0.001 ) # \u7de8\u8b6f\u6a21\u578b model . compile ( loss = 'binary_crossentropy' , optimizer = optimizer , metrics = [ 'accuracy' ]) \u8f09\u5165\u5716\u7247 \u6a21\u578b\u642d\u5efa\u5b8c\u6210\u5f8c\uff0c\u63a5\u8457\u5efa\u7acb\u7528\u65bc\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u5716\u50cf\u8cc7\u6599\u751f\u6210\u5668\uff08ImageDataGenerator\uff09\u3002\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668\u9032\u884c\u4e86\u8cc7\u6599\u589e\u5f37\uff08Data Augmentation\uff09\u64cd\u4f5c\uff0c\u5305\u62ec\u96a8\u6a5f\u4f4d\u79fb\u3001\u6c34\u5e73\u7ffb\u8f49\u7b49\uff0c\u4e26\u4f7f\u7528\u6307\u5b9a\u7684\u5716\u50cf\u524d\u8655\u7406\u51fd\u5f0f\u3002\u7136\u800c\u5728\u9a57\u8b49\u96c6\u7684\u90e8\u5206\u4e0d\u9700\u8981\u9032\u884c\u8cc7\u6599\u589e\u5f37\uff0c\u50c5\u9700\u8981\u9644\u4e0a\u5716\u5411\u524d\u8655\u7406\u7684\u51fd\u5f0f\u5373\u53ef\u3002 from tensorflow.keras.preprocessing.image import ImageDataGenerator # \u5efa\u7acb\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668 train_datagen = ImageDataGenerator ( width_shift_range = 0.1 , # \u96a8\u6a5f\u6c34\u5e73\u4f4d\u79fb\u5716\u50cf\u7684\u7bc4\u570d height_shift_range = 0.1 , # \u96a8\u6a5f\u5782\u76f4\u4f4d\u79fb\u5716\u50cf\u7684\u7bc4\u570d horizontal_flip = True , # \u96a8\u6a5f\u6c34\u5e73\u7ffb\u8f49\u5716\u50cf preprocessing_function = preprocess_input , # \u5716\u50cf\u524d\u8655\u7406\u51fd\u6578 validation_split = 0.01 # \u9a57\u8b49\u8cc7\u6599\u96c6\u7684\u6bd4\u4f8b ) # \u5efa\u7acb\u9a57\u8b49\u8cc7\u6599\u751f\u6210\u5668 validation_datagen = ImageDataGenerator ( preprocessing_function = preprocess_input , validation_split = 0.01 ) \u9019\u4e9b\u751f\u6210\u5668\u5f9e\u6307\u5b9a\u7684\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf\uff0c\u4e26\u751f\u6210\u7528\u65bc\u6a21\u578b\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u6279\u6b21\u5716\u50cf\u6578\u64da\u3002\u5b83\u5011\u88ab\u8a2d\u7f6e\u70ba\u9032\u884c\u4e8c\u5143\u5206\u985e\uff0c\u5176\u4e2d\u985e\u5225\u6a19\u7c64\u662f \u6b63 \u548c \u8ca0 \uff0c\u4e26\u6839\u64da\u6bd4\u4f8b\u5f9e\u539f\u59cb\u8cc7\u6599\u4e2d\u9078\u64c7\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u5b50\u96c6\u3002 # \u8a2d\u5b9a\u5716\u50cf\u7684\u5c3a\u5bf8 img_shape = ( img_size , img_size ) # \u5275\u5efa\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668\uff0c\u5f9e\u6307\u5b9a\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf\uff0c\u4e26\u9032\u884c\u8cc7\u6599\u589e\u5f37 train_generator = train_datagen . flow_from_directory ( '../input/surface-crack-detection' , target_size = ( img_size , img_size ), # \u8abf\u6574\u5716\u50cf\u5c3a\u5bf8 batch_size = 64 , # \u6279\u6b21\u5927\u5c0f shuffle = True , # \u96a8\u6a5f\u6253\u4e82\u5716\u50cf\u9806\u5e8f class_mode = 'binary' , # \u4e8c\u5143\u5206\u985e subset = 'training' ) # \u8a2d\u5b9a\u70ba\u8a13\u7df4\u5b50\u96c6 # \u5275\u5efa\u9a57\u8b49\u8cc7\u6599\u751f\u6210\u5668\uff0c\u5f9e\u6307\u5b9a\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf validation_generator = validation_datagen . flow_from_directory ( '../input/surface-crack-detection' , target_size = ( img_size , img_size ), # \u8abf\u6574\u5716\u50cf\u5c3a\u5bf8 batch_size = 64 , # \u6279\u6b21\u5927\u5c0f class_mode = 'binary' , # \u4e8c\u5143\u5206\u985e subset = 'validation' ) # \u8a2d\u5b9a\u70ba\u9a57\u8b49\u5b50\u96c6 \u8a13\u7df4\u6a21\u578b \u4e00\u5207\u5df2\u7d93\u6e96\u5099\u5c31\u7dd2\uff0c\u73fe\u5728\u53ef\u4ee5\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u4e86\u3002\u56e0\u70ba\u6211\u5011\u662f\u57fa\u65bc\u9810\u8a13\u7df4\u6a21\u578b\u9032\u884c\u5206\u985e\u9077\u79fb\u8a13\u7df4\uff0c\u6240\u4ee5\u6211\u5011\u53ea\u9700\u8981\u8a2d\u5b9a\u8a13\u7df4\u7684\u8fed\u4ee3\u6b21\u6578\u70ba3\uff0c\u9019\u6a23\u53ef\u4ee5\u5feb\u901f\u9054\u5230\u826f\u597d\u7684\u6e96\u78ba\u5ea6\u4e26\u5b8c\u6210\u6a21\u578b\u8a13\u7df4\u3002 # \u8a13\u7df4\u6a21\u578b model . fit ( train_generator , epochs = 3 , validation_data = validation_generator ) SHAP \u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c \u672c\u7cfb\u5217\u4e2d\u5df2\u4ecb\u7d39\u4e86\u8a31\u591a CNN \u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5982 Perturbation-Based\u3001Gradient-Based\u3001Propagation-Based\u3001CAM-Based\u3001Attention-Based \u7b49\u3002\u9019\u88e1\u6211\u5011\u63a1\u7528 SHAP \u5957\u4ef6\u9032\u884c CNN \u6a21\u578b\u7684\u89e3\u91cb\uff0c\u7136\u800c SHAP \u63d0\u4f9b\u8a31\u591a\u7a2e\u4e0d\u540c\u7684\u89e3\u91cb\u5668\uff0c\u9019\u6b21\u9078\u7528 Partition SHAP \u65b9\u6cd5\uff0c\u642d\u914d\u5716\u50cf\u906e\u64cb\u6280\u8853\u9032\u884c\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u4e2d\u8f09\u5165\u4e00\u5f35\u5177\u6709\u7455\u75b5\u88c2\u75d5\u7684\u5f71\u50cf\uff0c\u9019\u5c07\u6210\u70ba\u6211\u5011\u8981\u89e3\u91cb\u7684\u5716\u7247\u3002\u63a5\u8457\u4f7f\u7528 ResNet50 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u9019\u5f35\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( '../input/surface-crack-detection/Positive/00001.jpg' , target_size = ( img_size , img_size )) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6 SHAP Partition Explainer Partition Explainer \u662f SHAP \u5957\u4ef6\u4e2d\u7684\u4e00\u7a2e\u65b9\u6cd5\uff0c\u7528\u65bc\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u3002\u91dd\u5c0d CNN \u6a21\u578b\u7684\u89e3\u91cb\uff0c\u5b83\u53ef\u4ee5\u7528\u65bc\u5206\u6790\u5716\u50cf\u5206\u985e\u6a21\u578b\u7684\u6c7a\u7b56\u3002\u4f8b\u5982\u5c0d\u65bc\u4e00\u5f35\u5716\u50cf\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 Partition Explainer \u4f86\u8a55\u4f30\u4e0d\u540c\u5340\u57df\u4e2d\u7684\u50cf\u7d20\u5c0d\u65bc\u6a21\u578b\u7684\u5206\u985e\u7d50\u679c\u7684\u5f71\u97ff\u3002\u5176\u80cc\u5f8c\u7684\u6280\u8853\u662f\u900f\u904e blur \u6216 inpaint \u6280\u8853\u906e\u84cb\u5716\u50cf\u4e2d\u7684\u90e8\u5206\u5340\u584a\uff0c\u4ee5\u67e5\u770b\u5716\u50cf\u7684\u54ea\u4e9b\u90e8\u5206\u5c0d\u9810\u6e2c\u6709\u8ca2\u737b\u3002 \u9996\u5148\u5b9a\u7fa9\u4e86\u4e00\u500b\u51fd\u6578 f(X) \u8a72\u51fd\u6578\u8907\u88fd\u8f38\u5165\u7684\u5716\u50cfX\uff0c\u7136\u5f8c\u9032\u884c\u9810\u8655\u7406\uff0c\u6700\u5f8c\u8fd4\u56de\u6a21\u578b\u7684\u8f38\u51fa\u3002\u63a5\u8457\u5b9a\u7fa9\u4e86\u4e00\u500b masker \uff0c\u7528\u65bc\u906e\u84cb\u8f38\u5165\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df\u3002\u9019\u500b masker \u63d0\u4f9b\u4e86\u4e09\u7a2e\u65b9\u6cd5\u4f86\u906e\u84cb\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df\uff0c\u5206\u5225\u70ba\u6709\uff1a inpaint_telea\uff1a \u4f7f\u7528\u4e86 Telea \u7b97\u6cd5\u5617\u8a66\u6839\u64da\u5468\u570d\u7684\u50cf\u7d20\u503c\u5feb\u901f\u4e14\u6709\u6548\u5730\u586b\u88dc\u906e\u7f69\u5340\u57df\u3002 inpaint_ns\uff1a\u4f7f\u7528\u4e86 Navier-Stokes \u7b97\u6cd5\u4ee5\u586b\u88dc\u5716\u50cf\u4e2d\u7684\u906e\u7f69\u5340\u57df\uff0c\u9069\u5408\u7528\u65bc\u8907\u96dc\u7d0b\u7406\u3002 blur(kernel_xsize,kernel_xsize)\uff1a \u5047\u8a2d\u4f7f\u7528 blur(15, 15)\uff0c\u5247\u8868\u793a\u6838\u7684\u5927\u5c0f\u70ba15x15\uff0c\u5b83\u6703\u8003\u616e\u6bcf\u500b\u50cf\u7d20\u5468\u570d\u7684\u9130\u57df\uff0c\u5c07\u9019\u4e9b\u50cf\u7d20\u7684\u503c\u9032\u884c\u5e73\u5747\uff0c\u4ee5\u9054\u5230\u6a21\u7cca\u5316\u7684\u6548\u679c\u3002 import shap # \u5305\u88dd\u8981\u88ab\u89e3\u91cb\u7684\u6a21\u578b def f ( X ): tmp = X . copy () preprocess_input ( tmp ) # \u5f71\u50cf\u524d\u8655\u7406 return model ( tmp ) # \u5b9a\u7fa9\u4e00\u500b masker \u7528\u65bc\u906e\u7f69\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df masker = shap . maskers . Image ( \"inpaint_telea\" , x [ 0 ] . shape ) \u7136\u5f8c\u6211\u5011\u4f7f\u7528 Explainer() \u51fd\u6578\u4f86\u5275\u5efa\u4e00\u500b Partition Explainer \u7684\u5be6\u4f8b\u3002\u5728\u8a72\u51fd\u6578\u4e2d\uff0c\u5fc5\u9808\u8f38\u5165\u4e09\u500b\u91cd\u8981\u7684\u53c3\u6578\u503c\uff1a model: \u8981\u88ab\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u5373\u7bc4\u4f8b\u7a0b\u5f0f\u4e2d\u7684 f(X) mask: \u65bc\u4f7f\u7528blur\u6216inpaint\u6280\u8853\u906e\u84cb\u5716\u50cf\u4e2d\u7684\u90e8\u5206\u5340\u584a output_names: \u76ee\u6a19\u985e\u5225\u6a19\u7c64\u540d\u7a31 # \u4f7f\u7528 Partition explainer \u89e3\u91cb\u6a21\u578b explainer = shap . Explainer ( f , masker , output_names = [ \"Positive(crack)\" ]) # \u4f30\u8a08 Shapely values shap_values = explainer ( x , max_evals = 500 , batch_size = 50 , outputs = shap . Explanation . argsort . flip [: 1 ]) \u6211\u5011\u5c07\u8981\u88ab\u89e3\u91cb\u7684\u5716\u7247\u653e\u5165 SHAP \u89e3\u91cb\u5668\u5f8c\uff0c\u5373\u53ef\u91dd\u5c0d\u8a08\u7b97\u7684\u7d50\u679c\u8996\u89ba\u5316\uff0c\u4e26\u6839\u64da Shapely values \u8a08\u7b97\u7d50\u679c\u67e5\u770b\u5728\u9810\u6e2c\u985e\u5225 Positive(crack) \u60c5\u6cc1\u4e0b\u6a21\u578b\u6240\u95dc\u6ce8\u7684\u5340\u57df\u3002\u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u5230\u5728\u4e0d\u540c\u7684\u5f71\u50cf\u4e2d\u7d05\u8272\u7684\u7279\u5fb5\u8868\u793a\u5c07\u6b63\u5411\u7684\u5f71\u97ff\u8f38\u51fa\u6a5f\u7387\uff0c\u6703\u4f7f\u503c\u5347\u9ad8\uff0c\u85cd\u8272\u7684\u5247\u76f8\u53cd\uff0c\u6703\u7528\u4f86\u964d\u4f4e\u8f38\u51fa\u6a5f\u7387\u3002 shap . image_plot ( shap_values , x . astype ( np . uint8 )) \u53e6\u5916\u5728\u8a08\u7b97 Shapely values \u7684\u6642\u5019 max_evals \u53c3\u6578\u4ee3\u8868\u5728\u4f30\u7b97 SHAP \u503c\u6642\u7684\u6700\u5927\u8a55\u4f30\u6b21\u6578\u3002\u8f03\u5927\u7684\u503c\u53ef\u80fd\u6703\u63d0\u4f9b\u66f4\u6e96\u78ba\u7684 SHAP \u503c\uff0c\u4f46\u4e5f\u6703\u589e\u52a0\u8a08\u7b97\u6642\u9593\u3002\u4e0b\u5716\u662f\u5c07\u6578\u503c\u8a2d\u70ba 5000 \u7684\u7d50\u679c\uff0c\u5f9e\u7d50\u679c\u7684\u89e3\u91cb\u5716\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\u66f4\u8a73\u7d30\u7684\u89e3\u91cb\u6548\u679c\u3002 \u5927\u5bb6\u4e5f\u53ef\u4ee5\u8a66\u8a66\u770b\u5176\u5b83\u4e0d\u540c\u7684\u906e\u84cb\u5716\u50cf\u8655\u7406\u65b9\u6cd5\u5c0d\u65bc\u89e3\u91cb\u6548\u679c\u6709\u4ec0\u9ebc\u4e0d\u540c\u7684\u5f71\u97ff\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01 Reference SHAP Document: Multi-class ResNet50 on ImageNet (TensorFlow) Surface Crack Detection Dataset","title":"[Day 25] XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c\uff1a\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#day-25-xai","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u96a8\u8457\u9435\u4eba\u8cfd\u9032\u5165\u5c3e\u8072\uff0c\u76f8\u4fe1\u5404\u4f4d\u5df2\u7d93\u5c0d\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff08XAI\uff09\u9818\u57df\u6709\u4e86\u4e00\u4e9b\u521d\u6b65\u7684\u4e86\u89e3\u3002\u5728\u63a5\u4e0b\u4f86\u7684\u5e7e\u5929\u4e2d\uff0c\u6211\u60f3\u900f\u904e\u4e00\u4e9b\u5be6\u969b\u7684\u4f8b\u5b50\u4f86\u4ecb\u7d39 XAI \u7684\u5be6\u969b\u61c9\u7528\uff0c\u85c9\u6b64\u5c55\u793a\u5982\u4f55\u900f\u904e\u4eba\u5de5\u667a\u6167\u4f86\u89e3\u6c7a\u4f01\u696d\u4e2d\u7684\u6a5f\u5668\u5b78\u7fd2\u554f\u984c\u3002\u4eca\u5929\u8981\u4ecb\u7d39\u7684\u4f8b\u5b50\u6d89\u53ca\u5f71\u50cf\u8fa8\u8b58\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c\u3002\u5728\u5f71\u50cf\u8655\u7406\u4e2d\uff0c\u7455\u75b5\u6aa2\u6e2c\u662f\u4e00\u500b\u76f8\u7576\u91cd\u8981\u7684\u61c9\u7528\u9818\u57df\uff0c\u901a\u5e38\u7528\u65bc\u6aa2\u67e5\u88fd\u9020\u904e\u7a0b\u4e2d\u7684\u7522\u54c1\u6216\u6750\u6599\uff0c\u4ee5\u78ba\u4fdd\u5b83\u5011\u7684\u54c1\u8cea\u9054\u5230\u6a19\u6e96\u8981\u6c42\u3002\u9019\u500b\u61c9\u7528\u9818\u57df\u5728\u8a31\u591a\u4e0d\u540c\u7684\u884c\u696d\u4e2d\u90fd\u5177\u6709\u95dc\u9375\u7684\u5730\u4f4d\uff0c\u5305\u62ec\u88fd\u9020\u696d\u3001\u91ab\u7642\u3001\u77f3\u5316\u7522\u696d\u7b49\u7b49\u3002","title":"[Day 25] XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c\uff1a\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#_1","text":"Surface Crack Detection Dataset \u662f\u4e00\u500b\u7528\u65bc\u6df7\u51dd\u571f\u8868\u9762\u88c2\u7e2b\u6aa2\u6e2c\u7684\u8cc7\u6599\u96c6\u3002\u9019\u500b\u8cc7\u6599\u96c6\u88ab\u5206\u6210\u5169\u500b\u985e\u5225\uff0c\u5206\u5225\u662f\u6b63\u9762\uff08\u6709\u88c2\u7e2b\uff09\u548c\u8ca0\u9762\uff08\u7121\u88c2\u7e2b\uff09\u3002\u9019\u5169\u985e\u5716\u50cf\u88ab\u5b58\u5132\u5728\u4e0d\u540c\u7684\u8cc7\u6599\u593e\u4e2d\uff0c\u4ee5\u4fbf\u9032\u884c\u5716\u50cf\u5206\u985e\u3002\u6bcf\u500b\u985e\u5225\u5305\u542b20000\u5f35\u5716\u50cf\uff0c\u7e3d\u5171\u670940000\u5f35\u5716\u50cf\uff0c\u6bcf\u5f35\u5716\u50cf\u7684\u89e3\u6790\u5ea6\u70ba227 x 227\u50cf\u7d20\uff0c\u4e26\u4e14\u662f\u5f69\u8272\u5716\u50cf\u3002","title":"[\u6848\u4f8b] \u8868\u9762\u88c2\u7d0b\u6aa2\u6e2c"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#resnet50","text":"\u5728\u4eca\u5929\u7684\u5be6\u4f5c\u4e2d\uff0c\u6211\u5011\u5c07\u4f7f\u7528\u9810\u8a13\u7df4\u6a21\u578b\uff08ResNet50\uff09\u4f86\u57f7\u884c\u9077\u79fb\u5b78\u7fd2\uff08Transfer Learning\uff09\uff0c\u9019\u662f\u4e00\u7a2e\u61c9\u7528\u5728\u5206\u985e\u4efb\u52d9\u4e0a\u7684\u5b78\u7fd2\u65b9\u6cd5\u3002\u9077\u79fb\u5b78\u7fd2\u662f\u6307\uff0c\u6211\u5011\u5c07\u5148\u524d\u8a13\u7df4\u597d\u7684\u6a21\u578b\uff08\u901a\u5e38\u662f\u5728\u5927\u578b\u6578\u64da\u96c6\u4e0a\u8a13\u7df4\u7684\u6a21\u578b\uff09\u61c9\u7528\u65bc\u65b0\u7684\u4efb\u52d9\u6216\u8cc7\u6599\u96c6\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u548c\u6e96\u78ba\u5ea6\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u5e38\u80fd\u5920\u7bc0\u7701\u8a13\u7df4\u65b0\u6a21\u578b\u6240\u9700\u7684\u5927\u91cf\u6642\u9593\u548c\u8cc7\u6e90\uff0c\u540c\u6642\u80fd\u5920\u66f4\u5feb\u5730\u9054\u5230\u826f\u597d\u7684\u7d50\u679c\u3002\u9996\u5148\u4f7f\u7528 TensorFlow \u5efa\u7acb\u4e86\u4e00\u500b\u9810\u8a13\u7df4\u7684 ResNet50 \u6a21\u578b\uff0c\u4e26\u4e14\u5c07\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\u8a2d\u70ba\u4e0d\u53ef\u8a13\u7df4\uff0c\u4e26\u4fdd\u7559\u539f\u59cb\u7684\u7279\u5fb5\u63d0\u53d6\u529f\u80fd\u3002\u7531\u65bc include_top \u8a2d\u5b9a\u70ba False \uff0c\u56e0\u6b64\u5fc5\u9808\u81ea\u5df1\u5efa\u7acb\u8f38\u51fa\u7684\u96b1\u85cf\u5c64\u8207\u8f38\u51fa\u5c64\u3002\u56e0\u6b64\u6211\u5011\u81ea\u5df1\u5efa\u7acb\u4e86 GlobalAveragePooling2D \u5c64\u5c07\u7279\u5fb5\u5716\u7684\u6bcf\u500b\u901a\u9053\u7684\u5e73\u5747\u503c\u8a08\u7b97\u70ba\u4e00\u500b\u6578\u503c\u3002\u63a5\u8457\u5728\u6a21\u578b\u7684\u8f38\u51fa\u5c64\u6dfb\u52a0\u4e00\u500b\u5177\u6709 sigmoid \u6fc0\u767c\u51fd\u6578\u7684\u5168\u9023\u63a5\u5c64\uff0c\u7528\u65bc\u4e8c\u5143\u5206\u985e\u3002\u6700\u5f8c\u6a21\u578b\u7de8\u8b6f\uff0c\u8a2d\u5b9a\u4e86\u512a\u5316\u5668\u3001\u640d\u5931\u51fd\u6578\u548c\u8a55\u4f30\u6307\u6a19\u3002 import tensorflow as tf from tensorflow.keras.models import Model from tensorflow.keras import layers from tensorflow.keras.applications.resnet import ResNet50 , preprocess_input from tensorflow.keras.optimizers import Adam img_size = 150 model_name = 'ResNet50' # \u4f7f\u7528\u9810\u8a13\u7df4\u7684ResNet50\u6a21\u578b pre_model = ResNet50 ( weights = 'imagenet' , include_top = False , input_shape = ( img_size , img_size , 3 )) # \u5c07\u9810\u8a13\u7df4\u6a21\u578b\u7684\u6b0a\u91cd\u8a2d\u70ba\u4e0d\u53ef\u8a13\u7df4 pre_model . trainable = False # \u96b1\u85cf\u5c64 x = layers . GlobalAveragePooling2D ()( pre_model . output ) # \u8f38\u51fa\u5c64 outputs = layers . Dense ( 1 , activation = 'sigmoid' )( x ) model = Model ( inputs = pre_model . inputs , outputs = outputs ) # \u8a2d\u5b9a\u512a\u5316\u5668 optimizer = Adam ( learning_rate = 0.001 ) # \u7de8\u8b6f\u6a21\u578b model . compile ( loss = 'binary_crossentropy' , optimizer = optimizer , metrics = [ 'accuracy' ])","title":"\u8f09\u5165\u9810\u8a13\u7df4\u6a21\u578b(ResNet50)"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#_2","text":"\u6a21\u578b\u642d\u5efa\u5b8c\u6210\u5f8c\uff0c\u63a5\u8457\u5efa\u7acb\u7528\u65bc\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u5716\u50cf\u8cc7\u6599\u751f\u6210\u5668\uff08ImageDataGenerator\uff09\u3002\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668\u9032\u884c\u4e86\u8cc7\u6599\u589e\u5f37\uff08Data Augmentation\uff09\u64cd\u4f5c\uff0c\u5305\u62ec\u96a8\u6a5f\u4f4d\u79fb\u3001\u6c34\u5e73\u7ffb\u8f49\u7b49\uff0c\u4e26\u4f7f\u7528\u6307\u5b9a\u7684\u5716\u50cf\u524d\u8655\u7406\u51fd\u5f0f\u3002\u7136\u800c\u5728\u9a57\u8b49\u96c6\u7684\u90e8\u5206\u4e0d\u9700\u8981\u9032\u884c\u8cc7\u6599\u589e\u5f37\uff0c\u50c5\u9700\u8981\u9644\u4e0a\u5716\u5411\u524d\u8655\u7406\u7684\u51fd\u5f0f\u5373\u53ef\u3002 from tensorflow.keras.preprocessing.image import ImageDataGenerator # \u5efa\u7acb\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668 train_datagen = ImageDataGenerator ( width_shift_range = 0.1 , # \u96a8\u6a5f\u6c34\u5e73\u4f4d\u79fb\u5716\u50cf\u7684\u7bc4\u570d height_shift_range = 0.1 , # \u96a8\u6a5f\u5782\u76f4\u4f4d\u79fb\u5716\u50cf\u7684\u7bc4\u570d horizontal_flip = True , # \u96a8\u6a5f\u6c34\u5e73\u7ffb\u8f49\u5716\u50cf preprocessing_function = preprocess_input , # \u5716\u50cf\u524d\u8655\u7406\u51fd\u6578 validation_split = 0.01 # \u9a57\u8b49\u8cc7\u6599\u96c6\u7684\u6bd4\u4f8b ) # \u5efa\u7acb\u9a57\u8b49\u8cc7\u6599\u751f\u6210\u5668 validation_datagen = ImageDataGenerator ( preprocessing_function = preprocess_input , validation_split = 0.01 ) \u9019\u4e9b\u751f\u6210\u5668\u5f9e\u6307\u5b9a\u7684\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf\uff0c\u4e26\u751f\u6210\u7528\u65bc\u6a21\u578b\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u6279\u6b21\u5716\u50cf\u6578\u64da\u3002\u5b83\u5011\u88ab\u8a2d\u7f6e\u70ba\u9032\u884c\u4e8c\u5143\u5206\u985e\uff0c\u5176\u4e2d\u985e\u5225\u6a19\u7c64\u662f \u6b63 \u548c \u8ca0 \uff0c\u4e26\u6839\u64da\u6bd4\u4f8b\u5f9e\u539f\u59cb\u8cc7\u6599\u4e2d\u9078\u64c7\u8a13\u7df4\u548c\u9a57\u8b49\u7684\u5b50\u96c6\u3002 # \u8a2d\u5b9a\u5716\u50cf\u7684\u5c3a\u5bf8 img_shape = ( img_size , img_size ) # \u5275\u5efa\u8a13\u7df4\u8cc7\u6599\u751f\u6210\u5668\uff0c\u5f9e\u6307\u5b9a\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf\uff0c\u4e26\u9032\u884c\u8cc7\u6599\u589e\u5f37 train_generator = train_datagen . flow_from_directory ( '../input/surface-crack-detection' , target_size = ( img_size , img_size ), # \u8abf\u6574\u5716\u50cf\u5c3a\u5bf8 batch_size = 64 , # \u6279\u6b21\u5927\u5c0f shuffle = True , # \u96a8\u6a5f\u6253\u4e82\u5716\u50cf\u9806\u5e8f class_mode = 'binary' , # \u4e8c\u5143\u5206\u985e subset = 'training' ) # \u8a2d\u5b9a\u70ba\u8a13\u7df4\u5b50\u96c6 # \u5275\u5efa\u9a57\u8b49\u8cc7\u6599\u751f\u6210\u5668\uff0c\u5f9e\u6307\u5b9a\u8cc7\u6599\u593e\u4e2d\u8b80\u53d6\u5716\u50cf validation_generator = validation_datagen . flow_from_directory ( '../input/surface-crack-detection' , target_size = ( img_size , img_size ), # \u8abf\u6574\u5716\u50cf\u5c3a\u5bf8 batch_size = 64 , # \u6279\u6b21\u5927\u5c0f class_mode = 'binary' , # \u4e8c\u5143\u5206\u985e subset = 'validation' ) # \u8a2d\u5b9a\u70ba\u9a57\u8b49\u5b50\u96c6","title":"\u8f09\u5165\u5716\u7247"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#_3","text":"\u4e00\u5207\u5df2\u7d93\u6e96\u5099\u5c31\u7dd2\uff0c\u73fe\u5728\u53ef\u4ee5\u958b\u59cb\u8a13\u7df4\u6a21\u578b\u4e86\u3002\u56e0\u70ba\u6211\u5011\u662f\u57fa\u65bc\u9810\u8a13\u7df4\u6a21\u578b\u9032\u884c\u5206\u985e\u9077\u79fb\u8a13\u7df4\uff0c\u6240\u4ee5\u6211\u5011\u53ea\u9700\u8981\u8a2d\u5b9a\u8a13\u7df4\u7684\u8fed\u4ee3\u6b21\u6578\u70ba3\uff0c\u9019\u6a23\u53ef\u4ee5\u5feb\u901f\u9054\u5230\u826f\u597d\u7684\u6e96\u78ba\u5ea6\u4e26\u5b8c\u6210\u6a21\u578b\u8a13\u7df4\u3002 # \u8a13\u7df4\u6a21\u578b model . fit ( train_generator , epochs = 3 , validation_data = validation_generator )","title":"\u8a13\u7df4\u6a21\u578b"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#shap","text":"\u672c\u7cfb\u5217\u4e2d\u5df2\u4ecb\u7d39\u4e86\u8a31\u591a CNN \u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u5982 Perturbation-Based\u3001Gradient-Based\u3001Propagation-Based\u3001CAM-Based\u3001Attention-Based \u7b49\u3002\u9019\u88e1\u6211\u5011\u63a1\u7528 SHAP \u5957\u4ef6\u9032\u884c CNN \u6a21\u578b\u7684\u89e3\u91cb\uff0c\u7136\u800c SHAP \u63d0\u4f9b\u8a31\u591a\u7a2e\u4e0d\u540c\u7684\u89e3\u91cb\u5668\uff0c\u9019\u6b21\u9078\u7528 Partition SHAP \u65b9\u6cd5\uff0c\u642d\u914d\u5716\u50cf\u906e\u64cb\u6280\u8853\u9032\u884c\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u89e3\u91cb\u3002\u9996\u5148\u6211\u5011\u5f9e\u8cc7\u6599\u96c6\u4e2d\u8f09\u5165\u4e00\u5f35\u5177\u6709\u7455\u75b5\u88c2\u75d5\u7684\u5f71\u50cf\uff0c\u9019\u5c07\u6210\u70ba\u6211\u5011\u8981\u89e3\u91cb\u7684\u5716\u7247\u3002\u63a5\u8457\u4f7f\u7528 ResNet50 \u6a21\u578b\u7684\u9810\u8655\u7406\u51fd\u6578 preprocess_input() \u4f86\u8655\u7406\u9019\u5f35\u5716\u50cf\uff0c\u4ee5\u78ba\u4fdd\u5716\u50cf\u7684\u6578\u503c\u7bc4\u570d\u548c\u683c\u5f0f\u7b26\u5408\u6a21\u578b\u7684\u8981\u6c42\u3002 import numpy as np # \u8f09\u5165\u5716\u50cf image = tf . keras . utils . load_img ( '../input/surface-crack-detection/Positive/00001.jpg' , target_size = ( img_size , img_size )) image = tf . keras . utils . img_to_array ( image ) # \u5c07\u8f09\u5165\u7684\u5716\u50cf\u8f49\u63db\u70ba\u6578\u7d44\u5f62\u5f0f x = np . expand_dims ( image . copy (), axis = 0 ) # \u5c07\u5716\u50cf\u8f49\u63db\u70ba\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u7dad\u5ea6","title":"SHAP \u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#shap-partition-explainer","text":"Partition Explainer \u662f SHAP \u5957\u4ef6\u4e2d\u7684\u4e00\u7a2e\u65b9\u6cd5\uff0c\u7528\u65bc\u89e3\u91cb\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u3002\u91dd\u5c0d CNN \u6a21\u578b\u7684\u89e3\u91cb\uff0c\u5b83\u53ef\u4ee5\u7528\u65bc\u5206\u6790\u5716\u50cf\u5206\u985e\u6a21\u578b\u7684\u6c7a\u7b56\u3002\u4f8b\u5982\u5c0d\u65bc\u4e00\u5f35\u5716\u50cf\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 Partition Explainer \u4f86\u8a55\u4f30\u4e0d\u540c\u5340\u57df\u4e2d\u7684\u50cf\u7d20\u5c0d\u65bc\u6a21\u578b\u7684\u5206\u985e\u7d50\u679c\u7684\u5f71\u97ff\u3002\u5176\u80cc\u5f8c\u7684\u6280\u8853\u662f\u900f\u904e blur \u6216 inpaint \u6280\u8853\u906e\u84cb\u5716\u50cf\u4e2d\u7684\u90e8\u5206\u5340\u584a\uff0c\u4ee5\u67e5\u770b\u5716\u50cf\u7684\u54ea\u4e9b\u90e8\u5206\u5c0d\u9810\u6e2c\u6709\u8ca2\u737b\u3002 \u9996\u5148\u5b9a\u7fa9\u4e86\u4e00\u500b\u51fd\u6578 f(X) \u8a72\u51fd\u6578\u8907\u88fd\u8f38\u5165\u7684\u5716\u50cfX\uff0c\u7136\u5f8c\u9032\u884c\u9810\u8655\u7406\uff0c\u6700\u5f8c\u8fd4\u56de\u6a21\u578b\u7684\u8f38\u51fa\u3002\u63a5\u8457\u5b9a\u7fa9\u4e86\u4e00\u500b masker \uff0c\u7528\u65bc\u906e\u84cb\u8f38\u5165\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df\u3002\u9019\u500b masker \u63d0\u4f9b\u4e86\u4e09\u7a2e\u65b9\u6cd5\u4f86\u906e\u84cb\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df\uff0c\u5206\u5225\u70ba\u6709\uff1a inpaint_telea\uff1a \u4f7f\u7528\u4e86 Telea \u7b97\u6cd5\u5617\u8a66\u6839\u64da\u5468\u570d\u7684\u50cf\u7d20\u503c\u5feb\u901f\u4e14\u6709\u6548\u5730\u586b\u88dc\u906e\u7f69\u5340\u57df\u3002 inpaint_ns\uff1a\u4f7f\u7528\u4e86 Navier-Stokes \u7b97\u6cd5\u4ee5\u586b\u88dc\u5716\u50cf\u4e2d\u7684\u906e\u7f69\u5340\u57df\uff0c\u9069\u5408\u7528\u65bc\u8907\u96dc\u7d0b\u7406\u3002 blur(kernel_xsize,kernel_xsize)\uff1a \u5047\u8a2d\u4f7f\u7528 blur(15, 15)\uff0c\u5247\u8868\u793a\u6838\u7684\u5927\u5c0f\u70ba15x15\uff0c\u5b83\u6703\u8003\u616e\u6bcf\u500b\u50cf\u7d20\u5468\u570d\u7684\u9130\u57df\uff0c\u5c07\u9019\u4e9b\u50cf\u7d20\u7684\u503c\u9032\u884c\u5e73\u5747\uff0c\u4ee5\u9054\u5230\u6a21\u7cca\u5316\u7684\u6548\u679c\u3002 import shap # \u5305\u88dd\u8981\u88ab\u89e3\u91cb\u7684\u6a21\u578b def f ( X ): tmp = X . copy () preprocess_input ( tmp ) # \u5f71\u50cf\u524d\u8655\u7406 return model ( tmp ) # \u5b9a\u7fa9\u4e00\u500b masker \u7528\u65bc\u906e\u7f69\u5716\u50cf\u7684\u90e8\u5206\u5340\u57df masker = shap . maskers . Image ( \"inpaint_telea\" , x [ 0 ] . shape ) \u7136\u5f8c\u6211\u5011\u4f7f\u7528 Explainer() \u51fd\u6578\u4f86\u5275\u5efa\u4e00\u500b Partition Explainer \u7684\u5be6\u4f8b\u3002\u5728\u8a72\u51fd\u6578\u4e2d\uff0c\u5fc5\u9808\u8f38\u5165\u4e09\u500b\u91cd\u8981\u7684\u53c3\u6578\u503c\uff1a model: \u8981\u88ab\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u5373\u7bc4\u4f8b\u7a0b\u5f0f\u4e2d\u7684 f(X) mask: \u65bc\u4f7f\u7528blur\u6216inpaint\u6280\u8853\u906e\u84cb\u5716\u50cf\u4e2d\u7684\u90e8\u5206\u5340\u584a output_names: \u76ee\u6a19\u985e\u5225\u6a19\u7c64\u540d\u7a31 # \u4f7f\u7528 Partition explainer \u89e3\u91cb\u6a21\u578b explainer = shap . Explainer ( f , masker , output_names = [ \"Positive(crack)\" ]) # \u4f30\u8a08 Shapely values shap_values = explainer ( x , max_evals = 500 , batch_size = 50 , outputs = shap . Explanation . argsort . flip [: 1 ]) \u6211\u5011\u5c07\u8981\u88ab\u89e3\u91cb\u7684\u5716\u7247\u653e\u5165 SHAP \u89e3\u91cb\u5668\u5f8c\uff0c\u5373\u53ef\u91dd\u5c0d\u8a08\u7b97\u7684\u7d50\u679c\u8996\u89ba\u5316\uff0c\u4e26\u6839\u64da Shapely values \u8a08\u7b97\u7d50\u679c\u67e5\u770b\u5728\u9810\u6e2c\u985e\u5225 Positive(crack) \u60c5\u6cc1\u4e0b\u6a21\u578b\u6240\u95dc\u6ce8\u7684\u5340\u57df\u3002\u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u5230\u5728\u4e0d\u540c\u7684\u5f71\u50cf\u4e2d\u7d05\u8272\u7684\u7279\u5fb5\u8868\u793a\u5c07\u6b63\u5411\u7684\u5f71\u97ff\u8f38\u51fa\u6a5f\u7387\uff0c\u6703\u4f7f\u503c\u5347\u9ad8\uff0c\u85cd\u8272\u7684\u5247\u76f8\u53cd\uff0c\u6703\u7528\u4f86\u964d\u4f4e\u8f38\u51fa\u6a5f\u7387\u3002 shap . image_plot ( shap_values , x . astype ( np . uint8 )) \u53e6\u5916\u5728\u8a08\u7b97 Shapely values \u7684\u6642\u5019 max_evals \u53c3\u6578\u4ee3\u8868\u5728\u4f30\u7b97 SHAP \u503c\u6642\u7684\u6700\u5927\u8a55\u4f30\u6b21\u6578\u3002\u8f03\u5927\u7684\u503c\u53ef\u80fd\u6703\u63d0\u4f9b\u66f4\u6e96\u78ba\u7684 SHAP \u503c\uff0c\u4f46\u4e5f\u6703\u589e\u52a0\u8a08\u7b97\u6642\u9593\u3002\u4e0b\u5716\u662f\u5c07\u6578\u503c\u8a2d\u70ba 5000 \u7684\u7d50\u679c\uff0c\u5f9e\u7d50\u679c\u7684\u89e3\u91cb\u5716\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\u66f4\u8a73\u7d30\u7684\u89e3\u91cb\u6548\u679c\u3002 \u5927\u5bb6\u4e5f\u53ef\u4ee5\u8a66\u8a66\u770b\u5176\u5b83\u4e0d\u540c\u7684\u906e\u84cb\u5716\u50cf\u8655\u7406\u65b9\u6cd5\u5c0d\u65bc\u89e3\u91cb\u6548\u679c\u6709\u4ec0\u9ebc\u4e0d\u540c\u7684\u5f71\u97ff\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01","title":"SHAP Partition Explainer"},{"location":"25.XAI\u5728\u5f71\u50cf\u8655\u7406\u4e2d\u7684\u7455\u75b5\u6aa2\u6e2c:\u89e3\u91cb\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u7684\u904b\u4f5c/#reference","text":"SHAP Document: Multi-class ResNet50 on ImageNet (TensorFlow) Surface Crack Detection Dataset","title":"Reference"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/","text":"[Day 26] XAI\u5728\u8868\u683c\u578b\u8cc7\u6599\u7684\u61c9\u7528\uff1a\u89e3\u6790\u667a\u6167\u5de5\u5ee0\u4e2d\u7684\u92fc\u6750\u7f3a\u9677 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u7576\u4eca\u7684\u5de5\u696d\u9818\u57df\u4e2d\uff0c\u667a\u6167\u88fd\u9020\u3001\u78b3\u4e2d\u548c\u4ee5\u53ca\u6578\u4f4d\u96d9\u751f\u7b49\u8b70\u984c\u53d7\u5230\u5ee3\u6cdb\u95dc\u6ce8\u3002\u5176\u4e2d\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u5df2\u7d93\u958b\u59cb\u767c\u63ee\u95dc\u9375\u4f5c\u7528\uff0c\u7279\u5225\u662f\u5728\u865b\u64ec\u91cf\u6e2c\u548c\u7570\u5e38\u6aa2\u6e2c\u65b9\u9762\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\u5c07\u5e36\u5404\u4f4d\u6df1\u5165\u63a2\u8a0e\u5de5\u696d\u61c9\u7528\u5be6\u6230\u6848\u4f8b\uff0c\u5373\u57fa\u65bc\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u7684 \u92fc\u6750\u7f3a\u9677\u5075\u6e2c\u5206\u985e \u3002 [\u6848\u4f8b] \u92fc\u9435\u7f3a\u9677\u5206\u985e \u672c\u6848\u4f8b\u4f7f\u7528\u7684\u8cc7\u6599\u96c6\u4f86\u81ea UCI\uff08\u52a0\u5dde\u5927\u5b78\u723e\u7063\u5206\u6821\uff09\u7684\u958b\u653e\u6578\u64da\u5e73\u53f0\uff0c\u9019\u500b\u5e73\u53f0\u81f4\u529b\u65bc\u70ba\u6a5f\u5668\u5b78\u7fd2\u7814\u7a76\u8005\u548c\u5be6\u8e10\u8005\u63d0\u4f9b\u9ad8\u54c1\u8cea\u7684\u8cc7\u6599\u96c6\u3002\u8a72\u8cc7\u6599\u96c6\u6db5\u84cb\u4e86\u92fc\u6750\u88fd\u9020\u904e\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73fe\u7684\u591a\u7a2e\u7f3a\u9677\u60c5\u6cc1\uff0c\u5176\u4e2d\u5305\u542b\u4e867\u7a2e\u5e36\u92fc\u7f3a\u9677\u985e\u578b\uff0c\u5177\u9ad4\u5206\u5225\u662f Pastry\u3001Z_Scratch\u3001K_Scatch\u3001Stains\u3001Dirtiness\u3001Bumps\u3001Other_Faults\u3002\u53e6\u5916\u9019\u500b\u8cc7\u6599\u96c6\u662f\u4e00\u500b\u8868\u683c\u578b\u7684\u8cc7\u6599\u96c6\uff0c\u7279\u5225\u9069\u7528\u65bc\u6a5f\u5668\u5b78\u7fd2\u548c\u6578\u64da\u5206\u6790\u3002\u5b83\u5305\u542b\u4e8627\u7a2e\u4e0d\u540c\u7684\u7279\u5fb5\uff0c\u9019\u4e9b\u7279\u5fb5\u63cf\u8ff0\u4e86\u5e36\u92fc\u7684\u4e0d\u540c\u5c6c\u6027\u548c\u7279\u9ede\uff0c\u5982\u7f3a\u9677\u7684\u5927\u5c0f\u3001\u5f62\u72c0\u3001\u4f4d\u7f6e\u7b49\u7b49\u3002\u9019\u4e9b\u6578\u64da\u90fd\u662f\u5728\u88fd\u9020\u6216\u751f\u7522\u904e\u7a0b\u4e2d\u6536\u96c6\u7684\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u90fd\u6709\u76f8\u5c0d\u61c9\u7684\u6a19\u7c64\uff0c\u5373\u7f3a\u9677\u7a2e\u985e\u3002 \u8868\u683c\u578b\u8cc7\u6599\u901a\u5e38\u4ee5\u9017\u865f\u5206\u9694\u6a94(csv)\u5448\u73fe\uff0c\u6bcf\u4e00\u5217(row)\u4ee3\u8868\u4e00\u500b\u89c0\u6e2c\u503c\u6216\u6a23\u672c\uff0c\u800c\u6bcf\u4e00\u884c(col)\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\u6216\u6a19\u7c64\u3002\u5728\u9019\u500b\u7279\u5b9a\u7684\u8cc7\u6599\u96c6\u4e2d\uff0c\u6bcf\u4e00\u5217\u53ef\u80fd\u4ee3\u8868\u4e00\u500b\u6642\u9593\u9ede\u6216\u751f\u7522\u6279\u6b21\uff0c\u800c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u7d44\u88fd\u7a0b\u53c3\u6578\u4ee5\u53ca\u5c0d\u61c9\u7684\u6a19\u7c64\u7a2e\u985e\u3002\u9019\u4efd\u8cc7\u6599\u96c6\u6bd4\u8f03\u7279\u5225\u7684\u662f\u8f38\u51fa\u7684\u6a19\u7c64\u662f\u4ee5 one hot encoding \u7684\u65b9\u5f0f\u5448\u73fe\u3002\u5728\u7b49\u7b49\u7684\u5be6\u4f5c\u4e2d\u6211\u5011\u5fc5\u9808\u5c07\u9019\u4e9b\u8cc7\u6599\u9032\u884c\u524d\u8655\u7406\uff0c\u4e26\u53d6\u5f97\u76f8\u5c0d\u61c9\u7684\u6a19\u7c64\u7d22\u5f15\u3002 \u8f09\u5165\u8cc7\u6599\u96c6 \u9996\u5148\u900f\u904e pandas \u8f09\u5165\u4e8b\u5148\u6e96\u5099\u597d\u7684\u8cc7\u6599\u96c6\u3002\u5c07 csv \u6a94\u6848\u4e2d\u7684\u6578\u64da\u8b80\u53d6\u4e26\u5b58\u5132\u5728\u540d\u70ba df_data \u7684 DataFrame \u8b8a\u6578\u4e2d\uff0c\u4ee5\u4fbf\u5f8c\u7e8c\u7684\u6578\u64da\u5206\u6790\u548c\u8655\u7406\u3002 import numpy as np import pandas as pd url = 'https://raw.githubusercontent.com/andy6804tw/crazyai-xai/main/dataset/stell-faults.csv' df_data = pd . read_csv ( url ) \u63a5\u8457\u6211\u5011\u5fc5\u9808\u5f9e df_data \u5206\u96e2\u8f38\u5165\u7279\u5fb5 X \u8207\u6a19\u7c64 y\u3002\u9996\u5148\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63d0\u53d6\u51fa\u7279\u5fb5\u6b04\u4f4d\u7684\u540d\u7a31\uff0c\u7136\u5f8c\u5c07\u9019\u4e9b\u7279\u5fb5\u7684\u6578\u64da\u63d0\u53d6\u51fa\u4f86\uff0c\u5b58\u5132\u5728\u8b8a\u6578 X \u4e2d\u3002\u63a5\u8457\u5f9e\u8cc7\u6599\u4e2d\u63d0\u53d6\u4e86\u5305\u542b\u6a19\u7c64\u7684 one hot encoding \u6578\u64da\uff0c\u7136\u5f8c\u4f7f\u7528 argmax() \u627e\u5230\u6bcf\u500b one hot \u5411\u91cf\u4e2d\u7684\u6700\u5927\u503c\u7d22\u5f15\uff0c\u5c07\u5176\u8996\u70ba\u5c0d\u61c9\u7684\u6a19\u7c64\uff0c\u6700\u7d42\u5c07\u9019\u4e9b\u6a19\u7c64\u5b58\u5132\u5728\u8b8a\u6578 y_labels \u4e2d\u3002 x_feature_names = df_data . columns [: - 7 ] . values # \u53d6\u5f97\u7279\u5fb5\u6b04\u4f4d\u540d\u7a31 X = df_data [ x_feature_names ] . values # \u53d6\u51fa\u8a13\u7df4\u8cc7\u6599\u7279\u5fb5 y_label_names = df_data . columns [ - 7 :] . values # \u53d6\u5f97\u6a19\u7c64\u6b04\u4f4d\u540d\u7a31 y_one_hot_array = df_data [ y_label_names ] . values # \u53d6\u51fa\u6a19\u7c64 # \u4f7f\u7528argmax\u51fd\u6578\u627e\u5230\u6bcf\u500bone hot\u5411\u91cf\u4e2d\u7684\u6700\u5927\u503c\u7d22\u5f15\uff0c\u4e26\u5c07\u5176\u8996\u70ba\u5c0d\u61c9\u7684\u6a19\u7c64 y_labels = y_one_hot_array . argmax ( axis = 1 ) print ( f 'The shape of X: { X . shape } ' ) print ( f 'The shape of y_labels: { y_labels . shape } ' ) \u5f9e\u4e0a\u9762\u7684\u8f38\u51fa\u7d50\u679c\u53ef\u4ee5\u77e5\u9053\u8cc7\u6599\u96c6\u7e3d\u5171\u67091941\u7b46\uff0c\u6bcf\u7b46\u8cc7\u6599\u7e3d\u5171\u670927\u500b\u7279\u5fb5\u3002 The shape of X: (1941, 27) The shape of y_labels: (1941,) \u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6 \u9019\u88e1\u4f7f\u7528 sklearn \u5957\u4ef6\u4e2d\u7684 train_test_split() \u5f9e\u539f\u59cb\u8cc7\u6599\u96c6\u4e2d\u5207\u5206\u51fa\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6\u3002test_size \u53c3\u6578\u8a2d\u7f6e0.1\u5373\u4ee3\u8868\u5f9e\u8cc7\u6599\u96c61941\u7b46\u4e2d\u52071%\u6bd4\u4f8b\u4f5c\u70ba\u6e2c\u8a66\u96c6\uff0crandom_state \u78ba\u4fdd\u6bcf\u6b21\u904b\u884c\u7d50\u679c\u76f8\u540c\uff0cstratify \u53c3\u6578\u6839\u64da y_labels \u7684\u985e\u5225\u5206\u4f48\u4f86\u78ba\u4fdd\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6\u4e2d\u985e\u5225\u7684\u5206\u4f48\u6bd4\u4f8b\u76f8\u4f3c\u3002 from sklearn.model_selection import train_test_split # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y_labels , test_size = 0.01 , random_state = 42 , stratify = y_labels ) # \u89c0\u5bdf\u5207\u5272\u5f8c\u8cc7\u6599\u7684\u7dad\u5ea6\u8207\u7b46\u6578 print ( f 'The shape of X_train: { X_train . shape } \\t y_train: { y_train . shape } ' ) print ( f 'The shape of X_test: { X_test . shape } \\t y_test: { y_test . shape } ' ) \u8f38\u51fa\u7d50\u679c\uff1a The shape of X_train: (1746, 27) y_train: (1746,) The shape of X_test: (195, 27) y_test: (195,) \u8cc7\u6599\u96c6\u5207\u5272\u5f8c\u6211\u5011\u89c0\u5bdf\u518d\u8a13\u7df4\u96c6\u4e2d\u6bcf\u500b\u985e\u5225\u7f3a\u9677\u7684\u6578\u91cf\u5206\u4f48\u60c5\u6cc1\uff0c\u53ef\u4ee5\u900f\u904e pandas \u7684 value_counts() \u65b9\u6cd5\u8fc5\u901f\u8a08\u7b97\u6bcf\u500b\u4e0d\u540c\u985e\u5225\u7684\u51fa\u73fe\u6b21\u6578\u3002\u901a\u5e38\uff0c\u9019\u500b\u51fd\u6578\u7528\u65bc\u7d71\u8a08\u548c\u5206\u6790\u8cc7\u6599\u4e2d\u7684\u985e\u5225\u578b\u8b8a\u6578\uff0c\u4ee5\u4fbf\u4e86\u89e3\u6bcf\u500b\u985e\u5225\u7684\u5206\u4f48\u60c5\u6cc1\u3002\u5f9e\u4e0b\u5716\u7684\u7d50\u679c\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u6bcf\u500b\u7f3a\u9677\u985e\u5225\u7684\u6578\u91cf\u5206\u4f48\u4e0d\u5747\u52fb\uff0c\u5176\u4e2d Other_Faults \u985e\u5225\u7684\u6a23\u672c\u6578\u6700\u591a\uff0c\u5171\u6709666\u7b46\u3002\u76f8\u8f03\u4e4b\u4e0b Stains \u548c Dirtiness \u985e\u5225\u7684\u6a23\u672c\u6578\u90fd\u4e0d\u5230100\u7b46\u3002\u9019\u986f\u793a\u4e86\u9019\u500b\u8cc7\u6599\u96c6\u5b58\u5728\u660e\u986f\u7684\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c\u3002 import matplotlib.pyplot as plt # \u67e5\u770b\u4e03\u7a2e\u985e\u5225\u7b46\u6578 label_counts = pd . Series ( y_train ) . value_counts ( sort = False ) fig = label_counts . plot ( kind = 'bar' ) fig . set_xticklabels ( label_counts ) fig . set_xticklabels ( y_label_names ) # \u5728\u6bcf\u500bbar\u4e0a\u65b9\u986f\u793a\u6578\u503c for index , value in enumerate ( label_counts ): plt . text ( index , value , str ( value ), ha = 'center' , va = 'bottom' ) plt . show () SMOTE\u8655\u7406\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c SMOTE\uff08Synthetic Minority Over-sampling Technique\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u8655\u7406\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c\u7684\u6280\u8853\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u6a19\u662f\u5408\u6210\u65b0\u7684\u5c11\u6578\u985e\u6a23\u672c\uff0c\u4ee5\u5e73\u8861\u4e0d\u540c\u985e\u5225\u4e4b\u9593\u7684\u6578\u91cf\u5dee\u8ddd\u3002\u9996\u5148\u8981\u5b89\u88dd imbalanced-learn \u5957\u4ef6\uff0c\u5982\u679c\u5c1a\u672a\u5b89\u88dd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd\uff1a pip install imbalanced-learn SMOTE \u65b9\u6cd5\u63a1\u7528\u904e\u53d6\u6a23\uff08Oversampling\uff09\u6280\u8853\uff0c\u4ee5\u5408\u6210\u65b0\u7684\u6a23\u672c\uff0c\u4ee5\u5be6\u73fe\u4e0d\u540c\u985e\u5225\u4e4b\u9593\u7684\u5e73\u8861\u3002\u5f9e\u4e0b\u5716\u7684\u63a1\u6a23\u7d50\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u500b\u985e\u5225\u5747\u6709666\u7b46\u6578\u64da\u3002 from imblearn.over_sampling import SMOTE smo = SMOTE ( sampling_strategy = 'auto' , random_state = 42 ) X_smo , y_smo = smo . fit_resample ( X , y_labels ) \u5efa\u7acbLightGBM\u6a21\u578b LightGBM \u662f\u8f15\u91cf\u5316 (Light) \u7684\u68af\u5ea6\u63d0\u5347\u6a5f (GBM) \u7684\u5be6\u4f8b\u3002\u5176\u76f8\u5c0d XGBoost \u4f86\u8aaa\u5b83\u5177\u6709\u8a13\u7df4\u901f\u5ea6\u5feb\u3001\u8a18\u61b6\u9ad4\u4f54\u7528\u4f4e\u7684\u7279\u9ede\uff0c\u56e0\u6b64\u8fd1\u5e7e\u5e74 LightGBM \u5728 Kaggle \u4e0a\u4e5f\u7b97\u662f\u71b1\u9580\u6a21\u578b\u4e00\u3002\u5728\u672c\u98ef\u7bc4\u4f8b\u4e2d\u6211\u5011\u63a1\u7528 LightGBM \u5206\u985e\u5668\uff0c\u82e5\u9084\u6c92\u5b89\u88dd\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u4ee5\u4e0b\u6307\u4ee4\u9032\u884c\u5b89\u88dd\u3002 pip install lightgbm \u5b89\u88dd\u7d50\u675f\u5f8c\u5373\u53ef\u8f09\u5165 lightgbm \u5957\u4ef6\u4e26\u9078\u7528 LGBMClassifier \u5206\u985e\u5668\u9032\u884c\u6a21\u578b\u8a13\u7df4\u3002 import lightgbm as lgb # \u5efa\u7acb\u6a21\u578b model = lgb . LGBMClassifier () # \u8a13\u7df4\u6a21\u578b model . fit ( X_train , y_train ) \u8a13\u7df4\u7d50\u675f\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e sklearn \u7684 classification_report() \u65b9\u6cd5\u4f86\u67e5\u770b\u6a21\u578b\u5728\u6e2c\u8a66\u96c6\u4e0a\u7684\u5206\u985e\u5831\u544a\uff0c\u8a72\u5831\u544a\u5305\u542b\u4e86\u6a21\u578b\u7684\u7cbe\u78ba\u5ea6\u3001\u53ec\u56de\u7387\u3001F1\u5206\u6578\u7b49\u8a55\u4f30\u6307\u6a19\uff0c\u53ef\u4ee5\u7528\u4f86\u8a55\u4f30\u6a21\u578b\u7684\u6027\u80fd\u3002 from sklearn.metrics import classification_report pred_test = model . predict ( X_test ) print ( classification_report ( y_test , pred_test )) \u5f9e\u8a55\u4f30\u5831\u544a\u4e2d\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6e2c\u8a66\u96c6\u7e3d\u5171\u6709195\u7b46\uff0c\u5176\u4e2d 0: Pastry \u3001 5: Bumps \u548c 6: Other_Faults \u5169\u500b\u7684\u8fa8\u8b58\u7387\u7d04\u4e03\u6210\u3002\u5176\u9918\u7684\u7455\u75b5\u985e\u5225\u90fd\u8868\u73fe\u5f97\u4e0d\u932f\u3002 precision recall f1-score support 0 0.63 0.75 0.69 16 1 1.00 0.95 0.97 19 2 0.93 0.95 0.94 39 3 1.00 0.86 0.92 7 4 1.00 0.83 0.91 6 5 0.70 0.67 0.68 39 6 0.74 0.75 0.75 69 accuracy 0.80 195 macro avg 0.86 0.82 0.84 195 weighted avg 0.80 0.80 0.80 195 \u6211\u5011\u9032\u4e00\u6b65\u5f9e\u6df7\u6dc6\u77e9\u9663\uff08confusion matrix\uff09\u4e2d\u5206\u6790\u4e86\u54ea\u4e9b\u985e\u5225\u5bb9\u6613\u88ab\u8aa4\u5224\u6210\u5176\u4ed6\u985e\u5225\u3002\u6211\u5011\u767c\u73fe Other_Faults \u6709\u5c11\u6578\u5e7e\u7b46\u5bb9\u6613\u8ddf Pastry \u548c Bumps \u641e\u6df7 \uff0c\u540c\u6642\u670911\u7b46 Bumps \u8cc7\u6599\u88ab\u8aa4\u5224\u70ba Other_Faults \u3002 \u900f\u904e\u6df7\u6dc6\u77e9\u9663\u53ef\u4ee5\u89e3\u91cb\u5206\u985e\u6a21\u578b\u5728\u54ea\u5e7e\u7a2e\u985e\u5225\u8868\u73fe\u8f03\u4e0d\u597d\u3002 Kernel SHAP \u89e3\u91cb\u6a21\u578b \u5efa\u7acb\u4e00\u500b\u901a\u7528\u7684 KernelExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u8a66\u5716\u89e3\u91cb\u525b\u525b\u8a13\u7df4\u7684 LightGBM \u5206\u985e\u5668\u3002\u6211\u5011\u5f9e\u8a13\u7df4\u96c6\u4e2d\u53d6\u51fa\u524d 100 \u7b46\u8cc7\u6599\uff0c\u4ee5\u4ee3\u8868\u6574\u9ad4\u7279\u5fb5\u503c\u7684\u5206\u4f48\uff0c\u7528\u65bc\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002\u7136\u5f8c\uff0c\u6211\u5011\u5c07\u4f7f\u7528\u6e2c\u8a66\u96c6\u4e2d\u7684\u524d 10 \u7b46\u8cc7\u6599\u4f86\u8a08\u7b97 Shapley values\u3002\u6b64\u5916\uff0c\u6211\u5011\u5c07 nsamples \u8a2d\u5b9a\u70ba 100\uff0c\u9019\u8868\u793a\u6211\u5011\u5c07\u9032\u884c 100 \u6b21\u8499\u5730\u5361\u7f85\u62bd\u6a23\uff0c\u5f9e KernelExplainer \u8a2d\u5b9a\u7684\u8cc7\u6599\u4e2d\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\uff0c\u4e26\u5efa\u7acb\u4e00\u500b SHAP \u7c21\u5316\u53ef\u89e3\u91cb\u6a21\u578b\u3002 import shap shap . initjs () # \u4f7f\u7528 Kernel SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . KernelExplainer ( model = model . predict_proba , data = X_train [: 100 ], link = 'logit' ) shap_values = explainer . shap_values ( X = X_test [: 10 ], nsamples = 100 ) SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 SHAP Summary Plot \u4f86\u9032\u884c\u6a21\u578b\u7684\u5168\u5c40\u89e3\u91cb\uff0c\u8a72\u5716\u8868\u986f\u793a\u4e86\u6bcf\u500b\u7279\u5fb5\u8b8a\u91cf\u5c0d\u6574\u9ad4\u5e73\u5747\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u3002\u6bcf\u500b\u984f\u8272\u4ee3\u8868\u4e0d\u540c\u7684\u985e\u5225\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u8f38\u51fa\u7684\u5e73\u5747\u8ca2\u737b\u7a0b\u5ea6\uff0c\u4ee5\u53ca\u5728\u4e0d\u540c\u985e\u5225\u4e0b\u54ea\u500b\u7279\u5fb5\u4f54\u6709\u8f03\u5927\u7684\u91cd\u8981\u6027\u3002 shap . summary_plot ( shap_values , X_test , plot_type = \"bar\" , feature_names = x_feature_names ) \u5f9e\u4e0b\u5716\u6211\u5011\u53ef\u4ee5\u770b\u5230\u524d\u4e09\u540d\u91cd\u8981\u7684\u7279\u5fb5\u70ba\uff1a 1. Steel_Plate_Thickness 2. Length_of_Conveyer 3. X_Maximum SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 Force Plot \u65b9\u6cd5\u89c0\u5bdf\u55ae\u4e00\u7b46\u8cc7\u6599\u5728\u6a21\u578b\u4e2d\u7684\u9810\u6e2c\u60c5\u6cc1\u3002\u5728 SHAP \u5957\u4ef6\u4e2d\uff0cForce Plot \u63d0\u4f9b\u4e86\u5c0d\u55ae\u4e00\u6a21\u578b\u9810\u6e2c\u7684\u89e3\u91cb\u6027\u5448\u73fe\u3002\u9019\u500b\u5716\u8868\u6e05\u695a\u986f\u793a\u4e86\u5404\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u5c0d\u7279\u5b9a\u8f38\u5165\u503c\u7684\u9810\u6e2c\u6240\u505a\u7684\u8ca2\u737b\u3002\u5f9e\u4e0b\u5716\u7d50\u679c\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u70ba5\uff08Bumps\uff09\uff0c\u5176\u9810\u6e2c\u6a5f\u7387\u70ba 0.939\u3002\u56e0\u6b64\u5716\u4e2d\u7684 Force Plot \u662f\u91dd\u5c0d\u89e3\u91cb\u70ba\u4ec0\u9ebc\u9019\u7b46\u8cc7\u6599\u8f38\u5165\u6703\u5f97\u5230\u6a19\u7c64\u70ba5\u7684 Shapley values \u89e3\u91cb\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 pred_class = int ( model . predict ( X_test [[ index ]])[ 0 ]) pred_proba = model . predict_proba ( X_test [[ index ]])[ 0 ][ pred_class ] print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { pred_class } \u6a5f\u7387\u503c: { pred_proba } ' ) print ( f '\u771f\u5be6\u7b54\u6848: { int ( y_test [ index ]) } ' ) shap . force_plot ( explainer . expected_value [ pred_class ], shap_values [ pred_class ][ index ], X_test [ index ], feature_names = x_feature_names , link = 'logit' ) SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb) \u6211\u5011\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u5730\u7528\u7011\u5e03\u5716\u8996\u89ba\u5316\u6392\u5e8f\u91cd\u8981\u7684\u7279\u5fb5\uff0c\u540c\u6642\u89c0\u770b\u6bcf\u500b\u7279\u5fb5\u7684\u76f8\u5c0d\u61c9 Shapley values\u3002 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ pred_class ][ index ], base_values = explainer . expected_value [ pred_class ], data = X_test [ index ], feature_names = x_feature_names ), max_display = 27 ) \u5168\u90e8\u7279\u5fb5\u7684Shapley value\u7e3d\u548c\u52a0\u4e0a\u57fa\u6e96\u503c\uff0c\u6700\u5f8c\u518d\u901a\u904eSigmoid\u51fd\u6578\u5c31\u662f\u8f38\u51fa\u7684\u6a5f\u7387\u503c\u4e86\u3002 Permutation importance\u89e3\u91cb\u5168\u5c40\u6a21\u578b \u5728\u672c\u7cfb\u5217\u4e2d Day 10 \u4ecb\u7d39\u4e86\u5229\u7528\u7279\u5fb5\u64fe\u52d5\u7684\u65b9\u6cd5\u89e3\u91cb\u6574\u500b\u6a21\u578b\uff0c\u7576\u6642\u4f7f\u7528\u4e86 eli5 \u5be6\u4f5c\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u7684\u6392\u5e8f\u3002\u9019\u88e1\u518d\u5206\u4eab\u53e6\u4e00\u500b\u65b9\u6cd5\u5be6\u4f5c\uff0c\u90a3\u5c31\u662f\u4f7f\u7528 sklearn \u5957\u4ef6\u4e2d\u7684 permutation_importance() \u3002 from sklearn.inspection import permutation_importance # \u4f7f\u7528 permutation_importance \u51fd\u6578\u8a08\u7b97\u7279\u5fb5\u91cd\u8981\u6027 result = permutation_importance ( model , X_test , y_test , n_repeats = 10 , random_state = 42 , scoring = 'accuracy' ) # \u5370\u51fa\u5404\u7279\u5fb5\u7684\u5e73\u5747\u91cd\u8981\u6027\u6392\u5e8f sorted_idx = result . importances_mean . argsort ()[:: - 1 ] for i in sorted_idx : print ( f \" { x_feature_names [ i ] : <10 } importance: { result . importances_mean [ i ] : .3f } +/- { result . importances_std [ i ] : .3f } \" ) \u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u6a21\u578b\u5728\u8a55\u4f30\u6bcf\u500b\u7455\u75b5\u6642\u6240\u4f7f\u7528\u7684\u91cd\u8981\u7279\u5fb5\u6392\u5e8f\u3002\u53e6\u5916\u53ef\u4ee5\u5c07\u9019\u4e9b\u6392\u5e8f\u7d50\u679c\u8207 SHAP Summary Plot \u7684\u5168\u5c40\u89e3\u91cb\u9032\u884c\u6bd4\u5c0d\uff0c\u4ee5\u6aa2\u67e5\u4e0d\u540c\u65b9\u6cd5\u5728\u6a21\u578b\u7279\u5fb5\u91cd\u8981\u6027\u6392\u5e8f\u65b9\u9762\u662f\u5426\u5177\u6709\u4e00\u81f4\u6027\u3002\u7531\u65bc\u7406\u8ad6\u65b9\u6cd5\u548c\u8cc7\u6599\u62bd\u6a23\u7684\u96a8\u6a5f\u6027\uff0c\u7121\u6cd5\u4fdd\u8b49\u6bcf\u7a2e\u65b9\u6cd5\u7684\u89e3\u91cb\u90fd\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5c0b\u627e\u5171\u901a\u7684\u89e3\u91cb\u4f86\u589e\u5f37\u53ef\u4fe1\u5ea6\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01 Refernece UCI \u8cc7\u6599\u96c6\uff1aSteel Plates Faults \u92fc\u6750\u7f3a\u9677\u5075\u6e2c\u5206\u985e\uff1aLightGBM\u738b\u8005\u767b\u9802","title":"[Day 26] XAI\u5728\u8868\u683c\u578b\u8cc7\u6599\u7684\u61c9\u7528\uff1a\u89e3\u6790\u667a\u6167\u5de5\u5ee0\u4e2d\u7684\u92fc\u6750\u7f3a\u9677"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#day-26-xai","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u5728\u7576\u4eca\u7684\u5de5\u696d\u9818\u57df\u4e2d\uff0c\u667a\u6167\u88fd\u9020\u3001\u78b3\u4e2d\u548c\u4ee5\u53ca\u6578\u4f4d\u96d9\u751f\u7b49\u8b70\u984c\u53d7\u5230\u5ee3\u6cdb\u95dc\u6ce8\u3002\u5176\u4e2d\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u5df2\u7d93\u958b\u59cb\u767c\u63ee\u95dc\u9375\u4f5c\u7528\uff0c\u7279\u5225\u662f\u5728\u865b\u64ec\u91cf\u6e2c\u548c\u7570\u5e38\u6aa2\u6e2c\u65b9\u9762\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\u5c07\u5e36\u5404\u4f4d\u6df1\u5165\u63a2\u8a0e\u5de5\u696d\u61c9\u7528\u5be6\u6230\u6848\u4f8b\uff0c\u5373\u57fa\u65bc\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u7684 \u92fc\u6750\u7f3a\u9677\u5075\u6e2c\u5206\u985e \u3002","title":"[Day 26] XAI\u5728\u8868\u683c\u578b\u8cc7\u6599\u7684\u61c9\u7528\uff1a\u89e3\u6790\u667a\u6167\u5de5\u5ee0\u4e2d\u7684\u92fc\u6750\u7f3a\u9677"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#_1","text":"\u672c\u6848\u4f8b\u4f7f\u7528\u7684\u8cc7\u6599\u96c6\u4f86\u81ea UCI\uff08\u52a0\u5dde\u5927\u5b78\u723e\u7063\u5206\u6821\uff09\u7684\u958b\u653e\u6578\u64da\u5e73\u53f0\uff0c\u9019\u500b\u5e73\u53f0\u81f4\u529b\u65bc\u70ba\u6a5f\u5668\u5b78\u7fd2\u7814\u7a76\u8005\u548c\u5be6\u8e10\u8005\u63d0\u4f9b\u9ad8\u54c1\u8cea\u7684\u8cc7\u6599\u96c6\u3002\u8a72\u8cc7\u6599\u96c6\u6db5\u84cb\u4e86\u92fc\u6750\u88fd\u9020\u904e\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73fe\u7684\u591a\u7a2e\u7f3a\u9677\u60c5\u6cc1\uff0c\u5176\u4e2d\u5305\u542b\u4e867\u7a2e\u5e36\u92fc\u7f3a\u9677\u985e\u578b\uff0c\u5177\u9ad4\u5206\u5225\u662f Pastry\u3001Z_Scratch\u3001K_Scatch\u3001Stains\u3001Dirtiness\u3001Bumps\u3001Other_Faults\u3002\u53e6\u5916\u9019\u500b\u8cc7\u6599\u96c6\u662f\u4e00\u500b\u8868\u683c\u578b\u7684\u8cc7\u6599\u96c6\uff0c\u7279\u5225\u9069\u7528\u65bc\u6a5f\u5668\u5b78\u7fd2\u548c\u6578\u64da\u5206\u6790\u3002\u5b83\u5305\u542b\u4e8627\u7a2e\u4e0d\u540c\u7684\u7279\u5fb5\uff0c\u9019\u4e9b\u7279\u5fb5\u63cf\u8ff0\u4e86\u5e36\u92fc\u7684\u4e0d\u540c\u5c6c\u6027\u548c\u7279\u9ede\uff0c\u5982\u7f3a\u9677\u7684\u5927\u5c0f\u3001\u5f62\u72c0\u3001\u4f4d\u7f6e\u7b49\u7b49\u3002\u9019\u4e9b\u6578\u64da\u90fd\u662f\u5728\u88fd\u9020\u6216\u751f\u7522\u904e\u7a0b\u4e2d\u6536\u96c6\u7684\uff0c\u6bcf\u4e00\u7b46\u8cc7\u6599\u90fd\u6709\u76f8\u5c0d\u61c9\u7684\u6a19\u7c64\uff0c\u5373\u7f3a\u9677\u7a2e\u985e\u3002 \u8868\u683c\u578b\u8cc7\u6599\u901a\u5e38\u4ee5\u9017\u865f\u5206\u9694\u6a94(csv)\u5448\u73fe\uff0c\u6bcf\u4e00\u5217(row)\u4ee3\u8868\u4e00\u500b\u89c0\u6e2c\u503c\u6216\u6a23\u672c\uff0c\u800c\u6bcf\u4e00\u884c(col)\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\u6216\u6a19\u7c64\u3002\u5728\u9019\u500b\u7279\u5b9a\u7684\u8cc7\u6599\u96c6\u4e2d\uff0c\u6bcf\u4e00\u5217\u53ef\u80fd\u4ee3\u8868\u4e00\u500b\u6642\u9593\u9ede\u6216\u751f\u7522\u6279\u6b21\uff0c\u800c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u7d44\u88fd\u7a0b\u53c3\u6578\u4ee5\u53ca\u5c0d\u61c9\u7684\u6a19\u7c64\u7a2e\u985e\u3002\u9019\u4efd\u8cc7\u6599\u96c6\u6bd4\u8f03\u7279\u5225\u7684\u662f\u8f38\u51fa\u7684\u6a19\u7c64\u662f\u4ee5 one hot encoding \u7684\u65b9\u5f0f\u5448\u73fe\u3002\u5728\u7b49\u7b49\u7684\u5be6\u4f5c\u4e2d\u6211\u5011\u5fc5\u9808\u5c07\u9019\u4e9b\u8cc7\u6599\u9032\u884c\u524d\u8655\u7406\uff0c\u4e26\u53d6\u5f97\u76f8\u5c0d\u61c9\u7684\u6a19\u7c64\u7d22\u5f15\u3002","title":"[\u6848\u4f8b] \u92fc\u9435\u7f3a\u9677\u5206\u985e"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#_2","text":"\u9996\u5148\u900f\u904e pandas \u8f09\u5165\u4e8b\u5148\u6e96\u5099\u597d\u7684\u8cc7\u6599\u96c6\u3002\u5c07 csv \u6a94\u6848\u4e2d\u7684\u6578\u64da\u8b80\u53d6\u4e26\u5b58\u5132\u5728\u540d\u70ba df_data \u7684 DataFrame \u8b8a\u6578\u4e2d\uff0c\u4ee5\u4fbf\u5f8c\u7e8c\u7684\u6578\u64da\u5206\u6790\u548c\u8655\u7406\u3002 import numpy as np import pandas as pd url = 'https://raw.githubusercontent.com/andy6804tw/crazyai-xai/main/dataset/stell-faults.csv' df_data = pd . read_csv ( url ) \u63a5\u8457\u6211\u5011\u5fc5\u9808\u5f9e df_data \u5206\u96e2\u8f38\u5165\u7279\u5fb5 X \u8207\u6a19\u7c64 y\u3002\u9996\u5148\u5f9e\u8cc7\u6599\u96c6\u4e2d\u63d0\u53d6\u51fa\u7279\u5fb5\u6b04\u4f4d\u7684\u540d\u7a31\uff0c\u7136\u5f8c\u5c07\u9019\u4e9b\u7279\u5fb5\u7684\u6578\u64da\u63d0\u53d6\u51fa\u4f86\uff0c\u5b58\u5132\u5728\u8b8a\u6578 X \u4e2d\u3002\u63a5\u8457\u5f9e\u8cc7\u6599\u4e2d\u63d0\u53d6\u4e86\u5305\u542b\u6a19\u7c64\u7684 one hot encoding \u6578\u64da\uff0c\u7136\u5f8c\u4f7f\u7528 argmax() \u627e\u5230\u6bcf\u500b one hot \u5411\u91cf\u4e2d\u7684\u6700\u5927\u503c\u7d22\u5f15\uff0c\u5c07\u5176\u8996\u70ba\u5c0d\u61c9\u7684\u6a19\u7c64\uff0c\u6700\u7d42\u5c07\u9019\u4e9b\u6a19\u7c64\u5b58\u5132\u5728\u8b8a\u6578 y_labels \u4e2d\u3002 x_feature_names = df_data . columns [: - 7 ] . values # \u53d6\u5f97\u7279\u5fb5\u6b04\u4f4d\u540d\u7a31 X = df_data [ x_feature_names ] . values # \u53d6\u51fa\u8a13\u7df4\u8cc7\u6599\u7279\u5fb5 y_label_names = df_data . columns [ - 7 :] . values # \u53d6\u5f97\u6a19\u7c64\u6b04\u4f4d\u540d\u7a31 y_one_hot_array = df_data [ y_label_names ] . values # \u53d6\u51fa\u6a19\u7c64 # \u4f7f\u7528argmax\u51fd\u6578\u627e\u5230\u6bcf\u500bone hot\u5411\u91cf\u4e2d\u7684\u6700\u5927\u503c\u7d22\u5f15\uff0c\u4e26\u5c07\u5176\u8996\u70ba\u5c0d\u61c9\u7684\u6a19\u7c64 y_labels = y_one_hot_array . argmax ( axis = 1 ) print ( f 'The shape of X: { X . shape } ' ) print ( f 'The shape of y_labels: { y_labels . shape } ' ) \u5f9e\u4e0a\u9762\u7684\u8f38\u51fa\u7d50\u679c\u53ef\u4ee5\u77e5\u9053\u8cc7\u6599\u96c6\u7e3d\u5171\u67091941\u7b46\uff0c\u6bcf\u7b46\u8cc7\u6599\u7e3d\u5171\u670927\u500b\u7279\u5fb5\u3002 The shape of X: (1941, 27) The shape of y_labels: (1941,)","title":"\u8f09\u5165\u8cc7\u6599\u96c6"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#_3","text":"\u9019\u88e1\u4f7f\u7528 sklearn \u5957\u4ef6\u4e2d\u7684 train_test_split() \u5f9e\u539f\u59cb\u8cc7\u6599\u96c6\u4e2d\u5207\u5206\u51fa\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6\u3002test_size \u53c3\u6578\u8a2d\u7f6e0.1\u5373\u4ee3\u8868\u5f9e\u8cc7\u6599\u96c61941\u7b46\u4e2d\u52071%\u6bd4\u4f8b\u4f5c\u70ba\u6e2c\u8a66\u96c6\uff0crandom_state \u78ba\u4fdd\u6bcf\u6b21\u904b\u884c\u7d50\u679c\u76f8\u540c\uff0cstratify \u53c3\u6578\u6839\u64da y_labels \u7684\u985e\u5225\u5206\u4f48\u4f86\u78ba\u4fdd\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6\u4e2d\u985e\u5225\u7684\u5206\u4f48\u6bd4\u4f8b\u76f8\u4f3c\u3002 from sklearn.model_selection import train_test_split # \u5207\u5206\u8cc7\u6599\u96c6\u70ba\u8a13\u7df4\u96c6\u548c\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y_labels , test_size = 0.01 , random_state = 42 , stratify = y_labels ) # \u89c0\u5bdf\u5207\u5272\u5f8c\u8cc7\u6599\u7684\u7dad\u5ea6\u8207\u7b46\u6578 print ( f 'The shape of X_train: { X_train . shape } \\t y_train: { y_train . shape } ' ) print ( f 'The shape of X_test: { X_test . shape } \\t y_test: { y_test . shape } ' ) \u8f38\u51fa\u7d50\u679c\uff1a The shape of X_train: (1746, 27) y_train: (1746,) The shape of X_test: (195, 27) y_test: (195,) \u8cc7\u6599\u96c6\u5207\u5272\u5f8c\u6211\u5011\u89c0\u5bdf\u518d\u8a13\u7df4\u96c6\u4e2d\u6bcf\u500b\u985e\u5225\u7f3a\u9677\u7684\u6578\u91cf\u5206\u4f48\u60c5\u6cc1\uff0c\u53ef\u4ee5\u900f\u904e pandas \u7684 value_counts() \u65b9\u6cd5\u8fc5\u901f\u8a08\u7b97\u6bcf\u500b\u4e0d\u540c\u985e\u5225\u7684\u51fa\u73fe\u6b21\u6578\u3002\u901a\u5e38\uff0c\u9019\u500b\u51fd\u6578\u7528\u65bc\u7d71\u8a08\u548c\u5206\u6790\u8cc7\u6599\u4e2d\u7684\u985e\u5225\u578b\u8b8a\u6578\uff0c\u4ee5\u4fbf\u4e86\u89e3\u6bcf\u500b\u985e\u5225\u7684\u5206\u4f48\u60c5\u6cc1\u3002\u5f9e\u4e0b\u5716\u7684\u7d50\u679c\u53ef\u4ee5\u89c0\u5bdf\u5230\uff0c\u6bcf\u500b\u7f3a\u9677\u985e\u5225\u7684\u6578\u91cf\u5206\u4f48\u4e0d\u5747\u52fb\uff0c\u5176\u4e2d Other_Faults \u985e\u5225\u7684\u6a23\u672c\u6578\u6700\u591a\uff0c\u5171\u6709666\u7b46\u3002\u76f8\u8f03\u4e4b\u4e0b Stains \u548c Dirtiness \u985e\u5225\u7684\u6a23\u672c\u6578\u90fd\u4e0d\u5230100\u7b46\u3002\u9019\u986f\u793a\u4e86\u9019\u500b\u8cc7\u6599\u96c6\u5b58\u5728\u660e\u986f\u7684\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c\u3002 import matplotlib.pyplot as plt # \u67e5\u770b\u4e03\u7a2e\u985e\u5225\u7b46\u6578 label_counts = pd . Series ( y_train ) . value_counts ( sort = False ) fig = label_counts . plot ( kind = 'bar' ) fig . set_xticklabels ( label_counts ) fig . set_xticklabels ( y_label_names ) # \u5728\u6bcf\u500bbar\u4e0a\u65b9\u986f\u793a\u6578\u503c for index , value in enumerate ( label_counts ): plt . text ( index , value , str ( value ), ha = 'center' , va = 'bottom' ) plt . show ()","title":"\u5207\u5272\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#smote","text":"SMOTE\uff08Synthetic Minority Over-sampling Technique\uff09\u662f\u4e00\u7a2e\u7528\u65bc\u8655\u7406\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c\u7684\u6280\u8853\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u6a19\u662f\u5408\u6210\u65b0\u7684\u5c11\u6578\u985e\u6a23\u672c\uff0c\u4ee5\u5e73\u8861\u4e0d\u540c\u985e\u5225\u4e4b\u9593\u7684\u6578\u91cf\u5dee\u8ddd\u3002\u9996\u5148\u8981\u5b89\u88dd imbalanced-learn \u5957\u4ef6\uff0c\u5982\u679c\u5c1a\u672a\u5b89\u88dd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd\uff1a pip install imbalanced-learn SMOTE \u65b9\u6cd5\u63a1\u7528\u904e\u53d6\u6a23\uff08Oversampling\uff09\u6280\u8853\uff0c\u4ee5\u5408\u6210\u65b0\u7684\u6a23\u672c\uff0c\u4ee5\u5be6\u73fe\u4e0d\u540c\u985e\u5225\u4e4b\u9593\u7684\u5e73\u8861\u3002\u5f9e\u4e0b\u5716\u7684\u63a1\u6a23\u7d50\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u500b\u985e\u5225\u5747\u6709666\u7b46\u6578\u64da\u3002 from imblearn.over_sampling import SMOTE smo = SMOTE ( sampling_strategy = 'auto' , random_state = 42 ) X_smo , y_smo = smo . fit_resample ( X , y_labels )","title":"SMOTE\u8655\u7406\u6a19\u7c64\u4e0d\u5e73\u8861\u554f\u984c"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#lightgbm","text":"LightGBM \u662f\u8f15\u91cf\u5316 (Light) \u7684\u68af\u5ea6\u63d0\u5347\u6a5f (GBM) \u7684\u5be6\u4f8b\u3002\u5176\u76f8\u5c0d XGBoost \u4f86\u8aaa\u5b83\u5177\u6709\u8a13\u7df4\u901f\u5ea6\u5feb\u3001\u8a18\u61b6\u9ad4\u4f54\u7528\u4f4e\u7684\u7279\u9ede\uff0c\u56e0\u6b64\u8fd1\u5e7e\u5e74 LightGBM \u5728 Kaggle \u4e0a\u4e5f\u7b97\u662f\u71b1\u9580\u6a21\u578b\u4e00\u3002\u5728\u672c\u98ef\u7bc4\u4f8b\u4e2d\u6211\u5011\u63a1\u7528 LightGBM \u5206\u985e\u5668\uff0c\u82e5\u9084\u6c92\u5b89\u88dd\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u4ee5\u4e0b\u6307\u4ee4\u9032\u884c\u5b89\u88dd\u3002 pip install lightgbm \u5b89\u88dd\u7d50\u675f\u5f8c\u5373\u53ef\u8f09\u5165 lightgbm \u5957\u4ef6\u4e26\u9078\u7528 LGBMClassifier \u5206\u985e\u5668\u9032\u884c\u6a21\u578b\u8a13\u7df4\u3002 import lightgbm as lgb # \u5efa\u7acb\u6a21\u578b model = lgb . LGBMClassifier () # \u8a13\u7df4\u6a21\u578b model . fit ( X_train , y_train ) \u8a13\u7df4\u7d50\u675f\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e sklearn \u7684 classification_report() \u65b9\u6cd5\u4f86\u67e5\u770b\u6a21\u578b\u5728\u6e2c\u8a66\u96c6\u4e0a\u7684\u5206\u985e\u5831\u544a\uff0c\u8a72\u5831\u544a\u5305\u542b\u4e86\u6a21\u578b\u7684\u7cbe\u78ba\u5ea6\u3001\u53ec\u56de\u7387\u3001F1\u5206\u6578\u7b49\u8a55\u4f30\u6307\u6a19\uff0c\u53ef\u4ee5\u7528\u4f86\u8a55\u4f30\u6a21\u578b\u7684\u6027\u80fd\u3002 from sklearn.metrics import classification_report pred_test = model . predict ( X_test ) print ( classification_report ( y_test , pred_test )) \u5f9e\u8a55\u4f30\u5831\u544a\u4e2d\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6e2c\u8a66\u96c6\u7e3d\u5171\u6709195\u7b46\uff0c\u5176\u4e2d 0: Pastry \u3001 5: Bumps \u548c 6: Other_Faults \u5169\u500b\u7684\u8fa8\u8b58\u7387\u7d04\u4e03\u6210\u3002\u5176\u9918\u7684\u7455\u75b5\u985e\u5225\u90fd\u8868\u73fe\u5f97\u4e0d\u932f\u3002 precision recall f1-score support 0 0.63 0.75 0.69 16 1 1.00 0.95 0.97 19 2 0.93 0.95 0.94 39 3 1.00 0.86 0.92 7 4 1.00 0.83 0.91 6 5 0.70 0.67 0.68 39 6 0.74 0.75 0.75 69 accuracy 0.80 195 macro avg 0.86 0.82 0.84 195 weighted avg 0.80 0.80 0.80 195 \u6211\u5011\u9032\u4e00\u6b65\u5f9e\u6df7\u6dc6\u77e9\u9663\uff08confusion matrix\uff09\u4e2d\u5206\u6790\u4e86\u54ea\u4e9b\u985e\u5225\u5bb9\u6613\u88ab\u8aa4\u5224\u6210\u5176\u4ed6\u985e\u5225\u3002\u6211\u5011\u767c\u73fe Other_Faults \u6709\u5c11\u6578\u5e7e\u7b46\u5bb9\u6613\u8ddf Pastry \u548c Bumps \u641e\u6df7 \uff0c\u540c\u6642\u670911\u7b46 Bumps \u8cc7\u6599\u88ab\u8aa4\u5224\u70ba Other_Faults \u3002 \u900f\u904e\u6df7\u6dc6\u77e9\u9663\u53ef\u4ee5\u89e3\u91cb\u5206\u985e\u6a21\u578b\u5728\u54ea\u5e7e\u7a2e\u985e\u5225\u8868\u73fe\u8f03\u4e0d\u597d\u3002","title":"\u5efa\u7acbLightGBM\u6a21\u578b"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#kernel-shap","text":"\u5efa\u7acb\u4e00\u500b\u901a\u7528\u7684 KernelExplainer \u89e3\u91cb\u5668\uff0c\u4e26\u8a66\u5716\u89e3\u91cb\u525b\u525b\u8a13\u7df4\u7684 LightGBM \u5206\u985e\u5668\u3002\u6211\u5011\u5f9e\u8a13\u7df4\u96c6\u4e2d\u53d6\u51fa\u524d 100 \u7b46\u8cc7\u6599\uff0c\u4ee5\u4ee3\u8868\u6574\u9ad4\u7279\u5fb5\u503c\u7684\u5206\u4f48\uff0c\u7528\u65bc\u9032\u884c\u6a21\u578b\u89e3\u91cb\u3002\u7136\u5f8c\uff0c\u6211\u5011\u5c07\u4f7f\u7528\u6e2c\u8a66\u96c6\u4e2d\u7684\u524d 10 \u7b46\u8cc7\u6599\u4f86\u8a08\u7b97 Shapley values\u3002\u6b64\u5916\uff0c\u6211\u5011\u5c07 nsamples \u8a2d\u5b9a\u70ba 100\uff0c\u9019\u8868\u793a\u6211\u5011\u5c07\u9032\u884c 100 \u6b21\u8499\u5730\u5361\u7f85\u62bd\u6a23\uff0c\u5f9e KernelExplainer \u8a2d\u5b9a\u7684\u8cc7\u6599\u4e2d\u96a8\u6a5f\u64fe\u52d5\u62bd\u6a23\uff0c\u4e26\u5efa\u7acb\u4e00\u500b SHAP \u7c21\u5316\u53ef\u89e3\u91cb\u6a21\u578b\u3002 import shap shap . initjs () # \u4f7f\u7528 Kernel SHAP \u89e3\u91cb\u6a21\u578b explainer = shap . KernelExplainer ( model = model . predict_proba , data = X_train [: 100 ], link = 'logit' ) shap_values = explainer . shap_values ( X = X_test [: 10 ], nsamples = 100 )","title":"Kernel SHAP \u89e3\u91cb\u6a21\u578b"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#shap-summary-plot","text":"\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 SHAP Summary Plot \u4f86\u9032\u884c\u6a21\u578b\u7684\u5168\u5c40\u89e3\u91cb\uff0c\u8a72\u5716\u8868\u986f\u793a\u4e86\u6bcf\u500b\u7279\u5fb5\u8b8a\u91cf\u5c0d\u6574\u9ad4\u5e73\u5747\u6a21\u578b\u8f38\u51fa\u7684\u5e73\u5747\u5f71\u97ff\u3002\u6bcf\u500b\u984f\u8272\u4ee3\u8868\u4e0d\u540c\u7684\u985e\u5225\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u8f38\u51fa\u7684\u5e73\u5747\u8ca2\u737b\u7a0b\u5ea6\uff0c\u4ee5\u53ca\u5728\u4e0d\u540c\u985e\u5225\u4e0b\u54ea\u500b\u7279\u5fb5\u4f54\u6709\u8f03\u5927\u7684\u91cd\u8981\u6027\u3002 shap . summary_plot ( shap_values , X_test , plot_type = \"bar\" , feature_names = x_feature_names ) \u5f9e\u4e0b\u5716\u6211\u5011\u53ef\u4ee5\u770b\u5230\u524d\u4e09\u540d\u91cd\u8981\u7684\u7279\u5fb5\u70ba\uff1a 1. Steel_Plate_Thickness 2. Length_of_Conveyer 3. X_Maximum","title":"SHAP Summary Plot (\u5168\u5c40\u89e3\u91cb)"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#shap-force-plot","text":"\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 Force Plot \u65b9\u6cd5\u89c0\u5bdf\u55ae\u4e00\u7b46\u8cc7\u6599\u5728\u6a21\u578b\u4e2d\u7684\u9810\u6e2c\u60c5\u6cc1\u3002\u5728 SHAP \u5957\u4ef6\u4e2d\uff0cForce Plot \u63d0\u4f9b\u4e86\u5c0d\u55ae\u4e00\u6a21\u578b\u9810\u6e2c\u7684\u89e3\u91cb\u6027\u5448\u73fe\u3002\u9019\u500b\u5716\u8868\u6e05\u695a\u986f\u793a\u4e86\u5404\u500b\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u5c0d\u7279\u5b9a\u8f38\u5165\u503c\u7684\u9810\u6e2c\u6240\u505a\u7684\u8ca2\u737b\u3002\u5f9e\u4e0b\u5716\u7d50\u679c\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6a21\u578b\u9810\u6e2c\u7d50\u679c\u70ba5\uff08Bumps\uff09\uff0c\u5176\u9810\u6e2c\u6a5f\u7387\u70ba 0.939\u3002\u56e0\u6b64\u5716\u4e2d\u7684 Force Plot \u662f\u91dd\u5c0d\u89e3\u91cb\u70ba\u4ec0\u9ebc\u9019\u7b46\u8cc7\u6599\u8f38\u5165\u6703\u5f97\u5230\u6a19\u7c64\u70ba5\u7684 Shapley values \u89e3\u91cb\u3002 # \u89c0\u5bdf\u6e2c\u8a66\u96c6\u4e2d\u7b2c\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u7684\u91cd\u8981\u7a0b\u5ea6 index = 0 pred_class = int ( model . predict ( X_test [[ index ]])[ 0 ]) pred_proba = model . predict_proba ( X_test [[ index ]])[ 0 ][ pred_class ] print ( f '\u6e2c\u8a66\u96c6\u7b2c { index + 1 } \u7b46\u6a21\u578b\u9810\u6e2c\u7d50\u679c: { pred_class } \u6a5f\u7387\u503c: { pred_proba } ' ) print ( f '\u771f\u5be6\u7b54\u6848: { int ( y_test [ index ]) } ' ) shap . force_plot ( explainer . expected_value [ pred_class ], shap_values [ pred_class ][ index ], X_test [ index ], feature_names = x_feature_names , link = 'logit' )","title":"SHAP Force plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#shap-waterfall-plot","text":"\u6211\u5011\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u5730\u7528\u7011\u5e03\u5716\u8996\u89ba\u5316\u6392\u5e8f\u91cd\u8981\u7684\u7279\u5fb5\uff0c\u540c\u6642\u89c0\u770b\u6bcf\u500b\u7279\u5fb5\u7684\u76f8\u5c0d\u61c9 Shapley values\u3002 shap . waterfall_plot ( shap . Explanation ( values = shap_values [ pred_class ][ index ], base_values = explainer . expected_value [ pred_class ], data = X_test [ index ], feature_names = x_feature_names ), max_display = 27 ) \u5168\u90e8\u7279\u5fb5\u7684Shapley value\u7e3d\u548c\u52a0\u4e0a\u57fa\u6e96\u503c\uff0c\u6700\u5f8c\u518d\u901a\u904eSigmoid\u51fd\u6578\u5c31\u662f\u8f38\u51fa\u7684\u6a5f\u7387\u503c\u4e86\u3002","title":"SHAP waterfall plot (\u55ae\u7b46\u8cc7\u6599\u89e3\u91cb)"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#permutation-importance","text":"\u5728\u672c\u7cfb\u5217\u4e2d Day 10 \u4ecb\u7d39\u4e86\u5229\u7528\u7279\u5fb5\u64fe\u52d5\u7684\u65b9\u6cd5\u89e3\u91cb\u6574\u500b\u6a21\u578b\uff0c\u7576\u6642\u4f7f\u7528\u4e86 eli5 \u5be6\u4f5c\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u7684\u6392\u5e8f\u3002\u9019\u88e1\u518d\u5206\u4eab\u53e6\u4e00\u500b\u65b9\u6cd5\u5be6\u4f5c\uff0c\u90a3\u5c31\u662f\u4f7f\u7528 sklearn \u5957\u4ef6\u4e2d\u7684 permutation_importance() \u3002 from sklearn.inspection import permutation_importance # \u4f7f\u7528 permutation_importance \u51fd\u6578\u8a08\u7b97\u7279\u5fb5\u91cd\u8981\u6027 result = permutation_importance ( model , X_test , y_test , n_repeats = 10 , random_state = 42 , scoring = 'accuracy' ) # \u5370\u51fa\u5404\u7279\u5fb5\u7684\u5e73\u5747\u91cd\u8981\u6027\u6392\u5e8f sorted_idx = result . importances_mean . argsort ()[:: - 1 ] for i in sorted_idx : print ( f \" { x_feature_names [ i ] : <10 } importance: { result . importances_mean [ i ] : .3f } +/- { result . importances_std [ i ] : .3f } \" ) \u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u6a21\u578b\u5728\u8a55\u4f30\u6bcf\u500b\u7455\u75b5\u6642\u6240\u4f7f\u7528\u7684\u91cd\u8981\u7279\u5fb5\u6392\u5e8f\u3002\u53e6\u5916\u53ef\u4ee5\u5c07\u9019\u4e9b\u6392\u5e8f\u7d50\u679c\u8207 SHAP Summary Plot \u7684\u5168\u5c40\u89e3\u91cb\u9032\u884c\u6bd4\u5c0d\uff0c\u4ee5\u6aa2\u67e5\u4e0d\u540c\u65b9\u6cd5\u5728\u6a21\u578b\u7279\u5fb5\u91cd\u8981\u6027\u6392\u5e8f\u65b9\u9762\u662f\u5426\u5177\u6709\u4e00\u81f4\u6027\u3002\u7531\u65bc\u7406\u8ad6\u65b9\u6cd5\u548c\u8cc7\u6599\u62bd\u6a23\u7684\u96a8\u6a5f\u6027\uff0c\u7121\u6cd5\u4fdd\u8b49\u6bcf\u7a2e\u65b9\u6cd5\u7684\u89e3\u91cb\u90fd\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5c0b\u627e\u5171\u901a\u7684\u89e3\u91cb\u4f86\u589e\u5f37\u53ef\u4fe1\u5ea6\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01","title":"Permutation importance\u89e3\u91cb\u5168\u5c40\u6a21\u578b"},{"location":"26.\u667a\u6167\u5de5\u5ee0\u88fd\u7a0b\u4e2d\u7684\u92fc\u6750\u7f3a\u9677\u6aa2\u6e2c:\u904b\u7528XAI\u89e3\u6790\u6578\u503c\u578b\u611f\u6e2c\u5668\u6578\u64da/#refernece","text":"UCI \u8cc7\u6599\u96c6\uff1aSteel Plates Faults \u92fc\u6750\u7f3a\u9677\u5075\u6e2c\u5206\u985e\uff1aLightGBM\u738b\u8005\u767b\u9802","title":"Refernece"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/","text":"[Day 27] XAI\u5728NLP\u4e2d\u7684\u61c9\u7528\uff1a\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u8fd1\u5e74\u4f86\u81ea\u7136\u8a9e\u8a00\u8655\u7406\uff08NLP\uff09\u9818\u57df\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u9032\u5c55\uff0c\u4e3b\u8981\u6b78\u529f\u65bc\u5927\u578b\u8a9e\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u5d1b\u8d77\u3002\u9019\u4e9b\u6a21\u578b\uff0c\u5982 GPT\u3001LLaMA \u548c BLOOM \u7b49\uff0c\u5df2\u7d93\u5728\u591a\u500b NLP \u4efb\u52d9\u4e2d\u53d6\u5f97\u4e86\u9a5a\u4eba\u7684\u6210\u5c31\u3002\u76ee\u524d NLP \u9818\u57df\u7684\u4e3b\u8981\u8da8\u52e2\u662f\u5c07\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u5fae\u8abf\u4ee5\u9069\u61c9\u5404\u7a2e\u4e0b\u6e38\u4efb\u52d9\uff0c\u4f8b\u5982\u5c0d\u8a71\u6a5f\u5668\u4eba\u3001\u6a5f\u5668\u7ffb\u8b6f\u3001\u548c\u60c5\u611f\u5206\u6790\u7b49\u7b49\u3002\u9019\u7a2e\u5fae\u8abf\u904e\u7a0b\u901a\u5e38\u9700\u8981\u5927\u91cf\u7684\u6a19\u8a3b\u6578\u64da\uff0c\u4f7f\u5f97\u6a21\u578b\u8b8a\u5f97\u66f4\u5177\u7279\u5b9a\u6027\uff0c\u4f46\u540c\u6642\u4e5f\u4f7f\u5f97\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\u8b8a\u5f97\u66f4\u52a0\u96e3\u4ee5\u7406\u89e3\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\u6211\u5011\u5c07\u4ee5\u60c5\u611f\u5206\u6790\u70ba\u4f8b\uff0c\u4e26\u900f\u904e\u53ef\u89e3\u91cb\u5de5\u5177 SHAP \u4f86\u5206\u6790\u6a21\u578b\u662f\u5982\u4f55\u8fa8\u8b58\u4e00\u6bb5\u53e5\u5b50\u4e2d\u60c5\u611f\u7684\u5224\u65b7\u4f9d\u64da\u3002 \u60c5\u611f\u5206\u6790 (sentiment analysis) \u60c5\u611f\u5206\u6790\uff08Sentiment analysis\uff09\u662f\u7a2e\u81ea\u52d5\u5316\u6a19\u8a3b\u4e00\u6bb5\u53e5\u5b50\u7684\u60c5\u611f\uff08\u4f8b\u5982\uff0c\u7a4d\u6975\u3001\u6d88\u6975\u6216\u4e2d\u6027\uff09\u7684\u904e\u7a0b\u3002\u4e00\u500b\u8457\u540d\u7684\u60c5\u611f\u5206\u6790\u6578\u64da\u96c6\u662f IMDB \u5f71\u8a55\u6578\u64da\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u7528\u6236\u5c0d\u96fb\u5f71\u7684\u8a55\u8ad6\uff0c\u9019\u4e9b\u8a55\u8ad6\u5177\u6709\u660e\u986f\u7684\u6b63\u9762\u6216\u8ca0\u9762\u60c5\u611f\u3002\u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u53ef\u4ee5\u8f38\u5165\u4e00\u6bb5\u4e2d\u6587\u53e5\u5b50\uff0c\u6a21\u578b\u53ef\u4ee5\u5f9e\u6587\u5b57\u4e2d\u5224\u65b7\u559c\u597d\u7a0b\u5ea6\uff0c\u4e26\u6839\u64da\u5176\u7a0b\u5ea6\u5206\u914d\u4e00\u500b\u8a55\u5206\uff0c\u5f9e\u6700\u4f4e\u76841\u661f\u5230\u6700\u9ad8\u76845\u661f\u4e0d\u7b49\u3002 Hugging Face \u4f7f\u7528\u6307\u5357 Hugging Face \u662f\u4e00\u500b\u516c\u958b\u7684 AI \u793e\u7fa4\uff0c\u540c\u6642\u4e5f\u662f\u4e00\u500b\u71b1\u9580\u69cb\u5efa\u6a5f\u5668\u5b78\u7fd2\u61c9\u7528\u7684\u5de5\u5177\u3002\u4e26\u63d0\u4f9b\u8c50\u5bcc\u7684\u9810\u8a13\u7df4\u6a21\u578b\u3001\u8cc7\u6599\u96c6\u4ee5\u53ca\u958b\u767c\u5de5\u5177\uff0c\u6db5\u84cb\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u3001\u8a9e\u97f3\u8fa8\u8b58\u3001\u5f71\u50cf\u8fa8\u8b58\u7b49\u591a\u7a2e AI \u61c9\u7528\u3002\u4ee5\u60c5\u611f\u5206\u6790\u70ba\u4f8b\uff0c\u4e0b\u5716\u5c55\u793a\u4e86 Hugging Face \u6a21\u578b\u7684\u6574\u9ad4\u904b\u4f5c\u6d41\u7a0b\uff0c\u800c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 pipeline \u5de5\u5177\uff0c\u5c07\u6240\u6709\u7684\u904e\u7a0b\u5c01\u88dd\u5728\u4e00\u8d77\uff0c\u8b93\u6211\u5011\u4f7f\u7528\u4e0a\u66f4\u52a0\u65b9\u4fbf\u3002 1. \u5c0d\u8f38\u5165\u53e5\u5b50\u9032\u884c\u5206\u8a5e\u548c\u7de8\u78bc \u5206\u8a5e\u5668(tokenizer)\u5c07\u8f38\u5165\u7684\u53e5\u5b50\u5206\u5272\u6210\u55ae\u8a5e(tokens)\u3002 \u63a5\u8457\u5c07\u9019\u4e9b\u55ae\u8a5e(tokens)\u8f49\u63db\u70ba\u76f8\u5c0d\u61c9\u7684token id\uff0c\u540c\u6642\u6dfb\u52a0\u9810\u8a13\u7df4\u6a21\u578b\u6240\u9700\u7684\u7279\u6b8atoken\uff08\u4f8b\u5982\uff1a[CLS]\u3001[SEP]\uff09\u3002 2. \u8f09\u5165 Hugging Face \u6a21\u578b \u4e00\u65e6\u5206\u8a5e\u548c\u7de8\u78bc\u7684\u5de5\u4f5c\u5b8c\u6210\uff0c\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u5c07\u8655\u7406\u597d\u7684\u7d50\u679c\u50b3\u905e\u7d66\u76f8\u5c0d\u61c9\u7684\u6a21\u578b\uff0c\u7136\u5f8c\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\u3002 3. \u8f38\u51fa\u9810\u6e2c\u7d50\u679c \u8f38\u51fa\u7d50\u679c\u4f9d\u64da\u559c\u597d\u7a0b\u5ea6\u5f9e\u6700\u4f4e1\u661f\u5230\u6700\u9ad85\u661f\u3002 [\u5be6\u4f5c] \u60c5\u611f\u5206\u6790 \u82e5\u8981\u958b\u59cb\u4f7f\u7528 Hugging Face\uff0c\u9996\u5148\u9700\u8981\u5728 Python \u74b0\u5883\u4e2d\u5b89\u88dd transformers \u5957\u4ef6\u3002\u5982\u679c\u5c1a\u672a\u5b89\u88dd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd\uff1a pip install transformers Hugging Face \u63d0\u4f9b\u4e86\u4e00\u4e9b\u8457\u540d\u7684\u9810\u8a13\u7df4 NLP \u6a21\u578b\uff0c\u5305\u62ecBERT\u3001GPT\u3001RoBERTa\u7b49\u3002\u9019\u88e1\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u8f09\u5165\u5225\u4eba\u5df2\u8a13\u7df4\u597d\u7684\u4e2d\u6587\u60c5\u611f\u5206\u985e\u6a21\u578b\uff08chinese_sentiment\uff09\u3002\u4e26\u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5e8f\u5217\u5206\u985e\u6a21\u578b\uff0c\u540c\u6642\u9700\u8981\u6307\u5b9a\u6a21\u578b\u6240\u76f8\u5c0d\u61c9\u7684\u5206\u8a5e\u5668\uff08tokenizer\uff09\u3002\u6700\u5f8c\u4f7f\u7528 pipeline \u5275\u5efa\u4e00\u500b\u60c5\u611f\u5206\u6790\u5668\uff0c\u4f7f\u7528\u4e0a\u9762\u521d\u59cb\u5316\u7684\u6a21\u578b\u548c\u5206\u8a5e\u5668\u3002\u53e6\u5916\u53ef\u4ee5\u8a2d\u5b9a top_k \u53c3\u6578\uff0c\u6307\u5b9a\u6a21\u578b\u8f38\u51fa\u7684\u524d k \u540d\u6b21\u7684\u6a5f\u7387\u6392\u5e8f\u3002 from transformers import AutoTokenizer , AutoModelForSequenceClassification , pipeline # \u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5e8f\u5217\u5206\u985e\u6a21\u578b model = AutoModelForSequenceClassification . from_pretrained ( \"techthiyanes/chinese_sentiment\" ) # \u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5206\u8a5e\u5668 tokenizer = AutoTokenizer . from_pretrained ( \"techthiyanes/chinese_sentiment\" ) # \u4f7f\u7528pipeline\u5275\u5efa\u4e00\u500b\u60c5\u611f\u5206\u6790\u5668 review_classifier = pipeline ( 'sentiment-analysis' , model = model , tokenizer = tokenizer , top_k = 5 ) \u9810\u8a13\u7df4\u6a21\u578b\u5efa\u7f6e\u5b8c\u7562\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u8f38\u5165\u4e00\u500b\u53e5\u5b50\u8b93 AI \u4f86\u5224\u65b7\u4f7f\u7528\u8005\u6703\u7d66\u4e88\u5e7e\u9846\u661f\u8a55\u8ad6\u3002\u9996\u5148\u6211\u8f38\u5165\u4e00\u6bb5\u5f88\u6b63\u5411\u7684\u8a55\u8ad6\uff0c\u679c\u4e0d\u5176\u7136 AI \u7d66\u4e86\u5f88\u9ad8\u7684\u4e94\u9846\u661f\u8a55\u50f9\u3002 # Example 1 review_classifier ( \"\u74b0\u5883\u4e7e\u6de8\u4e14\u670d\u52d9\u4eba\u54e1\u5f88\u89aa\u5207\uff0c\u9910\u9ede\u53e3\u5473\u5f88\u68d2\u800c\u4e14\u98df\u7269\u65b0\u9bae!\" ) \u8f38\u51fa\u7d50\u679c\uff1a [[{ 'label' : 'star 5' , 'score' : 0.6823225617408752 }, { 'label' : 'star 4' , 'score' : 0.26904016733169556 }, { 'label' : 'star 3' , 'score' : 0.03292671963572502 }, { 'label' : 'star 2' , 'score' : 0.01019265130162239 }, { 'label' : 'star 1' , 'score' : 0.005517883226275444 }]] \u6211\u5011\u73fe\u5728\u8a66\u8a66\u53e6\u4e00\u500b\u53e5\u5b50\uff0c\u9019\u6b21AI\u7d66\u4e86\u8a72\u53e5\u5169\u9846\u661f\u7684\u8a55\u50f9\u3002 # Example 2 review_classifier ( \"\u4e0a\u9910\u901f\u5ea6\u592a\u6162\uff0c\u98df\u7269\u666e\u901a\u3002\" ) \u8f38\u51fa\u7d50\u679c\uff1a [[{ 'label' : 'star 2' , 'score' : 0.40975552797317505 }, { 'label' : 'star 3' , 'score' : 0.34248214960098267 }, { 'label' : 'star 1' , 'score' : 0.1721179038286209 }, { 'label' : 'star 4' , 'score' : 0.06531713157892227 }, { 'label' : 'star 5' , 'score' : 0.010327262803912163 }]] \u4f7f\u7528 SHAP \u89e3\u6790\u8a9e\u8a00\u6a21\u578b SHAP \u4e0d\u50c5\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u5716\u50cf\u548c\u8868\u683c\u578b\u6578\u64da\uff0c\u9084\u53ef\u7528\u65bc\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b\u3002\u9996\u5148\u6211\u5011\u4f7f\u7528 shap.Explainer \u521d\u59cb\u5316\u4e86\u4e00\u500b SHAP \u89e3\u91cb\u5668\uff0c\u9019\u500b\u89e3\u91cb\u5668\u5c07\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002\u63a5\u4e0b\u4f86\u6211\u5011\u4f7f\u7528\u9019\u500b\u89e3\u91cb\u5668\u4f86\u89e3\u91cb\u4e00\u500b\u53e5\u5b50\uff0c\u4e26\u4f30\u7b97\u51fa\u8a72\u53e5\u5b50\u5c0d\u65bc\u6bcf\u500b\u8f38\u51fa\u985e\u5225\u7684 Shapley values\u3002\u6700\u5f8c\u4f7f\u7528 plots.text \u65b9\u6cd5\u5c0d\u9019\u500b\u53e5\u5b50\u7684\u89e3\u91cb\u9032\u884c\u8996\u89ba\u5316\u5448\u73fe\u3002 import shap explainer = shap . Explainer ( review_classifier ) shap_values = explainer ([ \"\u74b0\u5883\u4e7e\u6de8\u4e14\u670d\u52d9\u4eba\u54e1\u5f88\u89aa\u5207\uff0c\u9910\u9ede\u53e3\u5473\u5f88\u68d2\u800c\u4e14\u98df\u7269\u65b0\u9bae!\" ]) shap . plots . text ( shap_values ) \u53e6\u5916\u4e5f\u53ef\u4ee5\u900f\u904e plots.bar \u8a73\u7d30\u7684\u91dd\u5c0d\u6bcf\u500b\u6587\u5b57\u9032\u884c\u91cd\u8981\u6027\u7684\u6392\u5e8f\u3002\u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u5230\u6bcf\u500b\u6587\u5b57\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4ee5\u4fbf\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u662f\u5982\u4f55\u5f62\u6210\u7684\uff0c\u54ea\u4e9b\u90e8\u5206\u7684\u8ca2\u737b\u6700\u5927\uff0c\u4ee5\u53ca\u5b83\u5011\u5c0d\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u6b64\u5916\u9084\u53ef\u4ee5\u900f\u904e clustering_cutoff \u53c3\u6578\u5c0d shap value \u505a\u805a\u985e\uff0c\u6b64\u6642\u76f8\u95dc\u6027\u5f37\u7684\u6587\u5b57\u5c31\u80fd\u986f\u73fe\u51fa\u4f86\u3002 shap . plots . bar ( shap_values [ 0 ,:, 4 ], clustering_cutoff = 0.5 ) \u4e0d\u904e\u5c31\u6211\u500b\u4eba\u800c\u8a00\uff0cSHAP\u5957\u4ef6\u5728\u89e3\u91cb\u4e2d\u6587\u6587\u5b57\u65b9\u9762\u7a0d\u5acc\u4e0d\u8db3\u3002\u9019\u662f\u56e0\u70ba BERT \u7684 tokenizer \u662f\u4ee5\u6bcf\u500b\u5b57\u5143\u70ba\u55ae\u4f4d\u7684\uff0c\u56e0\u6b64 SHAP \u662f\u91dd\u5c0d\u6bcf\u500b\u5b57\u5143\u9032\u884c Shapley values \u7684\u4f30\u7b97\u3002\u5982\u679c\u60f3\u8981\u91dd\u5c0d\u8a5e\u8a9e\u9032\u884c\u89e3\u91cb\uff0c\u4f8b\u5982 \u89aa\u5207 \u3001 \u5f88\u68d2 \u3001 \u65b0\u9bae \u7b49\uff0c\u53ef\u4ee5\u8003\u616e\u4f7f\u7528 LIME \u4f86\u9032\u884c\u89e3\u91cb\u3002LIME \u53ef\u4ee5\u4f7f\u7528 jieba \u5206\u8a5e\u5de5\u5177\u5c07\u4e00\u6bb5\u8a71\u89e3\u6790\u6210\u591a\u500b\u8a5e\u8a9e\uff0c\u7136\u5f8c\u518d\u91dd\u5c0d\u6bcf\u500b\u8a5e\u8a9e\u9032\u884c\u91cd\u8981\u6027\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u66f4\u9069\u5408\u91dd\u5c0d\u8a5e\u8a9e\u7d1a\u5225\u7684\u89e3\u91cb\u9700\u6c42\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01 Reference SHAP Document: Positive vs. Negative Sentiment Classification \u5229\u7528LIME\u548cSHAP\u5c0dbert\u8a13\u7df4\u7684\u6587\u672c\u5206\u985e\u6a21\u578b\u505a\u53ef\u89e3\u91cb\u6027\u5206\u6790 \u9019\u7bc7\u8a73\u7d30\u89e3\u91cbLIME\u7684\u6578\u503c\u662f\u5982\u4f55","title":"[Day 27] XAI\u5728NLP\u4e2d\u7684\u61c9\u7528\uff1a\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#day-27-xainlp","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u8fd1\u5e74\u4f86\u81ea\u7136\u8a9e\u8a00\u8655\u7406\uff08NLP\uff09\u9818\u57df\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u9032\u5c55\uff0c\u4e3b\u8981\u6b78\u529f\u65bc\u5927\u578b\u8a9e\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u5d1b\u8d77\u3002\u9019\u4e9b\u6a21\u578b\uff0c\u5982 GPT\u3001LLaMA \u548c BLOOM \u7b49\uff0c\u5df2\u7d93\u5728\u591a\u500b NLP \u4efb\u52d9\u4e2d\u53d6\u5f97\u4e86\u9a5a\u4eba\u7684\u6210\u5c31\u3002\u76ee\u524d NLP \u9818\u57df\u7684\u4e3b\u8981\u8da8\u52e2\u662f\u5c07\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u5fae\u8abf\u4ee5\u9069\u61c9\u5404\u7a2e\u4e0b\u6e38\u4efb\u52d9\uff0c\u4f8b\u5982\u5c0d\u8a71\u6a5f\u5668\u4eba\u3001\u6a5f\u5668\u7ffb\u8b6f\u3001\u548c\u60c5\u611f\u5206\u6790\u7b49\u7b49\u3002\u9019\u7a2e\u5fae\u8abf\u904e\u7a0b\u901a\u5e38\u9700\u8981\u5927\u91cf\u7684\u6a19\u8a3b\u6578\u64da\uff0c\u4f7f\u5f97\u6a21\u578b\u8b8a\u5f97\u66f4\u5177\u7279\u5b9a\u6027\uff0c\u4f46\u540c\u6642\u4e5f\u4f7f\u5f97\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\u8b8a\u5f97\u66f4\u52a0\u96e3\u4ee5\u7406\u89e3\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\u6211\u5011\u5c07\u4ee5\u60c5\u611f\u5206\u6790\u70ba\u4f8b\uff0c\u4e26\u900f\u904e\u53ef\u89e3\u91cb\u5de5\u5177 SHAP \u4f86\u5206\u6790\u6a21\u578b\u662f\u5982\u4f55\u8fa8\u8b58\u4e00\u6bb5\u53e5\u5b50\u4e2d\u60c5\u611f\u7684\u5224\u65b7\u4f9d\u64da\u3002","title":"[Day 27] XAI\u5728NLP\u4e2d\u7684\u61c9\u7528\uff1a\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#sentiment-analysis","text":"\u60c5\u611f\u5206\u6790\uff08Sentiment analysis\uff09\u662f\u7a2e\u81ea\u52d5\u5316\u6a19\u8a3b\u4e00\u6bb5\u53e5\u5b50\u7684\u60c5\u611f\uff08\u4f8b\u5982\uff0c\u7a4d\u6975\u3001\u6d88\u6975\u6216\u4e2d\u6027\uff09\u7684\u904e\u7a0b\u3002\u4e00\u500b\u8457\u540d\u7684\u60c5\u611f\u5206\u6790\u6578\u64da\u96c6\u662f IMDB \u5f71\u8a55\u6578\u64da\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u7528\u6236\u5c0d\u96fb\u5f71\u7684\u8a55\u8ad6\uff0c\u9019\u4e9b\u8a55\u8ad6\u5177\u6709\u660e\u986f\u7684\u6b63\u9762\u6216\u8ca0\u9762\u60c5\u611f\u3002\u5728\u4eca\u5929\u7684\u7bc4\u4f8b\u4e2d\u53ef\u4ee5\u8f38\u5165\u4e00\u6bb5\u4e2d\u6587\u53e5\u5b50\uff0c\u6a21\u578b\u53ef\u4ee5\u5f9e\u6587\u5b57\u4e2d\u5224\u65b7\u559c\u597d\u7a0b\u5ea6\uff0c\u4e26\u6839\u64da\u5176\u7a0b\u5ea6\u5206\u914d\u4e00\u500b\u8a55\u5206\uff0c\u5f9e\u6700\u4f4e\u76841\u661f\u5230\u6700\u9ad8\u76845\u661f\u4e0d\u7b49\u3002","title":"\u60c5\u611f\u5206\u6790 (sentiment analysis)"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#hugging-face","text":"Hugging Face \u662f\u4e00\u500b\u516c\u958b\u7684 AI \u793e\u7fa4\uff0c\u540c\u6642\u4e5f\u662f\u4e00\u500b\u71b1\u9580\u69cb\u5efa\u6a5f\u5668\u5b78\u7fd2\u61c9\u7528\u7684\u5de5\u5177\u3002\u4e26\u63d0\u4f9b\u8c50\u5bcc\u7684\u9810\u8a13\u7df4\u6a21\u578b\u3001\u8cc7\u6599\u96c6\u4ee5\u53ca\u958b\u767c\u5de5\u5177\uff0c\u6db5\u84cb\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u3001\u8a9e\u97f3\u8fa8\u8b58\u3001\u5f71\u50cf\u8fa8\u8b58\u7b49\u591a\u7a2e AI \u61c9\u7528\u3002\u4ee5\u60c5\u611f\u5206\u6790\u70ba\u4f8b\uff0c\u4e0b\u5716\u5c55\u793a\u4e86 Hugging Face \u6a21\u578b\u7684\u6574\u9ad4\u904b\u4f5c\u6d41\u7a0b\uff0c\u800c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 pipeline \u5de5\u5177\uff0c\u5c07\u6240\u6709\u7684\u904e\u7a0b\u5c01\u88dd\u5728\u4e00\u8d77\uff0c\u8b93\u6211\u5011\u4f7f\u7528\u4e0a\u66f4\u52a0\u65b9\u4fbf\u3002","title":"Hugging Face \u4f7f\u7528\u6307\u5357"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#1","text":"\u5206\u8a5e\u5668(tokenizer)\u5c07\u8f38\u5165\u7684\u53e5\u5b50\u5206\u5272\u6210\u55ae\u8a5e(tokens)\u3002 \u63a5\u8457\u5c07\u9019\u4e9b\u55ae\u8a5e(tokens)\u8f49\u63db\u70ba\u76f8\u5c0d\u61c9\u7684token id\uff0c\u540c\u6642\u6dfb\u52a0\u9810\u8a13\u7df4\u6a21\u578b\u6240\u9700\u7684\u7279\u6b8atoken\uff08\u4f8b\u5982\uff1a[CLS]\u3001[SEP]\uff09\u3002","title":"1. \u5c0d\u8f38\u5165\u53e5\u5b50\u9032\u884c\u5206\u8a5e\u548c\u7de8\u78bc"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#2-hugging-face","text":"\u4e00\u65e6\u5206\u8a5e\u548c\u7de8\u78bc\u7684\u5de5\u4f5c\u5b8c\u6210\uff0c\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u5c07\u8655\u7406\u597d\u7684\u7d50\u679c\u50b3\u905e\u7d66\u76f8\u5c0d\u61c9\u7684\u6a21\u578b\uff0c\u7136\u5f8c\u53d6\u5f97\u9810\u6e2c\u7d50\u679c\u3002","title":"2. \u8f09\u5165 Hugging Face \u6a21\u578b"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#3","text":"\u8f38\u51fa\u7d50\u679c\u4f9d\u64da\u559c\u597d\u7a0b\u5ea6\u5f9e\u6700\u4f4e1\u661f\u5230\u6700\u9ad85\u661f\u3002","title":"3. \u8f38\u51fa\u9810\u6e2c\u7d50\u679c"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#_1","text":"\u82e5\u8981\u958b\u59cb\u4f7f\u7528 Hugging Face\uff0c\u9996\u5148\u9700\u8981\u5728 Python \u74b0\u5883\u4e2d\u5b89\u88dd transformers \u5957\u4ef6\u3002\u5982\u679c\u5c1a\u672a\u5b89\u88dd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u5b89\u88dd\uff1a pip install transformers Hugging Face \u63d0\u4f9b\u4e86\u4e00\u4e9b\u8457\u540d\u7684\u9810\u8a13\u7df4 NLP \u6a21\u578b\uff0c\u5305\u62ecBERT\u3001GPT\u3001RoBERTa\u7b49\u3002\u9019\u88e1\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u8f09\u5165\u5225\u4eba\u5df2\u8a13\u7df4\u597d\u7684\u4e2d\u6587\u60c5\u611f\u5206\u985e\u6a21\u578b\uff08chinese_sentiment\uff09\u3002\u4e26\u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5e8f\u5217\u5206\u985e\u6a21\u578b\uff0c\u540c\u6642\u9700\u8981\u6307\u5b9a\u6a21\u578b\u6240\u76f8\u5c0d\u61c9\u7684\u5206\u8a5e\u5668\uff08tokenizer\uff09\u3002\u6700\u5f8c\u4f7f\u7528 pipeline \u5275\u5efa\u4e00\u500b\u60c5\u611f\u5206\u6790\u5668\uff0c\u4f7f\u7528\u4e0a\u9762\u521d\u59cb\u5316\u7684\u6a21\u578b\u548c\u5206\u8a5e\u5668\u3002\u53e6\u5916\u53ef\u4ee5\u8a2d\u5b9a top_k \u53c3\u6578\uff0c\u6307\u5b9a\u6a21\u578b\u8f38\u51fa\u7684\u524d k \u540d\u6b21\u7684\u6a5f\u7387\u6392\u5e8f\u3002 from transformers import AutoTokenizer , AutoModelForSequenceClassification , pipeline # \u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5e8f\u5217\u5206\u985e\u6a21\u578b model = AutoModelForSequenceClassification . from_pretrained ( \"techthiyanes/chinese_sentiment\" ) # \u4f7f\u7528\u6307\u5b9a\u7684\u9810\u8a13\u7df4\u6a21\u578b\u521d\u59cb\u5316\u5206\u8a5e\u5668 tokenizer = AutoTokenizer . from_pretrained ( \"techthiyanes/chinese_sentiment\" ) # \u4f7f\u7528pipeline\u5275\u5efa\u4e00\u500b\u60c5\u611f\u5206\u6790\u5668 review_classifier = pipeline ( 'sentiment-analysis' , model = model , tokenizer = tokenizer , top_k = 5 ) \u9810\u8a13\u7df4\u6a21\u578b\u5efa\u7f6e\u5b8c\u7562\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u8f38\u5165\u4e00\u500b\u53e5\u5b50\u8b93 AI \u4f86\u5224\u65b7\u4f7f\u7528\u8005\u6703\u7d66\u4e88\u5e7e\u9846\u661f\u8a55\u8ad6\u3002\u9996\u5148\u6211\u8f38\u5165\u4e00\u6bb5\u5f88\u6b63\u5411\u7684\u8a55\u8ad6\uff0c\u679c\u4e0d\u5176\u7136 AI \u7d66\u4e86\u5f88\u9ad8\u7684\u4e94\u9846\u661f\u8a55\u50f9\u3002 # Example 1 review_classifier ( \"\u74b0\u5883\u4e7e\u6de8\u4e14\u670d\u52d9\u4eba\u54e1\u5f88\u89aa\u5207\uff0c\u9910\u9ede\u53e3\u5473\u5f88\u68d2\u800c\u4e14\u98df\u7269\u65b0\u9bae!\" ) \u8f38\u51fa\u7d50\u679c\uff1a [[{ 'label' : 'star 5' , 'score' : 0.6823225617408752 }, { 'label' : 'star 4' , 'score' : 0.26904016733169556 }, { 'label' : 'star 3' , 'score' : 0.03292671963572502 }, { 'label' : 'star 2' , 'score' : 0.01019265130162239 }, { 'label' : 'star 1' , 'score' : 0.005517883226275444 }]] \u6211\u5011\u73fe\u5728\u8a66\u8a66\u53e6\u4e00\u500b\u53e5\u5b50\uff0c\u9019\u6b21AI\u7d66\u4e86\u8a72\u53e5\u5169\u9846\u661f\u7684\u8a55\u50f9\u3002 # Example 2 review_classifier ( \"\u4e0a\u9910\u901f\u5ea6\u592a\u6162\uff0c\u98df\u7269\u666e\u901a\u3002\" ) \u8f38\u51fa\u7d50\u679c\uff1a [[{ 'label' : 'star 2' , 'score' : 0.40975552797317505 }, { 'label' : 'star 3' , 'score' : 0.34248214960098267 }, { 'label' : 'star 1' , 'score' : 0.1721179038286209 }, { 'label' : 'star 4' , 'score' : 0.06531713157892227 }, { 'label' : 'star 5' , 'score' : 0.010327262803912163 }]]","title":"[\u5be6\u4f5c] \u60c5\u611f\u5206\u6790"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#shap","text":"SHAP \u4e0d\u50c5\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u5716\u50cf\u548c\u8868\u683c\u578b\u6578\u64da\uff0c\u9084\u53ef\u7528\u65bc\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b\u3002\u9996\u5148\u6211\u5011\u4f7f\u7528 shap.Explainer \u521d\u59cb\u5316\u4e86\u4e00\u500b SHAP \u89e3\u91cb\u5668\uff0c\u9019\u500b\u89e3\u91cb\u5668\u5c07\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002\u63a5\u4e0b\u4f86\u6211\u5011\u4f7f\u7528\u9019\u500b\u89e3\u91cb\u5668\u4f86\u89e3\u91cb\u4e00\u500b\u53e5\u5b50\uff0c\u4e26\u4f30\u7b97\u51fa\u8a72\u53e5\u5b50\u5c0d\u65bc\u6bcf\u500b\u8f38\u51fa\u985e\u5225\u7684 Shapley values\u3002\u6700\u5f8c\u4f7f\u7528 plots.text \u65b9\u6cd5\u5c0d\u9019\u500b\u53e5\u5b50\u7684\u89e3\u91cb\u9032\u884c\u8996\u89ba\u5316\u5448\u73fe\u3002 import shap explainer = shap . Explainer ( review_classifier ) shap_values = explainer ([ \"\u74b0\u5883\u4e7e\u6de8\u4e14\u670d\u52d9\u4eba\u54e1\u5f88\u89aa\u5207\uff0c\u9910\u9ede\u53e3\u5473\u5f88\u68d2\u800c\u4e14\u98df\u7269\u65b0\u9bae!\" ]) shap . plots . text ( shap_values ) \u53e6\u5916\u4e5f\u53ef\u4ee5\u900f\u904e plots.bar \u8a73\u7d30\u7684\u91dd\u5c0d\u6bcf\u500b\u6587\u5b57\u9032\u884c\u91cd\u8981\u6027\u7684\u6392\u5e8f\u3002\u5f9e\u4e0b\u5716\u53ef\u4ee5\u89c0\u5bdf\u5230\u6bcf\u500b\u6587\u5b57\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4ee5\u4fbf\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u662f\u5982\u4f55\u5f62\u6210\u7684\uff0c\u54ea\u4e9b\u90e8\u5206\u7684\u8ca2\u737b\u6700\u5927\uff0c\u4ee5\u53ca\u5b83\u5011\u5c0d\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u6b64\u5916\u9084\u53ef\u4ee5\u900f\u904e clustering_cutoff \u53c3\u6578\u5c0d shap value \u505a\u805a\u985e\uff0c\u6b64\u6642\u76f8\u95dc\u6027\u5f37\u7684\u6587\u5b57\u5c31\u80fd\u986f\u73fe\u51fa\u4f86\u3002 shap . plots . bar ( shap_values [ 0 ,:, 4 ], clustering_cutoff = 0.5 ) \u4e0d\u904e\u5c31\u6211\u500b\u4eba\u800c\u8a00\uff0cSHAP\u5957\u4ef6\u5728\u89e3\u91cb\u4e2d\u6587\u6587\u5b57\u65b9\u9762\u7a0d\u5acc\u4e0d\u8db3\u3002\u9019\u662f\u56e0\u70ba BERT \u7684 tokenizer \u662f\u4ee5\u6bcf\u500b\u5b57\u5143\u70ba\u55ae\u4f4d\u7684\uff0c\u56e0\u6b64 SHAP \u662f\u91dd\u5c0d\u6bcf\u500b\u5b57\u5143\u9032\u884c Shapley values \u7684\u4f30\u7b97\u3002\u5982\u679c\u60f3\u8981\u91dd\u5c0d\u8a5e\u8a9e\u9032\u884c\u89e3\u91cb\uff0c\u4f8b\u5982 \u89aa\u5207 \u3001 \u5f88\u68d2 \u3001 \u65b0\u9bae \u7b49\uff0c\u53ef\u4ee5\u8003\u616e\u4f7f\u7528 LIME \u4f86\u9032\u884c\u89e3\u91cb\u3002LIME \u53ef\u4ee5\u4f7f\u7528 jieba \u5206\u8a5e\u5de5\u5177\u5c07\u4e00\u6bb5\u8a71\u89e3\u6790\u6210\u591a\u500b\u8a5e\u8a9e\uff0c\u7136\u5f8c\u518d\u91dd\u5c0d\u6bcf\u500b\u8a5e\u8a9e\u9032\u884c\u91cd\u8981\u6027\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u66f4\u9069\u5408\u91dd\u5c0d\u8a5e\u8a9e\u7d1a\u5225\u7684\u89e3\u91cb\u9700\u6c42\u3002 \u672c\u7cfb\u5217\u6559\u5b78\u5167\u5bb9\u53ca\u7bc4\u4f8b\u7a0b\u5f0f\u90fd\u53ef\u4ee5\u5f9e\u6211\u7684 GitHub \u53d6\u5f97\uff01","title":"\u4f7f\u7528 SHAP \u89e3\u6790\u8a9e\u8a00\u6a21\u578b"},{"location":"27.XAI\u5728NLP\u4e2d\u7684\u61c9\u7528:\u4ee5\u60c5\u611f\u5206\u6790\u89e3\u91cb\u8a9e\u8a00\u6a21\u578b/#reference","text":"SHAP Document: Positive vs. Negative Sentiment Classification \u5229\u7528LIME\u548cSHAP\u5c0dbert\u8a13\u7df4\u7684\u6587\u672c\u5206\u985e\u6a21\u578b\u505a\u53ef\u89e3\u91cb\u6027\u5206\u6790 \u9019\u7bc7\u8a73\u7d30\u89e3\u91cbLIME\u7684\u6578\u503c\u662f\u5982\u4f55","title":"Reference"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/","text":"[Day 28] \u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230\uff1a\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede\uff1f \u5728\u672c\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u4ecb\u7d39\u4e86\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7528\u65bc\u89e3\u91cb\u8907\u96dc\u7684\u9ed1\u76d2\u6a21\u578b\u7684\u5404\u7a2e\u65b9\u6cd5\uff0c\u60f3\u5fc5\u5404\u4f4d\u5c0d\u9019\u4e9b\u6280\u8853\u6709\u4e86\u4e00\u5b9a\u7684\u4e86\u89e3\u3002\u5118\u7ba1\u6211\u5011\u53ef\u4ee5\u900f\u904e\u53ef\u89e3\u91cb\u6027\u6280\u8853\u4f86\u8b49\u660e\u6a21\u578b\u7684\u80fd\u529b\uff0c\u4f46\u96a8\u8457\u6a21\u578b\u8b8a\u5f97\u8d8a\u4f86\u8d8a\u8907\u96dc\uff0c\u6211\u5011\u4e5f\u958b\u59cb\u95dc\u6ce8\u5b83\u5011\u7684\u5f31\u9ede\u548c\u4e0d\u78ba\u5b9a\u6027\u3002 \u5176\u4e2d\u5c0d\u6297\u6a23\u672c\u662f\u4e00\u500b\u6975\u5177\u6311\u6230\u6027\u7684\u554f\u984c\u3002\u5b83\u53ef\u4ee5\u91dd\u5c0d\u6a21\u578b\u7684\u5f31\u9ede\u6709\u610f\u5730\u6bd2\u5bb3\u6a21\u578b\uff0c\u4e26\u5f15\u5c0e\u6a21\u578b\u505a\u51fa\u932f\u8aa4\u7684\u9810\u6e2c\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\uff0c\u6211\u5011\u5c07\u4ecb\u7d39\u4e00\u4e9b Adversarial Attack\uff08\u5c0d\u6297\u5f0f\u653b\u64ca\uff09\u548c Adversarial Defense\uff08\u5c0d\u6297\u5f0f\u9632\u79a6\uff09\u7684\u6280\u8853\uff0c\u5e6b\u52a9\u5404\u4f4d\u7406\u89e3\u8a72\u5982\u4f55\u9762\u5c0d\u9019\u4e9b\u6311\u6230\u3002 \u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f31\u9ede \u9996\u5148\u6211\u5011\u4f86\u8ac7\u8ac7\u6a21\u578b\u5728\u5b89\u5168\u6027\u65b9\u9762\u7684\u5f31\u9ede\uff0c\u4ee5\u53ca\u9019\u4e9b\u5f31\u9ede\u53ef\u80fd\u5c0e\u81f4\u7684\u98a8\u96aa\u3002\u57282019\u5e74\u7684\u4e00\u5834\u5168\u7403\u9ed1\u5e3d\u5927\u6703\u4e0a\uff0c\u4e00\u540d\u7814\u7a76\u4eba\u54e1\u5c55\u793a\u4e86\u6210\u529f\u7834\u89e3\u81c9\u90e8\u8fa8\u8b58\u7cfb\u7d71\u7684\u65b9\u6cd5\u3002\u4ed6\u5011\u767c\u73fe\u7576\u4f7f\u7528\u8005\u4f69\u6234\u773c\u93e1\u6642\uff0c\u81c9\u90e8\u8fa8\u8b58\u7cfb\u7d71\u57fa\u672c\u4e0a\u7121\u6cd5\u5f9e\u773c\u6846\u5340\u57df\u63d0\u53d6 3D \u8a0a\u606f\u3002\u70ba\u4e86\u6b3a\u9a19\u9019\u7a2e\u751f\u7269\u8fa8\u8b58\u6280\u8853\uff0c\u7814\u7a76\u4eba\u54e1\u8a2d\u8a08\u4e86\u4e00\u526f\u7279\u6b8a\u773c\u93e1\uff0c\u7136\u5f8c\u5728\u773c\u93e1\u93e1\u7247\u4e0a\u8cbc\u4e0a\u9ed1\u8272\u81a0\u5e36\uff0c\u4e26\u5728\u4e2d\u9593\u756b\u4e0a\u767d\u8272\u9ede\uff0c\u4ee5\u6a21\u64ec\u4eba\u773c\u7684\u5916\u89c0\u3002 \u5716\u7247\u4f86\u6e90: patentlyapple \u6b64\u65b9\u6cd5\u6700\u7d42\u6210\u529f\u5730\u89e3\u9396\u4e86\u88dd\u7f6e\uff0c\u5f9e\u9019\u4ef6\u4e8b\u60c5\u544a\u8a34\u6211\u5011\uff0c\u5e7e\u4e4e\u4efb\u4f55\u7522\u54c1\u90fd\u5b58\u5728\u8457\u5f31\u9ede\u548c\u4e0d\u78ba\u5b9a\u6027\u3002\u5373\u4fbf\u5728\u770b\u4f3c\u5b89\u5168\u7684\u7cfb\u7d71\u4e2d\uff0c\u4e5f\u5b58\u5728\u88ab\u653b\u64ca\u7684\u98a8\u96aa\u3002\u56e0\u6b64\u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230\u662f\u6211\u5011\u8a72\u91cd\u8996\u7684\u8b70\u984c\u3002 \u76f8\u95dc\u5831\u5c0e: Face ID was hacked at the Black Hat Conference \u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230 \u5c0d\u6297\u6a23\u672c\u662f\u6307\u7d93\u904e\u7279\u5b9a\u4fee\u6539\u6216\u8655\u7406\u7684\u8f38\u5165\u6578\u64da\uff0c\u5176\u76ee\u7684\u662f\u6b3a\u9a19\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u4f7f\u5f97\u9810\u6e2c\u6216\u5206\u985e\u7522\u751f\u932f\u8aa4\u7684\u7d50\u679c\u3002\u4ee5\u5f71\u50cf\u8fa8\u8b58\u70ba\u4f8b\uff0c\u5e38\u898b\u7684\u505a\u6cd5\u662f\u5728\u5716\u50cf\u4e0a\u6dfb\u52a0\u4eba\u985e\u96e3\u4ee5\u5bdf\u89ba\u7684\u96dc\u8a0a\uff0c\u9019\u4e9b\u96dc\u8a0a\u53ef\u80fd\u662f\u50cf\u7d20\u7d30\u5fae\u7684\u8b8a\u5316\u6216\u8272\u5f69\u5fae\u8abf\u3002\u96d6\u7136\u5c0d\u4eba\u985e\u773c\u775b\u800c\u8a00\uff0c\u9019\u4e9b\u8b8a\u5316\u5e7e\u4e4e\u4e0d\u53ef\u5bdf\u89ba\uff0c\u4f46\u9019\u4e9b\u5fae\u5c0f\u7684\u6539\u8b8a\u53ef\u80fd\u8db3\u4ee5\u4f7f\u6a21\u578b\u7684\u9810\u6e2c\u5b8c\u5168\u932f\u8aa4\u3002\u4ee5\u4e0b\u5716\u4f8b\u5b50\u4e2d\uff0c\u4e00\u5f35\u9d28\u5b50\u7684\u7167\u7247\u7d93\u904e\u6dfb\u52a0\u4e86\u5fae\u5c0f\u7684\u5c0d\u6297\u96dc\u8a0a\u5f8c\uff0c\u9019\u5f35\u5716\u50cf\u88ab\u8fa8\u8b58\u6210\u99ac\u3002\u6b64\u5916\u8072\u97f3\u985e\u578b\u7684\u8cc7\u6599\u4e5f\u53ef\u4ee5\u4f7f\u7528\u985e\u4f3c\u7684\u539f\u7406\u3002\u6211\u5011\u53ef\u4ee5\u5728\u4e00\u6bb5\u8072\u97f3\u8a0a\u865f\u4e2d\u5f15\u5165\u96dc\u8a0a\uff0c\u4ee5\u6df7\u6dc6 AI \u8fa8\u8b58\u7684\u7d50\u679c\u3002 \u76f8\u95dc\u8ad6\u6587\uff1a Protecting Voice Controlled Systems Using Sound Source Identification Based on Acoustic Cues \u5c0d\u6297\u5f0f\u653b\u64ca vs. \u5c0d\u6297\u5f0f\u9632\u79a6 \u5c0d\u6297\u5f0f\u653b\u64ca \u548c \u5c0d\u6297\u5f0f\u9632\u79a6 \u662f\u5c0d\u6297\u6027\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7684\u5169\u500b\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u5011\u90fd\u6d89\u53ca\u5230\u7814\u7a76\u6a21\u578b\u7684\u5b89\u5168\u6027\u4ee5\u53ca\u53ef\u80fd\u7684\u653b\u64ca\u624b\u6cd5\u3002\u9019\u5169\u8005\u4e4b\u9593\u7684\u95dc\u4fc2\u5c31\u50cf\u662f\u653b\u5b88\u5169\u7aef\u7684\u4ea4\u63e1\uff0c\u5176\u4e2d\u653b\u64ca\u8005\u8a66\u5716\u627e\u5230\u6a21\u578b\u7684\u5f31\u9ede\uff0c\u800c\u9632\u5b88\u8005\u5247\u81f4\u529b\u65bc\u767c\u5c55\u6280\u8853\u4f86\u4fdd\u8b77\u6a21\u578b\u514d\u53d7\u653b\u64ca\u3002 \u5c0d\u6297\u5f0f\u653b\u64ca\uff08Adversarial Attack\uff09 \u5c0d\u6297\u5f0f\u653b\u64ca\u662f\u6307\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7279\u5225\u662f\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0c\u6709\u610f\u5730\u8a2d\u8a08\u7279\u5b9a\u8f38\u5165\uff0c\u4ee5\u5f15\u8d77\u6a21\u578b\u932f\u8aa4\u9810\u6e2c\u6216\u8aa4\u5224\u7684\u884c\u70ba\u3002\u7136\u800c\u4f9d\u64da\u653b\u64ca\u7684\u65b9\u6cd5\u53c8\u5206\u6210 \u767d\u76d2\u653b\u64ca \u548c \u9ed1\u76d2\u653b\u64ca \u5169\u7a2e\u5c0d\u6297\u5f0f\u653b\u64ca\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5b83\u5011\u6709\u4e0d\u540c\u7684\u7279\u9ede\u548c\u76ee\u7684\u3002\u4ee5\u4e0b\u662f\u5c0d\u9019\u5169\u7a2e\u653b\u64ca\u7684\u89e3\u91cb\uff1a \u767d\u76d2\u653b\u64ca\uff08White-Box Attacks\uff09\uff1a\u662f\u6307\u653b\u64ca\u8005\u5b8c\u5168\u4e86\u89e3\u76ee\u6a19\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u5167\u90e8\u7d50\u69cb\uff0c\u5305\u62ec\u8a13\u7df4\u6578\u64da\u3001\u6a21\u578b\u7d50\u69cb\uff0c\u4ee5\u53ca\u6a21\u578b\u7684\u9810\u6e2c\u51fd\u6578\u3002\u901a\u5e38\u5229\u7528\u6a21\u578b\u7684\u7d50\u69cb\u548c\u53c3\u6578\u9032\u884c\u68af\u5ea6\u653b\u64ca\u3001\u5c0d\u6297\u6027\u8a13\u7df4\u7b49\u65b9\u6cd5\uff0c\u4ee5\u5275\u5efa\u5c0d\u6297\u6027\u6a23\u672c\u9054\u5230\u653b\u64ca\u76ee\u7684\u3002 > Intriguing properties of neural networks (Goodfollw et al., 2013) \u9ed1\u76d2\u653b\u64ca\uff08Black-Box Attacks\uff09\uff1a\u662f\u6307\u6a21\u578b\u7d50\u69cb\u548c\u6b0a\u91cd\u4e0d\u6703\u88ab\u653b\u64ca\u8005\u77e5\u9053\u3002\u653b\u64ca\u8005\u50c5\u80fd\u901a\u904e\u8f38\u5165\u8f38\u51fa\u4e92\u52d5\u4f86\u8a66\u5716\u767c\u73fe\u6a21\u578b\u7684\u5f31\u9ede\u3002\u901a\u5e38\u5229\u7528\u653b\u64ca\u6a23\u672c\u7684\u53ef\u9077\u79fb\u6027\uff0c\u53bb\u653b\u64ca\u5176\u4ed6\u672a\u77e5\u7684\u6a21\u578b\u3002 > Practical black-box attacks against machine learning (Goodfollw et al., 2017) \u5c0d\u6297\u5f0f\u9632\u79a6\uff08Adversarial Defense\uff09 \u5c0d\u6297\u5f0f\u9632\u79a6\u662f\u6307\u5728\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u91dd\u5c0d\u5c0d\u6297\u5f0f\u653b\u64ca\u958b\u767c\u7684\u6280\u8853\u548c\u7b56\u7565\uff0c\u76ee\u7684\u5728\u65bc\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u4f7f\u5176\u66f4\u96e3\u53d7\u5230\u5c0d\u6297\u5f0f\u653b\u64ca\u7684\u5f71\u97ff\u3002\u5c0d\u6297\u5f0f\u9632\u79a6\u53ef\u4ee5\u63a1\u53d6\u591a\u7a2e\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u5305\u62ec\uff1a \u5c0d\u6297\u6027\u8a13\u7df4\uff1a\u9019\u662f\u4e00\u7a2e\u8a13\u7df4\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6a21\u578b\u5728\u8a13\u7df4\u904e\u7a0b\u4e2d\u52a0\u5165\u5c0d\u6297\u6027\u6a23\u672c\uff0c\u4f7f\u5176\u80fd\u5920\u8b58\u5225\u548c\u9069\u61c9\u9019\u4e9b\u653b\u64ca\u6a23\u672c\u3002 > Explaining and Harnessing Adversarial Examples (FGSM) (Goodfollw et al., 2014) > Adversarial examples in the physical world (PDG) (Goodfollw et al., 2016) \u6a21\u578b\u878d\u5408\uff1a\u7d50\u5408\u591a\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u4ee5\u6e1b\u5c11\u5c0d\u6297\u5f0f\u653b\u64ca\u7684\u6210\u529f\u7387\u3002\u901a\u5e38\u653b\u64ca\u8005\u91dd\u5c0d\u55ae\u500b\u6a21\u578b\u7684\u5f31\u9ede\u9032\u884c\u653b\u64ca\uff0c\u4f46\u7576\u591a\u500b\u6a21\u578b\u7684\u9810\u6e2c\u4e00\u81f4\u6642\uff0c\u653b\u64ca\u8b8a\u5f97\u66f4\u52a0\u56f0\u96e3\u3002 > Boosting adversarial attacks with momentum (Dong Y et al., 2018) \u8cc7\u6599\u9810\u8655\u7406\uff1a\u5c0d\u8f38\u5165\u8cc7\u6599\u9032\u884c\u9810\u8655\u7406\uff0c\u50cf\u662f\u5f71\u50cf\u7684\u53bb\u566a\u3001\u5e73\u6ed1\u5316\u6216\u96a8\u6a5f\u5316\u64fe\u52d5\uff0c\u4ee5\u6e1b\u5c11\u5c0d\u6297\u6027\u653b\u64ca\u7684\u53ef\u80fd\u6027\u3002 > Feature squeezing: detecting adversarial examples in deep neural networks (\u53bb\u566a) (Weilin Xu et al., 2017) > Mitigating adversarial effects through randomization (\u96a8\u6a5f\u5316) (Cihang Xie et al., 2017) \u5728\u5c0d\u6297\u6a23\u672c\u9818\u57df\u4e2d\u6709\u653b\u5c31\u6709\u5b88\uff0c\u56e0\u6b64\u4e00\u9805 AI \u7522\u54c1\u5728\u767c\u5e03\u4e4b\u524d\u5f31\u9ede\u6e2c\u8a66\u8207\u6539\u5584\u662f\u5f88\u91cd\u8981\u7684\u4e00\u74b0\u3002\u5225\u7b49\u5230\u7ffb\u8eca\u4e86\u624d\u767c\u73fe\u4e8b\u60c5\u7684\u56b4\u91cd\u6027\uff01 Reference Protecting Voice Controlled Systems Using Sound Source Identification Based on Acoustic Cues(arxiv) Adversarial Machine Learning: A Beginner\u2019s Guide to Adversarial Attacks and Defenses \u904b\u7528AI\u4f86\u6e2c\u8a66AI-\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f31\u9ede\u6e2c\u8a66\u8207\u6539\u5584 \u4f55\u8b02\u5c0d\u6297\u5f0f\u6a5f\u5668\u5b78\u7fd2\uff1f \u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u5c0d\u6297\u6027\u653b\u64ca\u8207\u9632\u79a6 https://www.youtube.com/watch?v=qCYAKmFFpbs","title":"[Day 28] \u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230\uff1a\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede\uff1f"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#day-28-xai","text":"\u5728\u672c\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u5df2\u7d93\u4ecb\u7d39\u4e86\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7528\u65bc\u89e3\u91cb\u8907\u96dc\u7684\u9ed1\u76d2\u6a21\u578b\u7684\u5404\u7a2e\u65b9\u6cd5\uff0c\u60f3\u5fc5\u5404\u4f4d\u5c0d\u9019\u4e9b\u6280\u8853\u6709\u4e86\u4e00\u5b9a\u7684\u4e86\u89e3\u3002\u5118\u7ba1\u6211\u5011\u53ef\u4ee5\u900f\u904e\u53ef\u89e3\u91cb\u6027\u6280\u8853\u4f86\u8b49\u660e\u6a21\u578b\u7684\u80fd\u529b\uff0c\u4f46\u96a8\u8457\u6a21\u578b\u8b8a\u5f97\u8d8a\u4f86\u8d8a\u8907\u96dc\uff0c\u6211\u5011\u4e5f\u958b\u59cb\u95dc\u6ce8\u5b83\u5011\u7684\u5f31\u9ede\u548c\u4e0d\u78ba\u5b9a\u6027\u3002 \u5176\u4e2d\u5c0d\u6297\u6a23\u672c\u662f\u4e00\u500b\u6975\u5177\u6311\u6230\u6027\u7684\u554f\u984c\u3002\u5b83\u53ef\u4ee5\u91dd\u5c0d\u6a21\u578b\u7684\u5f31\u9ede\u6709\u610f\u5730\u6bd2\u5bb3\u6a21\u578b\uff0c\u4e26\u5f15\u5c0e\u6a21\u578b\u505a\u51fa\u932f\u8aa4\u7684\u9810\u6e2c\u3002\u5728\u4eca\u5929\u7684\u5167\u5bb9\u4e2d\uff0c\u6211\u5011\u5c07\u4ecb\u7d39\u4e00\u4e9b Adversarial Attack\uff08\u5c0d\u6297\u5f0f\u653b\u64ca\uff09\u548c Adversarial Defense\uff08\u5c0d\u6297\u5f0f\u9632\u79a6\uff09\u7684\u6280\u8853\uff0c\u5e6b\u52a9\u5404\u4f4d\u7406\u89e3\u8a72\u5982\u4f55\u9762\u5c0d\u9019\u4e9b\u6311\u6230\u3002","title":"[Day 28] \u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230\uff1a\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede\uff1f"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#_1","text":"\u9996\u5148\u6211\u5011\u4f86\u8ac7\u8ac7\u6a21\u578b\u5728\u5b89\u5168\u6027\u65b9\u9762\u7684\u5f31\u9ede\uff0c\u4ee5\u53ca\u9019\u4e9b\u5f31\u9ede\u53ef\u80fd\u5c0e\u81f4\u7684\u98a8\u96aa\u3002\u57282019\u5e74\u7684\u4e00\u5834\u5168\u7403\u9ed1\u5e3d\u5927\u6703\u4e0a\uff0c\u4e00\u540d\u7814\u7a76\u4eba\u54e1\u5c55\u793a\u4e86\u6210\u529f\u7834\u89e3\u81c9\u90e8\u8fa8\u8b58\u7cfb\u7d71\u7684\u65b9\u6cd5\u3002\u4ed6\u5011\u767c\u73fe\u7576\u4f7f\u7528\u8005\u4f69\u6234\u773c\u93e1\u6642\uff0c\u81c9\u90e8\u8fa8\u8b58\u7cfb\u7d71\u57fa\u672c\u4e0a\u7121\u6cd5\u5f9e\u773c\u6846\u5340\u57df\u63d0\u53d6 3D \u8a0a\u606f\u3002\u70ba\u4e86\u6b3a\u9a19\u9019\u7a2e\u751f\u7269\u8fa8\u8b58\u6280\u8853\uff0c\u7814\u7a76\u4eba\u54e1\u8a2d\u8a08\u4e86\u4e00\u526f\u7279\u6b8a\u773c\u93e1\uff0c\u7136\u5f8c\u5728\u773c\u93e1\u93e1\u7247\u4e0a\u8cbc\u4e0a\u9ed1\u8272\u81a0\u5e36\uff0c\u4e26\u5728\u4e2d\u9593\u756b\u4e0a\u767d\u8272\u9ede\uff0c\u4ee5\u6a21\u64ec\u4eba\u773c\u7684\u5916\u89c0\u3002 \u5716\u7247\u4f86\u6e90: patentlyapple \u6b64\u65b9\u6cd5\u6700\u7d42\u6210\u529f\u5730\u89e3\u9396\u4e86\u88dd\u7f6e\uff0c\u5f9e\u9019\u4ef6\u4e8b\u60c5\u544a\u8a34\u6211\u5011\uff0c\u5e7e\u4e4e\u4efb\u4f55\u7522\u54c1\u90fd\u5b58\u5728\u8457\u5f31\u9ede\u548c\u4e0d\u78ba\u5b9a\u6027\u3002\u5373\u4fbf\u5728\u770b\u4f3c\u5b89\u5168\u7684\u7cfb\u7d71\u4e2d\uff0c\u4e5f\u5b58\u5728\u88ab\u653b\u64ca\u7684\u98a8\u96aa\u3002\u56e0\u6b64\u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230\u662f\u6211\u5011\u8a72\u91cd\u8996\u7684\u8b70\u984c\u3002 \u76f8\u95dc\u5831\u5c0e: Face ID was hacked at the Black Hat Conference","title":"\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f31\u9ede"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#_2","text":"\u5c0d\u6297\u6a23\u672c\u662f\u6307\u7d93\u904e\u7279\u5b9a\u4fee\u6539\u6216\u8655\u7406\u7684\u8f38\u5165\u6578\u64da\uff0c\u5176\u76ee\u7684\u662f\u6b3a\u9a19\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u4f7f\u5f97\u9810\u6e2c\u6216\u5206\u985e\u7522\u751f\u932f\u8aa4\u7684\u7d50\u679c\u3002\u4ee5\u5f71\u50cf\u8fa8\u8b58\u70ba\u4f8b\uff0c\u5e38\u898b\u7684\u505a\u6cd5\u662f\u5728\u5716\u50cf\u4e0a\u6dfb\u52a0\u4eba\u985e\u96e3\u4ee5\u5bdf\u89ba\u7684\u96dc\u8a0a\uff0c\u9019\u4e9b\u96dc\u8a0a\u53ef\u80fd\u662f\u50cf\u7d20\u7d30\u5fae\u7684\u8b8a\u5316\u6216\u8272\u5f69\u5fae\u8abf\u3002\u96d6\u7136\u5c0d\u4eba\u985e\u773c\u775b\u800c\u8a00\uff0c\u9019\u4e9b\u8b8a\u5316\u5e7e\u4e4e\u4e0d\u53ef\u5bdf\u89ba\uff0c\u4f46\u9019\u4e9b\u5fae\u5c0f\u7684\u6539\u8b8a\u53ef\u80fd\u8db3\u4ee5\u4f7f\u6a21\u578b\u7684\u9810\u6e2c\u5b8c\u5168\u932f\u8aa4\u3002\u4ee5\u4e0b\u5716\u4f8b\u5b50\u4e2d\uff0c\u4e00\u5f35\u9d28\u5b50\u7684\u7167\u7247\u7d93\u904e\u6dfb\u52a0\u4e86\u5fae\u5c0f\u7684\u5c0d\u6297\u96dc\u8a0a\u5f8c\uff0c\u9019\u5f35\u5716\u50cf\u88ab\u8fa8\u8b58\u6210\u99ac\u3002\u6b64\u5916\u8072\u97f3\u985e\u578b\u7684\u8cc7\u6599\u4e5f\u53ef\u4ee5\u4f7f\u7528\u985e\u4f3c\u7684\u539f\u7406\u3002\u6211\u5011\u53ef\u4ee5\u5728\u4e00\u6bb5\u8072\u97f3\u8a0a\u865f\u4e2d\u5f15\u5165\u96dc\u8a0a\uff0c\u4ee5\u6df7\u6dc6 AI \u8fa8\u8b58\u7684\u7d50\u679c\u3002 \u76f8\u95dc\u8ad6\u6587\uff1a Protecting Voice Controlled Systems Using Sound Source Identification Based on Acoustic Cues","title":"\u5c0d\u6297\u6a23\u672c\u7684\u6311\u6230"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#vs","text":"\u5c0d\u6297\u5f0f\u653b\u64ca \u548c \u5c0d\u6297\u5f0f\u9632\u79a6 \u662f\u5c0d\u6297\u6027\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u7684\u5169\u500b\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u5011\u90fd\u6d89\u53ca\u5230\u7814\u7a76\u6a21\u578b\u7684\u5b89\u5168\u6027\u4ee5\u53ca\u53ef\u80fd\u7684\u653b\u64ca\u624b\u6cd5\u3002\u9019\u5169\u8005\u4e4b\u9593\u7684\u95dc\u4fc2\u5c31\u50cf\u662f\u653b\u5b88\u5169\u7aef\u7684\u4ea4\u63e1\uff0c\u5176\u4e2d\u653b\u64ca\u8005\u8a66\u5716\u627e\u5230\u6a21\u578b\u7684\u5f31\u9ede\uff0c\u800c\u9632\u5b88\u8005\u5247\u81f4\u529b\u65bc\u767c\u5c55\u6280\u8853\u4f86\u4fdd\u8b77\u6a21\u578b\u514d\u53d7\u653b\u64ca\u3002","title":"\u5c0d\u6297\u5f0f\u653b\u64ca vs. \u5c0d\u6297\u5f0f\u9632\u79a6"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#adversarial-attack","text":"\u5c0d\u6297\u5f0f\u653b\u64ca\u662f\u6307\u91dd\u5c0d\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u7279\u5225\u662f\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0c\u6709\u610f\u5730\u8a2d\u8a08\u7279\u5b9a\u8f38\u5165\uff0c\u4ee5\u5f15\u8d77\u6a21\u578b\u932f\u8aa4\u9810\u6e2c\u6216\u8aa4\u5224\u7684\u884c\u70ba\u3002\u7136\u800c\u4f9d\u64da\u653b\u64ca\u7684\u65b9\u6cd5\u53c8\u5206\u6210 \u767d\u76d2\u653b\u64ca \u548c \u9ed1\u76d2\u653b\u64ca \u5169\u7a2e\u5c0d\u6297\u5f0f\u653b\u64ca\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5b83\u5011\u6709\u4e0d\u540c\u7684\u7279\u9ede\u548c\u76ee\u7684\u3002\u4ee5\u4e0b\u662f\u5c0d\u9019\u5169\u7a2e\u653b\u64ca\u7684\u89e3\u91cb\uff1a \u767d\u76d2\u653b\u64ca\uff08White-Box Attacks\uff09\uff1a\u662f\u6307\u653b\u64ca\u8005\u5b8c\u5168\u4e86\u89e3\u76ee\u6a19\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u5167\u90e8\u7d50\u69cb\uff0c\u5305\u62ec\u8a13\u7df4\u6578\u64da\u3001\u6a21\u578b\u7d50\u69cb\uff0c\u4ee5\u53ca\u6a21\u578b\u7684\u9810\u6e2c\u51fd\u6578\u3002\u901a\u5e38\u5229\u7528\u6a21\u578b\u7684\u7d50\u69cb\u548c\u53c3\u6578\u9032\u884c\u68af\u5ea6\u653b\u64ca\u3001\u5c0d\u6297\u6027\u8a13\u7df4\u7b49\u65b9\u6cd5\uff0c\u4ee5\u5275\u5efa\u5c0d\u6297\u6027\u6a23\u672c\u9054\u5230\u653b\u64ca\u76ee\u7684\u3002 > Intriguing properties of neural networks (Goodfollw et al., 2013) \u9ed1\u76d2\u653b\u64ca\uff08Black-Box Attacks\uff09\uff1a\u662f\u6307\u6a21\u578b\u7d50\u69cb\u548c\u6b0a\u91cd\u4e0d\u6703\u88ab\u653b\u64ca\u8005\u77e5\u9053\u3002\u653b\u64ca\u8005\u50c5\u80fd\u901a\u904e\u8f38\u5165\u8f38\u51fa\u4e92\u52d5\u4f86\u8a66\u5716\u767c\u73fe\u6a21\u578b\u7684\u5f31\u9ede\u3002\u901a\u5e38\u5229\u7528\u653b\u64ca\u6a23\u672c\u7684\u53ef\u9077\u79fb\u6027\uff0c\u53bb\u653b\u64ca\u5176\u4ed6\u672a\u77e5\u7684\u6a21\u578b\u3002 > Practical black-box attacks against machine learning (Goodfollw et al., 2017)","title":"\u5c0d\u6297\u5f0f\u653b\u64ca\uff08Adversarial Attack\uff09"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#adversarial-defense","text":"\u5c0d\u6297\u5f0f\u9632\u79a6\u662f\u6307\u5728\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\u4e2d\u91dd\u5c0d\u5c0d\u6297\u5f0f\u653b\u64ca\u958b\u767c\u7684\u6280\u8853\u548c\u7b56\u7565\uff0c\u76ee\u7684\u5728\u65bc\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u4f7f\u5176\u66f4\u96e3\u53d7\u5230\u5c0d\u6297\u5f0f\u653b\u64ca\u7684\u5f71\u97ff\u3002\u5c0d\u6297\u5f0f\u9632\u79a6\u53ef\u4ee5\u63a1\u53d6\u591a\u7a2e\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u5305\u62ec\uff1a \u5c0d\u6297\u6027\u8a13\u7df4\uff1a\u9019\u662f\u4e00\u7a2e\u8a13\u7df4\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6a21\u578b\u5728\u8a13\u7df4\u904e\u7a0b\u4e2d\u52a0\u5165\u5c0d\u6297\u6027\u6a23\u672c\uff0c\u4f7f\u5176\u80fd\u5920\u8b58\u5225\u548c\u9069\u61c9\u9019\u4e9b\u653b\u64ca\u6a23\u672c\u3002 > Explaining and Harnessing Adversarial Examples (FGSM) (Goodfollw et al., 2014) > Adversarial examples in the physical world (PDG) (Goodfollw et al., 2016) \u6a21\u578b\u878d\u5408\uff1a\u7d50\u5408\u591a\u500b\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u4ee5\u6e1b\u5c11\u5c0d\u6297\u5f0f\u653b\u64ca\u7684\u6210\u529f\u7387\u3002\u901a\u5e38\u653b\u64ca\u8005\u91dd\u5c0d\u55ae\u500b\u6a21\u578b\u7684\u5f31\u9ede\u9032\u884c\u653b\u64ca\uff0c\u4f46\u7576\u591a\u500b\u6a21\u578b\u7684\u9810\u6e2c\u4e00\u81f4\u6642\uff0c\u653b\u64ca\u8b8a\u5f97\u66f4\u52a0\u56f0\u96e3\u3002 > Boosting adversarial attacks with momentum (Dong Y et al., 2018) \u8cc7\u6599\u9810\u8655\u7406\uff1a\u5c0d\u8f38\u5165\u8cc7\u6599\u9032\u884c\u9810\u8655\u7406\uff0c\u50cf\u662f\u5f71\u50cf\u7684\u53bb\u566a\u3001\u5e73\u6ed1\u5316\u6216\u96a8\u6a5f\u5316\u64fe\u52d5\uff0c\u4ee5\u6e1b\u5c11\u5c0d\u6297\u6027\u653b\u64ca\u7684\u53ef\u80fd\u6027\u3002 > Feature squeezing: detecting adversarial examples in deep neural networks (\u53bb\u566a) (Weilin Xu et al., 2017) > Mitigating adversarial effects through randomization (\u96a8\u6a5f\u5316) (Cihang Xie et al., 2017) \u5728\u5c0d\u6297\u6a23\u672c\u9818\u57df\u4e2d\u6709\u653b\u5c31\u6709\u5b88\uff0c\u56e0\u6b64\u4e00\u9805 AI \u7522\u54c1\u5728\u767c\u5e03\u4e4b\u524d\u5f31\u9ede\u6e2c\u8a66\u8207\u6539\u5584\u662f\u5f88\u91cd\u8981\u7684\u4e00\u74b0\u3002\u5225\u7b49\u5230\u7ffb\u8eca\u4e86\u624d\u767c\u73fe\u4e8b\u60c5\u7684\u56b4\u91cd\u6027\uff01","title":"\u5c0d\u6297\u5f0f\u9632\u79a6\uff08Adversarial Defense\uff09"},{"location":"28.\u8aa4\u5dee\u5206\u6790\u548c\u5c0d\u6297\u6a23\u672c:\u5982\u4f55\u5229\u7528XAI\u6aa2\u6e2c\u6a21\u578b\u7684\u5f31\u9ede/#reference","text":"Protecting Voice Controlled Systems Using Sound Source Identification Based on Acoustic Cues(arxiv) Adversarial Machine Learning: A Beginner\u2019s Guide to Adversarial Attacks and Defenses \u904b\u7528AI\u4f86\u6e2c\u8a66AI-\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f31\u9ede\u6e2c\u8a66\u8207\u6539\u5584 \u4f55\u8b02\u5c0d\u6297\u5f0f\u6a5f\u5668\u5b78\u7fd2\uff1f \u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u5c0d\u6297\u6027\u653b\u64ca\u8207\u9632\u79a6 https://www.youtube.com/watch?v=qCYAKmFFpbs","title":"Reference"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/","text":"[Day 29] XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\uff1f \u5728\u79d1\u6280\u8fc5\u901f\u9032\u6b65\u7684\u6642\u4ee3\uff0c\u4eba\u5de5\u667a\u6167\u5df2\u7d93\u6df1\u6df1\u5730\u878d\u5165\u4e86\u6211\u5011\u7684\u751f\u6d3b\uff0c\u5f9e \u667a\u6167\u88fd\u9020 \u3001 \u667a\u6167\u91ab\u7642 \u3001 \u667a\u6167\u670d\u52d9 \u5230 \u667a\u6167\u4ea4\u901a \uff0c\u7121\u6240\u4e0d\u5728\u3002\u7136\u800c\u9019\u7a2e\u6df1\u5ea6\u7684\u6574\u5408\u4e5f\u4f34\u96a8\u8457\u5c0d\u65bc\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\u7684\u95dc\u5207\u3002\u5982\u4eca XAI \u5df2\u6210\u70ba\u89e3\u6c7a\u9019\u4e9b\u554f\u984c\u7684\u95dc\u9375\uff0c\u5b83\u4e0d\u50c5\u5354\u52a9\u6211\u5011\u63d0\u9ad8\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u8207\u5c0d\u6280\u8853\u7684\u63a5\u53d7\u7a0b\u5ea6\u3002\u7576\u4e00\u822c\u5927\u773e\u80fd\u5920\u7406\u89e3 AI \u5982\u4f55\u9054\u5230\u7279\u5b9a\u7684\u7d50\u679c\u6642\uff0c\u4ed6\u5011\u66f4\u6709\u53ef\u80fd\u63a5\u53d7\u4e26\u4f7f\u7528\u9019\u4e9b\u6280\u8853\u3002 \u900f\u660e\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u6613\u65bc\u7406\u89e3\u3002 \u53ef\u9760\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u78ba\u4fdd\u904b\u884c\u53ef\u9760\u548c\u5b89\u5168\u3002 \u516c\u5e73\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7edf\u61c9\u8a72\u516c\u5e73\u5c0d\u5f85\u6240\u6709\u4eba\u3002 \u96b1\u79c1\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u4fdd\u969c\u4e26\u5c0a\u91cd\u96b1\u79c1\u3002 \u5305\u5bb9\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u78ba\u4fdd\u6bcf\u500b\u4eba\u90fd\u80fd\u5920\u53c3\u8207\u548c\u53d7\u76ca\u3002 \u8ca0\u8cac\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u5efa\u7acb\u76e3\u7763\u6a19\u6e96\u3002 \u4e00\u500b\u8ca0\u8cac\u4efb\u7684\u4eba\u5de5\u667a\u6167\u9664\u4e86\u4ee5\u4e0a\u516d\u9805\u539f\u5247\u4e4b\u5916\uff0c\u53e6\u5916 XAI \u4e5f\u5f15\u767c\u4e86\u5c0d AI \u502b\u7406\u548c\u9053\u5fb7\u7684\u66f4\u591a\u95dc\u6ce8\u3002\u60f3\u5fc5\u9019\u4e5f\u662f\u6bcf\u500b\u4f01\u696d\u4e3b\u548c\u4f7f\u7528\u8005\u6240\u64d4\u6182\u7684\u8b70\u984c\uff0c\u96a8\u8457\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u589e\u52a0\uff0c\u540c\u6642\u6211\u5011\u66f4\u95dc\u5fc3 AI \u7684\u502b\u7406\u9053\u5fb7\u548c\u98a8\u96aa\u3002 AI\u7684\u502b\u7406\u9053\u5fb7 AI \u7684\u502b\u7406\u9053\u5fb7\u4e00\u76f4\u662f\u5f15\u8d77\u5ee3\u6cdb\u95dc\u6ce8\u7684\u8b70\u984c\uff0c\u800c\u6a5f\u5668\u5b78\u7fd2\u4f5c\u70ba AI \u7684\u91cd\u8981\u5206\u652f\uff0c\u5176\u502b\u7406\u554f\u984c\u66f4\u662f\u5f15\u4eba\u6df1\u601d\u3002\u5728\u4eca\u65e5\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e\u6a5f\u5668\u5b78\u7fd2\u4e2d\u5e38\u898b\u7684\u9053\u5fb7\u554f\u984c\uff0c\u4e26\u501f\u93e1\u4e00\u4e9b\u771f\u5be6\u4f8b\u5b50\u4f86\u95e1\u8ff0\u9019\u4e9b\u8b70\u984c\u7684\u91cd\u8981\u6027\u3002 [\u6848\u4f8b\u4e00] GPT\u5075\u6e2c\u5668\u5177\u5099\u8a9e\u6587\u4e0a\u7684\u504f\u898b\u8207\u6b67\u8996 \u5728\u8fd1\u671f\u7684\u4e00\u9805\u7814\u7a76\u4e2d\uff0c\u4f7f\u7528\u9019\u4e9b\u751f\u6210\u5f0f\u9810\u8a13\u7df4\u6a21\u578b\uff08GPT\uff09\u5075\u6e2c\u5668\u4f86\u5224\u65b7\u82f1\u6587\u6587\u7ae0\u662f\u5426\u4f86\u81ea AI \uff0c\u6bcd\u8a9e\u975e\u82f1\u6587\u7684\u4f7f\u7528\u8005\u5728\u64b0\u5beb\u82f1\u6587\u6587\u7ae0\u6642\uff0c\u6709\u8d85\u904e\u4e00\u534a\u7684\u60c5\u6cc1\u88ab\u8aa4\u8a8d\u70ba\u662f AI \u751f\u6210\u7684\u6587\u7ae0\u3002\u9019\u5f15\u767c\u4e86\u5c0d GPT \u5075\u6e2c\u5668\u5b58\u5728\u8a9e\u6587\u4e0a\u7684\u504f\u898b\u548c\u6b67\u8996\u7684\u64d4\u6182\u3002\u5728\u8a13\u7df4 GPT \u5075\u6e2c\u5668\u7684\u904e\u7a0b\u4e2d\uff0c\u7814\u7a76\u4eba\u54e1\u4f7f\u7528\u4e867\u6b3e\u71b1\u9580\u7684\u5075\u6e2c\u5668\u4f86\u6aa2\u67e591\u7bc7\u6e90\u81ea\u4e2d\u570b\u8ad6\u58c7\u7684\u6258\u798f\u5beb\u4f5c\u6587\u7ae0\uff0c\u4ee5\u53ca88\u7bc7\u7531\u7f8e\u570b8\u5e74\u7d1a\u751f\u6240\u64b0\u5beb\u7684\u82f1\u6587\u4f5c\u6587\u3002\u5f9e\u5be6\u9a57\u7d50\u679c\u986f\u793a\uff0c\u9019\u4e9b\u5075\u6e2c\u5668\u80fd\u8f03\u6b63\u78ba\u5730\u5206\u8fa8\u51fa\u7531\u7f8e\u570b\u5b78\u751f\u6240\u64b0\u5beb\u7684\u6587\u7ae0\uff0c\u4f46\u5c0d\u65bc\u4e2d\u570b\u5b78\u751f\u6240\u64b0\u5beb\u7684\u6258\u798f\u6587\u7ae0\u7684\u8b58\u5225\u7387\u537b\u986f\u8457\u4e0b\u964d\uff0c\u4e26\u8aa4\u5224\u70ba\u662f AI \u6240\u751f\u6210\u7684\u6587\u7ae0\u3002 \u9019\u4e00\u554f\u984c\u7684\u6839\u672c\u5728\u65bc\u8a13\u7df4\u6578\u64da\u7684\u4e0d\u5e73\u8861\u548c\u504f\u5411\u6027\u3002\u7576\u8a13\u7df4\u6578\u64da\u4e0d\u5920\u591a\u6a23\u5316\u6216\u5b58\u5728\u504f\u5411\u6027\u6642\uff0c\u6a21\u578b\u5c31\u5bb9\u6613\u7522\u751f\u8aa4\u5224\u548c\u6b67\u8996\u6027\u884c\u70ba\u3002\u56e0\u6b64\u70ba\u4e86\u5efa\u7acb\u66f4\u516c\u6b63\u3001\u7121\u504f\u898b\u7684 AI \u7cfb\u7d71\uff0c\u9700\u8981\u8b39\u614e\u6311\u9078\u548c\u8655\u7406\u8a13\u7df4\u6578\u64da\uff0c\u4e26\u5b9a\u671f\u6aa2\u67e5\u548c\u8abf\u6574\u6a21\u578b\u4ee5\u6e1b\u5c11\u504f\u898b\u3002\u9019\u4e5f\u53cd\u6620\u4e86 AI \u6280\u8853\u61c9\u8a72\u53d7\u5230\u502b\u7406\u548c\u591a\u5143\u6027\u7684\u5be9\u8996\uff0c\u4ee5\u78ba\u4fdd\u5176\u61c9\u7528\u4e0d\u6703\u5c0d\u4e0d\u540c\u6587\u5316\u548c\u8a9e\u8a00\u7684\u4f7f\u7528\u8005\u7522\u751f\u4e0d\u516c\u5e73\u7684\u5f71\u97ff\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u975e\u82f1\u8a9e\u6bcd\u8a9e\u8005\u5beb\u7684\u82f1\u6587\u6587\u7ae0\uff0c\u6709\u4e00\u534a\u88abGPT\u5075\u6e2c\u5668\u6a19\u8a18\u70baAI\u751f\u6210 [\u6848\u4f8b\u4e8c] Google\u76f8\u7c3f\u51fa\u5305\u8aa4\u5c07\u9ed1\u4eba\u6a19\u6210\u5927\u7329\u7329 \u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0cGoogle \u76f8\u7c3f\u4f7f\u7528\u4e86\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u4f86\u81ea\u52d5\u8fa8\u8b58\u7167\u7247\u4e2d\u7684\u7269\u9ad4\u548c\u4eba\u7269\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8a72\u7cfb\u7d71\u5728\u8fa8\u8b58\u4e2d\u51fa\u73fe\u4e86\u4e00\u500b\u91cd\u5927\u932f\u8aa4\u3002\u9019\u500b\u932f\u8aa4\u5c0e\u81f4\u8a72\u7cfb\u7d71\u5c07\u4e00\u4f4d\u7528\u6236\u4ee5\u53ca\u4ed6\u7684\u9ed1\u4eba\u670b\u53cb\u7684\u7167\u7247\u8aa4\u6a19\u70ba\u5927\u7329\u7329\uff0c\u9019\u5f15\u8d77\u4e86\u516c\u773e\u7684\u5ee3\u6cdb\u8a0e\u8ad6\uff0c\u4e26\u5e36\u51fa\u4e86\u6709\u95dc\u4eba\u5de5\u667a\u6167\u7684\u8cc7\u8a0a\u502b\u7406\u8b70\u984c\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u76f8\u7247\u8fa8\u8b58\u51fa\u5305\u8aa4\u5c07\u9ed1\u4eba\u6a19\u6210\u5927\u7329\u7329\uff0cGoogle\u706b\u901f\u9053\u6b49 [\u6848\u4f8b\u4e09] \u9435\u9762\u7121\u79c1\u5305\u9752\u5929\uff1f\u5c0f\u5fc3AI\u7684\u5167\u5efa\u6b67\u8996 \u8fd1\u5e74\u4f86\uff0c\u7f8e\u570b\u6cd5\u9662\u5ee3\u6cdb\u4f7f\u7528\u540d\u70ba\u300cCOMPAS\u300d\u7684 AI \u7cfb\u7d71\uff0c\u9019\u662f\u7531\u5546\u696d\u516c\u53f8\u958b\u767c\u7684\uff0c\u7528\u4f86\u5354\u52a9\u6cd5\u5b98\u8a55\u4f30\u88ab\u544a\u7684\u518d\u72af\u98a8\u96aa\uff0c\u4e26\u4f5c\u70ba\u5224\u6c7a\u7684\u53c3\u8003\u4f9d\u64da\u3002\u7136\u800c\u8a31\u591a \u7814\u7a76 \u5df2\u7d93\u660e\u78ba\u6307\u51fa\uff0c\u9019\u5957 AI \u7cfb\u7d71\u5b58\u5728\u6f5b\u5728\u7684\u7a2e\u65cf\u6b67\u8996\u554f\u984c\uff0c\u5373\u6709\u8272\u4eba\u7a2e\u66f4\u5bb9\u6613\u88ab\u9810\u6e2c\u70ba\u9ad8\u518d\u72af\u98a8\u96aa\uff0c\u9019\u5f15\u767c\u4e86\u5ee3\u6cdb\u7684\u722d\u8b70\u548c\u8a0e\u8ad6\u3002 \u5f9e\u6848\u4f8b\u4e8c\u548c\u6848\u4f8b\u4e09\u4e2d\u6211\u5011\u53ef\u4ee5\u770b\u5230\uff0c\u5f71\u50cf\u8fa8\u8b58\u6280\u8853\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5b58\u5728\u672a\u77e5\u7684\u4e0d\u78ba\u5b9a\u6027\uff0c\u4e26\u4e14\u5bb9\u6613\u53d7\u5230\u7a2e\u65cf\u6b67\u8996\u7b49\u554f\u984c\u7684\u5f71\u97ff\u3002\u9019\u7a81\u986f\u4e86 AI \u7684\u4e00\u500b\u95dc\u9375\u9650\u5236\uff1aAI \u7f3a\u4e4f\u771f\u6b63\u7684\u601d\u8003\u80fd\u529b\u548c\u5224\u65b7\u80fd\u529b\uff0c\u800c\u662f\u4f9d\u8cf4\u65bc\u8a13\u7df4\u6578\u64da\u4f86\u505a\u51fa\u6c7a\u7b56\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a AI \u7576\u6cd5\u5b98\uff0c\u6703\u662f\u6b63\u7fa9\u5973\u795e\u7684\u5316\u8eab\u55ce\uff1f [\u6848\u4f8b\u56db] AI\u651d\u5f71\u6a5f\u8aa4\u628a\u88c1\u5224\u7684\u5149\u982d\u7576\u8db3\u7403\u8ddf\u62cd\u8f49\u64ad \u6700\u5f8c\u4e00\u500b\u4f86\u9ede\u8f15\u9b06\u7684\uff0c\u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0c\u4e00\u5bb6\u8607\u683c\u862d\u8db3\u7403\u4ff1\u6a02\u90e8\u5f15\u5165\u4e86\u4e00\u5957AI\u651d\u5f71\u6a5f\u7cfb\u7d71\uff0c\u76ee\u7684\u8981\u81ea\u52d5\u8ffd\u8e64\u8db3\u7403\u6bd4\u8cfd\u4e2d\u7403\u7684\u8e64\u8de1\uff0c\u4ee5\u9032\u884c\u8f49\u64ad\u3002\u7136\u800c\u5728\u6bd4\u8cfd\u9032\u884c\u4e00\u6bb5\u6642\u9593\u5f8c\uff0c\u9019\u5957 AI \u7cfb\u7d71\u537b\u7a81\u7136\u505c\u6b62\u8ffd\u8e64\u8db3\u7403\uff0c\u800c\u662f\u5c07\u93e1\u982d\u5c0d\u6e96\u4e86\u5834\u908a\u7684\u88c1\u5224\u5149\u982d\u3002\u9019\u500b\u4e8b\u4ef6\u51f8\u986f\u51fa AI \u7cfb\u7d71\u7684\u4e0d\u78ba\u5b9a\u6027\u548c\u53ef\u4fe1\u5ea6\u554f\u984c\u3002AI \u651d\u5f71\u6a5f\u7cfb\u7d71\u7684\u8a2d\u8a08\u521d\u8877\u662f\u70ba\u4e86\u63d0\u4f9b\u66f4\u597d\u7684\u6bd4\u8cfd\u8f49\u64ad\u9ad4\u9a57\uff0c\u4f46\u537b\u56e0\u70ba\u610f\u5916\u7684\u5931\u8aa4\uff0c\u5c0e\u81f4\u4e86\u8f49\u64ad\u7684\u7b11\u8a71\u3002 \u9019\u500b\u6848\u4f8b\u5f37\u8abf\u4e86\u5f71\u50cf\u8996\u89ba\u53ef\u89e3\u91cb\u6027\u7684\u91cd\u8981\u6027\u3002\u5982\u679c AI \u651d\u5f71\u6a5f\u7cfb\u7d71\u80fd\u5920\u6e05\u6670\u5730\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b\uff0c\u6216\u8005\u63d0\u4f9b\u6709\u95dc\u70ba\u4f55\u9078\u64c7\u5c0d\u6e96\u88c1\u5224\u5149\u982d\u7684\u5408\u7406\u89e3\u91cb\uff0c\u53ef\u80fd\u6709\u52a9\u65bc\u6e1b\u8f15\u4e8b\u4ef6\u7684\u5f71\u97ff\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u8607\u683c\u862dAI\u651d\u5f71\u6a5f\u8aa4\u628a\u88c1\u5224\u7684\u5149\u982d\u7576\u8db3\u7403\u8ddf\u62cd\u8f49\u64ad \u5f71\u50cf\u4f86\u6e90\uff1a AI\u932f\u628a\u5149\u982d\u8a8d\u8db3\u7403 \u5efa\u7acb\u5c0dAI\u7684\u4fe1\u4efb \u5728\u5efa\u7acb\u5c0d AI \u7684\u4fe1\u4efb\u65b9\u9762\uff0c\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u4e00\u76f4\u662f\u4e00\u500b\u95dc\u9375\u7684\u8ab2\u984c\u3002\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f37\u5927\u6027\u80fd\u662f\u4e0d\u53ef\u5426\u8a8d\u7684\uff0c\u4f46\u6a21\u578b\u7684\u9ad8\u5ea6\u62bd\u8c61\u6027\u4e5f\u5e36\u4f86\u4e86\u5c0d\u5176\u904b\u4f5c\u65b9\u5f0f\u7684\u4e0d\u900f\u660e\u6027\u3002\u56e0\u6b64\u6211\u5011\u5fc5\u9808\u95dc\u6ce8\u6a21\u578b\u7684\u89e3\u91cb\u80fd\u529b\uff0c\u4ee5\u78ba\u4fdd\u5927\u773e\u80fd\u5920\u7406\u89e3\u548c\u4fe1\u4efb\u6a21\u578b\u7684\u6c7a\u7b56\u3002 \u4ee5\u91d1\u878d\u696d\u70ba\u4f8b\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u5728\u4fe1\u7528\u8a55\u5206\u7b49\u9818\u57df\u7684\u61c9\u7528\u3002\u5728\u9019\u6a23\u7684\u60c5\u5883\u4e0b\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u5920\u56de\u7b54\u4e00\u7cfb\u5217\u554f\u984c\uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u7684\u4fe1\u4efb\u5ea6\uff1a \u6211\u5011\u61c9\u8a72\u5982\u4f55\u89e3\u91cb\u6a21\u578b\u4e2d\u6bcf\u500b\u9023\u63a5\u7684\u6b0a\u91cd\uff0c\u4ee5\u7406\u89e3\u5b83\u5011\u5728\u9810\u6e2c\u4e2d\u7684\u5177\u9ad4\u4f5c\u7528\u548c\u542b\u7fa9\uff1f \u54ea\u4e9b\u6b0a\u91cd\u5728\u6700\u7d42\u9810\u6e2c\u4e2d\u626e\u6f14\u4e86\u95dc\u9375\u7684\u89d2\u8272\uff0c\u5f71\u97ff\u8457\u6700\u7d42\u7d50\u679c\uff1f \u6b0a\u91cd\u7684\u5927\u5c0f\u662f\u5426\u80fd\u63d0\u4f9b\u6709\u95dc\u8f38\u5165\u8b8a\u6578\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u7684\u8a0a\u606f\uff1f \u9019\u4e9b\u554f\u984c\u7684\u7b54\u6848\u5c0d\u65bc\u91d1\u878d\u6a5f\u69cb\u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u4f7f\u7528 AI \u7684\u9818\u57df\u90fd\u975e\u5e38\u91cd\u8981\u3002\u6a21\u578b\u89e3\u91cb\u6027\u4e0d\u50c5\u6709\u52a9\u65bc\u8ffd\u8e64\u548c\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u9084\u53ef\u4ee5\u5e6b\u52a9\u6aa2\u6e2c\u6a21\u578b\u7684\u504f\u898b\u548c\u932f\u8aa4\u3002\u540c\u6642\u900f\u660e\u7684\u6a21\u578b\u89e3\u91cb\u4e5f\u53ef\u4ee5\u63d0\u9ad8\u4f7f\u7528\u8005\u5c0dAI\u7cfb\u7d71\u7684\u4fe1\u4efb\u5ea6\uff0c\u4e26\u63a8\u52d5\u66f4\u5ee3\u6cdb\u7684\u6280\u8853\u61c9\u7528\u3002 \u4f8b\u5982\u4e00\u4e9b\u91d1\u878d\u6a5f\u69cb\u5982\u570b\u6cf0\u91d1\u63a7\u5df2\u7d93\u958b\u59cb\u4f7f\u7528 SHAP \u6f14\u7b97\u6cd5\u4f86\u89e3\u91cb\u5176 AI \u6a21\u578b\u7684\u6c7a\u7b56\u3002\u4ed6\u5011\u9084\u7a4d\u6975\u63a1\u7528\u81ea\u5efa\u7684\u516c\u5e73\u6027\u548c\u53cd\u6b67\u8996\u6a21\u578b\u9a57\u8b49\u65b9\u6cd5\uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u4e0d\u6703\u56e0\u7a2e\u65cf\u3001\u6027\u5225\u6216\u5176\u4ed6\u56e0\u7d20\u800c\u504f\u898b\u3002\u6b64\u5916\uff0c\u4ed6\u5011\u5f15\u5165\u4e86\u806f\u90a6\u5b78\u7fd2\u6280\u8853\uff0c\u4ee5\u4fdd\u8b77\u654f\u611f\u6578\u64da\u4e26\u63d0\u9ad8\u6a21\u578b\u7684\u5b89\u5168\u6027\u3002\u540c\u6642\uff0c\u900f\u904e\u5f15\u5165\u4eba\u985e\u56de\u994b\uff0c\u4ed6\u5011\u5be6\u8e10\u4e86\u5f37\u5316\u5b78\u7fd2\uff0c\u4e0d\u65b7\u6539\u9032 AI \u6a21\u578b\u7684\u6027\u80fd\uff0c\u4ee5\u7b26\u5408 AI \u6cbb\u7406\u539f\u5247\u7684\u8981\u6c42\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u5be6\u8e10AI\u6cbb\u7406\u539f\u5247\u570b\u6cf0\u91d1\u63a7\u805a\u7126\u56db\u5927\u6280\u8853 AI\u7684\u4fe1\u4efb\u548c\u6280\u8853\u63a5\u53d7 XAI \u5c0d\u65bc\u63d0\u9ad8\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\u5177\u6709\u5de8\u5927\u7684\u6f5b\u529b\u3002\u5b83\u70ba\u6211\u5011\u63d0\u4f9b\u4e86\u4e00\u500b\u6a5f\u6703\uff0c\u53ef\u4ee5\u5efa\u7acb\u66f4\u52a0\u900f\u660e\u548c\u53ef\u4fe1\u8cf4\u7684\u4eba\u6a5f\u4e92\u52d5\uff0c\u4e26\u78ba\u4fdd AI \u6280\u8853\u5728\u672a\u4f86\u7684\u61c9\u7528\u4e2d\u53d6\u5f97\u6210\u529f\u3002\u96a8\u8457 XAI \u9818\u57df\u7684\u4e0d\u65b7\u767c\u5c55\uff0c\u6211\u5011\u53ef\u4ee5\u671f\u5f85\u770b\u5230\u66f4\u591a\u5275\u65b0\u548c\u6539\u9032\uff0c\u9019\u5c07\u9032\u4e00\u6b65\u63a8\u52d5\u6280\u8853\u7684\u9032\u6b65\u548c\u793e\u6703\u7684\u767c\u5c55\u3002\u9664\u4e86\u4eca\u5929\u6240\u63d0\u5230\u7684\u6848\u4f8b\u5916\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230 XAI \u662f\u5982\u4f55\u6539\u8b8a\u9019\u4e9b\u9818\u57df\u7684\u6280\u8853\u63a5\u53d7\u7a0b\u5ea6\u548c\u793e\u6703\u5f71\u97ff\uff1a \u91d1\u878d\u98a8\u96aa\u7ba1\u7406\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u9810\u6e2c\u5e02\u5834\u8da8\u52e2\uff1f \u7db2\u8def\u5b89\u5168\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u6027\u7684\u65b9\u6cd5\u6aa2\u6e2c\u548c\u9632\u6b62\u653b\u64ca\uff1f \u793e\u6703\u516c\u6b63\uff1a\u5982\u4f55\u78ba\u4fdd\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u4e0d\u6b67\u8996\u7279\u5b9a\u65cf\u7fa4\uff1f \u91ab\u5b78\u8a3a\u65b7\uff1a\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u89e3\u91cb\u91ab\u5b78\u5716\u50cf\u548c\u8a3a\u65b7\u7d50\u679c \u751f\u7269\u91ab\u5b78\uff1a\u5f9e\u57fa\u56e0\u7d44\u5b78\u5230\u86cb\u767d\u8cea\u6298\u758a\u7684\u89e3\u91cb\u6027\u5206\u6790 \u6cd5\u5f8b\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u5e6b\u52a9\u5224\u6c7a\u548c\u89e3\u91cb\u6cd5\u5f8b\u689d\u6587\uff1f \u8a8d\u77e5\u5fc3\u7406\u5b78\uff1a\u5982\u4f55\u7406\u89e3\u4eba\u985e\u7684\u6c7a\u7b56\u548c\u884c\u70ba\uff1f \u6559\u80b2\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u8a55\u4f30\u5b78\u751f\u5b78\u7fd2\u6210\u6548\uff1f Reference Full Stack Deep Learning 2022: Lecture 9: Ethics \u4e94\u5f35\u5716\u8a73\u89e3\u4f01\u696d\u5982\u4f55\u5efa\u7acb\u53ef\u4fe1\u4efb\u7684AI \u5982\u4f55\u5c07DeepSHAP\u61c9\u7528\u65bc\u795e\u7d93\u7db2\u7d61 \u4eba\u5de5\u667a\u6167\u4e5f\u6709\u6b67\u8996\u548c\u504f\u898b","title":"[Day 29] XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\uff1f"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#day-29-xai","text":"\u5728\u79d1\u6280\u8fc5\u901f\u9032\u6b65\u7684\u6642\u4ee3\uff0c\u4eba\u5de5\u667a\u6167\u5df2\u7d93\u6df1\u6df1\u5730\u878d\u5165\u4e86\u6211\u5011\u7684\u751f\u6d3b\uff0c\u5f9e \u667a\u6167\u88fd\u9020 \u3001 \u667a\u6167\u91ab\u7642 \u3001 \u667a\u6167\u670d\u52d9 \u5230 \u667a\u6167\u4ea4\u901a \uff0c\u7121\u6240\u4e0d\u5728\u3002\u7136\u800c\u9019\u7a2e\u6df1\u5ea6\u7684\u6574\u5408\u4e5f\u4f34\u96a8\u8457\u5c0d\u65bc\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\u7684\u95dc\u5207\u3002\u5982\u4eca XAI \u5df2\u6210\u70ba\u89e3\u6c7a\u9019\u4e9b\u554f\u984c\u7684\u95dc\u9375\uff0c\u5b83\u4e0d\u50c5\u5354\u52a9\u6211\u5011\u63d0\u9ad8\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u8207\u5c0d\u6280\u8853\u7684\u63a5\u53d7\u7a0b\u5ea6\u3002\u7576\u4e00\u822c\u5927\u773e\u80fd\u5920\u7406\u89e3 AI \u5982\u4f55\u9054\u5230\u7279\u5b9a\u7684\u7d50\u679c\u6642\uff0c\u4ed6\u5011\u66f4\u6709\u53ef\u80fd\u63a5\u53d7\u4e26\u4f7f\u7528\u9019\u4e9b\u6280\u8853\u3002 \u900f\u660e\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u6613\u65bc\u7406\u89e3\u3002 \u53ef\u9760\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u78ba\u4fdd\u904b\u884c\u53ef\u9760\u548c\u5b89\u5168\u3002 \u516c\u5e73\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7edf\u61c9\u8a72\u516c\u5e73\u5c0d\u5f85\u6240\u6709\u4eba\u3002 \u96b1\u79c1\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u4fdd\u969c\u4e26\u5c0a\u91cd\u96b1\u79c1\u3002 \u5305\u5bb9\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u78ba\u4fdd\u6bcf\u500b\u4eba\u90fd\u80fd\u5920\u53c3\u8207\u548c\u53d7\u76ca\u3002 \u8ca0\u8cac\uff1a\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u61c9\u8a72\u5efa\u7acb\u76e3\u7763\u6a19\u6e96\u3002 \u4e00\u500b\u8ca0\u8cac\u4efb\u7684\u4eba\u5de5\u667a\u6167\u9664\u4e86\u4ee5\u4e0a\u516d\u9805\u539f\u5247\u4e4b\u5916\uff0c\u53e6\u5916 XAI \u4e5f\u5f15\u767c\u4e86\u5c0d AI \u502b\u7406\u548c\u9053\u5fb7\u7684\u66f4\u591a\u95dc\u6ce8\u3002\u60f3\u5fc5\u9019\u4e5f\u662f\u6bcf\u500b\u4f01\u696d\u4e3b\u548c\u4f7f\u7528\u8005\u6240\u64d4\u6182\u7684\u8b70\u984c\uff0c\u96a8\u8457\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u589e\u52a0\uff0c\u540c\u6642\u6211\u5011\u66f4\u95dc\u5fc3 AI \u7684\u502b\u7406\u9053\u5fb7\u548c\u98a8\u96aa\u3002","title":"[Day 29] XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\uff1f"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#ai","text":"AI \u7684\u502b\u7406\u9053\u5fb7\u4e00\u76f4\u662f\u5f15\u8d77\u5ee3\u6cdb\u95dc\u6ce8\u7684\u8b70\u984c\uff0c\u800c\u6a5f\u5668\u5b78\u7fd2\u4f5c\u70ba AI \u7684\u91cd\u8981\u5206\u652f\uff0c\u5176\u502b\u7406\u554f\u984c\u66f4\u662f\u5f15\u4eba\u6df1\u601d\u3002\u5728\u4eca\u65e5\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u5c07\u6df1\u5165\u63a2\u8a0e\u6a5f\u5668\u5b78\u7fd2\u4e2d\u5e38\u898b\u7684\u9053\u5fb7\u554f\u984c\uff0c\u4e26\u501f\u93e1\u4e00\u4e9b\u771f\u5be6\u4f8b\u5b50\u4f86\u95e1\u8ff0\u9019\u4e9b\u8b70\u984c\u7684\u91cd\u8981\u6027\u3002","title":"AI\u7684\u502b\u7406\u9053\u5fb7"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#gpt","text":"\u5728\u8fd1\u671f\u7684\u4e00\u9805\u7814\u7a76\u4e2d\uff0c\u4f7f\u7528\u9019\u4e9b\u751f\u6210\u5f0f\u9810\u8a13\u7df4\u6a21\u578b\uff08GPT\uff09\u5075\u6e2c\u5668\u4f86\u5224\u65b7\u82f1\u6587\u6587\u7ae0\u662f\u5426\u4f86\u81ea AI \uff0c\u6bcd\u8a9e\u975e\u82f1\u6587\u7684\u4f7f\u7528\u8005\u5728\u64b0\u5beb\u82f1\u6587\u6587\u7ae0\u6642\uff0c\u6709\u8d85\u904e\u4e00\u534a\u7684\u60c5\u6cc1\u88ab\u8aa4\u8a8d\u70ba\u662f AI \u751f\u6210\u7684\u6587\u7ae0\u3002\u9019\u5f15\u767c\u4e86\u5c0d GPT \u5075\u6e2c\u5668\u5b58\u5728\u8a9e\u6587\u4e0a\u7684\u504f\u898b\u548c\u6b67\u8996\u7684\u64d4\u6182\u3002\u5728\u8a13\u7df4 GPT \u5075\u6e2c\u5668\u7684\u904e\u7a0b\u4e2d\uff0c\u7814\u7a76\u4eba\u54e1\u4f7f\u7528\u4e867\u6b3e\u71b1\u9580\u7684\u5075\u6e2c\u5668\u4f86\u6aa2\u67e591\u7bc7\u6e90\u81ea\u4e2d\u570b\u8ad6\u58c7\u7684\u6258\u798f\u5beb\u4f5c\u6587\u7ae0\uff0c\u4ee5\u53ca88\u7bc7\u7531\u7f8e\u570b8\u5e74\u7d1a\u751f\u6240\u64b0\u5beb\u7684\u82f1\u6587\u4f5c\u6587\u3002\u5f9e\u5be6\u9a57\u7d50\u679c\u986f\u793a\uff0c\u9019\u4e9b\u5075\u6e2c\u5668\u80fd\u8f03\u6b63\u78ba\u5730\u5206\u8fa8\u51fa\u7531\u7f8e\u570b\u5b78\u751f\u6240\u64b0\u5beb\u7684\u6587\u7ae0\uff0c\u4f46\u5c0d\u65bc\u4e2d\u570b\u5b78\u751f\u6240\u64b0\u5beb\u7684\u6258\u798f\u6587\u7ae0\u7684\u8b58\u5225\u7387\u537b\u986f\u8457\u4e0b\u964d\uff0c\u4e26\u8aa4\u5224\u70ba\u662f AI \u6240\u751f\u6210\u7684\u6587\u7ae0\u3002 \u9019\u4e00\u554f\u984c\u7684\u6839\u672c\u5728\u65bc\u8a13\u7df4\u6578\u64da\u7684\u4e0d\u5e73\u8861\u548c\u504f\u5411\u6027\u3002\u7576\u8a13\u7df4\u6578\u64da\u4e0d\u5920\u591a\u6a23\u5316\u6216\u5b58\u5728\u504f\u5411\u6027\u6642\uff0c\u6a21\u578b\u5c31\u5bb9\u6613\u7522\u751f\u8aa4\u5224\u548c\u6b67\u8996\u6027\u884c\u70ba\u3002\u56e0\u6b64\u70ba\u4e86\u5efa\u7acb\u66f4\u516c\u6b63\u3001\u7121\u504f\u898b\u7684 AI \u7cfb\u7d71\uff0c\u9700\u8981\u8b39\u614e\u6311\u9078\u548c\u8655\u7406\u8a13\u7df4\u6578\u64da\uff0c\u4e26\u5b9a\u671f\u6aa2\u67e5\u548c\u8abf\u6574\u6a21\u578b\u4ee5\u6e1b\u5c11\u504f\u898b\u3002\u9019\u4e5f\u53cd\u6620\u4e86 AI \u6280\u8853\u61c9\u8a72\u53d7\u5230\u502b\u7406\u548c\u591a\u5143\u6027\u7684\u5be9\u8996\uff0c\u4ee5\u78ba\u4fdd\u5176\u61c9\u7528\u4e0d\u6703\u5c0d\u4e0d\u540c\u6587\u5316\u548c\u8a9e\u8a00\u7684\u4f7f\u7528\u8005\u7522\u751f\u4e0d\u516c\u5e73\u7684\u5f71\u97ff\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u975e\u82f1\u8a9e\u6bcd\u8a9e\u8005\u5beb\u7684\u82f1\u6587\u6587\u7ae0\uff0c\u6709\u4e00\u534a\u88abGPT\u5075\u6e2c\u5668\u6a19\u8a18\u70baAI\u751f\u6210","title":"[\u6848\u4f8b\u4e00] GPT\u5075\u6e2c\u5668\u5177\u5099\u8a9e\u6587\u4e0a\u7684\u504f\u898b\u8207\u6b67\u8996"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#google","text":"\u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0cGoogle \u76f8\u7c3f\u4f7f\u7528\u4e86\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\u4f86\u81ea\u52d5\u8fa8\u8b58\u7167\u7247\u4e2d\u7684\u7269\u9ad4\u548c\u4eba\u7269\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8a72\u7cfb\u7d71\u5728\u8fa8\u8b58\u4e2d\u51fa\u73fe\u4e86\u4e00\u500b\u91cd\u5927\u932f\u8aa4\u3002\u9019\u500b\u932f\u8aa4\u5c0e\u81f4\u8a72\u7cfb\u7d71\u5c07\u4e00\u4f4d\u7528\u6236\u4ee5\u53ca\u4ed6\u7684\u9ed1\u4eba\u670b\u53cb\u7684\u7167\u7247\u8aa4\u6a19\u70ba\u5927\u7329\u7329\uff0c\u9019\u5f15\u8d77\u4e86\u516c\u773e\u7684\u5ee3\u6cdb\u8a0e\u8ad6\uff0c\u4e26\u5e36\u51fa\u4e86\u6709\u95dc\u4eba\u5de5\u667a\u6167\u7684\u8cc7\u8a0a\u502b\u7406\u8b70\u984c\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u76f8\u7247\u8fa8\u8b58\u51fa\u5305\u8aa4\u5c07\u9ed1\u4eba\u6a19\u6210\u5927\u7329\u7329\uff0cGoogle\u706b\u901f\u9053\u6b49","title":"[\u6848\u4f8b\u4e8c] Google\u76f8\u7c3f\u51fa\u5305\u8aa4\u5c07\u9ed1\u4eba\u6a19\u6210\u5927\u7329\u7329"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#ai_1","text":"\u8fd1\u5e74\u4f86\uff0c\u7f8e\u570b\u6cd5\u9662\u5ee3\u6cdb\u4f7f\u7528\u540d\u70ba\u300cCOMPAS\u300d\u7684 AI \u7cfb\u7d71\uff0c\u9019\u662f\u7531\u5546\u696d\u516c\u53f8\u958b\u767c\u7684\uff0c\u7528\u4f86\u5354\u52a9\u6cd5\u5b98\u8a55\u4f30\u88ab\u544a\u7684\u518d\u72af\u98a8\u96aa\uff0c\u4e26\u4f5c\u70ba\u5224\u6c7a\u7684\u53c3\u8003\u4f9d\u64da\u3002\u7136\u800c\u8a31\u591a \u7814\u7a76 \u5df2\u7d93\u660e\u78ba\u6307\u51fa\uff0c\u9019\u5957 AI \u7cfb\u7d71\u5b58\u5728\u6f5b\u5728\u7684\u7a2e\u65cf\u6b67\u8996\u554f\u984c\uff0c\u5373\u6709\u8272\u4eba\u7a2e\u66f4\u5bb9\u6613\u88ab\u9810\u6e2c\u70ba\u9ad8\u518d\u72af\u98a8\u96aa\uff0c\u9019\u5f15\u767c\u4e86\u5ee3\u6cdb\u7684\u722d\u8b70\u548c\u8a0e\u8ad6\u3002 \u5f9e\u6848\u4f8b\u4e8c\u548c\u6848\u4f8b\u4e09\u4e2d\u6211\u5011\u53ef\u4ee5\u770b\u5230\uff0c\u5f71\u50cf\u8fa8\u8b58\u6280\u8853\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5b58\u5728\u672a\u77e5\u7684\u4e0d\u78ba\u5b9a\u6027\uff0c\u4e26\u4e14\u5bb9\u6613\u53d7\u5230\u7a2e\u65cf\u6b67\u8996\u7b49\u554f\u984c\u7684\u5f71\u97ff\u3002\u9019\u7a81\u986f\u4e86 AI \u7684\u4e00\u500b\u95dc\u9375\u9650\u5236\uff1aAI \u7f3a\u4e4f\u771f\u6b63\u7684\u601d\u8003\u80fd\u529b\u548c\u5224\u65b7\u80fd\u529b\uff0c\u800c\u662f\u4f9d\u8cf4\u65bc\u8a13\u7df4\u6578\u64da\u4f86\u505a\u51fa\u6c7a\u7b56\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a AI \u7576\u6cd5\u5b98\uff0c\u6703\u662f\u6b63\u7fa9\u5973\u795e\u7684\u5316\u8eab\u55ce\uff1f","title":"[\u6848\u4f8b\u4e09] \u9435\u9762\u7121\u79c1\u5305\u9752\u5929\uff1f\u5c0f\u5fc3AI\u7684\u5167\u5efa\u6b67\u8996"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#ai_2","text":"\u6700\u5f8c\u4e00\u500b\u4f86\u9ede\u8f15\u9b06\u7684\uff0c\u5728\u9019\u500b\u6848\u4f8b\u4e2d\uff0c\u4e00\u5bb6\u8607\u683c\u862d\u8db3\u7403\u4ff1\u6a02\u90e8\u5f15\u5165\u4e86\u4e00\u5957AI\u651d\u5f71\u6a5f\u7cfb\u7d71\uff0c\u76ee\u7684\u8981\u81ea\u52d5\u8ffd\u8e64\u8db3\u7403\u6bd4\u8cfd\u4e2d\u7403\u7684\u8e64\u8de1\uff0c\u4ee5\u9032\u884c\u8f49\u64ad\u3002\u7136\u800c\u5728\u6bd4\u8cfd\u9032\u884c\u4e00\u6bb5\u6642\u9593\u5f8c\uff0c\u9019\u5957 AI \u7cfb\u7d71\u537b\u7a81\u7136\u505c\u6b62\u8ffd\u8e64\u8db3\u7403\uff0c\u800c\u662f\u5c07\u93e1\u982d\u5c0d\u6e96\u4e86\u5834\u908a\u7684\u88c1\u5224\u5149\u982d\u3002\u9019\u500b\u4e8b\u4ef6\u51f8\u986f\u51fa AI \u7cfb\u7d71\u7684\u4e0d\u78ba\u5b9a\u6027\u548c\u53ef\u4fe1\u5ea6\u554f\u984c\u3002AI \u651d\u5f71\u6a5f\u7cfb\u7d71\u7684\u8a2d\u8a08\u521d\u8877\u662f\u70ba\u4e86\u63d0\u4f9b\u66f4\u597d\u7684\u6bd4\u8cfd\u8f49\u64ad\u9ad4\u9a57\uff0c\u4f46\u537b\u56e0\u70ba\u610f\u5916\u7684\u5931\u8aa4\uff0c\u5c0e\u81f4\u4e86\u8f49\u64ad\u7684\u7b11\u8a71\u3002 \u9019\u500b\u6848\u4f8b\u5f37\u8abf\u4e86\u5f71\u50cf\u8996\u89ba\u53ef\u89e3\u91cb\u6027\u7684\u91cd\u8981\u6027\u3002\u5982\u679c AI \u651d\u5f71\u6a5f\u7cfb\u7d71\u80fd\u5920\u6e05\u6670\u5730\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b\uff0c\u6216\u8005\u63d0\u4f9b\u6709\u95dc\u70ba\u4f55\u9078\u64c7\u5c0d\u6e96\u88c1\u5224\u5149\u982d\u7684\u5408\u7406\u89e3\u91cb\uff0c\u53ef\u80fd\u6709\u52a9\u65bc\u6e1b\u8f15\u4e8b\u4ef6\u7684\u5f71\u97ff\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u8607\u683c\u862dAI\u651d\u5f71\u6a5f\u8aa4\u628a\u88c1\u5224\u7684\u5149\u982d\u7576\u8db3\u7403\u8ddf\u62cd\u8f49\u64ad \u5f71\u50cf\u4f86\u6e90\uff1a AI\u932f\u628a\u5149\u982d\u8a8d\u8db3\u7403","title":"[\u6848\u4f8b\u56db] AI\u651d\u5f71\u6a5f\u8aa4\u628a\u88c1\u5224\u7684\u5149\u982d\u7576\u8db3\u7403\u8ddf\u62cd\u8f49\u64ad"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#ai_3","text":"\u5728\u5efa\u7acb\u5c0d AI \u7684\u4fe1\u4efb\u65b9\u9762\uff0c\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u4e00\u76f4\u662f\u4e00\u500b\u95dc\u9375\u7684\u8ab2\u984c\u3002\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u5f37\u5927\u6027\u80fd\u662f\u4e0d\u53ef\u5426\u8a8d\u7684\uff0c\u4f46\u6a21\u578b\u7684\u9ad8\u5ea6\u62bd\u8c61\u6027\u4e5f\u5e36\u4f86\u4e86\u5c0d\u5176\u904b\u4f5c\u65b9\u5f0f\u7684\u4e0d\u900f\u660e\u6027\u3002\u56e0\u6b64\u6211\u5011\u5fc5\u9808\u95dc\u6ce8\u6a21\u578b\u7684\u89e3\u91cb\u80fd\u529b\uff0c\u4ee5\u78ba\u4fdd\u5927\u773e\u80fd\u5920\u7406\u89e3\u548c\u4fe1\u4efb\u6a21\u578b\u7684\u6c7a\u7b56\u3002 \u4ee5\u91d1\u878d\u696d\u70ba\u4f8b\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u5728\u4fe1\u7528\u8a55\u5206\u7b49\u9818\u57df\u7684\u61c9\u7528\u3002\u5728\u9019\u6a23\u7684\u60c5\u5883\u4e0b\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u5920\u56de\u7b54\u4e00\u7cfb\u5217\u554f\u984c\uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u7684\u4fe1\u4efb\u5ea6\uff1a \u6211\u5011\u61c9\u8a72\u5982\u4f55\u89e3\u91cb\u6a21\u578b\u4e2d\u6bcf\u500b\u9023\u63a5\u7684\u6b0a\u91cd\uff0c\u4ee5\u7406\u89e3\u5b83\u5011\u5728\u9810\u6e2c\u4e2d\u7684\u5177\u9ad4\u4f5c\u7528\u548c\u542b\u7fa9\uff1f \u54ea\u4e9b\u6b0a\u91cd\u5728\u6700\u7d42\u9810\u6e2c\u4e2d\u626e\u6f14\u4e86\u95dc\u9375\u7684\u89d2\u8272\uff0c\u5f71\u97ff\u8457\u6700\u7d42\u7d50\u679c\uff1f \u6b0a\u91cd\u7684\u5927\u5c0f\u662f\u5426\u80fd\u63d0\u4f9b\u6709\u95dc\u8f38\u5165\u8b8a\u6578\u7684\u76f8\u5c0d\u91cd\u8981\u6027\u7684\u8a0a\u606f\uff1f \u9019\u4e9b\u554f\u984c\u7684\u7b54\u6848\u5c0d\u65bc\u91d1\u878d\u6a5f\u69cb\u4ee5\u53ca\u4efb\u4f55\u5176\u4ed6\u4f7f\u7528 AI \u7684\u9818\u57df\u90fd\u975e\u5e38\u91cd\u8981\u3002\u6a21\u578b\u89e3\u91cb\u6027\u4e0d\u50c5\u6709\u52a9\u65bc\u8ffd\u8e64\u548c\u7406\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u9084\u53ef\u4ee5\u5e6b\u52a9\u6aa2\u6e2c\u6a21\u578b\u7684\u504f\u898b\u548c\u932f\u8aa4\u3002\u540c\u6642\u900f\u660e\u7684\u6a21\u578b\u89e3\u91cb\u4e5f\u53ef\u4ee5\u63d0\u9ad8\u4f7f\u7528\u8005\u5c0dAI\u7cfb\u7d71\u7684\u4fe1\u4efb\u5ea6\uff0c\u4e26\u63a8\u52d5\u66f4\u5ee3\u6cdb\u7684\u6280\u8853\u61c9\u7528\u3002 \u4f8b\u5982\u4e00\u4e9b\u91d1\u878d\u6a5f\u69cb\u5982\u570b\u6cf0\u91d1\u63a7\u5df2\u7d93\u958b\u59cb\u4f7f\u7528 SHAP \u6f14\u7b97\u6cd5\u4f86\u89e3\u91cb\u5176 AI \u6a21\u578b\u7684\u6c7a\u7b56\u3002\u4ed6\u5011\u9084\u7a4d\u6975\u63a1\u7528\u81ea\u5efa\u7684\u516c\u5e73\u6027\u548c\u53cd\u6b67\u8996\u6a21\u578b\u9a57\u8b49\u65b9\u6cd5\uff0c\u4ee5\u78ba\u4fdd\u6a21\u578b\u4e0d\u6703\u56e0\u7a2e\u65cf\u3001\u6027\u5225\u6216\u5176\u4ed6\u56e0\u7d20\u800c\u504f\u898b\u3002\u6b64\u5916\uff0c\u4ed6\u5011\u5f15\u5165\u4e86\u806f\u90a6\u5b78\u7fd2\u6280\u8853\uff0c\u4ee5\u4fdd\u8b77\u654f\u611f\u6578\u64da\u4e26\u63d0\u9ad8\u6a21\u578b\u7684\u5b89\u5168\u6027\u3002\u540c\u6642\uff0c\u900f\u904e\u5f15\u5165\u4eba\u985e\u56de\u994b\uff0c\u4ed6\u5011\u5be6\u8e10\u4e86\u5f37\u5316\u5b78\u7fd2\uff0c\u4e0d\u65b7\u6539\u9032 AI \u6a21\u578b\u7684\u6027\u80fd\uff0c\u4ee5\u7b26\u5408 AI \u6cbb\u7406\u539f\u5247\u7684\u8981\u6c42\u3002 \u76f8\u95dc\u5831\u5c0e\uff1a \u5be6\u8e10AI\u6cbb\u7406\u539f\u5247\u570b\u6cf0\u91d1\u63a7\u805a\u7126\u56db\u5927\u6280\u8853","title":"\u5efa\u7acb\u5c0dAI\u7684\u4fe1\u4efb"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#ai_4","text":"XAI \u5c0d\u65bc\u63d0\u9ad8\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6\u5177\u6709\u5de8\u5927\u7684\u6f5b\u529b\u3002\u5b83\u70ba\u6211\u5011\u63d0\u4f9b\u4e86\u4e00\u500b\u6a5f\u6703\uff0c\u53ef\u4ee5\u5efa\u7acb\u66f4\u52a0\u900f\u660e\u548c\u53ef\u4fe1\u8cf4\u7684\u4eba\u6a5f\u4e92\u52d5\uff0c\u4e26\u78ba\u4fdd AI \u6280\u8853\u5728\u672a\u4f86\u7684\u61c9\u7528\u4e2d\u53d6\u5f97\u6210\u529f\u3002\u96a8\u8457 XAI \u9818\u57df\u7684\u4e0d\u65b7\u767c\u5c55\uff0c\u6211\u5011\u53ef\u4ee5\u671f\u5f85\u770b\u5230\u66f4\u591a\u5275\u65b0\u548c\u6539\u9032\uff0c\u9019\u5c07\u9032\u4e00\u6b65\u63a8\u52d5\u6280\u8853\u7684\u9032\u6b65\u548c\u793e\u6703\u7684\u767c\u5c55\u3002\u9664\u4e86\u4eca\u5929\u6240\u63d0\u5230\u7684\u6848\u4f8b\u5916\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230 XAI \u662f\u5982\u4f55\u6539\u8b8a\u9019\u4e9b\u9818\u57df\u7684\u6280\u8853\u63a5\u53d7\u7a0b\u5ea6\u548c\u793e\u6703\u5f71\u97ff\uff1a \u91d1\u878d\u98a8\u96aa\u7ba1\u7406\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u9810\u6e2c\u5e02\u5834\u8da8\u52e2\uff1f \u7db2\u8def\u5b89\u5168\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u6027\u7684\u65b9\u6cd5\u6aa2\u6e2c\u548c\u9632\u6b62\u653b\u64ca\uff1f \u793e\u6703\u516c\u6b63\uff1a\u5982\u4f55\u78ba\u4fdd\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u4e0d\u6b67\u8996\u7279\u5b9a\u65cf\u7fa4\uff1f \u91ab\u5b78\u8a3a\u65b7\uff1a\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u89e3\u91cb\u91ab\u5b78\u5716\u50cf\u548c\u8a3a\u65b7\u7d50\u679c \u751f\u7269\u91ab\u5b78\uff1a\u5f9e\u57fa\u56e0\u7d44\u5b78\u5230\u86cb\u767d\u8cea\u6298\u758a\u7684\u89e3\u91cb\u6027\u5206\u6790 \u6cd5\u5f8b\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u5e6b\u52a9\u5224\u6c7a\u548c\u89e3\u91cb\u6cd5\u5f8b\u689d\u6587\uff1f \u8a8d\u77e5\u5fc3\u7406\u5b78\uff1a\u5982\u4f55\u7406\u89e3\u4eba\u985e\u7684\u6c7a\u7b56\u548c\u884c\u70ba\uff1f \u6559\u80b2\uff1a\u5982\u4f55\u5229\u7528\u53ef\u89e3\u91cb\u7684\u65b9\u6cd5\u8a55\u4f30\u5b78\u751f\u5b78\u7fd2\u6210\u6548\uff1f","title":"AI\u7684\u4fe1\u4efb\u548c\u6280\u8853\u63a5\u53d7"},{"location":"29.XAI\u5982\u4f55\u5f71\u97ff\u4eba\u985e\u5c0d\u6280\u8853\u7684\u4fe1\u4efb\u548c\u63a5\u53d7\u7a0b\u5ea6/#reference","text":"Full Stack Deep Learning 2022: Lecture 9: Ethics \u4e94\u5f35\u5716\u8a73\u89e3\u4f01\u696d\u5982\u4f55\u5efa\u7acb\u53ef\u4fe1\u4efb\u7684AI \u5982\u4f55\u5c07DeepSHAP\u61c9\u7528\u65bc\u795e\u7d93\u7db2\u7d61 \u4eba\u5de5\u667a\u6167\u4e5f\u6709\u6b67\u8996\u548c\u504f\u898b","title":"Reference"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/","text":"[Day 3] \u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19 \u300c\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u300d\u662f XAI \u4e2d\u7528\u4f86\u8861\u91cf\u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u8a55\u4f30\u6a19\u6e96\u3002\u5b83\u5011\u662f\u7528\u4f86\u78ba\u5b9a\u6a21\u578b\u5982\u4f55\u89e3\u91cb\u5176\u9810\u6e2c\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u7d66\u5b9a\u8f38\u5165\u5f8c\u751f\u6210\u53ef\u89e3\u91cb\u7684\u7d50\u679c\u3002\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u53ef\u4ee5\u6839\u64da\u7279\u5b9a\u7684\u6848\u4f8b\u548c\u9700\u6c42\u800c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u901a\u5e38\u6703\u8003\u616e\u5230\u4ee5\u4e0b\u5e7e\u500b\u5c64\u9762\uff1a \u7cbe\u78ba\u5ea6\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u80fd\u5426\u6e96\u78ba\u53cd\u6620\u5be6\u969b\u60c5\u6cc1\u3002 \u4e00\u81f4\u6027\uff1a\u6a21\u578b\u5728\u4e0d\u540c\u60c5\u6cc1\u4e0b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u4e00\u81f4\u3002 \u53ef\u9760\u6027\uff1a\u6a21\u578b\u662f\u5426\u80fd\u5920\u53ef\u9760\u5730\u8655\u7406\u6240\u6709\u8f38\u5165\uff0c\u5305\u62ec\u7570\u5e38\u503c\u548c\u566a\u8072\u6578\u64da\u3002 \u900f\u660e\u5ea6\uff1a\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\u662f\u5426\u6e05\u6670\u6613\u61c2\uff0c\u80fd\u5920\u88ab\u89e3\u91cb\u3002 \u516c\u5e73\u6027\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u516c\u5e73\uff0c\u5373\u662f\u5426\u5b58\u5728\u5c0d\u67d0\u4e9b\u985e\u5225\u6216\u7fa4\u9ad4\u7684\u504f\u898b\u3002 \u53ef\u89e3\u91cb\u6027\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u80fd\u5920\u88ab\u89e3\u91cb\u548c\u7406\u89e3\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u4ee5\u53ca\u6a21\u578b\u8f38\u51fa\u7684\u53ef\u8996\u5316\u8868\u793a\u3002 \u6e96\u78ba\u5ea6\u8207\u53ef\u89e3\u91cb\u6027\u7684\u6b0a\u8861 \u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6211\u5011\u901a\u5e38\u5e0c\u671b\u6a21\u578b\u80fd\u5920\u540c\u6642\u9054\u5230\u9ad8\u7cbe\u5ea6\u548c\u53ef\u89e3\u91cb\u6027\uff0c\u4f46\u9019\u5169\u8005\u4e4b\u9593\u5e38\u5e38\u5b58\u5728\u4e00\u500b\u6b0a\u8861\u3002\u8fd1\u5e74\u4f86\u96a8\u8457\u6a21\u578b\u7684\u7cbe\u78ba\u5ea6\u548c\u8907\u96dc\u5ea6\u4e0d\u65b7\u63d0\u9ad8\uff0c\u4f46\u4e5f\u5e36\u4f86\u4e86\u6a21\u578b\u7684\u4e0d\u900f\u660e\u6027\u3002\u70ba\u4e86\u66f4\u6e05\u695a\u5730\u7406\u89e3\u9019\u500b\u6b0a\u8861\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u9019\u5f35\u5716\u4f86\u6bd4\u8f03\u3002 \u53c3\u8003 DARPA 's explainable AI \u8a08\u756b p. 23 \u5728\u9019\u500b\u5e73\u9762\u5716\u4e2d\uff0cX \u8ef8\u4ee3\u8868\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff0c\u8d8a\u9760\u53f3\u8868\u793a\u6a21\u578b\u8d8a\u5bb9\u6613\u89e3\u91cb\u3002Y \u8ef8\u4ee3\u8868\u6a21\u578b\u7684\u8907\u96dc\u5ea6\uff0c\u8d8a\u9ad8\u8868\u793a\u6a21\u578b\u8d8a\u8907\u96dc\u3002\u901a\u5e38\u60c5\u6cc1\u4e0b\uff0c\u8907\u96dc\u7684\u6a21\u578b\uff08\u4f8b\u5982\u6df1\u5ea6\u795e\u7d93\u7db2\u7d61\uff09\u80fd\u5920\u5be6\u73fe\u66f4\u9ad8\u7684\u6e96\u78ba\u5ea6\uff0c\u4f46\u89e3\u91cb\u6027\u8f03\u5dee\u3002\u76f8\u53cd\uff0c\u8f03\u7c21\u55ae\u7684\u6a21\u578b\uff08\u4f8b\u5982\u7dda\u6027\u8ff4\u6b78\uff09\u901a\u5e38\u5177\u6709\u66f4\u597d\u7684\u89e3\u91cb\u6027\uff0c\u4f46\u662f\u6e96\u78ba\u5ea6\u53ef\u80fd\u4e0d\u5982\u8907\u96dc\u6a21\u578b\u3002 \u5e78\u904b\u7684\u662f\uff0c\u8fd1\u5e74\u4f86\u4e00\u4e9b\u65b0\u7684\u7d50\u69cb\u5316\u89e3\u91cb\u6027\u6307\u6a19\u548c\u53ef\u8996\u5316\u6280\u8853\u6b63\u84ec\u52c3\u767c\u5c55\u4e2d\uff0c\u53ef\u4ee5\u5e6b\u52a9\u89e3\u91cb\u6df1\u5ea6\u5b78\u7fd2\u548c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u9019\u4e9b\u6307\u6a19\u548c\u53ef\u8996\u5316\u6280\u8853\u53ef\u4ee5\u5c07\u8907\u96dc\u9ed1\u76d2\u5b50\u6a21\u578b\u79fb\u52d5\u5230\u5e73\u9762\u5716\u4e0a\u7684\u66f4\u9ad8\u89e3\u91cb\u6027\u5340\u57df\u3002 \u53ef\u89e3\u91cb\u6027\u6307\u6a19\u6709\u54ea\u4e9b\uff1f \u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u4e00\u4e9b\u5e38\u898b\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\uff0c\u6bcf\u7a2e\u6307\u6a19\u90fd\u6709\u5176\u5c08\u9580\u7684\u65b9\u6cd5\u548c\u6280\u8853\u4f86\u5be6\u73fe\u3002\u9019\u4e9b\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u53ef\u4ee5\u5354\u52a9\u6211\u5011\u78ba\u5b9a\u54ea\u4e9b\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u53ef\u4ee5\u88ab\u8996\u70ba\u53ef\u89e3\u91cb\u7684\uff0c\u56e0\u70ba\u5b83\u5011\u80fd\u5920\u7522\u751f\u53ef\u9760\u7684\u9810\u6e2c\uff0c\u540c\u6642\u4e5f\u80fd\u5920\u89e3\u91cb\u6a21\u578b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u7d50\u679c\u3002 1. \u7279\u5fb5\u91cd\u8981\u6027 (Feature Importance) \u9019\u7a2e\u65b9\u6cd5\u53ef\u7528\u65bc\u5c0d\u5168\u5c40\u548c\u5c40\u90e8\u9032\u884c\u89e3\u91cb\uff0c\u4ee5\u89e3\u91cb\u55ae\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u548c\u5f71\u97ff\u3002\u7136\u800c\u8a72\u65b9\u6cd5\u5f80\u5f80\u96e3\u4ee5\u89e3\u91cb\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u8907\u96dc\u95dc\u4fc2\u3002\u5e38\u7528\u7684\u8a08\u7b97\u65b9\u6cd5\u5305\u62ec\u57fa\u65bc\u6a39\u7684\u6a21\u578b\u7684\u91cd\u8981\u6027\u6307\u6a19\u548c\u7dda\u6027\u8ff4\u6b78\u4e2d\u7684\u4fc2\u6578\u7b49\u3002 \u6b64\u5916\u7279\u5fb5\u91cd\u8981\u6027\u6307\u6a19\u4e2d\u6700\u5178\u578b\u4f8b\u5b50\u5c31\u662f\u654f\u611f\u5ea6\u5206\u6790\uff08Sensitivity Analysis\uff09\u3002\u5176\u76ee\u7684\u662f\u63a2\u8a0e\u8f38\u5165\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Permutation Importance\u3001Drop Column Importance \u7b49\u65b9\u6cd5\u3002 2. \u5c40\u90e8\u89e3\u91cb\u6027 (Local Explanations) \u91dd\u5c0d\u55ae\u7b46\u8cc7\u6599\u9810\u6e2c\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u901a\u5e38\u5177\u6709\u66f4\u9ad8\u7684\u5f48\u6027\u548c\u7d30\u81a9\u5ea6\uff0c\u4f46\u53ef\u80fd\u6703\u53d7\u5230\u96a8\u6a5f\u6027\u7684\u5f71\u97ff\uff0c\u4e14\u7121\u6cd5\u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\u3002LIME \u5c31\u662f\u4e00\u7a2e\u91dd\u5c0d\u500b\u5225\u5be6\u4f8b\u9032\u884c\u6a21\u578b\u9810\u6e2c\u89e3\u91cb\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u5c0d\u8907\u96dc\u7684\u9ed1\u76d2\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002\u900f\u904e\u5c0d\u8cc7\u6599\u9032\u884c\u62bd\u6a23\u4e26\u4f7f\u7528\u9ed1\u76d2\u6a21\u578b\u4f86\u9810\u6e2c\uff0c\u7136\u5f8c\u6839\u64da\u5be6\u4f8b\u4e4b\u9593\u7684\u76f8\u4f3c\u5ea6\u5c0d\u9019\u4e9b\u9810\u6e2c\u9032\u884c\u6b0a\u91cd\u5206\u914d\uff0c\u5f9e\u800c\u5b78\u7fd2\u51fa\u4e00\u500b\u5c40\u90e8\u53ef\u89e3\u91cb\u7684\u7dda\u6027\u6a21\u578b\u3002 LIME\u8ad6\u6587\uff1a \u201cWhy Should I Trust You?\u201d Explaining the Predictions of Any Classifier 3. \u5168\u5c40\u89e3\u91cb\u6027\uff08Global Explanations\uff09 \u5982\u679c\u4f60\u770b\u904e\u524d\u4e00\u7bc7\u6587\u7ae0\uff0c\u80af\u5b9a\u5c0d\u5b83\u4e0d\u964c\u751f\u3002\u5b83\u53ef\u4ee5\u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u884c\u70ba\uff0c\u4f8b\u5982 Partial Dependence Plot\uff08PDP\uff09\u3001Individual Conditional Expectation\uff08ICE\uff09\u3001SHAP Summary Plot \u548c Feature Interaction Plot\u7b49\u3002\u9019\u7a2e\u89e3\u91cb\u65b9\u6cd5\u8f03\u70ba\u5168\u9762\u548c\u7d9c\u89c0\uff0c\u662f XAI \u4e2d\u6700\u5e38\u898b\u548c\u6700\u53d7\u6b61\u8fce\u7684\u89e3\u91cb\u65b9\u6cd5\u3002 4. \u7d50\u69cb\u5316\u89e3\u91cb\u6027\uff08Structured Explanations\uff09 \u662f\u6307\u7528\u7d50\u69cb\u5316\u7684\u65b9\u5f0f\u5c07\u6a21\u578b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u7d50\u679c\u9032\u884c\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u5c07\u9810\u6e2c\u7684\u89e3\u91cb\u5206\u70ba\u591a\u500b\u6b65\u9a5f\uff0c\u5c07\u6bcf\u500b\u6b65\u9a5f\u7684\u89e3\u91cb\u5448\u73fe\u70ba\u4e00\u500b\u7d50\u69cb\u5316\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982\u6a39\u72c0\u5716\u3001\u6d41\u7a0b\u5716\u6216\u8a9e\u6cd5\u89e3\u91cb\u7b49\u3002\u900f\u904e\u9019\u7a2e\u65b9\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u95dc\u9375\u56e0\u7d20\uff0c\u4e5f\u80fd\u5920\u66f4\u5bb9\u6613\u5730\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u5e38\u898b\u7684\u7d50\u69cb\u5316\u89e3\u91cb\u6027\u6307\u6a19\u5305\u62ec Decision Tree\u3001RuleFit \u7b49\u3002\u6b64\u65b9\u6cd5\u96d6\u7136\u80fd\u5920\u751f\u6210\u53ef\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u6613\u65bc\u7406\u89e3\u548c\u89e3\u91cb\u3002\u4f46\u662f\uff0c\u9019\u4e9b\u6a21\u578b\u5f80\u5f80\u8f03\u70ba\u7c21\u55ae\uff0c\u53ef\u80fd\u7121\u6cd5\u64c1\u6709\u8f03\u9ad8\u7684\u9810\u6e2c\u80fd\u529b\u3002 RuleFit \u5c07\u7dda\u6027\u6a21\u578b\u548c\u6c7a\u7b56\u6a39\u7d50\u5408\uff0c\u540c\u6642\u5b78\u7fd2\u7279\u5fb5\u7684\u91cd\u8981\u6027\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u751f\u6210\u53ef\u89e3\u91cb\u6027\u5f37\u7684\u6a21\u578b\u3002RuleFit \u6f14\u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \u8cc7\u6599\u9810\u8655\u7406\uff1a\u5c0d\u8cc7\u6599\u9032\u884c\u7279\u5fb5\u63d0\u53d6\u548c\u9810\u8655\u7406\uff0c\u5305\u62ec\u7f3a\u5931\u503c\u586b\u5145\u3001\u7279\u5fb5\u6a19\u6e96\u5316\u7b49\u3002 \u57fa\u672c\u6a39\u6a21\u578b\u751f\u6210\uff1a\u4f7f\u7528\u6c7a\u7b56\u6a39\u6f14\u7b97\u6cd5\u751f\u6210\u4e00\u7d44\u57fa\u672c\u6a39\u6a21\u578b\uff0c\u4e26\u63d0\u53d6\u51fa\u6bcf\u500b\u8449\u5b50\u7bc0\u9ede\u7684\u7279\u5fb5\u3002 \u7dda\u6027\u6a21\u578b\u8a13\u7df4\uff1a\u5c07\u57fa\u672c\u6a39\u6a21\u578b\u4e2d\u7684\u8449\u5b50\u7bc0\u9ede\u7279\u5fb5\u4f5c\u70ba\u65b0\u7684\u8f38\u5165\u7279\u5fb5\uff0c\u4f7f\u7528\u7dda\u6027\u8ff4\u6b78\u6f14\u7b97\u6cd5\u8a13\u7df4\u4e00\u500b\u7dda\u6027\u6a21\u578b\u3002 \u9810\u6e2c\uff1a\u5c0d\u65bc\u65b0\u7684\u6e2c\u8a66\u6a23\u672c\uff0c\u5148\u4f7f\u7528\u57fa\u672c\u6a39\u6a21\u578b\u5c07\u5176\u6620\u5c04\u5230\u8449\u5b50\u7bc0\u9ede\u4e0a\uff0c\u4e26\u5c07\u8449\u5b50\u7bc0\u9ede\u7279\u5fb5\u4f5c\u70ba\u8f38\u5165\u7279\u5fb5\uff0c\u518d\u4f7f\u7528\u8a13\u7df4\u597d\u7684\u7dda\u6027\u6a21\u578b\u9032\u884c\u9810\u6e2c\u3002 RuleFit\u8ad6\u6587\uff1a Predictive learning via rule ensembles 5. \u8aa4\u5dee\u5206\u6790\uff08Error Analysis\uff09 \u900f\u904e\u8aa4\u5dee\u5206\u6790\uff0c\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u6a21\u578b\u5728\u54ea\u4e9b\u60c5\u6cc1\u4e0b\u8868\u73fe\u4e0d\u4f73\uff0c\u4e26\u4e14\u91dd\u5c0d\u9019\u4e9b\u60c5\u6cc1\u9032\u884c\u8abf\u6574\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6e96\u78ba\u5ea6\u3002\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u5728\u6e2c\u8a66\u6578\u64da\u96c6\u4e0a\u7684\u8aa4\u5dee\u539f\u56e0\uff0c\u4f8b\u5982 Confusion Matrix\u3001ROC Curve\u3001Precision-Recall Curve\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u5e38\u898b\u7684\u4efb\u52d9\u6709\u8ff4\u6b78\u548c\u5206\u985e\u5169\u7a2e\u3002\u4ee5\u4e0b\u5206\u5225\u4ecb\u7d39\u9019\u5169\u7a2e\u4efb\u52d9\u5e38\u898b\u7684\u8aa4\u5dee\u8a55\u4f30\u6307\u6a19\uff1a \u8ff4\u6b78\u554f\u984c\u7684\u8a55\u4f30\u6307\u6a19\uff1a \u5747\u65b9\u8aa4\u5dee (Mean Squared Error, MSE)\uff1a\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u5dee\u7684\u5e73\u65b9\u548c\u7684\u5e73\u5747\u503c\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u5747\u65b9\u6839\u8aa4\u5dee (Root Mean Squared Error, RMSE)\uff1aMSE \u958b\u6839\u865f\uff0c\u8207 MSE \u76f8\u6bd4\u66f4\u80fd\u53cd\u6620\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u771f\u5be6\u5dee\u8ddd\u3002 \u5e73\u5747\u7d55\u5c0d\u8aa4\u5dee (Mean Absolute Error, MAE)\uff1a\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u5dee\u7684\u7d55\u5c0d\u503c\u7684\u5e73\u5747\u503c\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u5e73\u5747\u7d55\u5c0d\u767e\u5206\u6bd4\u8aa4\u5dee\uff08Mean Absolute Percentage Error, MAPE\uff09\uff1a\u7528\u4f86\u8861\u91cf\u8ff4\u6b78\u6a21\u578b\u7684\u9810\u6e2c\u7cbe\u5ea6\uff0c\u5176\u8a08\u7b97\u65b9\u5f0f\u70ba\u9810\u6e2c\u503c\u548c\u771f\u5be6\u503c\u4e4b\u9593\u7684\u7d55\u5c0d\u8aa4\u5dee\u4f54\u771f\u5be6\u503c\u7684\u767e\u5206\u6bd4\u7684\u5e73\u5747\u503c\u3002\u901a\u5e38\u4f86\u8aaa\uff0cMAPE \u7684\u6578\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u4e00\u822c\u8a8d\u70ba MAPE \u5c0f\u65bc 10% \u8868\u793a\u6a21\u578b\u7684\u9810\u6e2c\u6548\u679c\u8f03\u597d\u3002 \u6c7a\u5b9a\u4fc2\u6578 (R-squared)\uff1a\u8a55\u4f30\u6a21\u578b\u8207\u5be6\u969b\u503c\u4e4b\u9593\u7684\u76f8\u95dc\u6027\uff0c\u503c\u8d8a\u9ad8\u4ee3\u8868\u6a21\u578b\u7684\u89e3\u91cb\u80fd\u529b\u8d8a\u597d\uff0c\u4f46\u4e5f\u5bb9\u6613\u904e\u5ea6\u64ec\u5408\u3002 \u5206\u985e\u554f\u984c\u7684\u8a55\u4f30\u6307\u6a19\uff1a \u6df7\u6dc6\u77e9\u9663 (Confusion Matrix)\uff1a\u5217\u51fa\u5be6\u969b\u503c\u8207\u9810\u6e2c\u503c\u7684\u5c0d\u61c9\u60c5\u6cc1\uff0c\u4fbf\u65bc\u8a55\u4f30\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3001\u53ec\u56de\u7387\u7b49\u6307\u6a19\u3002 \u6e96\u78ba\u7387 (Accuracy)\uff1a\u9810\u6e2c\u6b63\u78ba\u7684\u6a23\u672c\u6578\u9664\u4ee5\u7e3d\u6a23\u672c\u6578\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u7cbe\u78ba\u7387 (Precision)\uff1a\u9810\u6e2c\u70ba\u6b63\u7684\u6a23\u672c\u4e2d\u5be6\u969b\u70ba\u6b63\u7684\u6bd4\u4f8b\uff0c\u8a55\u4f30\u6a21\u578b\u5c0d\u6b63\u6a23\u672c\u7684\u9810\u6e2c\u80fd\u529b\u3002 \u53ec\u56de\u7387 (Recall)\uff1a\u5be6\u969b\u70ba\u6b63\u7684\u6a23\u672c\u4e2d\u9810\u6e2c\u70ba\u6b63\u7684\u6bd4\u4f8b\uff0c\u8a55\u4f30\u6a21\u578b\u5c0d\u6b63\u6a23\u672c\u7684\u8986\u84cb\u80fd\u529b\u3002 F1\u503c (F1 Score)\uff1a\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u7684\u52a0\u6b0a\u8abf\u548c\u5e73\u5747\u6578\uff0c\u7d9c\u5408\u8a55\u4f30\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u3002 6. \u771f\u5be6\u6027\u9a57\u8b49\uff08Fidelity\uff09 \u771f\u5be6\u6027\u9a57\u8b49\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u4fe1\u5fc3\u548c\u53ef\u9760\u6027\uff0c\u907f\u514d\u904e\u5ea6\u64ec\u5408\u548c\u9078\u64c7\u6027\u504f\u5dee\u7b49\u554f\u984c\u3002\u901a\u5e38\u5efa\u8b70\u771f\u5be6\u6027\u9a57\u8b49\u4f7f\u7528\u7684\u6e2c\u8a66\u8cc7\u6599\u96c6\u7684\u6578\u91cf\u61c9\u8a72\u8207\u8a13\u7df4\u8cc7\u6599\u96c6\u7684\u6578\u91cf\u76f8\u7576\uff0c\u4e26\u4e14\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a57\u8b49\u7b49\u65b9\u6cd5\u4f86\u9032\u4e00\u6b65\u9a57\u8b49\u6a21\u578b\u7684\u53ef\u9760\u6027\u3002\u9664\u6b64\u4e4b\u5916\u5b83\u9084\u53ef\u4ee5\u8a55\u4f30\u6a21\u578b\u89e3\u91cb\u662f\u5426\u5fe0\u5be6\u53cd\u6620\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Anchors\u3001Counterfactual Explanations \u7b49\u3002 Anchors\u8ad6\u6587\uff1a Anchors: High-Precision Model-agnostic Explanations \u5c0f\u7d50 \u4eca\u5929\u5b78\u5230\u4e86\u8a31\u591a\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\uff0c\u4f46\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u6642\uff0c\u61c9\u8a72\u6ce8\u610f\u4ee5\u4e0b\u5e7e\u9ede\uff1a - \u9069\u7528\u7bc4\u570d\uff1a\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u9069\u7528\u65bc\u4e0d\u540c\u7684\u5834\u666f\uff0c\u61c9\u6839\u64da\u5177\u9ad4\u9700\u6c42\u9078\u64c7\u3002 - \u7cbe\u5ea6\u548c\u7a69\u5b9a\u6027\uff1a\u89e3\u91cb\u6027\u6307\u6a19\u5728\u4e0d\u540c\u5834\u666f\u4e0b\u53ef\u80fd\u5b58\u5728\u7cbe\u5ea6\u548c\u7a69\u5b9a\u6027\u554f\u984c\uff0c\u61c9\u614e\u91cd\u4f7f\u7528\u3002 - \u89e3\u91cb\u6548\u679c\uff1a\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u4e0d\u50c5\u61c9\u8a72\u80fd\u5920\u751f\u6210\u53ef\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u800c\u4e14\u9084\u61c9\u8a72\u80fd\u5920\u8b93\u4f7f\u7528\u8005\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\uff0c\u907f\u514d\u51fa\u73fe\u8aa4\u89e3\u6216\u8aa4\u89e3\u3002 - \u7d50\u679c\u5448\u73fe\uff1a\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u751f\u6210\u7684\u7d50\u679c\u5f62\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u6839\u64da\u9700\u6c42\u9078\u64c7\u9069\u7576\u7684\u5448\u73fe\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u65bc\u4f7f\u7528\u8005\u7406\u89e3\u3002 Reference DARPA 's explainable AI ( XAI ) program: A retrospective","title":"[Day 3] \u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#day-3","text":"\u300c\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u300d\u662f XAI \u4e2d\u7528\u4f86\u8861\u91cf\u6a21\u578b\u53ef\u89e3\u91cb\u6027\u7684\u8a55\u4f30\u6a19\u6e96\u3002\u5b83\u5011\u662f\u7528\u4f86\u78ba\u5b9a\u6a21\u578b\u5982\u4f55\u89e3\u91cb\u5176\u9810\u6e2c\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u7d66\u5b9a\u8f38\u5165\u5f8c\u751f\u6210\u53ef\u89e3\u91cb\u7684\u7d50\u679c\u3002\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u53ef\u4ee5\u6839\u64da\u7279\u5b9a\u7684\u6848\u4f8b\u548c\u9700\u6c42\u800c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u901a\u5e38\u6703\u8003\u616e\u5230\u4ee5\u4e0b\u5e7e\u500b\u5c64\u9762\uff1a \u7cbe\u78ba\u5ea6\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u80fd\u5426\u6e96\u78ba\u53cd\u6620\u5be6\u969b\u60c5\u6cc1\u3002 \u4e00\u81f4\u6027\uff1a\u6a21\u578b\u5728\u4e0d\u540c\u60c5\u6cc1\u4e0b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u4e00\u81f4\u3002 \u53ef\u9760\u6027\uff1a\u6a21\u578b\u662f\u5426\u80fd\u5920\u53ef\u9760\u5730\u8655\u7406\u6240\u6709\u8f38\u5165\uff0c\u5305\u62ec\u7570\u5e38\u503c\u548c\u566a\u8072\u6578\u64da\u3002 \u900f\u660e\u5ea6\uff1a\u6a21\u578b\u7684\u5167\u90e8\u904b\u4f5c\u662f\u5426\u6e05\u6670\u6613\u61c2\uff0c\u80fd\u5920\u88ab\u89e3\u91cb\u3002 \u516c\u5e73\u6027\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u516c\u5e73\uff0c\u5373\u662f\u5426\u5b58\u5728\u5c0d\u67d0\u4e9b\u985e\u5225\u6216\u7fa4\u9ad4\u7684\u504f\u898b\u3002 \u53ef\u89e3\u91cb\u6027\uff1a\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u662f\u5426\u80fd\u5920\u88ab\u89e3\u91cb\u548c\u7406\u89e3\uff0c\u5305\u62ec\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u4ee5\u53ca\u6a21\u578b\u8f38\u51fa\u7684\u53ef\u8996\u5316\u8868\u793a\u3002","title":"[Day 3] \u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#_1","text":"\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6211\u5011\u901a\u5e38\u5e0c\u671b\u6a21\u578b\u80fd\u5920\u540c\u6642\u9054\u5230\u9ad8\u7cbe\u5ea6\u548c\u53ef\u89e3\u91cb\u6027\uff0c\u4f46\u9019\u5169\u8005\u4e4b\u9593\u5e38\u5e38\u5b58\u5728\u4e00\u500b\u6b0a\u8861\u3002\u8fd1\u5e74\u4f86\u96a8\u8457\u6a21\u578b\u7684\u7cbe\u78ba\u5ea6\u548c\u8907\u96dc\u5ea6\u4e0d\u65b7\u63d0\u9ad8\uff0c\u4f46\u4e5f\u5e36\u4f86\u4e86\u6a21\u578b\u7684\u4e0d\u900f\u660e\u6027\u3002\u70ba\u4e86\u66f4\u6e05\u695a\u5730\u7406\u89e3\u9019\u500b\u6b0a\u8861\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u9019\u5f35\u5716\u4f86\u6bd4\u8f03\u3002 \u53c3\u8003 DARPA 's explainable AI \u8a08\u756b p. 23 \u5728\u9019\u500b\u5e73\u9762\u5716\u4e2d\uff0cX \u8ef8\u4ee3\u8868\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\uff0c\u8d8a\u9760\u53f3\u8868\u793a\u6a21\u578b\u8d8a\u5bb9\u6613\u89e3\u91cb\u3002Y \u8ef8\u4ee3\u8868\u6a21\u578b\u7684\u8907\u96dc\u5ea6\uff0c\u8d8a\u9ad8\u8868\u793a\u6a21\u578b\u8d8a\u8907\u96dc\u3002\u901a\u5e38\u60c5\u6cc1\u4e0b\uff0c\u8907\u96dc\u7684\u6a21\u578b\uff08\u4f8b\u5982\u6df1\u5ea6\u795e\u7d93\u7db2\u7d61\uff09\u80fd\u5920\u5be6\u73fe\u66f4\u9ad8\u7684\u6e96\u78ba\u5ea6\uff0c\u4f46\u89e3\u91cb\u6027\u8f03\u5dee\u3002\u76f8\u53cd\uff0c\u8f03\u7c21\u55ae\u7684\u6a21\u578b\uff08\u4f8b\u5982\u7dda\u6027\u8ff4\u6b78\uff09\u901a\u5e38\u5177\u6709\u66f4\u597d\u7684\u89e3\u91cb\u6027\uff0c\u4f46\u662f\u6e96\u78ba\u5ea6\u53ef\u80fd\u4e0d\u5982\u8907\u96dc\u6a21\u578b\u3002 \u5e78\u904b\u7684\u662f\uff0c\u8fd1\u5e74\u4f86\u4e00\u4e9b\u65b0\u7684\u7d50\u69cb\u5316\u89e3\u91cb\u6027\u6307\u6a19\u548c\u53ef\u8996\u5316\u6280\u8853\u6b63\u84ec\u52c3\u767c\u5c55\u4e2d\uff0c\u53ef\u4ee5\u5e6b\u52a9\u89e3\u91cb\u6df1\u5ea6\u5b78\u7fd2\u548c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u9019\u4e9b\u6307\u6a19\u548c\u53ef\u8996\u5316\u6280\u8853\u53ef\u4ee5\u5c07\u8907\u96dc\u9ed1\u76d2\u5b50\u6a21\u578b\u79fb\u52d5\u5230\u5e73\u9762\u5716\u4e0a\u7684\u66f4\u9ad8\u89e3\u91cb\u6027\u5340\u57df\u3002","title":"\u6e96\u78ba\u5ea6\u8207\u53ef\u89e3\u91cb\u6027\u7684\u6b0a\u8861"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#_2","text":"\u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u4e00\u4e9b\u5e38\u898b\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\uff0c\u6bcf\u7a2e\u6307\u6a19\u90fd\u6709\u5176\u5c08\u9580\u7684\u65b9\u6cd5\u548c\u6280\u8853\u4f86\u5be6\u73fe\u3002\u9019\u4e9b\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u53ef\u4ee5\u5354\u52a9\u6211\u5011\u78ba\u5b9a\u54ea\u4e9b\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u53ef\u4ee5\u88ab\u8996\u70ba\u53ef\u89e3\u91cb\u7684\uff0c\u56e0\u70ba\u5b83\u5011\u80fd\u5920\u7522\u751f\u53ef\u9760\u7684\u9810\u6e2c\uff0c\u540c\u6642\u4e5f\u80fd\u5920\u89e3\u91cb\u6a21\u578b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u7d50\u679c\u3002","title":"\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u6709\u54ea\u4e9b\uff1f"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#1-feature-importance","text":"\u9019\u7a2e\u65b9\u6cd5\u53ef\u7528\u65bc\u5c0d\u5168\u5c40\u548c\u5c40\u90e8\u9032\u884c\u89e3\u91cb\uff0c\u4ee5\u89e3\u91cb\u55ae\u500b\u7279\u5fb5\u7684\u8ca2\u737b\u548c\u5f71\u97ff\u3002\u7136\u800c\u8a72\u65b9\u6cd5\u5f80\u5f80\u96e3\u4ee5\u89e3\u91cb\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u8907\u96dc\u95dc\u4fc2\u3002\u5e38\u7528\u7684\u8a08\u7b97\u65b9\u6cd5\u5305\u62ec\u57fa\u65bc\u6a39\u7684\u6a21\u578b\u7684\u91cd\u8981\u6027\u6307\u6a19\u548c\u7dda\u6027\u8ff4\u6b78\u4e2d\u7684\u4fc2\u6578\u7b49\u3002 \u6b64\u5916\u7279\u5fb5\u91cd\u8981\u6027\u6307\u6a19\u4e2d\u6700\u5178\u578b\u4f8b\u5b50\u5c31\u662f\u654f\u611f\u5ea6\u5206\u6790\uff08Sensitivity Analysis\uff09\u3002\u5176\u76ee\u7684\u662f\u63a2\u8a0e\u8f38\u5165\u7279\u5fb5\u5c0d\u6a21\u578b\u8f38\u51fa\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Permutation Importance\u3001Drop Column Importance \u7b49\u65b9\u6cd5\u3002","title":"1. \u7279\u5fb5\u91cd\u8981\u6027 (Feature Importance)"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#2-local-explanations","text":"\u91dd\u5c0d\u55ae\u7b46\u8cc7\u6599\u9810\u6e2c\u7684\u89e3\u91cb\u65b9\u6cd5\uff0c\u901a\u5e38\u5177\u6709\u66f4\u9ad8\u7684\u5f48\u6027\u548c\u7d30\u81a9\u5ea6\uff0c\u4f46\u53ef\u80fd\u6703\u53d7\u5230\u96a8\u6a5f\u6027\u7684\u5f71\u97ff\uff0c\u4e14\u7121\u6cd5\u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\u3002LIME \u5c31\u662f\u4e00\u7a2e\u91dd\u5c0d\u500b\u5225\u5be6\u4f8b\u9032\u884c\u6a21\u578b\u9810\u6e2c\u89e3\u91cb\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u5c0d\u8907\u96dc\u7684\u9ed1\u76d2\u6a21\u578b\u9032\u884c\u89e3\u91cb\u3002\u900f\u904e\u5c0d\u8cc7\u6599\u9032\u884c\u62bd\u6a23\u4e26\u4f7f\u7528\u9ed1\u76d2\u6a21\u578b\u4f86\u9810\u6e2c\uff0c\u7136\u5f8c\u6839\u64da\u5be6\u4f8b\u4e4b\u9593\u7684\u76f8\u4f3c\u5ea6\u5c0d\u9019\u4e9b\u9810\u6e2c\u9032\u884c\u6b0a\u91cd\u5206\u914d\uff0c\u5f9e\u800c\u5b78\u7fd2\u51fa\u4e00\u500b\u5c40\u90e8\u53ef\u89e3\u91cb\u7684\u7dda\u6027\u6a21\u578b\u3002 LIME\u8ad6\u6587\uff1a \u201cWhy Should I Trust You?\u201d Explaining the Predictions of Any Classifier","title":"2. \u5c40\u90e8\u89e3\u91cb\u6027 (Local Explanations)"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#3-global-explanations","text":"\u5982\u679c\u4f60\u770b\u904e\u524d\u4e00\u7bc7\u6587\u7ae0\uff0c\u80af\u5b9a\u5c0d\u5b83\u4e0d\u964c\u751f\u3002\u5b83\u53ef\u4ee5\u89e3\u91cb\u6574\u500b\u6a21\u578b\u7684\u9810\u6e2c\u884c\u70ba\uff0c\u4f8b\u5982 Partial Dependence Plot\uff08PDP\uff09\u3001Individual Conditional Expectation\uff08ICE\uff09\u3001SHAP Summary Plot \u548c Feature Interaction Plot\u7b49\u3002\u9019\u7a2e\u89e3\u91cb\u65b9\u6cd5\u8f03\u70ba\u5168\u9762\u548c\u7d9c\u89c0\uff0c\u662f XAI \u4e2d\u6700\u5e38\u898b\u548c\u6700\u53d7\u6b61\u8fce\u7684\u89e3\u91cb\u65b9\u6cd5\u3002","title":"3. \u5168\u5c40\u89e3\u91cb\u6027\uff08Global Explanations\uff09"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#4-structured-explanations","text":"\u662f\u6307\u7528\u7d50\u69cb\u5316\u7684\u65b9\u5f0f\u5c07\u6a21\u578b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u7d50\u679c\u9032\u884c\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u5c07\u9810\u6e2c\u7684\u89e3\u91cb\u5206\u70ba\u591a\u500b\u6b65\u9a5f\uff0c\u5c07\u6bcf\u500b\u6b65\u9a5f\u7684\u89e3\u91cb\u5448\u73fe\u70ba\u4e00\u500b\u7d50\u69cb\u5316\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982\u6a39\u72c0\u5716\u3001\u6d41\u7a0b\u5716\u6216\u8a9e\u6cd5\u89e3\u91cb\u7b49\u3002\u900f\u904e\u9019\u7a2e\u65b9\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u95dc\u9375\u56e0\u7d20\uff0c\u4e5f\u80fd\u5920\u66f4\u5bb9\u6613\u5730\u7406\u89e3\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u5e38\u898b\u7684\u7d50\u69cb\u5316\u89e3\u91cb\u6027\u6307\u6a19\u5305\u62ec Decision Tree\u3001RuleFit \u7b49\u3002\u6b64\u65b9\u6cd5\u96d6\u7136\u80fd\u5920\u751f\u6210\u53ef\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u6613\u65bc\u7406\u89e3\u548c\u89e3\u91cb\u3002\u4f46\u662f\uff0c\u9019\u4e9b\u6a21\u578b\u5f80\u5f80\u8f03\u70ba\u7c21\u55ae\uff0c\u53ef\u80fd\u7121\u6cd5\u64c1\u6709\u8f03\u9ad8\u7684\u9810\u6e2c\u80fd\u529b\u3002 RuleFit \u5c07\u7dda\u6027\u6a21\u578b\u548c\u6c7a\u7b56\u6a39\u7d50\u5408\uff0c\u540c\u6642\u5b78\u7fd2\u7279\u5fb5\u7684\u91cd\u8981\u6027\u548c\u7279\u5fb5\u4e4b\u9593\u7684\u4ea4\u4e92\u4f5c\u7528\uff0c\u751f\u6210\u53ef\u89e3\u91cb\u6027\u5f37\u7684\u6a21\u578b\u3002RuleFit \u6f14\u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \u8cc7\u6599\u9810\u8655\u7406\uff1a\u5c0d\u8cc7\u6599\u9032\u884c\u7279\u5fb5\u63d0\u53d6\u548c\u9810\u8655\u7406\uff0c\u5305\u62ec\u7f3a\u5931\u503c\u586b\u5145\u3001\u7279\u5fb5\u6a19\u6e96\u5316\u7b49\u3002 \u57fa\u672c\u6a39\u6a21\u578b\u751f\u6210\uff1a\u4f7f\u7528\u6c7a\u7b56\u6a39\u6f14\u7b97\u6cd5\u751f\u6210\u4e00\u7d44\u57fa\u672c\u6a39\u6a21\u578b\uff0c\u4e26\u63d0\u53d6\u51fa\u6bcf\u500b\u8449\u5b50\u7bc0\u9ede\u7684\u7279\u5fb5\u3002 \u7dda\u6027\u6a21\u578b\u8a13\u7df4\uff1a\u5c07\u57fa\u672c\u6a39\u6a21\u578b\u4e2d\u7684\u8449\u5b50\u7bc0\u9ede\u7279\u5fb5\u4f5c\u70ba\u65b0\u7684\u8f38\u5165\u7279\u5fb5\uff0c\u4f7f\u7528\u7dda\u6027\u8ff4\u6b78\u6f14\u7b97\u6cd5\u8a13\u7df4\u4e00\u500b\u7dda\u6027\u6a21\u578b\u3002 \u9810\u6e2c\uff1a\u5c0d\u65bc\u65b0\u7684\u6e2c\u8a66\u6a23\u672c\uff0c\u5148\u4f7f\u7528\u57fa\u672c\u6a39\u6a21\u578b\u5c07\u5176\u6620\u5c04\u5230\u8449\u5b50\u7bc0\u9ede\u4e0a\uff0c\u4e26\u5c07\u8449\u5b50\u7bc0\u9ede\u7279\u5fb5\u4f5c\u70ba\u8f38\u5165\u7279\u5fb5\uff0c\u518d\u4f7f\u7528\u8a13\u7df4\u597d\u7684\u7dda\u6027\u6a21\u578b\u9032\u884c\u9810\u6e2c\u3002 RuleFit\u8ad6\u6587\uff1a Predictive learning via rule ensembles","title":"4. \u7d50\u69cb\u5316\u89e3\u91cb\u6027\uff08Structured Explanations\uff09"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#5-error-analysis","text":"\u900f\u904e\u8aa4\u5dee\u5206\u6790\uff0c\u6211\u5011\u53ef\u4ee5\u4e86\u89e3\u6a21\u578b\u5728\u54ea\u4e9b\u60c5\u6cc1\u4e0b\u8868\u73fe\u4e0d\u4f73\uff0c\u4e26\u4e14\u91dd\u5c0d\u9019\u4e9b\u60c5\u6cc1\u9032\u884c\u8abf\u6574\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6e96\u78ba\u5ea6\u3002\u53ef\u4ee5\u7528\u65bc\u89e3\u91cb\u6a21\u578b\u5728\u6e2c\u8a66\u6578\u64da\u96c6\u4e0a\u7684\u8aa4\u5dee\u539f\u56e0\uff0c\u4f8b\u5982 Confusion Matrix\u3001ROC Curve\u3001Precision-Recall Curve\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u5e38\u898b\u7684\u4efb\u52d9\u6709\u8ff4\u6b78\u548c\u5206\u985e\u5169\u7a2e\u3002\u4ee5\u4e0b\u5206\u5225\u4ecb\u7d39\u9019\u5169\u7a2e\u4efb\u52d9\u5e38\u898b\u7684\u8aa4\u5dee\u8a55\u4f30\u6307\u6a19\uff1a","title":"5. \u8aa4\u5dee\u5206\u6790\uff08Error Analysis\uff09"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#_3","text":"\u5747\u65b9\u8aa4\u5dee (Mean Squared Error, MSE)\uff1a\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u5dee\u7684\u5e73\u65b9\u548c\u7684\u5e73\u5747\u503c\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u5747\u65b9\u6839\u8aa4\u5dee (Root Mean Squared Error, RMSE)\uff1aMSE \u958b\u6839\u865f\uff0c\u8207 MSE \u76f8\u6bd4\u66f4\u80fd\u53cd\u6620\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u771f\u5be6\u5dee\u8ddd\u3002 \u5e73\u5747\u7d55\u5c0d\u8aa4\u5dee (Mean Absolute Error, MAE)\uff1a\u9810\u6e2c\u503c\u8207\u5be6\u969b\u503c\u7684\u5dee\u7684\u7d55\u5c0d\u503c\u7684\u5e73\u5747\u503c\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u5e73\u5747\u7d55\u5c0d\u767e\u5206\u6bd4\u8aa4\u5dee\uff08Mean Absolute Percentage Error, MAPE\uff09\uff1a\u7528\u4f86\u8861\u91cf\u8ff4\u6b78\u6a21\u578b\u7684\u9810\u6e2c\u7cbe\u5ea6\uff0c\u5176\u8a08\u7b97\u65b9\u5f0f\u70ba\u9810\u6e2c\u503c\u548c\u771f\u5be6\u503c\u4e4b\u9593\u7684\u7d55\u5c0d\u8aa4\u5dee\u4f54\u771f\u5be6\u503c\u7684\u767e\u5206\u6bd4\u7684\u5e73\u5747\u503c\u3002\u901a\u5e38\u4f86\u8aaa\uff0cMAPE \u7684\u6578\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u4e00\u822c\u8a8d\u70ba MAPE \u5c0f\u65bc 10% \u8868\u793a\u6a21\u578b\u7684\u9810\u6e2c\u6548\u679c\u8f03\u597d\u3002 \u6c7a\u5b9a\u4fc2\u6578 (R-squared)\uff1a\u8a55\u4f30\u6a21\u578b\u8207\u5be6\u969b\u503c\u4e4b\u9593\u7684\u76f8\u95dc\u6027\uff0c\u503c\u8d8a\u9ad8\u4ee3\u8868\u6a21\u578b\u7684\u89e3\u91cb\u80fd\u529b\u8d8a\u597d\uff0c\u4f46\u4e5f\u5bb9\u6613\u904e\u5ea6\u64ec\u5408\u3002","title":"\u8ff4\u6b78\u554f\u984c\u7684\u8a55\u4f30\u6307\u6a19\uff1a"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#_4","text":"\u6df7\u6dc6\u77e9\u9663 (Confusion Matrix)\uff1a\u5217\u51fa\u5be6\u969b\u503c\u8207\u9810\u6e2c\u503c\u7684\u5c0d\u61c9\u60c5\u6cc1\uff0c\u4fbf\u65bc\u8a55\u4f30\u6a21\u578b\u7684\u6e96\u78ba\u6027\u3001\u53ec\u56de\u7387\u7b49\u6307\u6a19\u3002 \u6e96\u78ba\u7387 (Accuracy)\uff1a\u9810\u6e2c\u6b63\u78ba\u7684\u6a23\u672c\u6578\u9664\u4ee5\u7e3d\u6a23\u672c\u6578\uff0c\u8a55\u4f30\u6a21\u578b\u7684\u6574\u9ad4\u9810\u6e2c\u80fd\u529b\u3002 \u7cbe\u78ba\u7387 (Precision)\uff1a\u9810\u6e2c\u70ba\u6b63\u7684\u6a23\u672c\u4e2d\u5be6\u969b\u70ba\u6b63\u7684\u6bd4\u4f8b\uff0c\u8a55\u4f30\u6a21\u578b\u5c0d\u6b63\u6a23\u672c\u7684\u9810\u6e2c\u80fd\u529b\u3002 \u53ec\u56de\u7387 (Recall)\uff1a\u5be6\u969b\u70ba\u6b63\u7684\u6a23\u672c\u4e2d\u9810\u6e2c\u70ba\u6b63\u7684\u6bd4\u4f8b\uff0c\u8a55\u4f30\u6a21\u578b\u5c0d\u6b63\u6a23\u672c\u7684\u8986\u84cb\u80fd\u529b\u3002 F1\u503c (F1 Score)\uff1a\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u7684\u52a0\u6b0a\u8abf\u548c\u5e73\u5747\u6578\uff0c\u7d9c\u5408\u8a55\u4f30\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u3002","title":"\u5206\u985e\u554f\u984c\u7684\u8a55\u4f30\u6307\u6a19\uff1a"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#6-fidelity","text":"\u771f\u5be6\u6027\u9a57\u8b49\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u4fe1\u5fc3\u548c\u53ef\u9760\u6027\uff0c\u907f\u514d\u904e\u5ea6\u64ec\u5408\u548c\u9078\u64c7\u6027\u504f\u5dee\u7b49\u554f\u984c\u3002\u901a\u5e38\u5efa\u8b70\u771f\u5be6\u6027\u9a57\u8b49\u4f7f\u7528\u7684\u6e2c\u8a66\u8cc7\u6599\u96c6\u7684\u6578\u91cf\u61c9\u8a72\u8207\u8a13\u7df4\u8cc7\u6599\u96c6\u7684\u6578\u91cf\u76f8\u7576\uff0c\u4e26\u4e14\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a57\u8b49\u7b49\u65b9\u6cd5\u4f86\u9032\u4e00\u6b65\u9a57\u8b49\u6a21\u578b\u7684\u53ef\u9760\u6027\u3002\u9664\u6b64\u4e4b\u5916\u5b83\u9084\u53ef\u4ee5\u8a55\u4f30\u6a21\u578b\u89e3\u91cb\u662f\u5426\u5fe0\u5be6\u53cd\u6620\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Anchors\u3001Counterfactual Explanations \u7b49\u3002 Anchors\u8ad6\u6587\uff1a Anchors: High-Precision Model-agnostic Explanations","title":"6. \u771f\u5be6\u6027\u9a57\u8b49\uff08Fidelity\uff09"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#_5","text":"\u4eca\u5929\u5b78\u5230\u4e86\u8a31\u591a\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\uff0c\u4f46\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u6642\uff0c\u61c9\u8a72\u6ce8\u610f\u4ee5\u4e0b\u5e7e\u9ede\uff1a - \u9069\u7528\u7bc4\u570d\uff1a\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u9069\u7528\u65bc\u4e0d\u540c\u7684\u5834\u666f\uff0c\u61c9\u6839\u64da\u5177\u9ad4\u9700\u6c42\u9078\u64c7\u3002 - \u7cbe\u5ea6\u548c\u7a69\u5b9a\u6027\uff1a\u89e3\u91cb\u6027\u6307\u6a19\u5728\u4e0d\u540c\u5834\u666f\u4e0b\u53ef\u80fd\u5b58\u5728\u7cbe\u5ea6\u548c\u7a69\u5b9a\u6027\u554f\u984c\uff0c\u61c9\u614e\u91cd\u4f7f\u7528\u3002 - \u89e3\u91cb\u6548\u679c\uff1a\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u4e0d\u50c5\u61c9\u8a72\u80fd\u5920\u751f\u6210\u53ef\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u800c\u4e14\u9084\u61c9\u8a72\u80fd\u5920\u8b93\u4f7f\u7528\u8005\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\uff0c\u907f\u514d\u51fa\u73fe\u8aa4\u89e3\u6216\u8aa4\u89e3\u3002 - \u7d50\u679c\u5448\u73fe\uff1a\u4e0d\u540c\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19\u751f\u6210\u7684\u7d50\u679c\u5f62\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u6839\u64da\u9700\u6c42\u9078\u64c7\u9069\u7576\u7684\u5448\u73fe\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u65bc\u4f7f\u7528\u8005\u7406\u89e3\u3002","title":"\u5c0f\u7d50"},{"location":"3.\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6027\u6307\u6a19/#reference","text":"DARPA 's explainable AI ( XAI ) program: A retrospective","title":"Reference"},{"location":"30.XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411:\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032/","text":"[Day30] XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411\uff1a\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032 \u6a5f\u5668\u5c31\u50cf\u4eba\u985e\u4e00\u6a23\uff0c\u4e26\u975e\u767e\u5206\u4e4b\u767e\u5730\u5b8c\u7f8e\u3002\u5c31\u5982\u540c\u4eba\u985e\u6709\u6642\u6703\u72af\u932f\uff0c\u6a5f\u5668\u5728\u9810\u6e2c\u6216\u6c7a\u7b56\u4e2d\u4e5f\u53ef\u80fd\u72af\u932f\u3002\u7576\u6211\u5011\u9762\u5c0d\u9810\u6e2c\u932f\u8aa4\u6642\uff0c\u5982\u679c\u80fd\u5920\u900f\u904e XAI \u5206\u6790\u51fa\u5408\u7406\u7684\u539f\u56e0\uff0c\u53ef\u4ee5\u6539\u5584\u6a21\u578b\u4e26\u63d0\u4f9b\u6709\u5229\u7684\u6839\u64da\u4fee\u6b63\u5b83\u3002\u5728\u672c\u7cfb\u5217\u4e09\u5341\u5929\u6587\u7ae0\u4e2d\uff0c\u524d\u534a\u6bb5\u662f\u91dd\u5c0d\u4e00\u822c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u53ef\u89e3\u91cb\u7684\u4ecb\u7d39\u3002\u5728\u9019\u904e\u7a0b\u4e2d\u6211\u5011\u8b1b\u8ff0\u4e86 \u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb \u8207 \u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb \u7684\u89c0\u5ff5\uff0c\u4e26\u4ecb\u7d39\u4e86\u5169\u500b\u71b1\u9580\u7684 XAI \u5957\u4ef6 LIME \u8207 SHAP\u3002 [Day 2] \u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316\uff1aXAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def [Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f \u5728\u672c\u7cfb\u5217\u5f8c\u534a\u6bb5\u5f9e Day 16 \u958b\u59cb\u8b1b\u89e3\u4e86\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6280\u8853\uff0c\u5176\u4e2d\u5e36\u5404\u4f4d\u770b\u4e86 DNN\u3001CNN\u3001LSTM \u5982\u4f55\u900f\u904e\u4e00\u4e9b\u68af\u5ea6\u8a0a\u606f\u6216\u662f\u64fe\u52d5\u7b49\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u3002 [Day 16] \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b\uff1f \u5982\u679c\u5c0d\u96fb\u8166\u8996\u89ba\u7684\u53ef\u89e3\u91cb\u6027\u6709\u8208\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u53c3\u8003 Day18~23\uff0c\u5728\u9019\u5e7e\u5929\u6587\u7ae0\u4e2d\u8a73\u7d30\u4ecb\u7d39\u5e7e\u7a2e\u4e0d\u540c\u65b9\u6cd5\u4f86\u89e3\u6790\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u3002\u53e6\u5916\u5c0d\u65bc\u5be6\u52d9\u61c9\u7528\u6709\u8208\u8da3\u7684\u53ef\u4ee5\u53c3\u8003 Day24~27 \u6587\u7ae0\uff0c\u5728\u9019\u4e4b\u4e2d\u8b1b\u89e3\u4e86\u771f\u5be6\u751f\u6d3b\u4e2d\u7684 \u6642\u9593\u5e8f\u5217\u8cc7\u6599\u5206\u6790 \u3001 \u5f71\u50cf\u7455\u75b5\u6aa2\u6e2c \u3001 \u92fc\u6750\u7f3a\u9677\u5206\u985e \u548c \u81ea\u7136\u8a9e\u8a00\u61c9\u7528 \uff0c\u4e26\u6559\u5c0e\u5404\u4f4d\u5982\u4f55\u5c07\u9019\u4e9b\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u6839\u56e0\u89e3\u91cb\u3002 XAI\u7684\u4e0b\u4e00\u6b65\uff1f \u9996\u5148\u606d\u559c\u5404\u4f4d\u8010\u5fc3\u7684\u770b\u5230\u6700\u5f8c\uff0c\u76f8\u4fe1\u5404\u4f4d\u5df2\u5438\u6536\u6eff\u6eff\u7684\u4e7e\u8ca8\u3002\u770b\u5230\u9019\u908a\u4f60\u53ef\u80fd\u6703\u601d\u8003\u7576\u6a21\u578b\u8a13\u7df4\u5b8c\u4e86\uff0c\u4e5f\u900f\u904e XAI \u78ba\u8a8d\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u5f8c\uff0c\u4e0b\u4e00\u6b65\u8a72\u600e\u9ebc\u505a\u5462\uff1f\u6211\u5011\u90fd\u77e5\u9053\u958b\u767c\u7684\u6700\u5f8c\u4e00\u54e9\u8def\u662f\u90e8\u7f72\u61c9\u7528\u3002\u5982\u4f55\u5c07 AI \u6a21\u578b\u90e8\u5c6c\u4e0a\u7dda\uff0c\u662f\u4e00\u500b\u5f88\u91cd\u8981\u7684\u5de5\u7a0b\u3002\u4f60\u554f\u6211\uff0c\u6211\u53ef\u80fd\u6703\u8aaa MLOps \u662f\u4f01\u696d\u5c0e\u5165 AI \u7684\u91cd\u8981\u95dc\u9375! \u5728\u4ecb\u7d39 MLOps \u524d\u5148\u4f86\u8ac7\u8ac7\u4e00\u500b\u5f88\u76f8\u8fd1\u7684\u540d\u8a5e\uff0c\u53eb\u505a DevOps\u3002\u4ee5\u4e0b\u900f\u904e\u4f8b\u5b50\u89e3\u91cb DevOps \u7684\u6838\u5fc3\u6d41\u7a0b\u3002\u7576\u4eca\u5929\u6709\u65b0\u7684\u529f\u80fd\u8a08\u756b(Plan)\u51fa\u4f86\u6642\uff0c\u5718\u968a\u5c31\u6703\u958b\u59cb\u8457\u624b\u5beb\u7a0b\u5f0f(Code)\uff0c\u7a0b\u5f0f\u5beb\u5b8c\u5f8c\u6703\u9032\u884c\u7de8\u8b6f(Build)\u6253\u5305\u6210\u4e00\u500b\u53ef\u57f7\u884c\u7684\u61c9\u7528\u3002\u63a5\u8457\u6211\u5011\u6703\u9032\u884c\u7cfb\u7d71\u7684\u6e2c\u8a66(Test)\uff0c\u6e2c\u8a66\u5b8c\u6210\u5f8c\u6211\u5011\u6703\u767c\u5e03\u7b2c\u4e00\u7248(Release)\u4ee5\u53ca\u90e8\u7f72\u61c9\u7528(Deploy)\u3002\u6700\u5f8c\u5c31\u662f\u7dad\u904b(Operate)\uff0c\u63a5\u4e0b\u4f86\u7dad\u8b77\u5718\u968a\u6703\u4f86\u89c0\u5bdf(Monitor)\u9019\u500b\u65b0\u529f\u80fd\u5728\u5ba2\u6236\u7aef\u7684\u4f7f\u7528\u72c0\u6cc1\u3002\u5982\u679c\u767c\u751f\u554f\u984c\u5c31\u6703\u958b\u59cb\u8a08\u756b\u66f4\u65b0\uff0c\u6216\u662f\u4f7f\u7528\u8005\u63d0\u51fa\u4e00\u500b\u65b0\u7684 issue\uff0c\u5718\u968a\u7d93\u904e\u8a0e\u8ad6\u5f8c\u89ba\u5f97\u53ef\u884c\u5c31\u6703\u9032\u5165\u4e0b\u500b\u968e\u6bb5\u8457\u624b\u8a08\u756b\u65b0\u7684\u529f\u80fd\u3002DevOps \u7684\u8fed\u4ee3\u9031\u671f\u975e\u5e38\u7684\u5feb\u901f\uff0c\u5176\u512a\u9ede\u662f\u53ef\u4ee5\u4e0d\u65b7\u7684\u9031\u671f\u6027\u66f4\u65b0\u529f\u80fd\u8d8a\u4f86\u8d8a\u8cbc\u8fd1\u4f7f\u7528\u8005\u3002\u9019\u5c31\u662f\u6240\u8b02\u7684 DevOps \u8edf\u9ad4\u958b\u767c\u6d41\u7a0b\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u4e0a\u96f2\u3001IT\u73fe\u4ee3\u5316\u9700\u6c42\u5f37\uff0c\u5e36\u52d5\u4f01\u696d2023\u6301\u7e8c\u52a0\u78bcDevOps \u6211\u5011\u518d\u56de\u4f86\u770b\u770b MLOps\uff0c\u5b83\u5c31\u662f Machine Learning + DEV + OPS \u4e09\u500b\u90e8\u5206\u7684\u7e2e\u5beb\u5408\u4f75\u3002\u5c31\u5982\u5b57\u9762\u4e0a\u7684\u610f\u601d\uff0c\u5b83\u66f4\u6df1\u5165\u5730\u878d\u5408\u6a5f\u5668\u5b78\u7fd2\u5230 DevOps \u6d41\u7a0b\u4e2d\uff0c\u4e26\u52a0\u5f37\u6a21\u578b\u7684\u7dad\u904b\uff0c\u540c\u6642\u5efa\u7acb\u76e3\u63a7\u7cfb\u7d71\uff0c\u4ee5\u5b9a\u671f\u6aa2\u67e5\u6a21\u578b\u7684\u9069\u7528\u6027\u4e26\u6355\u6349\u7570\u5e38\u3002 \u63a5\u4e0b\u4f86\u8a0e\u8ad6\u4e00\u500b MLOps \u91cd\u8981\u74b0\u7bc0\uff1a Monitoring system(\u76e3\u63a7\u7cfb\u7d71) \u5728\u8edf\u9ad4\u5de5\u7a0b\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5efa\u7acb\u76e3\u63a7\u7cfb\u7d71\uff0c\u5728\u5ba2\u6236\u767c\u73fe\u554f\u984c\u4e4b\u524d\u5c31\u5df2\u7d93\u638c\u63e1\u554f\u984c\u6240\u5728\u3002\u7576\u6a21\u578b\u72af\u932f\u6642\uff0c\u6211\u5011\u6703\u60f3\u77e5\u9053\u70ba\u4ec0\u9ebc\u6a21\u578b\u72af\u932f\u3002\u4f46\u662f\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u72af\u932f\u5462\uff1f\u9019\u53ef\u80fd\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a \u8cc7\u6599\u770b\u904e\u4f46\u5b78\u932f \u8cc7\u6599\u5c1a\u672a\u770b\u904e \u9996\u5148 \u8cc7\u6599\u770b\u904e\u4f46\u5b78\u932f \u9019\u554f\u984c\u597d\u89e3\u6c7a\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e XAI \u6280\u8853\u5354\u52a9\u6211\u5011\u9664\u932f\u3002\u4f8b\u5982\u5728\u5f71\u50cf\u90e8\u5206\u53ef\u4ee5\u4f7f\u7528 Grad-CAM \u4f86\u5224\u65b7\u6a21\u578b\u6240\u5c08\u6ce8\u7684\u5340\u57df\u3002\u8868\u683c\u578b\u7684\u8cc7\u6599\u53ef\u63a1\u7528 SHAP \u4f86\u5224\u65b7\u662f\u54ea\u4e00\u500b\u7279\u5fb5\u9020\u6210\u6700\u5f8c\u7684\u7d50\u679c\u5224\u5225\u4ee5\u53ca\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002 \u4f46\u662f \u8cc7\u6599\u5c1a\u672a\u770b\u904e \u9019\u500b\u554f\u984c\u8ab0\u4e5f\u7121\u6cd5\u9810\u6e2c\u3002\u6703\u767c\u751f\u9019\u554f\u984c\u7684\u539f\u56e0\u53ef\u80fd\u662f\u8cc7\u6599\u8490\u96c6\u4e0d\u5920\u8c50\u5bcc\uff0c\u4f7f\u5f97\u6a21\u578b\u5b78\u7fd2\u80fd\u529b\u4e0d\u8db3\u3002\u53c8\u6216\u56e0\u70ba\u8cc7\u6599\u7684\u6642\u8b8a\u7279\u6027\u9020\u6210\u8cc7\u6599\u7684\u5206\u4f48\u96c6\u9010\u6f38\u504f\u79fb\uff0c\u5728\u5b78\u8853\u754c\u6211\u5011\u5c07\u9019\u7a2e\u60c5\u6cc1\u7a31\u70ba \u6982\u5ff5\u98c4\u79fb (Concept Drift)\u3002\u70ba\u4e86\u63d0\u9ad8\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb\u76e3\u63a7\u6a5f\u5236\u9069\u7576\u7684\u6aa2\u6e2c\u6a21\u578b\u7684\u9069\u7528\u6027\u3002\u4e26\u900f\u904e XAI \u7684\u6839\u56e0\u5206\u6790\u4f86\u67e5\u770b\u6a21\u578b\u662f\u4e0d\u662f\u8207\u6211\u5011\u9810\u671f\u7684\u7d50\u679c\u4e00\u81f4\u3002 \u5728\u672a\u4f86\uff0cXAI \u7684\u6280\u8853\u4ecd\u6301\u7e8c\u767c\u5c55\uff0c\u76f8\u4fe1\u5c07\u6703\u5e36\u4f86\u66f4\u591a\u7684\u9a5a\u559c\u548c\u5275\u65b0\u3002 Reference machine learning pipeline \u8cc7\u6599\u7a81\u7136\u7121\u6cd5\u6e96\u78ba\u9810\u6e2c\uff1f\u6dfa\u8ac7\u8cc7\u6599\u98c4\u79fb \u8907\u96dcAI\u6a21\u578b\u4e0b\u7684\u53ef\u89e3\u91cb\u6027","title":"[Day30] XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411\uff1a\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032"},{"location":"30.XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411:\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032/#day30-xai","text":"\u6a5f\u5668\u5c31\u50cf\u4eba\u985e\u4e00\u6a23\uff0c\u4e26\u975e\u767e\u5206\u4e4b\u767e\u5730\u5b8c\u7f8e\u3002\u5c31\u5982\u540c\u4eba\u985e\u6709\u6642\u6703\u72af\u932f\uff0c\u6a5f\u5668\u5728\u9810\u6e2c\u6216\u6c7a\u7b56\u4e2d\u4e5f\u53ef\u80fd\u72af\u932f\u3002\u7576\u6211\u5011\u9762\u5c0d\u9810\u6e2c\u932f\u8aa4\u6642\uff0c\u5982\u679c\u80fd\u5920\u900f\u904e XAI \u5206\u6790\u51fa\u5408\u7406\u7684\u539f\u56e0\uff0c\u53ef\u4ee5\u6539\u5584\u6a21\u578b\u4e26\u63d0\u4f9b\u6709\u5229\u7684\u6839\u64da\u4fee\u6b63\u5b83\u3002\u5728\u672c\u7cfb\u5217\u4e09\u5341\u5929\u6587\u7ae0\u4e2d\uff0c\u524d\u534a\u6bb5\u662f\u91dd\u5c0d\u4e00\u822c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u53ef\u89e3\u91cb\u7684\u4ecb\u7d39\u3002\u5728\u9019\u904e\u7a0b\u4e2d\u6211\u5011\u8b1b\u8ff0\u4e86 \u6a21\u578b\u4e8b\u5f8c\u89e3\u91cb \u8207 \u6a21\u578b\u672c\u8eab\u53ef\u4ee5\u89e3\u91cb \u7684\u89c0\u5ff5\uff0c\u4e26\u4ecb\u7d39\u4e86\u5169\u500b\u71b1\u9580\u7684 XAI \u5957\u4ef6 LIME \u8207 SHAP\u3002 [Day 2] \u5f9e\u9ed1\u76d2\u5230\u900f\u660e\u5316\uff1aXAI\u6280\u8853\u7684\u767c\u5c55\u4e4b\u8def [Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f \u5728\u672c\u7cfb\u5217\u5f8c\u534a\u6bb5\u5f9e Day 16 \u958b\u59cb\u8b1b\u89e3\u4e86\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u53ef\u89e3\u91cb\u6280\u8853\uff0c\u5176\u4e2d\u5e36\u5404\u4f4d\u770b\u4e86 DNN\u3001CNN\u3001LSTM \u5982\u4f55\u900f\u904e\u4e00\u4e9b\u68af\u5ea6\u8a0a\u606f\u6216\u662f\u64fe\u52d5\u7b49\u65b9\u6cd5\u89e3\u91cb\u795e\u7d93\u7db2\u8def\u3002 [Day 16] \u795e\u7d93\u7db2\u8def\u7684\u53ef\u89e3\u91cb\u6027\uff1a\u5982\u4f55\u7406\u89e3\u6df1\u5ea6\u5b78\u7fd2\u4e2d\u7684\u9ed1\u7bb1\u6a21\u578b\uff1f \u5982\u679c\u5c0d\u96fb\u8166\u8996\u89ba\u7684\u53ef\u89e3\u91cb\u6027\u6709\u8208\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u53c3\u8003 Day18~23\uff0c\u5728\u9019\u5e7e\u5929\u6587\u7ae0\u4e2d\u8a73\u7d30\u4ecb\u7d39\u5e7e\u7a2e\u4e0d\u540c\u65b9\u6cd5\u4f86\u89e3\u6790\u5377\u7a4d\u795e\u7d93\u7db2\u8def\u3002\u53e6\u5916\u5c0d\u65bc\u5be6\u52d9\u61c9\u7528\u6709\u8208\u8da3\u7684\u53ef\u4ee5\u53c3\u8003 Day24~27 \u6587\u7ae0\uff0c\u5728\u9019\u4e4b\u4e2d\u8b1b\u89e3\u4e86\u771f\u5be6\u751f\u6d3b\u4e2d\u7684 \u6642\u9593\u5e8f\u5217\u8cc7\u6599\u5206\u6790 \u3001 \u5f71\u50cf\u7455\u75b5\u6aa2\u6e2c \u3001 \u92fc\u6750\u7f3a\u9677\u5206\u985e \u548c \u81ea\u7136\u8a9e\u8a00\u61c9\u7528 \uff0c\u4e26\u6559\u5c0e\u5404\u4f4d\u5982\u4f55\u5c07\u9019\u4e9b\u8a13\u7df4\u597d\u7684\u6a21\u578b\u9032\u884c\u6839\u56e0\u89e3\u91cb\u3002","title":"[Day30] XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411\uff1a\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032"},{"location":"30.XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411:\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032/#xai","text":"\u9996\u5148\u606d\u559c\u5404\u4f4d\u8010\u5fc3\u7684\u770b\u5230\u6700\u5f8c\uff0c\u76f8\u4fe1\u5404\u4f4d\u5df2\u5438\u6536\u6eff\u6eff\u7684\u4e7e\u8ca8\u3002\u770b\u5230\u9019\u908a\u4f60\u53ef\u80fd\u6703\u601d\u8003\u7576\u6a21\u578b\u8a13\u7df4\u5b8c\u4e86\uff0c\u4e5f\u900f\u904e XAI \u78ba\u8a8d\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u5f8c\uff0c\u4e0b\u4e00\u6b65\u8a72\u600e\u9ebc\u505a\u5462\uff1f\u6211\u5011\u90fd\u77e5\u9053\u958b\u767c\u7684\u6700\u5f8c\u4e00\u54e9\u8def\u662f\u90e8\u7f72\u61c9\u7528\u3002\u5982\u4f55\u5c07 AI \u6a21\u578b\u90e8\u5c6c\u4e0a\u7dda\uff0c\u662f\u4e00\u500b\u5f88\u91cd\u8981\u7684\u5de5\u7a0b\u3002\u4f60\u554f\u6211\uff0c\u6211\u53ef\u80fd\u6703\u8aaa MLOps \u662f\u4f01\u696d\u5c0e\u5165 AI \u7684\u91cd\u8981\u95dc\u9375! \u5728\u4ecb\u7d39 MLOps \u524d\u5148\u4f86\u8ac7\u8ac7\u4e00\u500b\u5f88\u76f8\u8fd1\u7684\u540d\u8a5e\uff0c\u53eb\u505a DevOps\u3002\u4ee5\u4e0b\u900f\u904e\u4f8b\u5b50\u89e3\u91cb DevOps \u7684\u6838\u5fc3\u6d41\u7a0b\u3002\u7576\u4eca\u5929\u6709\u65b0\u7684\u529f\u80fd\u8a08\u756b(Plan)\u51fa\u4f86\u6642\uff0c\u5718\u968a\u5c31\u6703\u958b\u59cb\u8457\u624b\u5beb\u7a0b\u5f0f(Code)\uff0c\u7a0b\u5f0f\u5beb\u5b8c\u5f8c\u6703\u9032\u884c\u7de8\u8b6f(Build)\u6253\u5305\u6210\u4e00\u500b\u53ef\u57f7\u884c\u7684\u61c9\u7528\u3002\u63a5\u8457\u6211\u5011\u6703\u9032\u884c\u7cfb\u7d71\u7684\u6e2c\u8a66(Test)\uff0c\u6e2c\u8a66\u5b8c\u6210\u5f8c\u6211\u5011\u6703\u767c\u5e03\u7b2c\u4e00\u7248(Release)\u4ee5\u53ca\u90e8\u7f72\u61c9\u7528(Deploy)\u3002\u6700\u5f8c\u5c31\u662f\u7dad\u904b(Operate)\uff0c\u63a5\u4e0b\u4f86\u7dad\u8b77\u5718\u968a\u6703\u4f86\u89c0\u5bdf(Monitor)\u9019\u500b\u65b0\u529f\u80fd\u5728\u5ba2\u6236\u7aef\u7684\u4f7f\u7528\u72c0\u6cc1\u3002\u5982\u679c\u767c\u751f\u554f\u984c\u5c31\u6703\u958b\u59cb\u8a08\u756b\u66f4\u65b0\uff0c\u6216\u662f\u4f7f\u7528\u8005\u63d0\u51fa\u4e00\u500b\u65b0\u7684 issue\uff0c\u5718\u968a\u7d93\u904e\u8a0e\u8ad6\u5f8c\u89ba\u5f97\u53ef\u884c\u5c31\u6703\u9032\u5165\u4e0b\u500b\u968e\u6bb5\u8457\u624b\u8a08\u756b\u65b0\u7684\u529f\u80fd\u3002DevOps \u7684\u8fed\u4ee3\u9031\u671f\u975e\u5e38\u7684\u5feb\u901f\uff0c\u5176\u512a\u9ede\u662f\u53ef\u4ee5\u4e0d\u65b7\u7684\u9031\u671f\u6027\u66f4\u65b0\u529f\u80fd\u8d8a\u4f86\u8d8a\u8cbc\u8fd1\u4f7f\u7528\u8005\u3002\u9019\u5c31\u662f\u6240\u8b02\u7684 DevOps \u8edf\u9ad4\u958b\u767c\u6d41\u7a0b\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u4e0a\u96f2\u3001IT\u73fe\u4ee3\u5316\u9700\u6c42\u5f37\uff0c\u5e36\u52d5\u4f01\u696d2023\u6301\u7e8c\u52a0\u78bcDevOps \u6211\u5011\u518d\u56de\u4f86\u770b\u770b MLOps\uff0c\u5b83\u5c31\u662f Machine Learning + DEV + OPS \u4e09\u500b\u90e8\u5206\u7684\u7e2e\u5beb\u5408\u4f75\u3002\u5c31\u5982\u5b57\u9762\u4e0a\u7684\u610f\u601d\uff0c\u5b83\u66f4\u6df1\u5165\u5730\u878d\u5408\u6a5f\u5668\u5b78\u7fd2\u5230 DevOps \u6d41\u7a0b\u4e2d\uff0c\u4e26\u52a0\u5f37\u6a21\u578b\u7684\u7dad\u904b\uff0c\u540c\u6642\u5efa\u7acb\u76e3\u63a7\u7cfb\u7d71\uff0c\u4ee5\u5b9a\u671f\u6aa2\u67e5\u6a21\u578b\u7684\u9069\u7528\u6027\u4e26\u6355\u6349\u7570\u5e38\u3002 \u63a5\u4e0b\u4f86\u8a0e\u8ad6\u4e00\u500b MLOps \u91cd\u8981\u74b0\u7bc0\uff1a","title":"XAI\u7684\u4e0b\u4e00\u6b65\uff1f"},{"location":"30.XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411:\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032/#monitoring-system","text":"\u5728\u8edf\u9ad4\u5de5\u7a0b\u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5efa\u7acb\u76e3\u63a7\u7cfb\u7d71\uff0c\u5728\u5ba2\u6236\u767c\u73fe\u554f\u984c\u4e4b\u524d\u5c31\u5df2\u7d93\u638c\u63e1\u554f\u984c\u6240\u5728\u3002\u7576\u6a21\u578b\u72af\u932f\u6642\uff0c\u6211\u5011\u6703\u60f3\u77e5\u9053\u70ba\u4ec0\u9ebc\u6a21\u578b\u72af\u932f\u3002\u4f46\u662f\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u72af\u932f\u5462\uff1f\u9019\u53ef\u80fd\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a \u8cc7\u6599\u770b\u904e\u4f46\u5b78\u932f \u8cc7\u6599\u5c1a\u672a\u770b\u904e \u9996\u5148 \u8cc7\u6599\u770b\u904e\u4f46\u5b78\u932f \u9019\u554f\u984c\u597d\u89e3\u6c7a\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e XAI \u6280\u8853\u5354\u52a9\u6211\u5011\u9664\u932f\u3002\u4f8b\u5982\u5728\u5f71\u50cf\u90e8\u5206\u53ef\u4ee5\u4f7f\u7528 Grad-CAM \u4f86\u5224\u65b7\u6a21\u578b\u6240\u5c08\u6ce8\u7684\u5340\u57df\u3002\u8868\u683c\u578b\u7684\u8cc7\u6599\u53ef\u63a1\u7528 SHAP \u4f86\u5224\u65b7\u662f\u54ea\u4e00\u500b\u7279\u5fb5\u9020\u6210\u6700\u5f8c\u7684\u7d50\u679c\u5224\u5225\u4ee5\u53ca\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002 \u4f46\u662f \u8cc7\u6599\u5c1a\u672a\u770b\u904e \u9019\u500b\u554f\u984c\u8ab0\u4e5f\u7121\u6cd5\u9810\u6e2c\u3002\u6703\u767c\u751f\u9019\u554f\u984c\u7684\u539f\u56e0\u53ef\u80fd\u662f\u8cc7\u6599\u8490\u96c6\u4e0d\u5920\u8c50\u5bcc\uff0c\u4f7f\u5f97\u6a21\u578b\u5b78\u7fd2\u80fd\u529b\u4e0d\u8db3\u3002\u53c8\u6216\u56e0\u70ba\u8cc7\u6599\u7684\u6642\u8b8a\u7279\u6027\u9020\u6210\u8cc7\u6599\u7684\u5206\u4f48\u96c6\u9010\u6f38\u504f\u79fb\uff0c\u5728\u5b78\u8853\u754c\u6211\u5011\u5c07\u9019\u7a2e\u60c5\u6cc1\u7a31\u70ba \u6982\u5ff5\u98c4\u79fb (Concept Drift)\u3002\u70ba\u4e86\u63d0\u9ad8\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb\u76e3\u63a7\u6a5f\u5236\u9069\u7576\u7684\u6aa2\u6e2c\u6a21\u578b\u7684\u9069\u7528\u6027\u3002\u4e26\u900f\u904e XAI \u7684\u6839\u56e0\u5206\u6790\u4f86\u67e5\u770b\u6a21\u578b\u662f\u4e0d\u662f\u8207\u6211\u5011\u9810\u671f\u7684\u7d50\u679c\u4e00\u81f4\u3002 \u5728\u672a\u4f86\uff0cXAI \u7684\u6280\u8853\u4ecd\u6301\u7e8c\u767c\u5c55\uff0c\u76f8\u4fe1\u5c07\u6703\u5e36\u4f86\u66f4\u591a\u7684\u9a5a\u559c\u548c\u5275\u65b0\u3002","title":"Monitoring system(\u76e3\u63a7\u7cfb\u7d71)"},{"location":"30.XAI\u672a\u4f86\u767c\u5c55\u65b9\u5411:\u5411\u66f4\u53ef\u9760\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9081\u9032/#reference","text":"machine learning pipeline \u8cc7\u6599\u7a81\u7136\u7121\u6cd5\u6e96\u78ba\u9810\u6e2c\uff1f\u6dfa\u8ac7\u8cc7\u6599\u98c4\u79fb \u8907\u96dcAI\u6a21\u578b\u4e0b\u7684\u53ef\u89e3\u91cb\u6027","title":"Reference"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/","text":"[Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f LIME \u548c SHAP \u90fd\u662f\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u89e3\u91cb\u6027\u65b9\u6cd5\uff0c\u5b83\u5011\u7684\u5171\u540c\u9ede\u662f\u90fd\u9069\u7528\u65bc\u6a21\u578b\u7121\u95dc\u6027\uff08Model Agnostic\uff09\uff0c\u4e26\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u5982\u679c\u4e0d\u60f3\u6df1\u5165\u6a21\u578b\u5167\u90e8\uff0c\u4f46\u53c8\u60f3\u8981\u80fd\u89e3\u91cb\u6a21\u578b\uff0c\u90a3\u770b\u9019\u7bc7\u6587\u7ae0\u5c31\u5c0d\u4e86\uff01\u7c21\u55ae\u4f86\u8aaa\u4eca\u5929\u4ecb\u7d39\u7684\u89e3\u91cb\u65b9\u6cd5\u4e0d\u63a2\u7a76\u6a21\u578b\u5167\u90e8\u7684\u904b\u4f5c\u539f\u7406\uff0c\u800c\u662f\u5617\u8a66\u5e36\u4e00\u4e9b\u8cc7\u6599\uff0c\u53bb\u89c0\u5bdf\u8f38\u51fa\u7d50\u679c\u3002\u7136\u800c LIME \u8207 SHAP \u5728\u89e3\u91cb\u65b9\u5f0f\u548c\u7bc4\u570d\u4e0a\u6709\u4e00\u4e9b\u5340\u5225\u3002\u5728\u4eca\u5929\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u4e0d\u6703\u6df1\u5165\u63a2\u7a76\u9019\u5169\u500b\u65b9\u6cd5\u7684\u80cc\u5f8c\u8a73\u7d30\u539f\u7406\u3002\u800c\u662f\u900f\u904e\u4e00\u500b\u7c21\u55ae\u5730\u4f8b\u5b50\uff0c\u8b93\u5404\u4f4d\u8b80\u8005\u77e5\u9053\u5169\u7a2e\u65b9\u6cd5\u7684\u5dee\u5225\u8207\u4f7f\u7528\u6642\u6a5f\u3002 LIME LIME\uff08Local Interpretable Model-agnostic Explanations\uff09\u4e3b\u8981\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\uff0c\u5b83\u900f\u904e\u5efa\u7acb\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u4f86\u89e3\u91cb\u67d0\u4e00\u7b46\u8981\u88ab\u9810\u6e2c\u7684\u8cc7\u6599\u3002\u4e26\u63d0\u4f9b\u4e86\u4e00\u500b\u5c40\u90e8\u8fd1\u4f3c\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u8a72\u7279\u5b9a\u8cc7\u6599\u7684\u6a21\u578b\u9810\u6e2c\u3002\u5b83\u7684\u512a\u9ede\u662f\u53ef\u4ee5\u63d0\u4f9b\u91dd\u5c0d\u67d0\u4e00\u7b46\u7279\u5b9a\u8cc7\u6599\u7684\u89e3\u91cb\uff0c\u4e26\u4e14\u53ef\u4ee5\u5c0d\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u3001\u5f71\u50cf\u9032\u884c\u89e3\u91cb\uff0c\u4f46\u7f3a\u9ede\u662f\u89e3\u91cb\u7bc4\u570d\u6709\u9650\uff0c\u50c5\u9650\u65bc\u89c0\u5bdf\u5c40\u90e8\u8da8\u52e2\u3002 LIME \u7684\u5c40\u90e8\u89e3\u91cb\u904e\u7a0b \u4ee5\u8868\u683c\u578b\u8cc7\u6599\u70ba\u4f8b\uff0c\u9996\u5148\u6211\u5011\u4f7f\u7528\u8a13\u7df4\u96c6\u4f86\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b\uff0c\u63a5\u8457\u5c07\u8a13\u7df4\u96c6\u548c\u6b32\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u8f38\u5165\u5230 LIME \u4e2d\u3002\u9019\u6642 LIME \u6a5f\u5236\u5c31\u6703\u555f\u52d5\uff0c\u4e26\u5f9e\u8a13\u7df4\u96c6\u4e2d\u96a8\u6a5f\u63a1\u6a23N\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c \u0177 \u662f\u901a\u904e\u5df2\u8a13\u7df4\u597d\u7684\u8907\u96dc\u6a21\u578b\u8a08\u7b97\u800c\u5f97\u3002\u6b64\u5916\u88ab\u63a1\u6a23\u7684N\u7b46\u8cc7\u6599\u5c07\u8207\u8981\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599\u9032\u884c\u8ddd\u96e2\u8a08\u7b97\u3002\u8ddd\u96e2\u8d8a\u8fd1\u7684\u8cc7\u6599\u9ede\u5c07\u7372\u5f97\u66f4\u9ad8\u7684\u6b0a\u91cd\uff0c\u56e0\u70ba LIME \u8457\u91cd\u65bc\u89e3\u91cb\u76ee\u6a19\u9644\u8fd1\u7684\u8cc7\u6599\u9ede\u3002\u9019\u6a23\u53ef\u4ee5\u78ba\u4fdd\u89e3\u91cb\u6a21\u578b\u66f4\u95dc\u6ce8\u65bc\u8207\u8981\u89e3\u91cb\u7684\u8cc7\u6599\u9ede\u76f8\u4f3c\u7684\u5340\u57df\uff0c\u5f9e\u800c\u63d0\u9ad8\u89e3\u91cb\u7684\u6e96\u78ba\u6027\u548c\u53ef\u89e3\u91cb\u6027\u3002\u57fa\u65bc\u9019\u4e9b\u6b0a\u91cd\uff0cLIME \u5efa\u7acb\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u6216\u5176\u4ed6\u53ef\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u9ed1\u76d2\u6a21\u578b\u5728\u8a72\u8cc7\u6599\u9ede\u4e0a\u7684\u9810\u6e2c\u7d50\u679c\u3002 LIME \u7684\u6838\u5fc3\u6982\u5ff5\u5c31\u662f\u5c07\u300c\u5c40\u90e8\u7684\u65b0\u8cc7\u6599\u300d\u5f15\u5165\uff0c\u52a0\u4e0a\u300c\u53ef\u7406\u89e3\u7684\u64fe\u52d5\u300d\uff0c\u7136\u5f8c\u4f7f\u7528\u9019\u4e9b\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u8f38\u51fa\u3002\u4ee5\u4e0b\u662f LIME \u7684\u89e3\u91cb\u904e\u7a0b: 1. \u4f7f\u7528\u8a13\u7df4\u96c6\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b(black box) 2. \u5c07\u8a13\u7df4\u96c6\u8207\u8981\u88ab\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u9935\u5165LIME - \u91dd\u5c0d\u8a13\u7df4\u96c6\u96a8\u6a5f\u63a1\u6a23 N \u7b46\u6578\u64da - \u63a1\u6a23\u7684\u6bcf\u4e00\u7b46\u8a13\u7df4\u8cc7\u6599\u7684 y \u4e26\u975e\u771f\u5be6\u7b54\u6848\uff0c\u800c\u662f\u900f\u904e\u8907\u96dc\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c \u0177 - \u88ab\u63a1\u6a23 N \u7b46\u8cc7\u6599\u5c07\u8207\u8981\u88ab\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599\u8a08\u7b97\u8ddd\u96e2\uff0c\u8d8a\u8fd1\u7684\u6b0a\u91cd\u8d8a\u5927 - \u5c07\u63a1\u6a23\u7684\u8cc7\u6599\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b(\u7dda\u6027\u8ff4\u6b78) 3. \u900f\u904e\u7c21\u55ae\u6a21\u578b\u4f86\u89e3\u91cb\u8a72\u7b46\u9810\u6e2c\u7d50\u679c \u900f\u904e\u4ee5\u4e0a\u7684\u904e\u7a0b\uff0cLIME \u80fd\u5920\u751f\u6210\u4e00\u500b\u5c40\u90e8\u89e3\u91cb\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u7279\u5b9a\u8cc7\u6599\u9ede\u7684\u9810\u6e2c\u7d50\u679c\u3002\u4e0d\u904e LIME \u5b58\u5728\u4e00\u500b\u7f3a\u9ede\uff0c\u5373\u6bcf\u7576\u8981\u89e3\u91cb\u65b0\u7684\u8cc7\u6599\u9ede\u6642\uff0c\u9700\u8981\u91cd\u65b0\u57f7\u884c\u4e0a\u8ff0\u52d5\u4f5c\u4ee5\u751f\u6210\u4e00\u500b\u65b0\u7684\u7c21\u55ae\u6a21\u578b\u4e26\u9032\u884c\u89e3\u91cb\uff0c\u9019\u53ef\u80fd\u6703\u5e36\u4f86\u4e00\u4e9b\u8a08\u7b97\u548c\u6642\u9593\u4e0a\u7684\u6210\u672c\u3002\u9019\u662f\u56e0\u70ba LIME \u662f\u4e00\u7a2e\u5c40\u90e8\u89e3\u91cb\u65b9\u6cd5\uff0c\u5b83\u5c08\u6ce8\u65bc\u89e3\u91cb\u55ae\u500b\u8cc7\u6599\u9ede\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u6a21\u578b\u7684\u6574\u9ad4\u89e3\u91cb\u3002\u53e6\u5916\u5982\u679c\u8f38\u5165\u548c\u8f38\u51fa\u4e4b\u9593\u5b58\u5728\u8907\u96dc\u7684\u4ea4\u4e92\u95dc\u4fc2\uff0c\u53c8\u6216\u662f\u5c0d\u65bc\u7279\u5fb5\u7684\u4e86\u89e3\u5ea6\u4e0d\u5920\uff0c\u90a3\u9ebc\u900f\u904e\u8cc7\u6599\u89e3\u91cb\u7684\u65b9\u6cd5\u53ef\u80fd\u4e0d\u9069\u7528\u3002 LIME \u61c9\u7528\u4f8b (\u8868\u683c\u8cc7\u6599) \u4e0b\u9762\u9019\u5f35\u5716\u662f\u4e00\u500b\u9810\u6e2c\u96fb\u4fe1\u5ba2\u6236\u6d41\u5931\u7684\u4f8b\u5b50\uff0c\u8a72\u8cc7\u6599\u96c6\u5305\u542b\u4e8619\u500b\u7279\u5fb5\u3002\u5047\u8a2d\u6709\u4e00\u7b46\u65b0\u7684\u5ba2\u6236\u8cc7\u6599\u9032\u4f86\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5df2\u8a13\u7df4\u597d\u7684\u9ed1\u76d2\u6a21\u578b\u9810\u6e2c\u8a72\u5ba2\u6236\u53ef\u80fd\u5373\u5c07\u6d41\u5931\u3002\u81f3\u65bc\u5b83\u662f\u600e\u88ab\u9810\u6e2c\u51fa\u4f86\u6709 63% \u7684\u4fe1\u5fc3\u662f Yes(\u5373\u5c07\u6d41\u5931\u7684\u7528\u6236) \u5462\uff1f\u900f\u904e LIME\uff0c\u6211\u5011\u5efa\u7acb\u4e86\u4e00\u500b\u7dda\u6027\u6a21\u578b\uff0c\u4ee5\u89e3\u91cb\u4e00\u7b46\u9810\u6e2c\u7d50\u679c\u70ba63\uff05\u9078\u64c7\"\u662f\"\u7684\u8cc7\u6599\u3002\u5f9e\u4e0b\u5716\u4e2d\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\u6a58\u8272\u7684\u67f1\u72c0\u5716\u8868\u793a\u67d0\u4e9b\u7279\u5fb5\u5c0d\u65bc\u5ba2\u6236\u6d41\u5931\u7684\u5f71\u97ff\u5448\u6b63\u76f8\u95dc\uff0c\u9019\u4e9b\u7279\u5fb5\u53ef\u4ee5\u88ab\u8996\u70ba\u5f71\u97ff\u6d41\u5931\u6c7a\u7b56\u7684\u95dc\u9375\u56e0\u7d20\u3002\u6211\u5011\u7279\u5225\u6ce8\u610f\u5230\uff0c\u300c\u79df\u7d04\u6642\u9593\u300d\u9019\u4e00\u7279\u5fb5\u5c0d\u65bc\u662f\u5426\u7e8c\u7d04\u662f\u4e00\u500b\u4e3b\u8981\u7684\u5f71\u97ff\u56e0\u7d20\uff0c\u4ee5\u6708\u70ba\u55ae\u4f4d\u7e8c\u7d04\u7684\u5ba2\u6236\u53ef\u80fd\u53ea\u662f\u77ed\u671f\u7684\u4f7f\u7528\u8005\uff0c\u96a8\u6642\u53ef\u80fd\u89e3\u7d04\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u85cd\u8272\u7684\u67f1\u72c0\u5716\u8868\u793a\u5176\u5b83\u5e7e\u500b\u7279\u5fb5\u662f\u5f71\u97ff\u5ba2\u6236\u7e7c\u7e8c\u4f7f\u7528\u8a72\u670d\u52d9\u7684\u95dc\u9375\u56e0\u7d20\u3002 LIME \u5177\u6709\u9748\u6d3b\u6027\u548c\u6613\u89e3\u91cb\u6027\u7684\u512a\u9ede\uff0c\u53ef\u4ee5\u5728\u89e3\u91cb\u9ed1\u76d2\u6a21\u578b\u6642\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u4f46\u5b83\u4ecd\u9762\u81e8\u4e00\u4e9b\u554f\u984c\uff0c\u5982\u9130\u57df\u7684\u5b9a\u7fa9\u554f\u984c\u548c\u63a1\u6a23\u65b9\u6cd5\u7684\u9078\u64c7\u3002\u6b64\u5916\u5ffd\u7565\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u95dc\u6027\u53ef\u80fd\u6703\u5c0e\u81f4\u89e3\u91cb\u7d50\u679c\u7684\u4e0d\u5408\u7406\u6027\u3002\u56e0\u6b64\u900f\u904e LIME \u89e3\u91cb\u6a21\u578b\u6642\u9700\u8981\u4e86\u89e3\u9019\u4e9b\u9650\u5236\uff0c\u4e26\u6ce8\u610f\u5176\u89e3\u91cb\u7684\u7bc4\u570d\u548c\u53ef\u9760\u6027\u3002 SHAP \u76f8\u8f03\u4e4b\u4e0b\uff0cSHAP\uff08SHapley Additive exPlanations\uff09\u4e3b\u8981\u4ee5\u5168\u5c40\u89e3\u91cb\u70ba\u4e3b\uff0c\u540c\u6642\u4e5f\u652f\u63f4\u5c40\u90e8\u89e3\u91cb\u3002\u5b83\u5229\u7528 Shapley Value \u7684\u6982\u5ff5\u4f86\u8a08\u7b97\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u503c\uff0c\u4e26\u7528\u9019\u4e9b\u8ca2\u737b\u503c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u63a8\u8ad6\u904e\u7a0b\u3002SHAP \u4e0d\u50c5\u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u89e3\u91cb\uff0c\u53ef\u4ee5\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u6c7a\u7b56\u65b9\u5f0f\u548c\u7279\u5fb5\u91cd\u8981\u6027\u3002\u5b83\u7684\u512a\u9ede\u662f\u80fd\u5920\u63d0\u4f9b\u5168\u5c40\u8996\u89d2\u7684\u89e3\u91cb\uff0c\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u7684\u6574\u9ad4\u884c\u70ba\uff0c\u4f46\u7f3a\u9ede\u662f\u8a08\u7b97\u6210\u672c\u8f03\u9ad8\uff0c\u7279\u5225\u662f\u5728\u5927\u578b\u8cc7\u6599\u96c6\u548c\u8907\u96dc\u6a21\u578b\u4e0a\u3002\u6b64\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u61c9\u7528\u65bc\u4e0d\u540c\u7684\u6578\u64da\u985e\u578b\uff0c\u5305\u62ec\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u548c\u5f71\u50cf\u3002 SHAP \u5957\u4ef6\u63d0\u4f9b\u4e86\u591a\u7a2e\u8a08\u7b97 Shapley Value \u7684\u65b9\u6cd5\uff1a TreeExplainer TreeExplainer \u662f\u5c08\u70ba\u89e3\u91cb\u6a39\u72c0\u7d50\u69cb\u7684\u6a21\u578b\uff08\u4f8b\u5982\u6c7a\u7b56\u6a39\u3001\u96a8\u6a5f\u68ee\u6797\u548c\u68af\u5ea6\u63d0\u5347\u6a39\uff09\u8a2d\u8a08\u3002\u5b83\u5229\u7528\u6a39\u72c0\u7d50\u69cb\u7684\u7279\u6027\uff0c\u900f\u904e\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u7684 Shapley Value \u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002 DeepExplainer DeepExplainer \u662f SHAP \u5eab\u4e2d\u91dd\u5c0d\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u89e3\u91cb\u5668\u3002\u4e26\u57fa\u65bc DeepLIFT \u5229\u7528\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4e26\u751f\u6210\u76f8\u61c9\u7684 Shapley Value\u3002 GradientExplainer GradientExplainer \u662f\u57fa\u65bc\u6a21\u578b\u7684\u68af\u5ea6\u8a0a\u606f\u9032\u884c\u89e3\u91cb\u3002\u5b83\u4f7f\u7528\u6a21\u578b\u7684\u9810\u6e2c\u6a5f\u7387\u503c\u8207\u8a72\u7279\u5fb5\u7684\u68af\u5ea6\u503c\u4e4b\u9593\u7684\u4e58\u7a4d\u4f5c\u70ba\u8a72\u7279\u5fb5\u7684\u91cd\u8981\u6027\u5f97\u5206\u3002 LinearExplainer LinearExplainer \u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u7dda\u6027\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5b83\u9069\u7528\u65bc\u7dda\u6027\u8ff4\u6b78\u3001\u7dda\u6027\u5206\u985e\u7b49\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u3002 KernelExplainer KernelExplainer \u662f SHAP \u5eab\u4e2d\u7684\u4e00\u7a2e\u901a\u7528\u89e3\u91cb\u5668\uff0c\u53ef\u4ee5\u61c9\u7528\u65bc\u5404\u7a2e\u6a21\u578b\u3002\u5b83\u5229\u7528\u6838\u51fd\u6578\u5c0d\u7279\u5fb5\u7a7a\u9593\u9032\u884c\u91c7\u6a23\uff0c\u4e26\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u5f71\u97ff\u529b\u3002 SHAP \u7684\u5168\u5c40/\u5c40\u90e8\u89e3\u91cb\u904e\u7a0b SHAP \u7684\u5168\u5c40\u89e3\u91cb\u5e6b\u52a9\u6211\u5011\u4e86\u89e3\u6a21\u578b\u6574\u9ad4\u7684\u884c\u70ba\u548c\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u800c\u5c40\u90e8\u89e3\u91cb\u5247\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5728\u7279\u5b9a\u5be6\u4f8b\u4e0a\u7684\u9810\u6e2c\u3002\u4ee5\u4e0b\u70ba SHAP \u7684\u89e3\u91cb\u904e\u7a0b: \u4f7f\u7528\u8a13\u7df4\u96c6\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b(black box) \u6839\u64da\u6a21\u578b\u6f14\u7b97\u6cd5\u7279\u6027\u9078\u64c7\u5408\u9069\u7684 SHAP Explainer \u5c07\u8a13\u7df4\u96c6\u8207\u8981\u88ab\u89e3\u91cb\u7684\u8cc7\u6599(\u53ef\u591a\u7b46)\u9935\u5165 Explainer \u4e26\u8a08\u7b97 SHAP values \u5168\u5c40\u89e3\u91cb\u904e\u7a0b\uff1a \u7522\u751f\u6458\u8981\u5716\u8868(Summary Plot)\uff0c\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u7684 SHAP value \u7d55\u5c0d\u503c\u52a0\u7e3d\u5e73\u5747\u3002 \u5c40\u90e8\u89e3\u91cb\uff1a \u55ae\u7b46\u8cc7\u6599\u89e3\u91cb\uff1a\u6839\u64da\u4e00\u7b46\u8cc7\u6599\uff0cSHAP \u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u8a72\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5e6b\u52a9\u7406\u89e3\u70ba\u4ec0\u9ebc\u6a21\u578b\u5c0d\u65bc\u7279\u5b9a\u4e00\u7b46\u8cc7\u6599\u505a\u51fa\u4e86\u7279\u5b9a\u7684\u9810\u6e2c\u3002 SHAP \u61c9\u7528\u4f8b (\u8868\u683c\u8cc7\u6599) \u6211\u5011\u4e00\u6a23\u62ff\u8868\u683c\u8cc7\u6599\u9032\u884c\u89e3\u91cb\uff0c\u4e26\u8207 LIME \u9032\u884c\u6bd4\u8f03\u3002\u9019\u88e1\u63a1\u7528 Kernel SHAP \u7684\u65b9\u6cd5\u4f86\u4f30\u8a08 Shapley Value\u3002\u5047\u8a2d\u6709\u8f38\u5165\u56db\u500b\u7279\u5fb5\uff0c\u5e74\u9f61\u3001\u6027\u5225\u3001\u8840\u58d3\u3001BMI\u4f5c\u70ba\u8f38\u5165\u8981\u9810\u6e2c\u4e00\u500b\u4eba\u7f79\u764c\u7684\u6a5f\u7387\u3002SHAP \u8981\u505a\u7684\u662f\u5206\u5225\u8a08\u7b97\u6839\u64da Age=65 \u5c0d\u65bc\u8f38\u51fa0.4\u6709\u591a\u5c11\u8ca2\u737b\uff0c\u5c0d\u65bc Sex=F \u5c0d\u65bc\u8f38\u51fa0.4\u6709\u591a\u5c11\u8ca2\u737b\u2026\u3002\u56e0\u6b64\u6703\u6709\u500b\u57fa\u6e96\u9ede base rate \u9019\u88e1\u70ba0.1\uff0c\u8868\u793a\u90fd\u4e0d\u505a\u4efb\u4f55\u4e8b\u5c31\u6703\u6709\u8f38\u51fa0.1\u6a5f\u7387\u6703\u7f79\u764c\u3002\u7576\u770b\u5230\u4e00\u500b\u5e74\u9f61\u7279\u5fb5\u7b49\u65bc65\u5c31\u6703\u52a00.4\uff0c\u770b\u5230\u6027\u5225\u7b49\u65bcF\u5c31\u6703\u6e1b0.3\uff0c\u76f4\u5230\u7d2f\u52a0\u5b8c\u6240\u6709\u7279\u5fb5\u5c31\u662f\u9810\u6e2c\u7e3d\u8f38\u51fay=0.4\u3002\u56e0\u6b64 SHAP \u6a21\u578b\u4e0d\u7ba1\u6a21\u578b\u6f14\u7b97\u6cd5\u505a\u4e86\u4ec0\u9ebc\u4e8b\uff0c\u5b83\u53ea\u7ba1\u8f38\u5165\u7684\u7279\u5fb5\u503c\u5c0d\u65bc\u8f38\u51fa\u7684\u7d50\u679c\u5c31\u53ef\u4ee5\u8a08\u7b97 base rate \u662f\u591a\u5c11\uff0c\u4ee5\u53ca\u6bcf\u4e00\u500b\u7279\u5fb5\u503c\u662f\u591a\u5c11\u5c0d\u65bc\u6700\u7d42\u8f38\u51fa\u5f71\u97ff\u6709\u591a\u5c11\u3002 Kernel SHAP \u7684\u512a\u52e2\u4e4b\u4e00\u662f\u5b83\u53ef\u4ee5\u61c9\u5c0d\u9ad8\u7dad\u5ea6\u7684\u7279\u5fb5\u7a7a\u9593\uff0c\u4e26\u4e14\u8a08\u7b97\u6548\u7387\u8f03\u9ad8\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u9032\u884c\u5927\u91cf\u7684\u8a08\u7b97\u3002\u56e0\u6b64\u5728\u61c9\u7528\u6642\u9700\u8981\u6ce8\u610f\u8a08\u7b97\u6548\u7387\u3001\u6838\u51fd\u6578\u9078\u64c7\u3001\u6a23\u672c\u6578\u91cf\u548c\u9130\u57df\u5b9a\u7fa9\u7b49\u65b9\u9762\u7684\u8003\u616e\u3002\u9069\u7576\u7684\u9078\u64c7\u548c\u8abf\u6574\u9019\u4e9b\u53c3\u6578\u548c\u65b9\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u89e3\u91cb\u7d50\u679c\u7684\u6e96\u78ba\u6027\u548c\u53ef\u9760\u6027\u3002 \u5c0f\u7d50 LIME \u548c SHAP \u90fd\u662f\u91cd\u8981\u7684\u89e3\u91cb\u6027\u6f14\u7b97\u6cd5\uff0c\u5b83\u5011\u5728\u89e3\u91cb\u65b9\u5f0f\u548c\u7bc4\u570d\u4e0a\u6709\u6240\u4e0d\u540c\u3002LIME \u63d0\u4f9b\u4e86\u5c40\u90e8\u89e3\u91cb\uff0c\u4e3b\u8981\u91dd\u5c0d\u7279\u5b9a\u7684\u67d0\u4e00\u7b46\u8cc7\u6599\uff1b\u800cSHAP\u4e3b\u8981\u63d0\u4f9b\u5168\u5c40\u89e3\u91cb\uff0c\u4f46\u4e5f\u652f\u63f4\u5c40\u90e8\u89e3\u91cb\u3002\u9078\u64c7\u54ea\u7a2e\u65b9\u6cd5\u53d6\u6c7a\u65bc\u89e3\u91cb\u7684\u9700\u6c42\u548c\u61c9\u7528\u5834\u666f\u3002\u5982\u679c\u60f3\u53ea\u95dc\u6ce8\u7279\u5b9a\u8cc7\u6599\u7684\u89e3\u91cb\uff0cLIME \u53ef\u80fd\u662f\u4e00\u500b\u4e0d\u932f\u7684\u9078\u64c7\uff1b\u5982\u679c\u9700\u8981\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\u548c\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u5247 SHAP \u6703\u66f4\u9069\u5408\u3002 Reference \u53ef\u89e3\u91cb\u65b9\u6cd5LIME\u548cSHAP\u4ee3\u78bc\u5be6\u6230","title":"[Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#day-4-lime-vs-shapxai","text":"LIME \u548c SHAP \u90fd\u662f\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u89e3\u91cb\u6027\u65b9\u6cd5\uff0c\u5b83\u5011\u7684\u5171\u540c\u9ede\u662f\u90fd\u9069\u7528\u65bc\u6a21\u578b\u7121\u95dc\u6027\uff08Model Agnostic\uff09\uff0c\u4e26\u900f\u904e\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002\u5982\u679c\u4e0d\u60f3\u6df1\u5165\u6a21\u578b\u5167\u90e8\uff0c\u4f46\u53c8\u60f3\u8981\u80fd\u89e3\u91cb\u6a21\u578b\uff0c\u90a3\u770b\u9019\u7bc7\u6587\u7ae0\u5c31\u5c0d\u4e86\uff01\u7c21\u55ae\u4f86\u8aaa\u4eca\u5929\u4ecb\u7d39\u7684\u89e3\u91cb\u65b9\u6cd5\u4e0d\u63a2\u7a76\u6a21\u578b\u5167\u90e8\u7684\u904b\u4f5c\u539f\u7406\uff0c\u800c\u662f\u5617\u8a66\u5e36\u4e00\u4e9b\u8cc7\u6599\uff0c\u53bb\u89c0\u5bdf\u8f38\u51fa\u7d50\u679c\u3002\u7136\u800c LIME \u8207 SHAP \u5728\u89e3\u91cb\u65b9\u5f0f\u548c\u7bc4\u570d\u4e0a\u6709\u4e00\u4e9b\u5340\u5225\u3002\u5728\u4eca\u5929\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u4e0d\u6703\u6df1\u5165\u63a2\u7a76\u9019\u5169\u500b\u65b9\u6cd5\u7684\u80cc\u5f8c\u8a73\u7d30\u539f\u7406\u3002\u800c\u662f\u900f\u904e\u4e00\u500b\u7c21\u55ae\u5730\u4f8b\u5b50\uff0c\u8b93\u5404\u4f4d\u8b80\u8005\u77e5\u9053\u5169\u7a2e\u65b9\u6cd5\u7684\u5dee\u5225\u8207\u4f7f\u7528\u6642\u6a5f\u3002","title":"[Day 4] LIME vs. SHAP\uff1a\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60\uff1f"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#lime","text":"LIME\uff08Local Interpretable Model-agnostic Explanations\uff09\u4e3b\u8981\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\uff0c\u5b83\u900f\u904e\u5efa\u7acb\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u4f86\u89e3\u91cb\u67d0\u4e00\u7b46\u8981\u88ab\u9810\u6e2c\u7684\u8cc7\u6599\u3002\u4e26\u63d0\u4f9b\u4e86\u4e00\u500b\u5c40\u90e8\u8fd1\u4f3c\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u8a72\u7279\u5b9a\u8cc7\u6599\u7684\u6a21\u578b\u9810\u6e2c\u3002\u5b83\u7684\u512a\u9ede\u662f\u53ef\u4ee5\u63d0\u4f9b\u91dd\u5c0d\u67d0\u4e00\u7b46\u7279\u5b9a\u8cc7\u6599\u7684\u89e3\u91cb\uff0c\u4e26\u4e14\u53ef\u4ee5\u5c0d\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u3001\u5f71\u50cf\u9032\u884c\u89e3\u91cb\uff0c\u4f46\u7f3a\u9ede\u662f\u89e3\u91cb\u7bc4\u570d\u6709\u9650\uff0c\u50c5\u9650\u65bc\u89c0\u5bdf\u5c40\u90e8\u8da8\u52e2\u3002","title":"LIME"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#lime_1","text":"\u4ee5\u8868\u683c\u578b\u8cc7\u6599\u70ba\u4f8b\uff0c\u9996\u5148\u6211\u5011\u4f7f\u7528\u8a13\u7df4\u96c6\u4f86\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b\uff0c\u63a5\u8457\u5c07\u8a13\u7df4\u96c6\u548c\u6b32\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u8f38\u5165\u5230 LIME \u4e2d\u3002\u9019\u6642 LIME \u6a5f\u5236\u5c31\u6703\u555f\u52d5\uff0c\u4e26\u5f9e\u8a13\u7df4\u96c6\u4e2d\u96a8\u6a5f\u63a1\u6a23N\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u7684\u9810\u6e2c\u7d50\u679c \u0177 \u662f\u901a\u904e\u5df2\u8a13\u7df4\u597d\u7684\u8907\u96dc\u6a21\u578b\u8a08\u7b97\u800c\u5f97\u3002\u6b64\u5916\u88ab\u63a1\u6a23\u7684N\u7b46\u8cc7\u6599\u5c07\u8207\u8981\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599\u9032\u884c\u8ddd\u96e2\u8a08\u7b97\u3002\u8ddd\u96e2\u8d8a\u8fd1\u7684\u8cc7\u6599\u9ede\u5c07\u7372\u5f97\u66f4\u9ad8\u7684\u6b0a\u91cd\uff0c\u56e0\u70ba LIME \u8457\u91cd\u65bc\u89e3\u91cb\u76ee\u6a19\u9644\u8fd1\u7684\u8cc7\u6599\u9ede\u3002\u9019\u6a23\u53ef\u4ee5\u78ba\u4fdd\u89e3\u91cb\u6a21\u578b\u66f4\u95dc\u6ce8\u65bc\u8207\u8981\u89e3\u91cb\u7684\u8cc7\u6599\u9ede\u76f8\u4f3c\u7684\u5340\u57df\uff0c\u5f9e\u800c\u63d0\u9ad8\u89e3\u91cb\u7684\u6e96\u78ba\u6027\u548c\u53ef\u89e3\u91cb\u6027\u3002\u57fa\u65bc\u9019\u4e9b\u6b0a\u91cd\uff0cLIME \u5efa\u7acb\u4e00\u500b\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u6216\u5176\u4ed6\u53ef\u89e3\u91cb\u7684\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u9ed1\u76d2\u6a21\u578b\u5728\u8a72\u8cc7\u6599\u9ede\u4e0a\u7684\u9810\u6e2c\u7d50\u679c\u3002 LIME \u7684\u6838\u5fc3\u6982\u5ff5\u5c31\u662f\u5c07\u300c\u5c40\u90e8\u7684\u65b0\u8cc7\u6599\u300d\u5f15\u5165\uff0c\u52a0\u4e0a\u300c\u53ef\u7406\u89e3\u7684\u64fe\u52d5\u300d\uff0c\u7136\u5f8c\u4f7f\u7528\u9019\u4e9b\u8cc7\u6599\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u8f38\u51fa\u3002\u4ee5\u4e0b\u662f LIME \u7684\u89e3\u91cb\u904e\u7a0b: 1. \u4f7f\u7528\u8a13\u7df4\u96c6\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b(black box) 2. \u5c07\u8a13\u7df4\u96c6\u8207\u8981\u88ab\u89e3\u91cb\u7684\u4e00\u7b46\u8cc7\u6599\u9935\u5165LIME - \u91dd\u5c0d\u8a13\u7df4\u96c6\u96a8\u6a5f\u63a1\u6a23 N \u7b46\u6578\u64da - \u63a1\u6a23\u7684\u6bcf\u4e00\u7b46\u8a13\u7df4\u8cc7\u6599\u7684 y \u4e26\u975e\u771f\u5be6\u7b54\u6848\uff0c\u800c\u662f\u900f\u904e\u8907\u96dc\u6a21\u578b\u9810\u6e2c\u7684\u7d50\u679c \u0177 - \u88ab\u63a1\u6a23 N \u7b46\u8cc7\u6599\u5c07\u8207\u8981\u88ab\u89e3\u91cb\u7684\u90a3\u7b46\u8cc7\u6599\u8a08\u7b97\u8ddd\u96e2\uff0c\u8d8a\u8fd1\u7684\u6b0a\u91cd\u8d8a\u5927 - \u5c07\u63a1\u6a23\u7684\u8cc7\u6599\u8a13\u7df4\u4e00\u500b\u7c21\u55ae\u6a21\u578b(\u7dda\u6027\u8ff4\u6b78) 3. \u900f\u904e\u7c21\u55ae\u6a21\u578b\u4f86\u89e3\u91cb\u8a72\u7b46\u9810\u6e2c\u7d50\u679c \u900f\u904e\u4ee5\u4e0a\u7684\u904e\u7a0b\uff0cLIME \u80fd\u5920\u751f\u6210\u4e00\u500b\u5c40\u90e8\u89e3\u91cb\u6a21\u578b\uff0c\u7528\u65bc\u89e3\u91cb\u7279\u5b9a\u8cc7\u6599\u9ede\u7684\u9810\u6e2c\u7d50\u679c\u3002\u4e0d\u904e LIME \u5b58\u5728\u4e00\u500b\u7f3a\u9ede\uff0c\u5373\u6bcf\u7576\u8981\u89e3\u91cb\u65b0\u7684\u8cc7\u6599\u9ede\u6642\uff0c\u9700\u8981\u91cd\u65b0\u57f7\u884c\u4e0a\u8ff0\u52d5\u4f5c\u4ee5\u751f\u6210\u4e00\u500b\u65b0\u7684\u7c21\u55ae\u6a21\u578b\u4e26\u9032\u884c\u89e3\u91cb\uff0c\u9019\u53ef\u80fd\u6703\u5e36\u4f86\u4e00\u4e9b\u8a08\u7b97\u548c\u6642\u9593\u4e0a\u7684\u6210\u672c\u3002\u9019\u662f\u56e0\u70ba LIME \u662f\u4e00\u7a2e\u5c40\u90e8\u89e3\u91cb\u65b9\u6cd5\uff0c\u5b83\u5c08\u6ce8\u65bc\u89e3\u91cb\u55ae\u500b\u8cc7\u6599\u9ede\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u6a21\u578b\u7684\u6574\u9ad4\u89e3\u91cb\u3002\u53e6\u5916\u5982\u679c\u8f38\u5165\u548c\u8f38\u51fa\u4e4b\u9593\u5b58\u5728\u8907\u96dc\u7684\u4ea4\u4e92\u95dc\u4fc2\uff0c\u53c8\u6216\u662f\u5c0d\u65bc\u7279\u5fb5\u7684\u4e86\u89e3\u5ea6\u4e0d\u5920\uff0c\u90a3\u9ebc\u900f\u904e\u8cc7\u6599\u89e3\u91cb\u7684\u65b9\u6cd5\u53ef\u80fd\u4e0d\u9069\u7528\u3002","title":"LIME \u7684\u5c40\u90e8\u89e3\u91cb\u904e\u7a0b"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#lime_2","text":"\u4e0b\u9762\u9019\u5f35\u5716\u662f\u4e00\u500b\u9810\u6e2c\u96fb\u4fe1\u5ba2\u6236\u6d41\u5931\u7684\u4f8b\u5b50\uff0c\u8a72\u8cc7\u6599\u96c6\u5305\u542b\u4e8619\u500b\u7279\u5fb5\u3002\u5047\u8a2d\u6709\u4e00\u7b46\u65b0\u7684\u5ba2\u6236\u8cc7\u6599\u9032\u4f86\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u5df2\u8a13\u7df4\u597d\u7684\u9ed1\u76d2\u6a21\u578b\u9810\u6e2c\u8a72\u5ba2\u6236\u53ef\u80fd\u5373\u5c07\u6d41\u5931\u3002\u81f3\u65bc\u5b83\u662f\u600e\u88ab\u9810\u6e2c\u51fa\u4f86\u6709 63% \u7684\u4fe1\u5fc3\u662f Yes(\u5373\u5c07\u6d41\u5931\u7684\u7528\u6236) \u5462\uff1f\u900f\u904e LIME\uff0c\u6211\u5011\u5efa\u7acb\u4e86\u4e00\u500b\u7dda\u6027\u6a21\u578b\uff0c\u4ee5\u89e3\u91cb\u4e00\u7b46\u9810\u6e2c\u7d50\u679c\u70ba63\uff05\u9078\u64c7\"\u662f\"\u7684\u8cc7\u6599\u3002\u5f9e\u4e0b\u5716\u4e2d\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\u6a58\u8272\u7684\u67f1\u72c0\u5716\u8868\u793a\u67d0\u4e9b\u7279\u5fb5\u5c0d\u65bc\u5ba2\u6236\u6d41\u5931\u7684\u5f71\u97ff\u5448\u6b63\u76f8\u95dc\uff0c\u9019\u4e9b\u7279\u5fb5\u53ef\u4ee5\u88ab\u8996\u70ba\u5f71\u97ff\u6d41\u5931\u6c7a\u7b56\u7684\u95dc\u9375\u56e0\u7d20\u3002\u6211\u5011\u7279\u5225\u6ce8\u610f\u5230\uff0c\u300c\u79df\u7d04\u6642\u9593\u300d\u9019\u4e00\u7279\u5fb5\u5c0d\u65bc\u662f\u5426\u7e8c\u7d04\u662f\u4e00\u500b\u4e3b\u8981\u7684\u5f71\u97ff\u56e0\u7d20\uff0c\u4ee5\u6708\u70ba\u55ae\u4f4d\u7e8c\u7d04\u7684\u5ba2\u6236\u53ef\u80fd\u53ea\u662f\u77ed\u671f\u7684\u4f7f\u7528\u8005\uff0c\u96a8\u6642\u53ef\u80fd\u89e3\u7d04\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u85cd\u8272\u7684\u67f1\u72c0\u5716\u8868\u793a\u5176\u5b83\u5e7e\u500b\u7279\u5fb5\u662f\u5f71\u97ff\u5ba2\u6236\u7e7c\u7e8c\u4f7f\u7528\u8a72\u670d\u52d9\u7684\u95dc\u9375\u56e0\u7d20\u3002 LIME \u5177\u6709\u9748\u6d3b\u6027\u548c\u6613\u89e3\u91cb\u6027\u7684\u512a\u9ede\uff0c\u53ef\u4ee5\u5728\u89e3\u91cb\u9ed1\u76d2\u6a21\u578b\u6642\u63d0\u4f9b\u5c40\u90e8\u89e3\u91cb\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u4f46\u5b83\u4ecd\u9762\u81e8\u4e00\u4e9b\u554f\u984c\uff0c\u5982\u9130\u57df\u7684\u5b9a\u7fa9\u554f\u984c\u548c\u63a1\u6a23\u65b9\u6cd5\u7684\u9078\u64c7\u3002\u6b64\u5916\u5ffd\u7565\u7279\u5fb5\u4e4b\u9593\u7684\u76f8\u95dc\u6027\u53ef\u80fd\u6703\u5c0e\u81f4\u89e3\u91cb\u7d50\u679c\u7684\u4e0d\u5408\u7406\u6027\u3002\u56e0\u6b64\u900f\u904e LIME \u89e3\u91cb\u6a21\u578b\u6642\u9700\u8981\u4e86\u89e3\u9019\u4e9b\u9650\u5236\uff0c\u4e26\u6ce8\u610f\u5176\u89e3\u91cb\u7684\u7bc4\u570d\u548c\u53ef\u9760\u6027\u3002","title":"LIME \u61c9\u7528\u4f8b (\u8868\u683c\u8cc7\u6599)"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#shap","text":"\u76f8\u8f03\u4e4b\u4e0b\uff0cSHAP\uff08SHapley Additive exPlanations\uff09\u4e3b\u8981\u4ee5\u5168\u5c40\u89e3\u91cb\u70ba\u4e3b\uff0c\u540c\u6642\u4e5f\u652f\u63f4\u5c40\u90e8\u89e3\u91cb\u3002\u5b83\u5229\u7528 Shapley Value \u7684\u6982\u5ff5\u4f86\u8a08\u7b97\u7279\u5fb5\u5c0d\u65bc\u6a21\u578b\u9810\u6e2c\u7684\u8ca2\u737b\u503c\uff0c\u4e26\u7528\u9019\u4e9b\u8ca2\u737b\u503c\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u63a8\u8ad6\u904e\u7a0b\u3002SHAP \u4e0d\u50c5\u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u89e3\u91cb\uff0c\u53ef\u4ee5\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u6c7a\u7b56\u65b9\u5f0f\u548c\u7279\u5fb5\u91cd\u8981\u6027\u3002\u5b83\u7684\u512a\u9ede\u662f\u80fd\u5920\u63d0\u4f9b\u5168\u5c40\u8996\u89d2\u7684\u89e3\u91cb\uff0c\u6709\u52a9\u65bc\u7406\u89e3\u6a21\u578b\u7684\u6574\u9ad4\u884c\u70ba\uff0c\u4f46\u7f3a\u9ede\u662f\u8a08\u7b97\u6210\u672c\u8f03\u9ad8\uff0c\u7279\u5225\u662f\u5728\u5927\u578b\u8cc7\u6599\u96c6\u548c\u8907\u96dc\u6a21\u578b\u4e0a\u3002\u6b64\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u61c9\u7528\u65bc\u4e0d\u540c\u7684\u6578\u64da\u985e\u578b\uff0c\u5305\u62ec\u6587\u5b57\u3001\u8868\u683c\u8cc7\u6599\u548c\u5f71\u50cf\u3002 SHAP \u5957\u4ef6\u63d0\u4f9b\u4e86\u591a\u7a2e\u8a08\u7b97 Shapley Value \u7684\u65b9\u6cd5\uff1a TreeExplainer TreeExplainer \u662f\u5c08\u70ba\u89e3\u91cb\u6a39\u72c0\u7d50\u69cb\u7684\u6a21\u578b\uff08\u4f8b\u5982\u6c7a\u7b56\u6a39\u3001\u96a8\u6a5f\u68ee\u6797\u548c\u68af\u5ea6\u63d0\u5347\u6a39\uff09\u8a2d\u8a08\u3002\u5b83\u5229\u7528\u6a39\u72c0\u7d50\u69cb\u7684\u7279\u6027\uff0c\u900f\u904e\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u7684 Shapley Value \u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u3002 DeepExplainer DeepExplainer \u662f SHAP \u5eab\u4e2d\u91dd\u5c0d\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u89e3\u91cb\u5668\u3002\u4e26\u57fa\u65bc DeepLIFT \u5229\u7528\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u7684\u53cd\u5411\u50b3\u64ad\u7b97\u6cd5\uff0c\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u8ca2\u737b\uff0c\u4e26\u751f\u6210\u76f8\u61c9\u7684 Shapley Value\u3002 GradientExplainer GradientExplainer \u662f\u57fa\u65bc\u6a21\u578b\u7684\u68af\u5ea6\u8a0a\u606f\u9032\u884c\u89e3\u91cb\u3002\u5b83\u4f7f\u7528\u6a21\u578b\u7684\u9810\u6e2c\u6a5f\u7387\u503c\u8207\u8a72\u7279\u5fb5\u7684\u68af\u5ea6\u503c\u4e4b\u9593\u7684\u4e58\u7a4d\u4f5c\u70ba\u8a72\u7279\u5fb5\u7684\u91cd\u8981\u6027\u5f97\u5206\u3002 LinearExplainer LinearExplainer \u662f\u4e00\u7a2e\u7528\u65bc\u89e3\u91cb\u7dda\u6027\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u5b83\u9069\u7528\u65bc\u7dda\u6027\u8ff4\u6b78\u3001\u7dda\u6027\u5206\u985e\u7b49\u7c21\u55ae\u7684\u7dda\u6027\u6a21\u578b\u3002 KernelExplainer KernelExplainer \u662f SHAP \u5eab\u4e2d\u7684\u4e00\u7a2e\u901a\u7528\u89e3\u91cb\u5668\uff0c\u53ef\u4ee5\u61c9\u7528\u65bc\u5404\u7a2e\u6a21\u578b\u3002\u5b83\u5229\u7528\u6838\u51fd\u6578\u5c0d\u7279\u5fb5\u7a7a\u9593\u9032\u884c\u91c7\u6a23\uff0c\u4e26\u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u65bc\u9810\u6e2c\u7684\u5f71\u97ff\u529b\u3002","title":"SHAP"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#shap_1","text":"SHAP \u7684\u5168\u5c40\u89e3\u91cb\u5e6b\u52a9\u6211\u5011\u4e86\u89e3\u6a21\u578b\u6574\u9ad4\u7684\u884c\u70ba\u548c\u7279\u5fb5\u7684\u91cd\u8981\u6027\uff0c\u800c\u5c40\u90e8\u89e3\u91cb\u5247\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u6a21\u578b\u5728\u7279\u5b9a\u5be6\u4f8b\u4e0a\u7684\u9810\u6e2c\u3002\u4ee5\u4e0b\u70ba SHAP \u7684\u89e3\u91cb\u904e\u7a0b: \u4f7f\u7528\u8a13\u7df4\u96c6\u8a13\u7df4\u4e00\u500b\u8907\u96dc\u6a21\u578b(black box) \u6839\u64da\u6a21\u578b\u6f14\u7b97\u6cd5\u7279\u6027\u9078\u64c7\u5408\u9069\u7684 SHAP Explainer \u5c07\u8a13\u7df4\u96c6\u8207\u8981\u88ab\u89e3\u91cb\u7684\u8cc7\u6599(\u53ef\u591a\u7b46)\u9935\u5165 Explainer \u4e26\u8a08\u7b97 SHAP values \u5168\u5c40\u89e3\u91cb\u904e\u7a0b\uff1a \u7522\u751f\u6458\u8981\u5716\u8868(Summary Plot)\uff0c\u986f\u793a\u6bcf\u500b\u7279\u5fb5\u7684 SHAP value \u7d55\u5c0d\u503c\u52a0\u7e3d\u5e73\u5747\u3002 \u5c40\u90e8\u89e3\u91cb\uff1a \u55ae\u7b46\u8cc7\u6599\u89e3\u91cb\uff1a\u6839\u64da\u4e00\u7b46\u8cc7\u6599\uff0cSHAP \u8a08\u7b97\u6bcf\u500b\u7279\u5fb5\u5c0d\u8a72\u9810\u6e2c\u7684\u5f71\u97ff\u3002\u5e6b\u52a9\u7406\u89e3\u70ba\u4ec0\u9ebc\u6a21\u578b\u5c0d\u65bc\u7279\u5b9a\u4e00\u7b46\u8cc7\u6599\u505a\u51fa\u4e86\u7279\u5b9a\u7684\u9810\u6e2c\u3002","title":"SHAP \u7684\u5168\u5c40/\u5c40\u90e8\u89e3\u91cb\u904e\u7a0b"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#shap_2","text":"\u6211\u5011\u4e00\u6a23\u62ff\u8868\u683c\u8cc7\u6599\u9032\u884c\u89e3\u91cb\uff0c\u4e26\u8207 LIME \u9032\u884c\u6bd4\u8f03\u3002\u9019\u88e1\u63a1\u7528 Kernel SHAP \u7684\u65b9\u6cd5\u4f86\u4f30\u8a08 Shapley Value\u3002\u5047\u8a2d\u6709\u8f38\u5165\u56db\u500b\u7279\u5fb5\uff0c\u5e74\u9f61\u3001\u6027\u5225\u3001\u8840\u58d3\u3001BMI\u4f5c\u70ba\u8f38\u5165\u8981\u9810\u6e2c\u4e00\u500b\u4eba\u7f79\u764c\u7684\u6a5f\u7387\u3002SHAP \u8981\u505a\u7684\u662f\u5206\u5225\u8a08\u7b97\u6839\u64da Age=65 \u5c0d\u65bc\u8f38\u51fa0.4\u6709\u591a\u5c11\u8ca2\u737b\uff0c\u5c0d\u65bc Sex=F \u5c0d\u65bc\u8f38\u51fa0.4\u6709\u591a\u5c11\u8ca2\u737b\u2026\u3002\u56e0\u6b64\u6703\u6709\u500b\u57fa\u6e96\u9ede base rate \u9019\u88e1\u70ba0.1\uff0c\u8868\u793a\u90fd\u4e0d\u505a\u4efb\u4f55\u4e8b\u5c31\u6703\u6709\u8f38\u51fa0.1\u6a5f\u7387\u6703\u7f79\u764c\u3002\u7576\u770b\u5230\u4e00\u500b\u5e74\u9f61\u7279\u5fb5\u7b49\u65bc65\u5c31\u6703\u52a00.4\uff0c\u770b\u5230\u6027\u5225\u7b49\u65bcF\u5c31\u6703\u6e1b0.3\uff0c\u76f4\u5230\u7d2f\u52a0\u5b8c\u6240\u6709\u7279\u5fb5\u5c31\u662f\u9810\u6e2c\u7e3d\u8f38\u51fay=0.4\u3002\u56e0\u6b64 SHAP \u6a21\u578b\u4e0d\u7ba1\u6a21\u578b\u6f14\u7b97\u6cd5\u505a\u4e86\u4ec0\u9ebc\u4e8b\uff0c\u5b83\u53ea\u7ba1\u8f38\u5165\u7684\u7279\u5fb5\u503c\u5c0d\u65bc\u8f38\u51fa\u7684\u7d50\u679c\u5c31\u53ef\u4ee5\u8a08\u7b97 base rate \u662f\u591a\u5c11\uff0c\u4ee5\u53ca\u6bcf\u4e00\u500b\u7279\u5fb5\u503c\u662f\u591a\u5c11\u5c0d\u65bc\u6700\u7d42\u8f38\u51fa\u5f71\u97ff\u6709\u591a\u5c11\u3002 Kernel SHAP \u7684\u512a\u52e2\u4e4b\u4e00\u662f\u5b83\u53ef\u4ee5\u61c9\u5c0d\u9ad8\u7dad\u5ea6\u7684\u7279\u5fb5\u7a7a\u9593\uff0c\u4e26\u4e14\u8a08\u7b97\u6548\u7387\u8f03\u9ad8\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u9032\u884c\u5927\u91cf\u7684\u8a08\u7b97\u3002\u56e0\u6b64\u5728\u61c9\u7528\u6642\u9700\u8981\u6ce8\u610f\u8a08\u7b97\u6548\u7387\u3001\u6838\u51fd\u6578\u9078\u64c7\u3001\u6a23\u672c\u6578\u91cf\u548c\u9130\u57df\u5b9a\u7fa9\u7b49\u65b9\u9762\u7684\u8003\u616e\u3002\u9069\u7576\u7684\u9078\u64c7\u548c\u8abf\u6574\u9019\u4e9b\u53c3\u6578\u548c\u65b9\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u89e3\u91cb\u7d50\u679c\u7684\u6e96\u78ba\u6027\u548c\u53ef\u9760\u6027\u3002","title":"SHAP \u61c9\u7528\u4f8b (\u8868\u683c\u8cc7\u6599)"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#_1","text":"LIME \u548c SHAP \u90fd\u662f\u91cd\u8981\u7684\u89e3\u91cb\u6027\u6f14\u7b97\u6cd5\uff0c\u5b83\u5011\u5728\u89e3\u91cb\u65b9\u5f0f\u548c\u7bc4\u570d\u4e0a\u6709\u6240\u4e0d\u540c\u3002LIME \u63d0\u4f9b\u4e86\u5c40\u90e8\u89e3\u91cb\uff0c\u4e3b\u8981\u91dd\u5c0d\u7279\u5b9a\u7684\u67d0\u4e00\u7b46\u8cc7\u6599\uff1b\u800cSHAP\u4e3b\u8981\u63d0\u4f9b\u5168\u5c40\u89e3\u91cb\uff0c\u4f46\u4e5f\u652f\u63f4\u5c40\u90e8\u89e3\u91cb\u3002\u9078\u64c7\u54ea\u7a2e\u65b9\u6cd5\u53d6\u6c7a\u65bc\u89e3\u91cb\u7684\u9700\u6c42\u548c\u61c9\u7528\u5834\u666f\u3002\u5982\u679c\u60f3\u53ea\u95dc\u6ce8\u7279\u5b9a\u8cc7\u6599\u7684\u89e3\u91cb\uff0cLIME \u53ef\u80fd\u662f\u4e00\u500b\u4e0d\u932f\u7684\u9078\u64c7\uff1b\u5982\u679c\u9700\u8981\u7406\u89e3\u6574\u500b\u6a21\u578b\u7684\u884c\u70ba\u548c\u7279\u5fb5\u7684\u5f71\u97ff\uff0c\u5247 SHAP \u6703\u66f4\u9069\u5408\u3002","title":"\u5c0f\u7d50"},{"location":"4.LIME vs SHAP:\u54ea\u7a2eXAI\u89e3\u91cb\u65b9\u6cd5\u66f4\u9069\u5408\u4f60/#reference","text":"\u53ef\u89e3\u91cb\u65b9\u6cd5LIME\u548cSHAP\u4ee3\u78bc\u5be6\u6230","title":"Reference"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/","text":"[Day 5] \u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225 \u6a5f\u5668\u5b78\u7fd2\u662f\u4e00\u7a2e\u900f\u904e\u5c0d\u5927\u91cf\u6578\u64da\u9032\u884c\u8a13\u7df4\u548c\u4e0d\u65b7\u512a\u5316\u6f14\u7b97\u6cd5\u7684\u65b9\u6cd5\uff0c\u76ee\u7684\u662f\u63d0\u9ad8\u9810\u6e2c\u6e96\u78ba\u6027\u548c\u6c7a\u7b56\u53ef\u9760\u6027\u3002\u900f\u904e\u8655\u7406\u9f90\u5927\u7684\u6578\u64da\u96c6\uff0c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u80fd\u5920\u81ea\u52d5\u5b78\u7fd2\u4e26\u64ec\u5408\u51fa\u6578\u64da\u4e2d\u7684\u6a21\u5f0f\u548c\u95dc\u806f\u3002\u5118\u7ba1\u6a5f\u5668\u5b78\u7fd2\u76f8\u95dc\u7684\u5957\u4ef6\u548c\u6f14\u7b97\u6cd5\u4e0d\u65b7\u5730\u7a81\u7834\uff0c\u4f46\u5728\u61c9\u7528\u958b\u767c\u4e0a\u4ecd\u9762\u81e8\u8af8\u591a\u6709\u5f85\u514b\u670d\u7684\u96e3\u984c\u3002\u6211\u60f3\u9019\u500b\u554f\u984c\u4e5f\u662f\u4f60\u6211\u7684\u75db\u9ede\uff0c\u5c31\u662f\u300cAI \u6a21\u578b\u6f14\u7b97\u6cd5\u9a57\u8b49\u4e0d\u6613\u300d\u6210\u70ba\u767c\u5c55\u74f6\u9838\u3002\u7531\u65bc\u6211\u5011\u7121\u6cd5\u9010\u4e00\u4e14\u660e\u78ba\u5217\u51fa\u6a21\u578b\u80cc\u5f8c\u7684\u63a8\u8ad6\u6cd5\u5247\uff0c\u6240\u4ee5\u53ea\u80fd\u5c07\u5176\u8996\u70ba\u4e00\u500b\u9f90\u5927\u4e14\u8907\u96dc\u7684\u6578\u5b78\u6a21\u578b\u3002\u7576\u6211\u5011\u4f7f\u7528\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u9810\u6e2c\u6642\uff08\u5982\uff1a\u96a8\u6a5f\u68ee\u6797\u3001\u652f\u6301\u5411\u91cf\u6a5f...\u7b49\uff09\uff0c\u901a\u5e38\u53ea\u6703\u5f97\u5230\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u4f46\u662f\u5f88\u96e3\u89e3\u91cb\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u505a\u51fa\u9019\u6a23\u7684\u9810\u6e2c\uff0c\u9019\u5c31\u662f\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u5c40\u9650\u6027\u3002\u6211\u5011\u8a72\u5982\u4f55\u8aaa\u670d\u5ba2\u6236\u8a13\u7df4\u7684\u6a21\u578b\u6e96\u78ba\u7387\u5f88\u597d\uff0c\u4e26\u4e14\u8a72\u5982\u4f55\u8b49\u660e\u5b83\u5462\uff1f\u9019\u4e5f\u5c31\u662f\u6211\u5011\u73fe\u4eca\u6240\u91cd\u8996\u7684 XAI\uff08\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff09\u3002 \u7136\u800c\u81ea2016\u5e74\u8d77\u570b\u9632\u9ad8\u7b49\u7814\u7a76\u8a08\u5283\u7f72\uff08DARPA\uff09\uff0c\u4e5f\u5ba3\u5e03\u5c07 XAI \u5217\u70ba\u63a5\u4e0b\u4f86\u79d1\u6280\u767c\u5c55\u7684\u91cd\u9ede\u3002DARPA \u662f\u7f8e\u570b\u570b\u9632\u90e8\u6240\u5c6c\u7684\u7814\u7a76\u6a5f\u69cb\uff0c\u81f4\u529b\u65bc\u63a8\u52d5\u79d1\u6280\u5275\u65b0\u548c\u767c\u5c55\u524d\u6cbf\u6280\u8853\uff0c\u4ee5\u589e\u5f37\u7f8e\u570b\u570b\u5bb6\u5b89\u5168\u548c\u570b\u9632\u80fd\u529b\u3002\u900f\u904e XAI\uff0cDARPA \u5e0c\u671b\u80fd\u5920\u589e\u52a0\u5c0d AI \u7cfb\u7d71\u7684\u900f\u660e\u5ea6\uff0c\u4f7f\u5176\u80fd\u5920\u66f4\u6709\u6548\u5730\u8207\u4eba\u985e\u5408\u4f5c\uff0c\u63d0\u4f9b\u53ef\u9760\u548c\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u4e26\u964d\u4f4e\u5c0dAI\u7cfb\u7d71\u7684\u4f9d\u8cf4\u5ea6\u3002\u6b64\u5916\u7f8e\u570b\u96fb\u6c23\u548c\u96fb\u5b50\u5de5\u7a0b\u5e2b\u5354\u6703\uff08IEEE\uff09\u4e5f\u57282016\u30012017\u5e74\u5148\u5f8c\u767c\u5e03 AI\u502b\u7406\u8a2d\u8a08\u6e96\u5247 \uff0c\u5f9e\u6280\u8853\u89d2\u5ea6\u8a2d\u7acb AI \u767c\u5c55\u6a19\u6e96\u3002 \u8cc7\u6599\u4f86\u6e90 DARPA's explainable AI (XAI) program: A retrospective \u5ef6\u4f38\u95b1\u8b80\uff1a Making Things Explainable vs Explaining: Requirements and Challenges under the GDPR (arxiv) \u95dc\u65bc\u570b\u969b\u4e0a\u7684 AI \u502b\u7406\u6e96\u5247\uff0c\u5728\u6cd5\u898f\u65b9\u9762\uff0c\u4eba\u5de5\u667a\u6167\u7684\u61c9\u7528\u6709\u5fc5\u8981\u660e\u78ba\u5b9a\u7fa9\u5176\u6c7a\u7b56\u904e\u7a0b\uff0c\u4ee5\u78ba\u4fdd\u5176\u53ef\u4fe1\u5ea6\u548c\u900f\u660e\u5ea6\u3002\u6b50\u76df\u57282018\u5e74\u4fee\u8a02\u7684\u300c\u4e00\u822c\u8cc7\u6599\u4fdd\u8b77\u898f\u7bc4\u300d\uff08GDPR\uff09\u4e2d\uff0c\u63d0\u51fa\u4e86\u300c\u8981\u6c42\u89e3\u91cb\u7684\u6b0a\u529b\u300d\uff0c\u65e8\u5728\u89e3\u6c7a\u65e5\u76ca\u53d7\u5230\u95dc\u6ce8\u7684\u6f14\u7b97\u6cd5\u53ef\u80fd\u5f15\u767c\u7684\u554f\u984c\u3002\u9694\u5e74\u6b50\u76df\u8b70\u6703\u66f4\u9032\u4e00\u6b65\u7684\u767c\u4f48\u300c\u53ef\u4fe1\u8cf4\u4eba\u5de5\u667a\u6167\u502b\u7406\u6e96\u5247\u300d\u78ba\u4fdd\u4eba\u5de5\u667a\u6167\u7684\u767c\u5c55\u548c\u61c9\u7528\u7b26\u5408\u9053\u5fb7\u548c\u502b\u7406\u539f\u5247\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u6b50\u76df\u8b70\u6703\u767c\u5e03\u300a\u53ef\u4fe1\u8cf4\u4eba\u5de5\u667a\u6167\u502b\u7406\u6e96\u5247\u300b \u70ba\u4f55\u9700\u8981\u89e3\u91cb\u6027\uff1f\u56e0\u70ba\u8981\u6539\u5584\u6a21\u578b \u4eba\u5de5\u667a\u6167\u5728\u6211\u5011\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u61c9\u7528\u8d8a\u4f86\u8d8a\u666e\u904d\uff0c\u4ee5\u5354\u52a9\u4eba\u985e\u505a\u51fa\u6c7a\u7b56\u3002\u9019\u4e9b\u6c7a\u7b56\u53ef\u80fd\u6db5\u84cb\u5f9e\u751f\u6d3b\u65b9\u5f0f\u7684\u9078\u64c7\u5230\u66f4\u8907\u96dc\u7684\u6c7a\u7b56\uff0c\u5982\u8a2d\u5099\u6545\u969c\u9810\u6e2c\u3001\u7522\u54c1\u7455\u75b5\u6aa2\u6e2c\u3001\u5546\u696d\u6c7a\u7b56\u3001\u4fe1\u8cb8\u6279\u51c6\u548c\u6cd5\u5ead\u5224\u6c7a\u7b49\u3002\u8a31\u591a\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u662f\u9ed1\u76d2\u5b50\uff0c\u7f3a\u4e4f\u900f\u660e\u5ea6\uff0c\u9019\u5f15\u8d77\u4e86\u4eba\u5011\u5c0d\u5176\u53ef\u4fe1\u5ea6\u7684\u64d4\u6182\u3002\u5c31\u5982\u540c\u4e0b\u5716\u5de6\u908a\u7684\u50b3\u7d71\u6a19\u6e96\u5316\u6a5f\u5668\u5b78\u7fd2\u6d41\u7a0b\uff0c\u900f\u904e\u5927\u6578\u64da\u8207\u6cdb\u5316\u8aa4\u5dee\u6982\u5ff5\u53bb\u64ec\u5408\u4e00\u500b\u6a21\u578b\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6cdb\u5316\u8aa4\u5dee\uff08Generalization error\uff09\u6307\u7684\u662f\u6a21\u578b\u5728\u9762\u5c0d\u65b0\u7684\u3001\u672a\u898b\u904e\u7684\u8cc7\u6599\u6642\u6240\u7522\u751f\u7684\u932f\u8aa4\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u5b83\u662f\u8861\u91cf\u6a21\u578b\u5728\u61c9\u7528\u5230\u65b0\u8cc7\u6599\u6642\u7684\u9810\u6e2c\u80fd\u529b\u6216\u6cdb\u5316\u80fd\u529b\u7684\u4e00\u500b\u6307\u6a19\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u900f\u904e\u6cdb\u5316\u8aa4\u5dee\u7684\u5927\u5c0f\u4f86\u8861\u91cf\u6a21\u578b\u5728\u672a\u66fe\u898b\u904e\u7684\u8cc7\u6599\u4e0a\u7684\u9069\u61c9\u80fd\u529b\uff0c\u9019\u53cd\u6620\u4e86\u6a21\u578b\u5f9e\u8a13\u7df4\u8cc7\u6599\u4e2d\u5b78\u7fd2\u5230\u7684\u77e5\u8b58\u7684\u6709\u6548\u6027\u3002\u5982\u679c\u6cdb\u5316\u8aa4\u5dee\u904e\u9ad8\uff0c\u8868\u793a\u6a21\u578b\u5728\u65b0\u8cc7\u6599\u4e0a\u7684\u9810\u6e2c\u80fd\u529b\u8f03\u5dee\uff0c\u53ef\u80fd\u5b58\u5728\u904e\u64ec\u5408\u6216\u6b20\u64ec\u5408\u7684\u554f\u984c\u3002\u6240\u4ee5\u964d\u4f4e\u6cdb\u5316\u8aa4\u5dee\u662f\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u76ee\u6a19\uff0c\u53ef\u4ee5\u900f\u904e\u8abf\u6574\u6a21\u578b\u7d50\u69cb\u3001\u512a\u5316\u6f14\u7b97\u6cd5\u3001\u589e\u52a0\u8a13\u7df4\u8cc7\u6599\u7b49\u65b9\u5f0f\u4f86\u5be6\u73fe\u3002 \u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6cdb\u5316\u8aa4\u5dee\uff08Generalization error\uff09\u6307\u7684\u662f\u6a21\u578b\u5728\u9762\u5c0d\u65b0\u7684\u3001\u672a\u898b\u904e\u7684\u8cc7\u6599\u6642\u6240\u7522\u751f\u7684\u932f\u8aa4\u3002 \u800c\u5716\u53f3\u662f XAI \u642d\u914d\u6a5f\u5668\u5b78\u7fd2\u7684\u6982\u5ff5\uff0c\u6211\u5011\u53ef\u4ee5\u7d50\u5408\u6cdb\u5316\u8aa4\u5dee\u548c\u4eba\u985e\u7d93\u9a57\u4f86\u9032\u884c\u6a5f\u5668\u5b78\u7fd2\u5efa\u6a21\u3002\u9996\u5148\u6211\u5011\u5229\u7528\u8a13\u7df4\u8cc7\u6599\u4f86\u8a13\u7df4\u6a21\u578b\u4e26\u8a08\u7b97\u5176\u6cdb\u5316\u8aa4\u5dee\uff0c\u9019\u53ef\u4ee5\u544a\u8a34\u6211\u5011\u6a21\u578b\u5728\u672a\u898b\u904e\u7684\u6578\u64da\u4e0a\u7684\u9069\u61c9\u80fd\u529b\u3002\u63a5\u8457\u6211\u5011\u5229\u7528\u4eba\u985e\u7684\u7d93\u9a57\u548c\u9818\u57df\u77e5\u8b58\u4f86\u6aa2\u95b1\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u7d50\u679c\u3002\u9019\u5305\u62ec\u5206\u6790\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3001\u5f71\u97ff\u56e0\u7d20\u548c\u9810\u6e2c\u7d50\u679c\u7684\u89e3\u91cb\uff0c\u5f9e\u4e2d\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u6709\u5b78\u5230\u771f\u5be6\u4e16\u754c\u4e2d\u7684\u672c\u8cea\u3002\u9019\u7a2e\u7d50\u5408\u80fd\u5920\u63d0\u9ad8\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u548c\u53ef\u89e3\u91cb\u6027\uff0c\u4f7f\u6211\u5011\u66f4\u52a0\u4fe1\u4efb\u548c\u4f9d\u8cf4\u65bc\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u7d50\u679c\u3002 \u70ba\u4e86\u5c0d\u9019\u4e9b\u7cfb\u7d71\u7522\u751f\u4fe1\u4efb\uff0c\u4eba\u5011\u5e0c\u671b\u80fd\u5920\u8ffd\u7a76\u8cac\u4efb\u4e26\u7372\u5f97\u89e3\u91cb\u3002\u9019\u9700\u8981\u80fd\u5920\u7406\u89e3\u548c\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u80cc\u5f8c\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4ee5\u78ba\u4fdd\u5176\u53ef\u9760\u6027\u548c\u5408\u7406\u6027\u3002\u56e0\u6b64\u64fa\u812b\u50b3\u7d71\u7684\u6a5f\u5668\u5b78\u7fd2\u601d\u7dad\uff0c\u900f\u904e XAI\uff0c\u6211\u5011\u80fd\u5920\u4e86\u89e3\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u6a21\u578b\u80cc\u5f8c\u7684\u6c7a\u7b56\u539f\u7406\uff0c\u78ba\u4fdd\u6c7a\u7b56\u7684\u516c\u6b63\u6027\u548c\u5408\u7406\u6027\uff0c\u907f\u514d AI \u6a21\u578b\u7684\u4e0d\u78ba\u5b9a\u6027\u9020\u6210\u7121\u53ef\u633d\u56de\u7684\u5931\u63a7\u3002 XAI\u7684\u4e09\u500b\u968e\u6bb5 \u6211\u5011\u53ef\u4ee5\u5c07\u4eba\u5de5\u667a\u6167\u7684\u53ef\u89e3\u91cb\u6027\u5206\u6210\u4e09\u500b\u968e\u6bb5\uff1a\u5efa\u6a21\u524d\u3001\u5efa\u6a21\u904e\u7a0b\u548c\u6a21\u578b\u4e0a\u7dda\u3002 \u5efa\u6a21\u524d \u5728\u5efa\u6a21\u524d\uff0c\u6211\u5011\u8457\u91cd\u65bc\u8cc7\u6599\u7684\u89e3\u91cb\u6027\uff0c\u78ba\u4fdd\u8cc7\u6599\u672c\u8eab\u6e05\u6670\u4e14\u6709\u610f\u7fa9\u3002\u5305\u62ec\u6578\u64da\u7684\u6a19\u8a18\u3001\u907a\u6f0f\u503c\u7684\u8655\u7406\u3001\u7279\u5fb5\u9078\u64c7\u548c\u8f49\u63db\u7b49\u3002 \u5efa\u6a21\u904e\u7a0b \u5728\u5efa\u6a21\u968e\u6bb5\uff0c\u6211\u5011\u5c08\u6ce8\u65bc\u958b\u767c\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u3002\u5305\u62ec\u9078\u64c7\u53ef\u89e3\u91cb\u7684\u6a5f\u5668\u5b78\u7fd2\u7b97\u6cd5\uff0c\u8abf\u6574\u6a21\u578b\u7684\u8d85\u53c3\u6578\uff0c\u4ee5\u53ca\u4f7f\u7528\u89e3\u91cb\u6027\u6280\u8853\uff08\u4f8b\u5982\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790\u548c\u6c7a\u7b56\u898f\u5247\u63d0\u53d6\uff09\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u3002 \u6a21\u578b\u4e0a\u7dda \u78ba\u5b9a\u6700\u7d42\u7684\u6a21\u578b\u5f8c\u5373\u53ef\u90e8\u7f72\u6a21\u578b\u4e26\u65bc\u5be6\u969b\u5834\u57df\u4e2d\u904b\u884c\u3002\u6b64\u968e\u6bb5\u8457\u91cd\u65bc\u89e3\u91cb\u6c7a\u7b56\u548c\u50b3\u905e\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002 \u5404\u884c\u5404\u696d\u90fd\u9700\u8981\u5177\u5099\u53ef\u89e3\u91cb\u6027\u7684AI \u5927\u90e8\u5206\u6a5f\u5668\u5b78\u7fd2\u7cfb\u7d71\u4e3b\u8981\u96c6\u4e2d\u5728\u50cf\u662f Google \u548c Meta \u9019\u985e\u578b\u7684\u79d1\u6280\u516c\u53f8\uff0c\u9019\u4e9b\u7cfb\u7d71\u7684\u932f\u8aa4\u9810\u6e2c\u53ef\u80fd\u6703\u5c0e\u81f4\u5c0d\u7528\u6236\u7684\u932f\u8aa4\u8a0a\u606f\u3002\u7136\u800c\u8fd1\u5e74\u4f86 AI \u6709\u8de8\u8db3\u4e0d\u540c\u9818\u57df\u7684\u8da8\u52e2\uff0c\u7576\u9019\u4e9b\u7cfb\u7d71\u61c9\u7528\u65bc\u5176\u4ed6\u884c\u696d\uff0c\u5982\u91ab\u7642\u3001\u8ecd\u4e8b\u548c\u91d1\u878d...\u7b49\u3002\u932f\u8aa4\u7684\u9810\u6e2c\u5c31\u53ef\u80fd\u7522\u751f\u8ca0\u9762\u5f8c\u679c\uff0c\u751a\u81f3\u5f71\u97ff\u5230\u8a31\u591a\u4eba\u7684\u751f\u6d3b\u3002\u56e0\u6b64\u6211\u5011\u9700\u8981\u5efa\u7acb\u80fd\u5920\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b\u7684\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u3002\u9019\u6a23\u7684\u7cfb\u7d71\u53ef\u4ee5\u63d0\u4f9b\u900f\u660e\u7684\u6c7a\u7b56\u89e3\u91cb\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u7406\u89e3\u5b83\u5011\u7684\u6c7a\u7b56\u57fa\u790e\uff0c\u78ba\u4fdd\u5176\u5408\u7406\u6027\u4e26\u6e1b\u5c11\u6f5b\u5728\u7684\u98a8\u96aa\u3002\u900f\u904e\u9019\u6a23\u7684\u89e3\u91cb\u6027\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u61c9\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5728\u5404\u500b\u9818\u57df\u4e2d\u53ef\u80fd\u5e36\u4f86\u7684\u6311\u6230\uff0c\u78ba\u4fdd\u5176\u61c9\u7528\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u3002 Reference DARPA Explainable Artificial Intelligence by David Gunning DARPA XAIforNASA by David Gunning Explainable AI by Mitosis Business Enablers wikipedia \u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167","title":"[Day 5] \u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/#day-5-xai","text":"\u6a5f\u5668\u5b78\u7fd2\u662f\u4e00\u7a2e\u900f\u904e\u5c0d\u5927\u91cf\u6578\u64da\u9032\u884c\u8a13\u7df4\u548c\u4e0d\u65b7\u512a\u5316\u6f14\u7b97\u6cd5\u7684\u65b9\u6cd5\uff0c\u76ee\u7684\u662f\u63d0\u9ad8\u9810\u6e2c\u6e96\u78ba\u6027\u548c\u6c7a\u7b56\u53ef\u9760\u6027\u3002\u900f\u904e\u8655\u7406\u9f90\u5927\u7684\u6578\u64da\u96c6\uff0c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u80fd\u5920\u81ea\u52d5\u5b78\u7fd2\u4e26\u64ec\u5408\u51fa\u6578\u64da\u4e2d\u7684\u6a21\u5f0f\u548c\u95dc\u806f\u3002\u5118\u7ba1\u6a5f\u5668\u5b78\u7fd2\u76f8\u95dc\u7684\u5957\u4ef6\u548c\u6f14\u7b97\u6cd5\u4e0d\u65b7\u5730\u7a81\u7834\uff0c\u4f46\u5728\u61c9\u7528\u958b\u767c\u4e0a\u4ecd\u9762\u81e8\u8af8\u591a\u6709\u5f85\u514b\u670d\u7684\u96e3\u984c\u3002\u6211\u60f3\u9019\u500b\u554f\u984c\u4e5f\u662f\u4f60\u6211\u7684\u75db\u9ede\uff0c\u5c31\u662f\u300cAI \u6a21\u578b\u6f14\u7b97\u6cd5\u9a57\u8b49\u4e0d\u6613\u300d\u6210\u70ba\u767c\u5c55\u74f6\u9838\u3002\u7531\u65bc\u6211\u5011\u7121\u6cd5\u9010\u4e00\u4e14\u660e\u78ba\u5217\u51fa\u6a21\u578b\u80cc\u5f8c\u7684\u63a8\u8ad6\u6cd5\u5247\uff0c\u6240\u4ee5\u53ea\u80fd\u5c07\u5176\u8996\u70ba\u4e00\u500b\u9f90\u5927\u4e14\u8907\u96dc\u7684\u6578\u5b78\u6a21\u578b\u3002\u7576\u6211\u5011\u4f7f\u7528\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u9032\u884c\u9810\u6e2c\u6642\uff08\u5982\uff1a\u96a8\u6a5f\u68ee\u6797\u3001\u652f\u6301\u5411\u91cf\u6a5f...\u7b49\uff09\uff0c\u901a\u5e38\u53ea\u6703\u5f97\u5230\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u4f46\u662f\u5f88\u96e3\u89e3\u91cb\u70ba\u4ec0\u9ebc\u6a21\u578b\u6703\u505a\u51fa\u9019\u6a23\u7684\u9810\u6e2c\uff0c\u9019\u5c31\u662f\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u5c40\u9650\u6027\u3002\u6211\u5011\u8a72\u5982\u4f55\u8aaa\u670d\u5ba2\u6236\u8a13\u7df4\u7684\u6a21\u578b\u6e96\u78ba\u7387\u5f88\u597d\uff0c\u4e26\u4e14\u8a72\u5982\u4f55\u8b49\u660e\u5b83\u5462\uff1f\u9019\u4e5f\u5c31\u662f\u6211\u5011\u73fe\u4eca\u6240\u91cd\u8996\u7684 XAI\uff08\u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167\uff09\u3002 \u7136\u800c\u81ea2016\u5e74\u8d77\u570b\u9632\u9ad8\u7b49\u7814\u7a76\u8a08\u5283\u7f72\uff08DARPA\uff09\uff0c\u4e5f\u5ba3\u5e03\u5c07 XAI \u5217\u70ba\u63a5\u4e0b\u4f86\u79d1\u6280\u767c\u5c55\u7684\u91cd\u9ede\u3002DARPA \u662f\u7f8e\u570b\u570b\u9632\u90e8\u6240\u5c6c\u7684\u7814\u7a76\u6a5f\u69cb\uff0c\u81f4\u529b\u65bc\u63a8\u52d5\u79d1\u6280\u5275\u65b0\u548c\u767c\u5c55\u524d\u6cbf\u6280\u8853\uff0c\u4ee5\u589e\u5f37\u7f8e\u570b\u570b\u5bb6\u5b89\u5168\u548c\u570b\u9632\u80fd\u529b\u3002\u900f\u904e XAI\uff0cDARPA \u5e0c\u671b\u80fd\u5920\u589e\u52a0\u5c0d AI \u7cfb\u7d71\u7684\u900f\u660e\u5ea6\uff0c\u4f7f\u5176\u80fd\u5920\u66f4\u6709\u6548\u5730\u8207\u4eba\u985e\u5408\u4f5c\uff0c\u63d0\u4f9b\u53ef\u9760\u548c\u89e3\u91cb\u7684\u7d50\u679c\uff0c\u4e26\u964d\u4f4e\u5c0dAI\u7cfb\u7d71\u7684\u4f9d\u8cf4\u5ea6\u3002\u6b64\u5916\u7f8e\u570b\u96fb\u6c23\u548c\u96fb\u5b50\u5de5\u7a0b\u5e2b\u5354\u6703\uff08IEEE\uff09\u4e5f\u57282016\u30012017\u5e74\u5148\u5f8c\u767c\u5e03 AI\u502b\u7406\u8a2d\u8a08\u6e96\u5247 \uff0c\u5f9e\u6280\u8853\u89d2\u5ea6\u8a2d\u7acb AI \u767c\u5c55\u6a19\u6e96\u3002 \u8cc7\u6599\u4f86\u6e90 DARPA's explainable AI (XAI) program: A retrospective \u5ef6\u4f38\u95b1\u8b80\uff1a Making Things Explainable vs Explaining: Requirements and Challenges under the GDPR (arxiv) \u95dc\u65bc\u570b\u969b\u4e0a\u7684 AI \u502b\u7406\u6e96\u5247\uff0c\u5728\u6cd5\u898f\u65b9\u9762\uff0c\u4eba\u5de5\u667a\u6167\u7684\u61c9\u7528\u6709\u5fc5\u8981\u660e\u78ba\u5b9a\u7fa9\u5176\u6c7a\u7b56\u904e\u7a0b\uff0c\u4ee5\u78ba\u4fdd\u5176\u53ef\u4fe1\u5ea6\u548c\u900f\u660e\u5ea6\u3002\u6b50\u76df\u57282018\u5e74\u4fee\u8a02\u7684\u300c\u4e00\u822c\u8cc7\u6599\u4fdd\u8b77\u898f\u7bc4\u300d\uff08GDPR\uff09\u4e2d\uff0c\u63d0\u51fa\u4e86\u300c\u8981\u6c42\u89e3\u91cb\u7684\u6b0a\u529b\u300d\uff0c\u65e8\u5728\u89e3\u6c7a\u65e5\u76ca\u53d7\u5230\u95dc\u6ce8\u7684\u6f14\u7b97\u6cd5\u53ef\u80fd\u5f15\u767c\u7684\u554f\u984c\u3002\u9694\u5e74\u6b50\u76df\u8b70\u6703\u66f4\u9032\u4e00\u6b65\u7684\u767c\u4f48\u300c\u53ef\u4fe1\u8cf4\u4eba\u5de5\u667a\u6167\u502b\u7406\u6e96\u5247\u300d\u78ba\u4fdd\u4eba\u5de5\u667a\u6167\u7684\u767c\u5c55\u548c\u61c9\u7528\u7b26\u5408\u9053\u5fb7\u548c\u502b\u7406\u539f\u5247\u3002 \u5ef6\u4f38\u95b1\u8b80\uff1a \u6b50\u76df\u8b70\u6703\u767c\u5e03\u300a\u53ef\u4fe1\u8cf4\u4eba\u5de5\u667a\u6167\u502b\u7406\u6e96\u5247\u300b","title":"[Day 5] \u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/#_1","text":"\u4eba\u5de5\u667a\u6167\u5728\u6211\u5011\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u61c9\u7528\u8d8a\u4f86\u8d8a\u666e\u904d\uff0c\u4ee5\u5354\u52a9\u4eba\u985e\u505a\u51fa\u6c7a\u7b56\u3002\u9019\u4e9b\u6c7a\u7b56\u53ef\u80fd\u6db5\u84cb\u5f9e\u751f\u6d3b\u65b9\u5f0f\u7684\u9078\u64c7\u5230\u66f4\u8907\u96dc\u7684\u6c7a\u7b56\uff0c\u5982\u8a2d\u5099\u6545\u969c\u9810\u6e2c\u3001\u7522\u54c1\u7455\u75b5\u6aa2\u6e2c\u3001\u5546\u696d\u6c7a\u7b56\u3001\u4fe1\u8cb8\u6279\u51c6\u548c\u6cd5\u5ead\u5224\u6c7a\u7b49\u3002\u8a31\u591a\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u662f\u9ed1\u76d2\u5b50\uff0c\u7f3a\u4e4f\u900f\u660e\u5ea6\uff0c\u9019\u5f15\u8d77\u4e86\u4eba\u5011\u5c0d\u5176\u53ef\u4fe1\u5ea6\u7684\u64d4\u6182\u3002\u5c31\u5982\u540c\u4e0b\u5716\u5de6\u908a\u7684\u50b3\u7d71\u6a19\u6e96\u5316\u6a5f\u5668\u5b78\u7fd2\u6d41\u7a0b\uff0c\u900f\u904e\u5927\u6578\u64da\u8207\u6cdb\u5316\u8aa4\u5dee\u6982\u5ff5\u53bb\u64ec\u5408\u4e00\u500b\u6a21\u578b\u3002\u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6cdb\u5316\u8aa4\u5dee\uff08Generalization error\uff09\u6307\u7684\u662f\u6a21\u578b\u5728\u9762\u5c0d\u65b0\u7684\u3001\u672a\u898b\u904e\u7684\u8cc7\u6599\u6642\u6240\u7522\u751f\u7684\u932f\u8aa4\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u5b83\u662f\u8861\u91cf\u6a21\u578b\u5728\u61c9\u7528\u5230\u65b0\u8cc7\u6599\u6642\u7684\u9810\u6e2c\u80fd\u529b\u6216\u6cdb\u5316\u80fd\u529b\u7684\u4e00\u500b\u6307\u6a19\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u900f\u904e\u6cdb\u5316\u8aa4\u5dee\u7684\u5927\u5c0f\u4f86\u8861\u91cf\u6a21\u578b\u5728\u672a\u66fe\u898b\u904e\u7684\u8cc7\u6599\u4e0a\u7684\u9069\u61c9\u80fd\u529b\uff0c\u9019\u53cd\u6620\u4e86\u6a21\u578b\u5f9e\u8a13\u7df4\u8cc7\u6599\u4e2d\u5b78\u7fd2\u5230\u7684\u77e5\u8b58\u7684\u6709\u6548\u6027\u3002\u5982\u679c\u6cdb\u5316\u8aa4\u5dee\u904e\u9ad8\uff0c\u8868\u793a\u6a21\u578b\u5728\u65b0\u8cc7\u6599\u4e0a\u7684\u9810\u6e2c\u80fd\u529b\u8f03\u5dee\uff0c\u53ef\u80fd\u5b58\u5728\u904e\u64ec\u5408\u6216\u6b20\u64ec\u5408\u7684\u554f\u984c\u3002\u6240\u4ee5\u964d\u4f4e\u6cdb\u5316\u8aa4\u5dee\u662f\u6a5f\u5668\u5b78\u7fd2\u4e2d\u7684\u4e00\u500b\u91cd\u8981\u76ee\u6a19\uff0c\u53ef\u4ee5\u900f\u904e\u8abf\u6574\u6a21\u578b\u7d50\u69cb\u3001\u512a\u5316\u6f14\u7b97\u6cd5\u3001\u589e\u52a0\u8a13\u7df4\u8cc7\u6599\u7b49\u65b9\u5f0f\u4f86\u5be6\u73fe\u3002 \u5728\u6a5f\u5668\u5b78\u7fd2\u4e2d\uff0c\u6cdb\u5316\u8aa4\u5dee\uff08Generalization error\uff09\u6307\u7684\u662f\u6a21\u578b\u5728\u9762\u5c0d\u65b0\u7684\u3001\u672a\u898b\u904e\u7684\u8cc7\u6599\u6642\u6240\u7522\u751f\u7684\u932f\u8aa4\u3002 \u800c\u5716\u53f3\u662f XAI \u642d\u914d\u6a5f\u5668\u5b78\u7fd2\u7684\u6982\u5ff5\uff0c\u6211\u5011\u53ef\u4ee5\u7d50\u5408\u6cdb\u5316\u8aa4\u5dee\u548c\u4eba\u985e\u7d93\u9a57\u4f86\u9032\u884c\u6a5f\u5668\u5b78\u7fd2\u5efa\u6a21\u3002\u9996\u5148\u6211\u5011\u5229\u7528\u8a13\u7df4\u8cc7\u6599\u4f86\u8a13\u7df4\u6a21\u578b\u4e26\u8a08\u7b97\u5176\u6cdb\u5316\u8aa4\u5dee\uff0c\u9019\u53ef\u4ee5\u544a\u8a34\u6211\u5011\u6a21\u578b\u5728\u672a\u898b\u904e\u7684\u6578\u64da\u4e0a\u7684\u9069\u61c9\u80fd\u529b\u3002\u63a5\u8457\u6211\u5011\u5229\u7528\u4eba\u985e\u7684\u7d93\u9a57\u548c\u9818\u57df\u77e5\u8b58\u4f86\u6aa2\u95b1\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b\u548c\u7d50\u679c\u3002\u9019\u5305\u62ec\u5206\u6790\u6a21\u578b\u7684\u7279\u5fb5\u91cd\u8981\u6027\u3001\u5f71\u97ff\u56e0\u7d20\u548c\u9810\u6e2c\u7d50\u679c\u7684\u89e3\u91cb\uff0c\u5f9e\u4e2d\u89c0\u5bdf\u6a21\u578b\u662f\u5426\u6709\u5b78\u5230\u771f\u5be6\u4e16\u754c\u4e2d\u7684\u672c\u8cea\u3002\u9019\u7a2e\u7d50\u5408\u80fd\u5920\u63d0\u9ad8\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u548c\u53ef\u89e3\u91cb\u6027\uff0c\u4f7f\u6211\u5011\u66f4\u52a0\u4fe1\u4efb\u548c\u4f9d\u8cf4\u65bc\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u7d50\u679c\u3002 \u70ba\u4e86\u5c0d\u9019\u4e9b\u7cfb\u7d71\u7522\u751f\u4fe1\u4efb\uff0c\u4eba\u5011\u5e0c\u671b\u80fd\u5920\u8ffd\u7a76\u8cac\u4efb\u4e26\u7372\u5f97\u89e3\u91cb\u3002\u9019\u9700\u8981\u80fd\u5920\u7406\u89e3\u548c\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u80cc\u5f8c\u7684\u6c7a\u7b56\u904e\u7a0b\uff0c\u4ee5\u78ba\u4fdd\u5176\u53ef\u9760\u6027\u548c\u5408\u7406\u6027\u3002\u56e0\u6b64\u64fa\u812b\u50b3\u7d71\u7684\u6a5f\u5668\u5b78\u7fd2\u601d\u7dad\uff0c\u900f\u904e XAI\uff0c\u6211\u5011\u80fd\u5920\u4e86\u89e3\u89e3\u91cb\u4eba\u5de5\u667a\u6167\u6a21\u578b\u80cc\u5f8c\u7684\u6c7a\u7b56\u539f\u7406\uff0c\u78ba\u4fdd\u6c7a\u7b56\u7684\u516c\u6b63\u6027\u548c\u5408\u7406\u6027\uff0c\u907f\u514d AI \u6a21\u578b\u7684\u4e0d\u78ba\u5b9a\u6027\u9020\u6210\u7121\u53ef\u633d\u56de\u7684\u5931\u63a7\u3002","title":"\u70ba\u4f55\u9700\u8981\u89e3\u91cb\u6027\uff1f\u56e0\u70ba\u8981\u6539\u5584\u6a21\u578b"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/#xai","text":"\u6211\u5011\u53ef\u4ee5\u5c07\u4eba\u5de5\u667a\u6167\u7684\u53ef\u89e3\u91cb\u6027\u5206\u6210\u4e09\u500b\u968e\u6bb5\uff1a\u5efa\u6a21\u524d\u3001\u5efa\u6a21\u904e\u7a0b\u548c\u6a21\u578b\u4e0a\u7dda\u3002 \u5efa\u6a21\u524d \u5728\u5efa\u6a21\u524d\uff0c\u6211\u5011\u8457\u91cd\u65bc\u8cc7\u6599\u7684\u89e3\u91cb\u6027\uff0c\u78ba\u4fdd\u8cc7\u6599\u672c\u8eab\u6e05\u6670\u4e14\u6709\u610f\u7fa9\u3002\u5305\u62ec\u6578\u64da\u7684\u6a19\u8a18\u3001\u907a\u6f0f\u503c\u7684\u8655\u7406\u3001\u7279\u5fb5\u9078\u64c7\u548c\u8f49\u63db\u7b49\u3002 \u5efa\u6a21\u904e\u7a0b \u5728\u5efa\u6a21\u968e\u6bb5\uff0c\u6211\u5011\u5c08\u6ce8\u65bc\u958b\u767c\u53ef\u89e3\u91cb\u7684\u6a21\u578b\u3002\u5305\u62ec\u9078\u64c7\u53ef\u89e3\u91cb\u7684\u6a5f\u5668\u5b78\u7fd2\u7b97\u6cd5\uff0c\u8abf\u6574\u6a21\u578b\u7684\u8d85\u53c3\u6578\uff0c\u4ee5\u53ca\u4f7f\u7528\u89e3\u91cb\u6027\u6280\u8853\uff08\u4f8b\u5982\u7279\u5fb5\u91cd\u8981\u6027\u5206\u6790\u548c\u6c7a\u7b56\u898f\u5247\u63d0\u53d6\uff09\u4f86\u89e3\u91cb\u6a21\u578b\u7684\u9810\u6e2c\u80fd\u529b\u3002 \u6a21\u578b\u4e0a\u7dda \u78ba\u5b9a\u6700\u7d42\u7684\u6a21\u578b\u5f8c\u5373\u53ef\u90e8\u7f72\u6a21\u578b\u4e26\u65bc\u5be6\u969b\u5834\u57df\u4e2d\u904b\u884c\u3002\u6b64\u968e\u6bb5\u8457\u91cd\u65bc\u89e3\u91cb\u6c7a\u7b56\u548c\u50b3\u905e\u6a21\u578b\u7684\u9810\u6e2c\u7d50\u679c\u3002","title":"XAI\u7684\u4e09\u500b\u968e\u6bb5"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/#ai","text":"\u5927\u90e8\u5206\u6a5f\u5668\u5b78\u7fd2\u7cfb\u7d71\u4e3b\u8981\u96c6\u4e2d\u5728\u50cf\u662f Google \u548c Meta \u9019\u985e\u578b\u7684\u79d1\u6280\u516c\u53f8\uff0c\u9019\u4e9b\u7cfb\u7d71\u7684\u932f\u8aa4\u9810\u6e2c\u53ef\u80fd\u6703\u5c0e\u81f4\u5c0d\u7528\u6236\u7684\u932f\u8aa4\u8a0a\u606f\u3002\u7136\u800c\u8fd1\u5e74\u4f86 AI \u6709\u8de8\u8db3\u4e0d\u540c\u9818\u57df\u7684\u8da8\u52e2\uff0c\u7576\u9019\u4e9b\u7cfb\u7d71\u61c9\u7528\u65bc\u5176\u4ed6\u884c\u696d\uff0c\u5982\u91ab\u7642\u3001\u8ecd\u4e8b\u548c\u91d1\u878d...\u7b49\u3002\u932f\u8aa4\u7684\u9810\u6e2c\u5c31\u53ef\u80fd\u7522\u751f\u8ca0\u9762\u5f8c\u679c\uff0c\u751a\u81f3\u5f71\u97ff\u5230\u8a31\u591a\u4eba\u7684\u751f\u6d3b\u3002\u56e0\u6b64\u6211\u5011\u9700\u8981\u5efa\u7acb\u80fd\u5920\u89e3\u91cb\u5176\u6c7a\u7b56\u904e\u7a0b\u7684\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\u3002\u9019\u6a23\u7684\u7cfb\u7d71\u53ef\u4ee5\u63d0\u4f9b\u900f\u660e\u7684\u6c7a\u7b56\u89e3\u91cb\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u7406\u89e3\u5b83\u5011\u7684\u6c7a\u7b56\u57fa\u790e\uff0c\u78ba\u4fdd\u5176\u5408\u7406\u6027\u4e26\u6e1b\u5c11\u6f5b\u5728\u7684\u98a8\u96aa\u3002\u900f\u904e\u9019\u6a23\u7684\u89e3\u91cb\u6027\u4eba\u5de5\u667a\u6167\u7cfb\u7d71\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u597d\u5730\u61c9\u5c0d\u6a5f\u5668\u5b78\u7fd2\u5728\u5404\u500b\u9818\u57df\u4e2d\u53ef\u80fd\u5e36\u4f86\u7684\u6311\u6230\uff0c\u78ba\u4fdd\u5176\u61c9\u7528\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u3002","title":"\u5404\u884c\u5404\u696d\u90fd\u9700\u8981\u5177\u5099\u53ef\u89e3\u91cb\u6027\u7684AI"},{"location":"5.\u6dfa\u8ac7XAI\u8207\u50b3\u7d71\u6a5f\u5668\u5b78\u7fd2\u7684\u5340\u5225/#reference","text":"DARPA Explainable Artificial Intelligence by David Gunning DARPA XAIforNASA by David Gunning Explainable AI by Mitosis Business Enablers wikipedia \u53ef\u89e3\u91cb\u4eba\u5de5\u667a\u6167","title":"Reference"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/","text":"[Day 6] \u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027\uff1f\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u7531\u65bc\u975e\u76e3\u7763\u5b78\u7fd2\u6a21\u578b\u901a\u5e38\u6c92\u6709\u50cf\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u6a19\u7c64\u53ef\u4f7f\u7528\uff0c\u56e0\u6b64\u975e\u76e3\u7763\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u901a\u5e38\u662f\u900f\u904e\u8cc7\u6599\u8996\u89ba\u5316\u548c\u6578\u64da\u5206\u6790\u4f86\u5be6\u73fe\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u53ef\u89e3\u91cb\u6027\u7684\u4e00\u4e9b\u4f8b\u5b50\uff1a \u964d\u7dad\u5206\u6790\uff1a\u5c07\u964d\u7dad\u5f8c\u7684\u6578\u64da\u6295\u5f71\u56de\u539f\u59cb\u7a7a\u9593\u4e26\u8996\u89ba\u5316\uff0c\u5f9e\u4e2d\u7406\u89e3\u539f\u59cb\u8cc7\u6599\u7684\u91cd\u8981\u7279\u5fb5\u548c\u95dc\u4fc2\u3002 \u4e3b\u6210\u5206\u5206\u6790(PCA)\uff1a\u89e3\u91cb\u4e3b\u6210\u5206\u5206\u6790\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u7279\u5fb5\u548c\u5c0d\u539f\u59cb\u8cc7\u6599\u7684\u8ca2\u737b\uff0c\u7406\u89e3\u8cc7\u6599\u7684\u964d\u7dad\u548c\u7d50\u69cb\u5316\u904e\u7a0b\u3002 t-\u96a8\u6a5f\u9130\u8fd1\u5d4c\u5165\u6cd5(t-SNE)\uff1a\u900f\u904e\u5c07\u9ad8\u7dad\u7a7a\u9593\u4e2d\u7684\u8cc7\u6599\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\uff0c\u4e26\u4e14\u4fdd\u7559\u539f\u59cb\u8cc7\u6599\u7684\u5c40\u90e8\u7d50\u69cb\uff0c\u8b93\u6211\u5011\u80fd\u5920\u8996\u89ba\u5316\u9ad8\u7dad\u8cc7\u6599\uff0c\u5f9e\u800c\u9032\u884c\u63a2\u7d22\u6027\u5206\u6790\u3002 \u805a\u985e\u5206\u6790\uff1a\u900f\u904e\u89e3\u91cb\u805a\u985e\u7d50\u679c\uff0c\u63a2\u7d22\u8cc7\u6599\u7684\u5167\u5728\u5206\u5e03\u548c\u6f5b\u5728\u7279\u5fb5\u3002 \u964d\u7dad \u964d\u7dad\u6280\u8853\u662f\u4e00\u7a2e\u6578\u64da\u58d3\u7e2e\u6280\u8853\uff0c\u53ef\u5c07\u9ad8\u7dad\u5ea6\u7684\u6578\u64da\u8f49\u63db\u6210\u4f4e\u7dad\u5ea6\u8868\u793a\u3002\u900f\u904eXAI\u6280\u8853\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d\u964d\u7dad\u5f8c\u7684\u6578\u64da\u9032\u884c\u89e3\u91cb\uff0c\u4ee5\u4e86\u89e3\u4e0d\u540c\u7279\u5fb5\u5c0d\u6578\u64da\u964d\u7dad\u7684\u5f71\u97ff\uff0c\u4ee5\u53ca\u4f4e\u7dad\u5ea6\u6578\u64da\u8207\u9ad8\u7dad\u5ea6\u6578\u64da\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5176\u4e2d\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u548c t-SNE \u7b49\u65b9\u6cd5\u90fd\u53ef\u4ee5\u9032\u884c\u53ef\u89e3\u91cb\u6027\u5206\u6790\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2-\u964d\u7dad \u4ee5\u4e0b\u7bc4\u4f8b\u4f7f\u7528\u624b\u5beb\u6578\u5b57\u8fa8\u8b58\u8cc7\u6599\u96c6\u70ba\u4f8b\uff0c\u900f\u904e\u53ef\u8996\u5316\u65b9\u6cd5\u4f86\u986f\u793a PCA \u548c t-SNE \u964d\u7dad\u7684\u7d50\u679c\u3002 \u9996\u5148\uff0c\u6211\u5011\u9700\u8981\u5f9e sklearn \u7684\u5167\u5efa\u8cc7\u6599\u96c6\u4e2d\u8f09\u5165\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6\u3002 load_digits() \u662f\u4e00\u500b\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6\uff0c\u5171\u67091797\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u662f8x8\u7684\u7070\u968e\u5716\u7247\uff0c\u8868\u793a\u4e00\u500b0\u52309\u7684\u624b\u5beb\u6578\u5b57\u3002\u5176\u56de\u50b3\u7684\u8cc7\u6599\u96c6\u5305\u542b\u5169\u500b\u4e3b\u8981\u90e8\u5206\uff1a\u8cc7\u6599\u548c\u6a19\u7c64\u3002 from sklearn.datasets import load_digits from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6 digits = load_digits () X = digits . data y = digits . target \u5982\u4f55\u4f7f\u7528\u65b9\u5dee\u6bd4\u548c\u65b9\u5dee\u503c\u512a\u5316PCA\u5206\u6790 PCA\uff08Principal Component Analysis\uff09\u4e3b\u6210\u5206\u5206\u6790\u662f\u4e00\u7a2e\u5e38\u7528\u7684\u7dda\u6027\u964d\u7dad\u6280\u8853\uff0c\u5b83\u53ef\u4ee5\u5c07\u9ad8\u7dad\u6578\u64da\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\uff0c\u540c\u6642\u4fdd\u7559\u6578\u64da\u7684\u4e3b\u8981\u7279\u5fb5\u3002\u5728 PCA \u4e2d\u65b9\u5dee\u6bd4\u548c\u65b9\u5dee\u503c\u662f\u7528\u4f86\u8861\u91cf\u4e3b\u6210\u5206\u5206\u6790\u7d50\u679c\u3002\u901a\u5e38\u6211\u5011\u6703\u9078\u64c7\u65b9\u5dee\u6bd4\u8f03\u5927\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u70ba\u5b83\u5011\u80fd\u5920\u89e3\u91cb\u66f4\u591a\u7684\u6578\u64da\u8b8a\u7570\u6027\uff0c\u4e26\u4fdd\u7559\u66f4\u591a\u7684\u91cd\u8981\u8a0a\u606f\u3002 \u65b9\u5dee\u6bd4(variance ratio): \u662f\u6307\u6bcf\u500b\u4e3b\u6210\u5206\u6240\u89e3\u91cb\u7684\u65b9\u5dee\u4f54\u7e3d\u65b9\u5dee\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8861\u91cf\u6bcf\u500b\u4e3b\u6210\u5206\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002 \u65b9\u5dee\u503c(variance): \u662f\u6bcf\u500b\u4e3b\u6210\u5206\u7684\u65b9\u5dee\uff0c\u4ee3\u8868\u4e86\u6bcf\u500b\u4e3b\u6210\u5206\u6240\u5305\u542b\u7684\u8a0a\u606f\u91cf\u3002 \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 PCA \u4f86\u964d\u7dad\uff0c\u4e26\u9078\u64c7\u4e0d\u540c\u7684\u4e3b\u6210\u5206\u500b\u6578\uff0c\u4f86\u89c0\u5bdf\u5176\u5c0d\u65bc\u89e3\u91cb\u8b8a\u7570\u91cf\u7684\u8ca2\u737b\u5ea6\u3002 from sklearn.decomposition import PCA # \u5c07\u4e3b\u6210\u5206\u500b\u6578\u8a2d\u70ba 1 \u81f3 64\uff0c\u8a08\u7b97\u7d2f\u7a4d\u65b9\u5dee\u6bd4 n_components = range ( 1 , 65 ) cumulative_variance_ratio_list = [] variance_ratio_list = [] for n in n_components : pca = PCA ( n_components = n ) pca . fit ( X ) variance_ratio_list . append ( np . sum ( pca . explained_variance_ratio_ )) cumulative_variance_ratio_list . append ( np . sum ( pca . explained_variance_ratio_ )) \u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07\u4e0d\u540c\u4e3b\u6210\u5206\u500b\u6578\u4e0b\u7684\u7d2f\u7a4d\u65b9\u5dee\u6bd4\u7e6a\u88fd\u6210\u5716\u8868\uff0c\u4f86\u9078\u64c7\u9069\u5408\u7684\u4e3b\u6210\u5206\u500b\u6578\u3002 import matplotlib.pyplot as plt # \u7e6a\u88fd\u7d2f\u7a4d\u65b9\u5dee\u6bd4\u5716\u8868 plt . plot ( n_components , cumulative_variance_ratio_list , 'ro-' , linewidth = 2 ) plt . xlabel ( 'Number of Components' ) plt . ylabel ( 'Cumulative Explained Variance Ratio' ) plt . title ( 'Explained Variance Ratio vs. Number of Components' ) plt . grid () plt . show () \u7e6a\u88fd\u51fa\u4f86\u7684\u5716\u8868\u6703\u986f\u793a\u4e0d\u540c\u4e3b\u6210\u5206\u500b\u6578\u4e0b\u7684\u7d2f\u7a4d\u65b9\u5dee\u6bd4\uff0c\u6211\u5011\u53ef\u4ee5\u5f9e\u5716\u8868\u4e2d\u627e\u51fa\u9069\u5408\u7684\u4e3b\u6210\u5206\u500b\u6578\uff0c\u4ee5\u9054\u5230\u9069\u7576\u7684\u964d\u7dad\u6548\u679c\u3002 \u5f9et-SNE\u89c0\u5bdf\u8cc7\u6599\u964d\u7dad\u5f8c\u7684\u5206\u4f48 t-SNE\uff08t-Distributed Stochastic Neighbor Embedding\uff09t-\u96a8\u6a5f\u9130\u8fd1\u5d4c\u5165\u6cd5\u662f\u4e00\u7a2e\u975e\u7dda\u6027\u7684\u964d\u7dad\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5c07\u9ad8\u7dad\u6578\u64da\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\u4e2d\uff0c\u540c\u6642\u4fdd\u7559\u6578\u64da\u7684\u5c40\u90e8\u7d50\u69cb\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u65bc\u63a2\u7d22\u6578\u64da\u7684\u76f8\u4f3c\u6027\u3001\u805a\u985e\u548c\u5206\u985e\u7b49\u554f\u984c\u3002 \u6709\u8208\u8da3\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u6211\u4e4b\u524d\u7684\u4e00\u7bc7\u6587\u7ae0 \u52d5\u624b\u505a\u4e00\u500b\u6a5f\u5668\u5b78\u7fd2 API \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 sklearn \u4e2d\u7684 TSNE \u964d\u7dad\uff0c\u5c07\u539f\u59cb\u7684\u9ad8\u7dad\u5ea6\u8cc7\u6599 X \u964d\u7dad\u6210\u4e8c\u7dad\u8cc7\u6599 X_embedded\u3002\u5176\u4e2d n_components \u53c3\u6578\u8a2d\u70ba 2\uff0c\u4ee3\u8868\u8981\u5c07\u8cc7\u6599\u964d\u7dad\u5230\u4e8c\u7dad\u7a7a\u9593\u3002\u53e6\u5916 t-SNE \u7684\u7d50\u679c\u901a\u5e38\u662f\u96a8\u6a5f\u521d\u59cb\u5316\u7684\uff0c\u56e0\u6b64 random_state \u53c3\u6578\u5247\u662f\u8a2d\u5b9a\u96a8\u6a5f\u6578\u751f\u6210\u5668\u7684\u7a2e\u5b50\uff0c\u78ba\u4fdd\u6bcf\u6b21\u57f7\u884c\u7a0b\u5f0f\u6642\u7d50\u679c\u4e00\u81f4\u3002 from sklearn.manifold import TSNE tsneModel = TSNE ( n_components = 2 , random_state = 42 ) X_embedded = tsneModel . fit_transform ( X ) \u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07\u964d\u6210\u5169\u7dad\u7684\u7d50\u679c\u900f\u904e\u9ede\u6563\u5716\u7e6a\u88fd\u51fa\u4f86\u3002t-SNE \u53ef\u4ee5\u5c07\u76f8\u4f3c\u7684\u9ede\u6620\u5c04\u5230\u9760\u8fd1\u5f7c\u6b64\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u597d\u5730\u986f\u793a\u6578\u64da\u96c6\u4e2d\u7684\u7fa4\u96c6\u548c\u5206\u985e\u3002 plt . figure ( figsize = ( 8 , 6 )) scatter = plt . scatter ( X_embedded [:, 0 ], X_embedded [:, 1 ], c = y , alpha = 0.5 , cmap = plt . cm . get_cmap ( 'nipy_spectral' , 10 )) # \u52a0\u5165\u5716\u4f8b legend1 = plt . legend ( * scatter . legend_elements (), title = \"Digits\" , bbox_to_anchor = ( 1.03 , 0.8 ), loc = 'upper left' ) plt . gca () . add_artist ( legend1 ) plt . show () \u805a\u985e\u5206\u6790 \u805a\u985e\u5206\u6790\u662f\u4e00\u7a2e\u975e\u76e3\u7763\u5f0f\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\uff0c\u7528\u65bc\u5c07\u76f8\u4f3c\u7684\u89c0\u5bdf\u503c\u6216\u6578\u64da\u9ede\u5206\u70ba\u4e00\u7d44\uff0c\u5f9e\u800c\u5f62\u6210\u6709\u610f\u7fa9\u7684\u5b50\u96c6\u6216\u7fa4\u96c6\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2 K-means \u5206\u7fa4 k-means \u5206\u7fa4 k-means \u662f\u805a\u985e\u5206\u6790\u4e2d\u6700\u5e38\u7528\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002\u5b83\u662f\u4e00\u7a2e\u8fed\u4ee3\u7b97\u6cd5\uff0c\u900f\u904e\u53cd\u8986\u8a08\u7b97\u6bcf\u500b\u6578\u64da\u9ede\u8207\u5176\u6240\u5c6c\u7fa4\u96c6\u7684\u91cd\u5fc3\u4e4b\u9593\u7684\u8ddd\u96e2\uff0c\u4f86\u4e0d\u65b7\u66f4\u65b0\u7fa4\u96c6\u4e2d\u5fc3\u9ede\u7684\u4f4d\u7f6e\u3002\u53ef\u4f7f\u7528\u8996\u89ba\u5316\u65b9\u6cd5\u4f86\u986f\u793a\u6bcf\u500b\u7fa4\u96c6\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u6563\u9ede\u5716\u6216\u71b1\u529b\u5716\uff0c\u4ee5\u986f\u793a\u7fa4\u96c6\u4e4b\u9593\u7684\u76f8\u4f3c\u6027\u548c\u5dee\u7570\u6027\u3002\u63a5\u4e0b\u4f86\u6211\u5011\u6703\u62ff\u525b\u525b\u624b\u5beb\u6578\u5b57 t-SNE \u964d\u7dad\u5f8c\u7684\u7d50\u679c\uff0c\u900f\u904e\u5206\u7fa4\u5206\u985e\u6f14\u7b97\u6cd5\u5354\u52a9\u6211\u5011\u9032\u884c\u5206\u7fa4\u3002\u7531\u65bc\u6211\u5011\u6709\u5341\u7a2e\u6578\u5b57\u56e0\u6b64\u6211\u5011\u5e0c\u671b\u80fd\u5920\u7279\u904e\u5206\u7fa4\u6f14\u7b97\u6cd5\u627e\u51fa\u5341\u500b\u4e2d\u5fc3\u9ede\u3002 from sklearn.cluster import KMeans kmeansModel = KMeans ( n_clusters = 10 , random_state = 42 ) clusters_pred = kmeansModel . fit_predict ( X_embedded ) \u6211\u5011\u53ef\u4ee5\u5c07 t-SNE \u7684\u7d50\u679c\u8207\u5176\u4ed6\u7fa4\u96c6\u7b97\u6cd5\u7684\u7d50\u679c\u9032\u884c\u6bd4\u8f03\uff0c\u53ef\u4ee5\u78ba\u5b9a\u5206\u985e\u662f\u5426\u8207 t-SNE \u7684\u5206\u7fa4\u7d50\u679c\u4e00\u81f4\u3002 plt . figure ( figsize = ( 8 , 6 )) plt . scatter ( X_embedded [:, 0 ], X_embedded [:, 1 ], c = clusters_pred , alpha = 0.5 , cmap = plt . cm . get_cmap ( 'nipy_spectral' , 10 )) # \u52a0\u5165\u5716\u4f8b legend1 = plt . legend ( * scatter . legend_elements (), title = \"Digits\" , bbox_to_anchor = ( 1.03 , 0.8 ), loc = 'upper left' ) plt . gca () . add_artist ( legend1 ) plt . scatter ( kmeansModel . cluster_centers_ [:, 0 ], kmeansModel . cluster_centers_ [:, 1 ], s = 100 , c = \"r\" , marker = '*' ) plt . show () \u5c0f\u7d50 \u4eca\u5929\u4ecb\u7d39\u4e86\u4e09\u7a2e\u5e38\u898b\u7684\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\uff0c\u4e26\u61c9\u7528\u5728\u975e\u76e3\u7763\u5f0f\u5b78\u7fd2\u9818\u57df\u3002\u9019\u4e9b\u65b9\u6cd5\u5728\u8cc7\u6599\u5206\u6790\u9818\u57df\u4e2d\u5ee3\u6cdb\u61c9\u7528\uff0c\u4f8b\u5982\u6211\u5011\u53ef\u4ee5\u89e3\u91cb PCA \u6216 t-SNE \u8f49\u63db\u5f8c\u7684\u7279\u5fb5\u5982\u4f55\u95dc\u806f\u5230\u539f\u59cb\u8cc7\u6599\uff0c\u6216\u8005\u89e3\u91cb k-means \u5206\u7fa4\u7684\u7d50\u679c\uff0c\u4ee5\u7406\u89e3\u6bcf\u500b\u7c07\u4e2d\u7684\u8cc7\u6599\u9ede\u4e4b\u9593\u7684\u5171\u540c\u7279\u5fb5\u3002\u9019\u4e9b\u8cc7\u8a0a\u6709\u52a9\u65bc\u6211\u5011\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8cc7\u6599\u96c6\u4e2d\u7684\u8a0a\u606f\u548c\u8da8\u52e2\u3002","title":"[Day 6] \u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027\uff1f\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#day-6-xai","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u7531\u65bc\u975e\u76e3\u7763\u5b78\u7fd2\u6a21\u578b\u901a\u5e38\u6c92\u6709\u50cf\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u6a19\u7c64\u53ef\u4f7f\u7528\uff0c\u56e0\u6b64\u975e\u76e3\u7763\u5b78\u7fd2\u6a21\u578b\u7684\u53ef\u89e3\u91cb\u6027\u901a\u5e38\u662f\u900f\u904e\u8cc7\u6599\u8996\u89ba\u5316\u548c\u6578\u64da\u5206\u6790\u4f86\u5be6\u73fe\u3002\u4ee5\u4e0b\u70ba\u5404\u4f4d\u6574\u7406\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u53ef\u89e3\u91cb\u6027\u7684\u4e00\u4e9b\u4f8b\u5b50\uff1a \u964d\u7dad\u5206\u6790\uff1a\u5c07\u964d\u7dad\u5f8c\u7684\u6578\u64da\u6295\u5f71\u56de\u539f\u59cb\u7a7a\u9593\u4e26\u8996\u89ba\u5316\uff0c\u5f9e\u4e2d\u7406\u89e3\u539f\u59cb\u8cc7\u6599\u7684\u91cd\u8981\u7279\u5fb5\u548c\u95dc\u4fc2\u3002 \u4e3b\u6210\u5206\u5206\u6790(PCA)\uff1a\u89e3\u91cb\u4e3b\u6210\u5206\u5206\u6790\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u7279\u5fb5\u548c\u5c0d\u539f\u59cb\u8cc7\u6599\u7684\u8ca2\u737b\uff0c\u7406\u89e3\u8cc7\u6599\u7684\u964d\u7dad\u548c\u7d50\u69cb\u5316\u904e\u7a0b\u3002 t-\u96a8\u6a5f\u9130\u8fd1\u5d4c\u5165\u6cd5(t-SNE)\uff1a\u900f\u904e\u5c07\u9ad8\u7dad\u7a7a\u9593\u4e2d\u7684\u8cc7\u6599\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\uff0c\u4e26\u4e14\u4fdd\u7559\u539f\u59cb\u8cc7\u6599\u7684\u5c40\u90e8\u7d50\u69cb\uff0c\u8b93\u6211\u5011\u80fd\u5920\u8996\u89ba\u5316\u9ad8\u7dad\u8cc7\u6599\uff0c\u5f9e\u800c\u9032\u884c\u63a2\u7d22\u6027\u5206\u6790\u3002 \u805a\u985e\u5206\u6790\uff1a\u900f\u904e\u89e3\u91cb\u805a\u985e\u7d50\u679c\uff0c\u63a2\u7d22\u8cc7\u6599\u7684\u5167\u5728\u5206\u5e03\u548c\u6f5b\u5728\u7279\u5fb5\u3002","title":"[Day 6] \u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027\uff1f\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#_1","text":"\u964d\u7dad\u6280\u8853\u662f\u4e00\u7a2e\u6578\u64da\u58d3\u7e2e\u6280\u8853\uff0c\u53ef\u5c07\u9ad8\u7dad\u5ea6\u7684\u6578\u64da\u8f49\u63db\u6210\u4f4e\u7dad\u5ea6\u8868\u793a\u3002\u900f\u904eXAI\u6280\u8853\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d\u964d\u7dad\u5f8c\u7684\u6578\u64da\u9032\u884c\u89e3\u91cb\uff0c\u4ee5\u4e86\u89e3\u4e0d\u540c\u7279\u5fb5\u5c0d\u6578\u64da\u964d\u7dad\u7684\u5f71\u97ff\uff0c\u4ee5\u53ca\u4f4e\u7dad\u5ea6\u6578\u64da\u8207\u9ad8\u7dad\u5ea6\u6578\u64da\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5176\u4e2d\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u548c t-SNE \u7b49\u65b9\u6cd5\u90fd\u53ef\u4ee5\u9032\u884c\u53ef\u89e3\u91cb\u6027\u5206\u6790\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2-\u964d\u7dad \u4ee5\u4e0b\u7bc4\u4f8b\u4f7f\u7528\u624b\u5beb\u6578\u5b57\u8fa8\u8b58\u8cc7\u6599\u96c6\u70ba\u4f8b\uff0c\u900f\u904e\u53ef\u8996\u5316\u65b9\u6cd5\u4f86\u986f\u793a PCA \u548c t-SNE \u964d\u7dad\u7684\u7d50\u679c\u3002 \u9996\u5148\uff0c\u6211\u5011\u9700\u8981\u5f9e sklearn \u7684\u5167\u5efa\u8cc7\u6599\u96c6\u4e2d\u8f09\u5165\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6\u3002 load_digits() \u662f\u4e00\u500b\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6\uff0c\u5171\u67091797\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u662f8x8\u7684\u7070\u968e\u5716\u7247\uff0c\u8868\u793a\u4e00\u500b0\u52309\u7684\u624b\u5beb\u6578\u5b57\u3002\u5176\u56de\u50b3\u7684\u8cc7\u6599\u96c6\u5305\u542b\u5169\u500b\u4e3b\u8981\u90e8\u5206\uff1a\u8cc7\u6599\u548c\u6a19\u7c64\u3002 from sklearn.datasets import load_digits from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u624b\u5beb\u6578\u5b57\u8cc7\u6599\u96c6 digits = load_digits () X = digits . data y = digits . target","title":"\u964d\u7dad"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#pca","text":"PCA\uff08Principal Component Analysis\uff09\u4e3b\u6210\u5206\u5206\u6790\u662f\u4e00\u7a2e\u5e38\u7528\u7684\u7dda\u6027\u964d\u7dad\u6280\u8853\uff0c\u5b83\u53ef\u4ee5\u5c07\u9ad8\u7dad\u6578\u64da\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\uff0c\u540c\u6642\u4fdd\u7559\u6578\u64da\u7684\u4e3b\u8981\u7279\u5fb5\u3002\u5728 PCA \u4e2d\u65b9\u5dee\u6bd4\u548c\u65b9\u5dee\u503c\u662f\u7528\u4f86\u8861\u91cf\u4e3b\u6210\u5206\u5206\u6790\u7d50\u679c\u3002\u901a\u5e38\u6211\u5011\u6703\u9078\u64c7\u65b9\u5dee\u6bd4\u8f03\u5927\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u70ba\u5b83\u5011\u80fd\u5920\u89e3\u91cb\u66f4\u591a\u7684\u6578\u64da\u8b8a\u7570\u6027\uff0c\u4e26\u4fdd\u7559\u66f4\u591a\u7684\u91cd\u8981\u8a0a\u606f\u3002 \u65b9\u5dee\u6bd4(variance ratio): \u662f\u6307\u6bcf\u500b\u4e3b\u6210\u5206\u6240\u89e3\u91cb\u7684\u65b9\u5dee\u4f54\u7e3d\u65b9\u5dee\u7684\u6bd4\u4f8b\uff0c\u7528\u65bc\u8861\u91cf\u6bcf\u500b\u4e3b\u6210\u5206\u7684\u8ca2\u737b\u7a0b\u5ea6\u3002 \u65b9\u5dee\u503c(variance): \u662f\u6bcf\u500b\u4e3b\u6210\u5206\u7684\u65b9\u5dee\uff0c\u4ee3\u8868\u4e86\u6bcf\u500b\u4e3b\u6210\u5206\u6240\u5305\u542b\u7684\u8a0a\u606f\u91cf\u3002 \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 PCA \u4f86\u964d\u7dad\uff0c\u4e26\u9078\u64c7\u4e0d\u540c\u7684\u4e3b\u6210\u5206\u500b\u6578\uff0c\u4f86\u89c0\u5bdf\u5176\u5c0d\u65bc\u89e3\u91cb\u8b8a\u7570\u91cf\u7684\u8ca2\u737b\u5ea6\u3002 from sklearn.decomposition import PCA # \u5c07\u4e3b\u6210\u5206\u500b\u6578\u8a2d\u70ba 1 \u81f3 64\uff0c\u8a08\u7b97\u7d2f\u7a4d\u65b9\u5dee\u6bd4 n_components = range ( 1 , 65 ) cumulative_variance_ratio_list = [] variance_ratio_list = [] for n in n_components : pca = PCA ( n_components = n ) pca . fit ( X ) variance_ratio_list . append ( np . sum ( pca . explained_variance_ratio_ )) cumulative_variance_ratio_list . append ( np . sum ( pca . explained_variance_ratio_ )) \u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07\u4e0d\u540c\u4e3b\u6210\u5206\u500b\u6578\u4e0b\u7684\u7d2f\u7a4d\u65b9\u5dee\u6bd4\u7e6a\u88fd\u6210\u5716\u8868\uff0c\u4f86\u9078\u64c7\u9069\u5408\u7684\u4e3b\u6210\u5206\u500b\u6578\u3002 import matplotlib.pyplot as plt # \u7e6a\u88fd\u7d2f\u7a4d\u65b9\u5dee\u6bd4\u5716\u8868 plt . plot ( n_components , cumulative_variance_ratio_list , 'ro-' , linewidth = 2 ) plt . xlabel ( 'Number of Components' ) plt . ylabel ( 'Cumulative Explained Variance Ratio' ) plt . title ( 'Explained Variance Ratio vs. Number of Components' ) plt . grid () plt . show () \u7e6a\u88fd\u51fa\u4f86\u7684\u5716\u8868\u6703\u986f\u793a\u4e0d\u540c\u4e3b\u6210\u5206\u500b\u6578\u4e0b\u7684\u7d2f\u7a4d\u65b9\u5dee\u6bd4\uff0c\u6211\u5011\u53ef\u4ee5\u5f9e\u5716\u8868\u4e2d\u627e\u51fa\u9069\u5408\u7684\u4e3b\u6210\u5206\u500b\u6578\uff0c\u4ee5\u9054\u5230\u9069\u7576\u7684\u964d\u7dad\u6548\u679c\u3002","title":"\u5982\u4f55\u4f7f\u7528\u65b9\u5dee\u6bd4\u548c\u65b9\u5dee\u503c\u512a\u5316PCA\u5206\u6790"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#t-sne","text":"t-SNE\uff08t-Distributed Stochastic Neighbor Embedding\uff09t-\u96a8\u6a5f\u9130\u8fd1\u5d4c\u5165\u6cd5\u662f\u4e00\u7a2e\u975e\u7dda\u6027\u7684\u964d\u7dad\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5c07\u9ad8\u7dad\u6578\u64da\u6620\u5c04\u5230\u4f4e\u7dad\u7a7a\u9593\u4e2d\uff0c\u540c\u6642\u4fdd\u7559\u6578\u64da\u7684\u5c40\u90e8\u7d50\u69cb\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u65bc\u63a2\u7d22\u6578\u64da\u7684\u76f8\u4f3c\u6027\u3001\u805a\u985e\u548c\u5206\u985e\u7b49\u554f\u984c\u3002 \u6709\u8208\u8da3\u7684\u8b80\u8005\u53ef\u4ee5\u53c3\u8003\u6211\u4e4b\u524d\u7684\u4e00\u7bc7\u6587\u7ae0 \u52d5\u624b\u505a\u4e00\u500b\u6a5f\u5668\u5b78\u7fd2 API \u6211\u5011\u53ef\u4ee5\u4f7f\u7528 sklearn \u4e2d\u7684 TSNE \u964d\u7dad\uff0c\u5c07\u539f\u59cb\u7684\u9ad8\u7dad\u5ea6\u8cc7\u6599 X \u964d\u7dad\u6210\u4e8c\u7dad\u8cc7\u6599 X_embedded\u3002\u5176\u4e2d n_components \u53c3\u6578\u8a2d\u70ba 2\uff0c\u4ee3\u8868\u8981\u5c07\u8cc7\u6599\u964d\u7dad\u5230\u4e8c\u7dad\u7a7a\u9593\u3002\u53e6\u5916 t-SNE \u7684\u7d50\u679c\u901a\u5e38\u662f\u96a8\u6a5f\u521d\u59cb\u5316\u7684\uff0c\u56e0\u6b64 random_state \u53c3\u6578\u5247\u662f\u8a2d\u5b9a\u96a8\u6a5f\u6578\u751f\u6210\u5668\u7684\u7a2e\u5b50\uff0c\u78ba\u4fdd\u6bcf\u6b21\u57f7\u884c\u7a0b\u5f0f\u6642\u7d50\u679c\u4e00\u81f4\u3002 from sklearn.manifold import TSNE tsneModel = TSNE ( n_components = 2 , random_state = 42 ) X_embedded = tsneModel . fit_transform ( X ) \u6700\u5f8c\u6211\u5011\u53ef\u4ee5\u5c07\u964d\u6210\u5169\u7dad\u7684\u7d50\u679c\u900f\u904e\u9ede\u6563\u5716\u7e6a\u88fd\u51fa\u4f86\u3002t-SNE \u53ef\u4ee5\u5c07\u76f8\u4f3c\u7684\u9ede\u6620\u5c04\u5230\u9760\u8fd1\u5f7c\u6b64\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u597d\u5730\u986f\u793a\u6578\u64da\u96c6\u4e2d\u7684\u7fa4\u96c6\u548c\u5206\u985e\u3002 plt . figure ( figsize = ( 8 , 6 )) scatter = plt . scatter ( X_embedded [:, 0 ], X_embedded [:, 1 ], c = y , alpha = 0.5 , cmap = plt . cm . get_cmap ( 'nipy_spectral' , 10 )) # \u52a0\u5165\u5716\u4f8b legend1 = plt . legend ( * scatter . legend_elements (), title = \"Digits\" , bbox_to_anchor = ( 1.03 , 0.8 ), loc = 'upper left' ) plt . gca () . add_artist ( legend1 ) plt . show ()","title":"\u5f9et-SNE\u89c0\u5bdf\u8cc7\u6599\u964d\u7dad\u5f8c\u7684\u5206\u4f48"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#_2","text":"\u805a\u985e\u5206\u6790\u662f\u4e00\u7a2e\u975e\u76e3\u7763\u5f0f\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\uff0c\u7528\u65bc\u5c07\u76f8\u4f3c\u7684\u89c0\u5bdf\u503c\u6216\u6578\u64da\u9ede\u5206\u70ba\u4e00\u7d44\uff0c\u5f9e\u800c\u5f62\u6210\u6709\u610f\u7fa9\u7684\u5b50\u96c6\u6216\u7fa4\u96c6\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2 K-means \u5206\u7fa4","title":"\u805a\u985e\u5206\u6790"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#k-means","text":"k-means \u662f\u805a\u985e\u5206\u6790\u4e2d\u6700\u5e38\u7528\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002\u5b83\u662f\u4e00\u7a2e\u8fed\u4ee3\u7b97\u6cd5\uff0c\u900f\u904e\u53cd\u8986\u8a08\u7b97\u6bcf\u500b\u6578\u64da\u9ede\u8207\u5176\u6240\u5c6c\u7fa4\u96c6\u7684\u91cd\u5fc3\u4e4b\u9593\u7684\u8ddd\u96e2\uff0c\u4f86\u4e0d\u65b7\u66f4\u65b0\u7fa4\u96c6\u4e2d\u5fc3\u9ede\u7684\u4f4d\u7f6e\u3002\u53ef\u4f7f\u7528\u8996\u89ba\u5316\u65b9\u6cd5\u4f86\u986f\u793a\u6bcf\u500b\u7fa4\u96c6\u7684\u7279\u5fb5\uff0c\u4f8b\u5982\u6563\u9ede\u5716\u6216\u71b1\u529b\u5716\uff0c\u4ee5\u986f\u793a\u7fa4\u96c6\u4e4b\u9593\u7684\u76f8\u4f3c\u6027\u548c\u5dee\u7570\u6027\u3002\u63a5\u4e0b\u4f86\u6211\u5011\u6703\u62ff\u525b\u525b\u624b\u5beb\u6578\u5b57 t-SNE \u964d\u7dad\u5f8c\u7684\u7d50\u679c\uff0c\u900f\u904e\u5206\u7fa4\u5206\u985e\u6f14\u7b97\u6cd5\u5354\u52a9\u6211\u5011\u9032\u884c\u5206\u7fa4\u3002\u7531\u65bc\u6211\u5011\u6709\u5341\u7a2e\u6578\u5b57\u56e0\u6b64\u6211\u5011\u5e0c\u671b\u80fd\u5920\u7279\u904e\u5206\u7fa4\u6f14\u7b97\u6cd5\u627e\u51fa\u5341\u500b\u4e2d\u5fc3\u9ede\u3002 from sklearn.cluster import KMeans kmeansModel = KMeans ( n_clusters = 10 , random_state = 42 ) clusters_pred = kmeansModel . fit_predict ( X_embedded ) \u6211\u5011\u53ef\u4ee5\u5c07 t-SNE \u7684\u7d50\u679c\u8207\u5176\u4ed6\u7fa4\u96c6\u7b97\u6cd5\u7684\u7d50\u679c\u9032\u884c\u6bd4\u8f03\uff0c\u53ef\u4ee5\u78ba\u5b9a\u5206\u985e\u662f\u5426\u8207 t-SNE \u7684\u5206\u7fa4\u7d50\u679c\u4e00\u81f4\u3002 plt . figure ( figsize = ( 8 , 6 )) plt . scatter ( X_embedded [:, 0 ], X_embedded [:, 1 ], c = clusters_pred , alpha = 0.5 , cmap = plt . cm . get_cmap ( 'nipy_spectral' , 10 )) # \u52a0\u5165\u5716\u4f8b legend1 = plt . legend ( * scatter . legend_elements (), title = \"Digits\" , bbox_to_anchor = ( 1.03 , 0.8 ), loc = 'upper left' ) plt . gca () . add_artist ( legend1 ) plt . scatter ( kmeansModel . cluster_centers_ [:, 0 ], kmeansModel . cluster_centers_ [:, 1 ], s = 100 , c = \"r\" , marker = '*' ) plt . show ()","title":"k-means \u5206\u7fa4"},{"location":"6.\u975e\u76e3\u7763\u5b78\u7fd2\u4e5f\u80fd\u505a\u5230\u53ef\u89e3\u91cb\u6027-\u63a2\u7d22XAI\u5728\u975e\u76e3\u7763\u5b78\u7fd2\u4e2d\u7684\u61c9\u7528/#_3","text":"\u4eca\u5929\u4ecb\u7d39\u4e86\u4e09\u7a2e\u5e38\u898b\u7684\u6a5f\u5668\u5b78\u7fd2\u6280\u8853\uff0c\u4e26\u61c9\u7528\u5728\u975e\u76e3\u7763\u5f0f\u5b78\u7fd2\u9818\u57df\u3002\u9019\u4e9b\u65b9\u6cd5\u5728\u8cc7\u6599\u5206\u6790\u9818\u57df\u4e2d\u5ee3\u6cdb\u61c9\u7528\uff0c\u4f8b\u5982\u6211\u5011\u53ef\u4ee5\u89e3\u91cb PCA \u6216 t-SNE \u8f49\u63db\u5f8c\u7684\u7279\u5fb5\u5982\u4f55\u95dc\u806f\u5230\u539f\u59cb\u8cc7\u6599\uff0c\u6216\u8005\u89e3\u91cb k-means \u5206\u7fa4\u7684\u7d50\u679c\uff0c\u4ee5\u7406\u89e3\u6bcf\u500b\u7c07\u4e2d\u7684\u8cc7\u6599\u9ede\u4e4b\u9593\u7684\u5171\u540c\u7279\u5fb5\u3002\u9019\u4e9b\u8cc7\u8a0a\u6709\u52a9\u65bc\u6211\u5011\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8cc7\u6599\u96c6\u4e2d\u7684\u8a0a\u606f\u548c\u8da8\u52e2\u3002","title":"\u5c0f\u7d50"},{"location":"7.KNN\u8207XAI:\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f/","text":"[Day 7] KNN\u8207XAI\uff1a\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f \u7bc4\u4f8b\u7a0b\u5f0f\uff1a KNN \u662f\u4e00\u7a2e\u76e3\u7763\u5f0f\u5b78\u7fd2\u7b97\u6cd5\uff0c\u5b83\u53ef\u4ee5\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u554f\u984c\u3002\u5728\u5206\u985e\u554f\u984c\u4e2d\uff0cKNN \u900f\u904e\u627e\u5230\u6700\u8fd1\u7684 k \u500b\u9130\u5c45\u53d6\u591a\u6578\u6c7a\u4f86\u9810\u6e2c\u4e00\u500b\u65b0\u6a23\u672c\u7684\u985e\u5225\u3002\u5728\u8ff4\u6b78\u554f\u984c\u4e2d\uff0cKNN \u5247\u900f\u904e\u627e\u5230\u6700\u8fd1\u7684 k \u500b\u9130\u5c45\u7684\u5e73\u5747\u4f86\u9810\u6e2c\u4e00\u500b\u65b0\u6a23\u672c\u7684\u6578\u503c\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u8fd1\u6731\u8005\u8d64\uff0c\u8fd1\u58a8\u8005\u9ed1 - KNN KNN \u8207\u5176\u4ed6\u76e3\u7763\u5f0f\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u7684\u4e0d\u540c\u4e4b\u8655\u5728\u65bc\uff0c\u5b83\u662f\u5c6c\u65bc\u4e00\u7a2e instance-based \u6f14\u7b97\u6cd5\u3002\u7c21\u55ae\u4f86\u8aaa KNN \u6a21\u578b\u6c92\u6709\u8981\u5b78\u7fd2\u7684\u53c3\u6578\uff0c\u5b83\u53ea\u662f\u5c07\u6240\u6709\u7684\u8a13\u7df4\u8cc7\u6599\u5132\u5b58\u8d77\u4f86\uff0c\u7576\u9047\u5230\u65b0\u7684\u8cc7\u6599\u6642\uff0c\u5c31\u6bd4\u5c0d\u65b0\u8cc7\u6599\u548c\u820a\u8cc7\u6599\u7684\u76f8\u4f3c\u7a0b\u5ea6(\u8ddd\u96e2)\uff0c\u4f86\u6c7a\u5b9a\u65b0\u8cc7\u6599\u7684\u9810\u6e2c\u3002\u53e6\u5916 KNN \u7f3a\u5c11\u5168\u5c40\u6a21\u578b\u53ef\u89e3\u91cb\u6027\uff0c\u56e0\u70ba\u8a72\u6a21\u578b\u672c\u8cea\u4e0a\u662f\u5c40\u90e8\u7684\uff0c\u4e26\u4e14\u6c92\u6709\u660e\u78ba\u5b78\u7fd2\u5168\u5c40\u6b0a\u91cd\u6216\u7d50\u69cb\u3002 [\u5be6\u4f5c] KNN \u7684\u5c40\u90e8\u89e3\u91cb\u6027 KNN \u65b9\u6cd5\u7684\u53ef\u89e3\u91cb\u6027\u5728\u5c40\u90e8\u89e3\u91cb\u65b9\u9762\u76f8\u5c0d\u8f03\u597d\u3002\u56e0\u70ba\u5c0d\u65bc\u6bcf\u500b\u55ae\u7368\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u6211\u5011\u53ef\u4ee5\u89e3\u91cb\u70ba\u4ec0\u9ebc\u9019\u4e9b\u9130\u5c45\u88ab\u9078\u4e2d\u4e86\uff0c\u4ee5\u53ca\u9019\u4e9b\u9130\u5c45\u4e2d\u7684\u6a23\u672c\u5982\u4f55\u5f71\u97ff\u9810\u6e2c\u7d50\u679c\u3002\u9019\u7a2e\u65b9\u6cd5\u5728\u5c40\u90e8\u89e3\u91cb\u65b9\u9762\u662f\u76f8\u5c0d\u8f03\u597d\u7684\uff0c\u56e0\u70ba\u6211\u5011\u53ef\u4ee5\u67e5\u770b\u55ae\u500b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u9078\u64c7\u7684\u9130\u5c45\uff0c\u4e26\u8a55\u4f30\u5b83\u5011\u5c0d\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u5176\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u5c07\u7279\u5fb5\u900f\u904e\u964d\u7dad\u65b9\u5f0f\u6620\u5c04\u5230\u4e09\u7dad\u7a7a\u9593\u5167\uff0c\u4e26\u900f\u904e\u8996\u89ba\u5316\u7684\u65b9\u5f0f\u89c0\u5bdf K \u500b\u9130\u8fd1\u7684\u9ede\u5728\u54ea\u88e1\u3002\u8a73\u7d30\u6559\u5b78\u53ef\u4ee5\u53c3\u8003 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2-\u964d\u7dad \u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 KNN \u5206\u985e\u9cf6\u5c3e\u82b1\u6735\u7684\u7bc4\u4f8b\u7a0b\u5f0f\uff0c\u540c\u6642\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 kneighbors \u65b9\u6cd5\u4f86\u89e3\u91cb\u6a21\u578b\uff0c\u67e5\u770b\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u3002 from sklearn.datasets import load_iris from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6 iris = load_iris () X = iris . data y = iris . target # \u5207\u5206\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.3 , random_state = 42 , stratify = y ) # \u8a13\u7df4 KNN \u5206\u985e\u5668 knnModel = KNeighborsClassifier ( n_neighbors = 3 ) knnModel . fit ( X_train , y_train ) # \u8a55\u4f30\u6a21\u578b\u7684\u6e96\u78ba\u7387 print ( '\u8a13\u7df4\u96c6: ' , knnModel . score ( X_train , y_train )) print ( '\u6e2c\u8a66\u96c6: ' , knnModel . score ( X_test , y_test )) # \u53d6\u5f97\u7b2c\u4e00\u500b\u6e2c\u8a66\u6a23\u672c\u7684\u6700\u8fd1\u7684\u9130\u5c45 distances , indices = knnModel . kneighbors ( X_test [[ 0 ]]) # \u5c40\u90e8\u89e3\u91cb\uff1a\u986f\u793a\u6700\u8fd1\u9130\u5c45\u7684\u985e\u5225\u548c\u5c0d\u61c9\u7684\u7279\u5fb5\u503c print ( 'Sample belongs to class:' , y_test [ 0 ]) print ( 'Neighbors belong to classes:' , y_train [ indices [ 0 ]]) print ( 'Nearest neighbors:' , X_train [ indices [ 0 ]]) \u57f7\u884c\u7d50\u679c\uff1a \u8a13\u7df4\u96c6: 0.9619047619047619 \u6e2c\u8a66\u96c6: 0.9555555555555556 Sample belongs to class: 2 Neighbors belong to classes: [2 2 2] Nearest neighbors: [[7.4 2.8 6.1 1.9] [7.2 3.2 6. 1.8] [7.6 3. 6.6 2.1]] \u53ef\u4ee5\u770b\u5230\uff0c\u6e2c\u8a66\u96c6\u7684\u7b2c\u4e00\u500b\u6a23\u672c\u5c6c\u65bc\u985e\u5225 2\uff0c\u5176\u6700\u8fd1\u7684 3 \u500b\u9130\u5c45\u4e5f\u90fd\u5c6c\u65bc\u985e\u5225 2\u3002\u900f\u904e kneighbors \u65b9\u6cd5\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d\u6a21\u578b\u505a\u5c40\u90e8\u89e3\u91cb\uff0c\u89e3\u91cb\u6bcf\u500b\u6a23\u672c\u7684\u9810\u6e2c\u662f\u57fa\u65bc\u54ea\u4e9b\u6700\u8fd1\u9130\u5c45\u9032\u884c\u7684\u3002 \u53e6\u5916 kneighbors \u56de\u50b3\u7684\u8cc7\u8a0a\u5305\u62ec: distances: \u8fd4\u56de\u4e00\u500b\u7dad\u5ea6 (n_samples, n_neighbors) \u7684\u9663\u5217\uff0c\u8868\u793a\u6bcf\u500b\u6a23\u672c\u548c\u5b83\u7684\u6700\u8fd1\u9130\u5c45\u4e4b\u9593\u7684\u8ddd\u96e2\u3002 indices: \u8fd4\u56de\u4e00\u500b\u7dad\u5ea6 (n_samples, n_neighbors) \u7684\u9663\u5217\uff0c\u8868\u793a\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u7684\u7d22\u5f15\u3002\u9019\u4e9b\u7d22\u5f15\u53ef\u4ee5\u7528\u4f86\u6aa2\u7d22\u8a13\u7df4\u8cc7\u6599\u4e2d\u5c0d\u61c9\u7684\u6700\u8fd1\u9130\u5c45\u3002 \u5176\u4e2d n_samples \u662f\u6a23\u672c\u6578\u91cf\uff0cn_neighbors \u662f\u9130\u5c45\u6578\u91cf\u3002\u5728\u9019\u88e1\uff0c\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u6578\u91cf\u90fd\u662f\u4e8b\u5148\u6307\u5b9a\u7684\u3002\u9019\u500b\u65b9\u6cd5\u56de\u50b3\u7684\u8cc7\u8a0a\u53ef\u4ee5\u7528\u4f86\u7372\u53d6\u6700\u8fd1\u9130\u5c45\u7684\u7279\u5fb5\u548c\u76ee\u6a19\u503c\uff0c\u5f9e\u800c\u9032\u884c\u6a21\u578b\u89e3\u91cb\u548c\u5206\u6790\u3002 \u7576\u7136\u6211\u5011\u4e5f\u53ef\u4ee5\u900f\u904e\u5176\u4ed6\u65b9\u6cd5\u4ee5\u5168\u5c40\u7684\u89c0\u9ede\u89e3\u91cb KNN \u6a21\u578b\uff0c\u50cf\u662f Permutation Importance \u53ef\u4ee5\u8cc7\u6599\u64fe\u52d5\u65b9\u5f0f\u627e\u5230\u91cd\u8981\u7279\u5fb5\u3002\u95dc\u65bc\u9019\u90e8\u5206\u5167\u5bb9\uff0c\u4e4b\u5f8c\u6703\u5c08\u9580\u5beb\u4e00\u7bc7\u6587\u70ba\u5927\u5bb6\u8b1b\u89e3\uff01","title":"[Day 7] KNN\u8207XAI\uff1a\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f"},{"location":"7.KNN\u8207XAI:\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f/#day-7-knnxai","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a KNN \u662f\u4e00\u7a2e\u76e3\u7763\u5f0f\u5b78\u7fd2\u7b97\u6cd5\uff0c\u5b83\u53ef\u4ee5\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u554f\u984c\u3002\u5728\u5206\u985e\u554f\u984c\u4e2d\uff0cKNN \u900f\u904e\u627e\u5230\u6700\u8fd1\u7684 k \u500b\u9130\u5c45\u53d6\u591a\u6578\u6c7a\u4f86\u9810\u6e2c\u4e00\u500b\u65b0\u6a23\u672c\u7684\u985e\u5225\u3002\u5728\u8ff4\u6b78\u554f\u984c\u4e2d\uff0cKNN \u5247\u900f\u904e\u627e\u5230\u6700\u8fd1\u7684 k \u500b\u9130\u5c45\u7684\u5e73\u5747\u4f86\u9810\u6e2c\u4e00\u500b\u65b0\u6a23\u672c\u7684\u6578\u503c\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u8fd1\u6731\u8005\u8d64\uff0c\u8fd1\u58a8\u8005\u9ed1 - KNN KNN \u8207\u5176\u4ed6\u76e3\u7763\u5f0f\u6a5f\u5668\u5b78\u7fd2\u6f14\u7b97\u6cd5\u7684\u4e0d\u540c\u4e4b\u8655\u5728\u65bc\uff0c\u5b83\u662f\u5c6c\u65bc\u4e00\u7a2e instance-based \u6f14\u7b97\u6cd5\u3002\u7c21\u55ae\u4f86\u8aaa KNN \u6a21\u578b\u6c92\u6709\u8981\u5b78\u7fd2\u7684\u53c3\u6578\uff0c\u5b83\u53ea\u662f\u5c07\u6240\u6709\u7684\u8a13\u7df4\u8cc7\u6599\u5132\u5b58\u8d77\u4f86\uff0c\u7576\u9047\u5230\u65b0\u7684\u8cc7\u6599\u6642\uff0c\u5c31\u6bd4\u5c0d\u65b0\u8cc7\u6599\u548c\u820a\u8cc7\u6599\u7684\u76f8\u4f3c\u7a0b\u5ea6(\u8ddd\u96e2)\uff0c\u4f86\u6c7a\u5b9a\u65b0\u8cc7\u6599\u7684\u9810\u6e2c\u3002\u53e6\u5916 KNN \u7f3a\u5c11\u5168\u5c40\u6a21\u578b\u53ef\u89e3\u91cb\u6027\uff0c\u56e0\u70ba\u8a72\u6a21\u578b\u672c\u8cea\u4e0a\u662f\u5c40\u90e8\u7684\uff0c\u4e26\u4e14\u6c92\u6709\u660e\u78ba\u5b78\u7fd2\u5168\u5c40\u6b0a\u91cd\u6216\u7d50\u69cb\u3002","title":"[Day 7] KNN\u8207XAI\uff1a\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f"},{"location":"7.KNN\u8207XAI:\u5f9e\u9130\u5c45\u4e2d\u627e\u51fa\u6a21\u578b\u7684\u6c7a\u7b56\u908f\u8f2f/#knn","text":"KNN \u65b9\u6cd5\u7684\u53ef\u89e3\u91cb\u6027\u5728\u5c40\u90e8\u89e3\u91cb\u65b9\u9762\u76f8\u5c0d\u8f03\u597d\u3002\u56e0\u70ba\u5c0d\u65bc\u6bcf\u500b\u55ae\u7368\u7684\u9810\u6e2c\u7d50\u679c\uff0c\u6211\u5011\u53ef\u4ee5\u89e3\u91cb\u70ba\u4ec0\u9ebc\u9019\u4e9b\u9130\u5c45\u88ab\u9078\u4e2d\u4e86\uff0c\u4ee5\u53ca\u9019\u4e9b\u9130\u5c45\u4e2d\u7684\u6a23\u672c\u5982\u4f55\u5f71\u97ff\u9810\u6e2c\u7d50\u679c\u3002\u9019\u7a2e\u65b9\u6cd5\u5728\u5c40\u90e8\u89e3\u91cb\u65b9\u9762\u662f\u76f8\u5c0d\u8f03\u597d\u7684\uff0c\u56e0\u70ba\u6211\u5011\u53ef\u4ee5\u67e5\u770b\u55ae\u500b\u9810\u6e2c\u7684\u904e\u7a0b\u548c\u9078\u64c7\u7684\u9130\u5c45\uff0c\u4e26\u8a55\u4f30\u5b83\u5011\u5c0d\u9810\u6e2c\u7684\u8ca2\u737b\u3002\u5176\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u5c07\u7279\u5fb5\u900f\u904e\u964d\u7dad\u65b9\u5f0f\u6620\u5c04\u5230\u4e09\u7dad\u7a7a\u9593\u5167\uff0c\u4e26\u900f\u904e\u8996\u89ba\u5316\u7684\u65b9\u5f0f\u89c0\u5bdf K \u500b\u9130\u8fd1\u7684\u9ede\u5728\u54ea\u88e1\u3002\u8a73\u7d30\u6559\u5b78\u53ef\u4ee5\u53c3\u8003 \u975e\u76e3\u7763\u5f0f\u5b78\u7fd2-\u964d\u7dad \u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 KNN \u5206\u985e\u9cf6\u5c3e\u82b1\u6735\u7684\u7bc4\u4f8b\u7a0b\u5f0f\uff0c\u540c\u6642\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 kneighbors \u65b9\u6cd5\u4f86\u89e3\u91cb\u6a21\u578b\uff0c\u67e5\u770b\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u3002 from sklearn.datasets import load_iris from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6 iris = load_iris () X = iris . data y = iris . target # \u5207\u5206\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.3 , random_state = 42 , stratify = y ) # \u8a13\u7df4 KNN \u5206\u985e\u5668 knnModel = KNeighborsClassifier ( n_neighbors = 3 ) knnModel . fit ( X_train , y_train ) # \u8a55\u4f30\u6a21\u578b\u7684\u6e96\u78ba\u7387 print ( '\u8a13\u7df4\u96c6: ' , knnModel . score ( X_train , y_train )) print ( '\u6e2c\u8a66\u96c6: ' , knnModel . score ( X_test , y_test )) # \u53d6\u5f97\u7b2c\u4e00\u500b\u6e2c\u8a66\u6a23\u672c\u7684\u6700\u8fd1\u7684\u9130\u5c45 distances , indices = knnModel . kneighbors ( X_test [[ 0 ]]) # \u5c40\u90e8\u89e3\u91cb\uff1a\u986f\u793a\u6700\u8fd1\u9130\u5c45\u7684\u985e\u5225\u548c\u5c0d\u61c9\u7684\u7279\u5fb5\u503c print ( 'Sample belongs to class:' , y_test [ 0 ]) print ( 'Neighbors belong to classes:' , y_train [ indices [ 0 ]]) print ( 'Nearest neighbors:' , X_train [ indices [ 0 ]]) \u57f7\u884c\u7d50\u679c\uff1a \u8a13\u7df4\u96c6: 0.9619047619047619 \u6e2c\u8a66\u96c6: 0.9555555555555556 Sample belongs to class: 2 Neighbors belong to classes: [2 2 2] Nearest neighbors: [[7.4 2.8 6.1 1.9] [7.2 3.2 6. 1.8] [7.6 3. 6.6 2.1]] \u53ef\u4ee5\u770b\u5230\uff0c\u6e2c\u8a66\u96c6\u7684\u7b2c\u4e00\u500b\u6a23\u672c\u5c6c\u65bc\u985e\u5225 2\uff0c\u5176\u6700\u8fd1\u7684 3 \u500b\u9130\u5c45\u4e5f\u90fd\u5c6c\u65bc\u985e\u5225 2\u3002\u900f\u904e kneighbors \u65b9\u6cd5\uff0c\u6211\u5011\u53ef\u4ee5\u5c0d\u6a21\u578b\u505a\u5c40\u90e8\u89e3\u91cb\uff0c\u89e3\u91cb\u6bcf\u500b\u6a23\u672c\u7684\u9810\u6e2c\u662f\u57fa\u65bc\u54ea\u4e9b\u6700\u8fd1\u9130\u5c45\u9032\u884c\u7684\u3002 \u53e6\u5916 kneighbors \u56de\u50b3\u7684\u8cc7\u8a0a\u5305\u62ec: distances: \u8fd4\u56de\u4e00\u500b\u7dad\u5ea6 (n_samples, n_neighbors) \u7684\u9663\u5217\uff0c\u8868\u793a\u6bcf\u500b\u6a23\u672c\u548c\u5b83\u7684\u6700\u8fd1\u9130\u5c45\u4e4b\u9593\u7684\u8ddd\u96e2\u3002 indices: \u8fd4\u56de\u4e00\u500b\u7dad\u5ea6 (n_samples, n_neighbors) \u7684\u9663\u5217\uff0c\u8868\u793a\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u7684\u7d22\u5f15\u3002\u9019\u4e9b\u7d22\u5f15\u53ef\u4ee5\u7528\u4f86\u6aa2\u7d22\u8a13\u7df4\u8cc7\u6599\u4e2d\u5c0d\u61c9\u7684\u6700\u8fd1\u9130\u5c45\u3002 \u5176\u4e2d n_samples \u662f\u6a23\u672c\u6578\u91cf\uff0cn_neighbors \u662f\u9130\u5c45\u6578\u91cf\u3002\u5728\u9019\u88e1\uff0c\u6bcf\u500b\u6a23\u672c\u7684\u6700\u8fd1\u9130\u5c45\u6578\u91cf\u90fd\u662f\u4e8b\u5148\u6307\u5b9a\u7684\u3002\u9019\u500b\u65b9\u6cd5\u56de\u50b3\u7684\u8cc7\u8a0a\u53ef\u4ee5\u7528\u4f86\u7372\u53d6\u6700\u8fd1\u9130\u5c45\u7684\u7279\u5fb5\u548c\u76ee\u6a19\u503c\uff0c\u5f9e\u800c\u9032\u884c\u6a21\u578b\u89e3\u91cb\u548c\u5206\u6790\u3002 \u7576\u7136\u6211\u5011\u4e5f\u53ef\u4ee5\u900f\u904e\u5176\u4ed6\u65b9\u6cd5\u4ee5\u5168\u5c40\u7684\u89c0\u9ede\u89e3\u91cb KNN \u6a21\u578b\uff0c\u50cf\u662f Permutation Importance \u53ef\u4ee5\u8cc7\u6599\u64fe\u52d5\u65b9\u5f0f\u627e\u5230\u91cd\u8981\u7279\u5fb5\u3002\u95dc\u65bc\u9019\u90e8\u5206\u5167\u5bb9\uff0c\u4e4b\u5f8c\u6703\u5c08\u9580\u5beb\u4e00\u7bc7\u6587\u70ba\u5927\u5bb6\u8b1b\u89e3\uff01","title":"[\u5be6\u4f5c] KNN \u7684\u5c40\u90e8\u89e3\u91cb\u6027"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/","text":"[Day 8] \u89e3\u91cb\u7dda\u6027\u6a21\u578b\uff1a\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u7dda\u6027\u8ff4\u6b78\u6a21\u578b \u7dda\u6027\u8ff4\u6b78\u662f\u4e00\u7a2e\u7d71\u8a08\u5b78\u65b9\u6cd5\uff0c\u7528\u65bc\u5efa\u7acb\u81ea\u8b8a\u6578(x)\u548c\u61c9\u8b8a\u6578(y)\u4e4b\u9593\u7684\u7dda\u6027\u95dc\u4fc2\u6a21\u578b\u3002\u7dda\u6027\u8ff4\u6b78\u5047\u8a2d\u61c9\u8b8a\u6578\u662f\u7531\u4e00\u500b\u6216\u591a\u500b\u81ea\u8b8a\u6578\u7dda\u6027\u7d44\u5408\u800c\u6210\u7684\uff0c\u4e14\u81ea\u8b8a\u6578\u4e4b\u9593\u4e0d\u5b58\u5728\u591a\u91cd\u5171\u7dda\u6027\uff0c\u8aa4\u5dee\u9805\u662f\u7368\u7acb\u540c\u5206\u4f48\u7684\uff0c\u4e14\u5448\u73fe\u5e38\u614b\u5206\u4f48\u3002 \u5716\u7247\u4f86\u6e90\uff1a reliawiki \u5728\u7dda\u6027\u8ff4\u6b78\u4e2d\uff0c\u6211\u5011\u5047\u8a2d\u61c9\u8b8a\u6578\u548c\u81ea\u8b8a\u6578\u4e4b\u9593\u5b58\u5728\u4e00\u7a2e\u7dda\u6027\u95dc\u4fc2\uff0c\u4e26\u4f7f\u7528\u6700\u5c0f\u5e73\u65b9\u6cd5\u6216\u68af\u5ea6\u4e0b\u964d\u6cd5\u4f86\u627e\u5230\u6700\u4f73\u64ec\u5408\u76f4\u7dda\u3002\u6574\u500b\u7dda\u6027\u8ff4\u6b78\u7684\u76ee\u6a19\u5c31\u662f\u6700\u5c0f\u5316\u6211\u5011\u7684\u640d\u5931\u51fd\u6578\uff0c\u56e0\u6b64\u6700\u5f8c\u53ef\u4ee5\u7528\u9019\u689d\u76f4\u7dda\u9810\u6e2c\u65b0\u6578\u64da\u9ede\u7684\u503c\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u7dda\u6027\u8ff4\u6b78 (Linear Regression) \u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\uff08\u4fc2\u6578\u89e3\u91cb\u3001\u622a\u8ddd\u89e3\u91cb\uff09 \u63a5\u8457\u6211\u5011\u4f86\u63a2\u8a0e\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u4e00\u7a2e\u5e38\u898b\u7684\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\u662f\u4fc2\u6578\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u904e\u5206\u6790\u8ff4\u6b78\u6a21\u578b\u7684\u4fc2\u6578\uff0c\u4f86\u89e3\u91cb\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002\u5728\u7c21\u55ae\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u81ea\u8b8a\u6578\u7684\u4fc2\u6578\u53ef\u4ee5\u76f4\u63a5\u89e3\u91cb\u70ba\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u4f8b\u5982\u7576\u81ea\u8b8a\u6578\u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0c\u61c9\u8b8a\u6578\u6703\u589e\u52a0\u591a\u5c11\u500b\u55ae\u4f4d\u3002\u5728\u591a\u5143\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u5247\u9700\u8981\u8003\u616e\u591a\u500b\u81ea\u8b8a\u6578\u7684\u5f71\u97ff\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u904e\u63a7\u5236\u5176\u4ed6\u8b8a\u6578\u7684\u5f71\u97ff\uff0c\u4f86\u5206\u6790\u67d0\u4e00\u500b\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002 \u53e6\u4e00\u7a2e\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\u662f\u622a\u8ddd\u89e3\u91cb\u3002\u622a\u8ddd\u5728\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\u8868\u793a\u7576\u6240\u6709\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\uff0c\u901a\u5e38\u88ab\u7a31\u70ba\u6a21\u578b\u7684\u57fa\u6e96\u503c\u3002\u622a\u8ddd\u7684\u89e3\u91cb\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u7576\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u500b\u7c21\u55ae\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u622a\u8ddd\u53ef\u4ee5\u89e3\u91cb\u70ba\u7576\u81ea\u8b8a\u6578\u7b49\u65bc0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\u3002\u5728\u591a\u5143\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u622a\u8ddd\u7684\u89e3\u91cb\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u7576\u6240\u6709\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\uff0c\u9019\u5c0d\u65bc\u7406\u89e3\u6a21\u578b\u7684\u57fa\u6e96\u503c\u548c\u6bd4\u8f03\u4e0d\u540c\u6a21\u578b\u7684\u8868\u73fe\u975e\u5e38\u91cd\u8981\u3002 [\u5be6\u4f5c] \u7dda\u6027\u8ff4\u6b78\uff1a\u7cd6\u5c3f\u75c5\u9810\u6e2c diabetes \u8cc7\u6599\u96c6\u662f\u7531\u7f8e\u570b\u7cd6\u5c3f\u75c5\u8cc7\u6599\u96c6\u4e2d\u9078\u53d6\u7684442\u540d\u75c5\u60a3\u7684\u751f\u7269\u91ab\u5b78\u6578\u64da\u96c6\u5408\u3002\u9019\u4e9b\u6578\u64da\u753110\u500b\u751f\u7406\u7279\u5fb5\u548c1\u500b\u9810\u6e2c\u76ee\u6a19\uff08\u7cd6\u5c3f\u75c5\u60a3\u8005\u5728\u4e00\u5e74\u5f8c\u7684\u75be\u75c5\u9032\u5c55\u60c5\u6cc1\uff09\u7d44\u6210\u3002\u6bcf\u500b\u7279\u5fb5\u7684\u610f\u7fa9\u5982\u4e0b\uff1a Age\uff1a\u5e74\u9f61 Sex\uff1a\u6027\u5225\uff081\u8868\u793a\u7537\u6027\uff0c0\u8868\u793a\u5973\u6027\uff09 Body mass index (BMI)\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578 Average blood pressure (BP)\uff1a\u5e73\u5747\u8840\u58d3 S1\uff1a\u7e3d\u81bd\u56fa\u9187 S2\uff1a\u4f4e\u5bc6\u5ea6\u8102\u86cb\u767d S3\uff1a\u9ad8\u5bc6\u5ea6\u8102\u86cb\u767d S4\uff1a\u7e3d\u81bd\u56fa\u9187/\u9ad8\u5bc6\u5ea6\u8102\u86cb\u767d S5\uff1a\u8840\u6e05\u7518\u6cb9\u4e09\u916f\u6c34\u5e73\u7684\u5c0d\u6578 S6\uff1a\u8840\u7cd6\u6c34\u5e73 from sklearn.datasets import load_diabetes from sklearn.model_selection import train_test_split # \u8f09\u5165Sklearn\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c610\u500b\u8f38\u5165\u7279\u5fb51\u500b\u8f38\u51fa diabetes = load_diabetes () X = diabetes . data # \u8f38\u5165\u7279\u5fb5 y = diabetes . target # \u8f38\u51fa # \u5207\u5206\u8a13\u7df4\u96c6\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.2 , random_state = 42 ) \u4f7f\u7528 Sklearn \u5efa\u7acb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u3002 from sklearn.linear_model import LinearRegression # \u8a13\u7df4\u6a21\u578b linearModel = LinearRegression () linearModel . fit ( X_train , y_train ) \u6a21\u578b\u8a13\u7df4\u597d\u4ee5\u5f8c\uff0c\u5c31\u53ef\u4ee5\u89c0\u5bdf\u7dda\u6027\u6a21\u578b\u7684\u7279\u5fb5\u4fc2\u6578\u4ee5\u53ca\u622a\u8ddd\u3002 # \u53d6\u5f9710\u500b\u7279\u5fb5\u4fc2\u6578 print ( linearModel . coef_ ) # \u53d6\u5f97\u622a\u8ddd print ( linearModel . intercept_ ) \u5728\u672c\u4f8b\u5b50\u4e2d\u8f38\u5165\u6709\u5341\u500b\u7279\u5fb5\uff0c\u56e0\u6b64\u7dda\u6027\u8ff4\u6b78\u5f0f\u4e2d\u6bcf\u500b\u7279\u5fb5\u9805\u90fd\u6703\u5c0d\u61c9\u4e00\u500b\u4fc2\u6578\u3002\u5047\u8a2d\u6211\u5011\u5f9e\u6e2c\u8a66\u96c6\u4e2d\u63d0\u53d6\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u3002\u7531\u65bc\u8f38\u5165\u7279\u5fb5\u5df2\u7d93\u904e\u6a19\u6e96\u5316\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5f88\u5feb\u5730\u89c0\u5bdf\u5404\u9805\u4fc2\u6578\u7684\u5927\u5c0f\u4f86\u8fa6\u5b9a\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002\u53ef\u4ee5\u767c\u73fe\u5728\u4ec0\u9ebc\u90fd\u4e0d\u8f38\u5165\u6642\u6703\u6709\u500b\u57fa\u5e95\u503c(\u622a\u8ddd)151.346\u3002 \u908f\u8f2f\u8ff4\u6b78\u6a21\u578b \u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u5dee\u5225\u5728\u65bc\u7dda\u6027\u8ff4\u6b78\u7684\u76ee\u6a19\u662f\u9810\u6e2c\u9023\u7e8c\u6578\u503c\u578b\u7684\u56e0\u8b8a\u91cf\u3002\u5b83\u57fa\u65bc\u7dda\u6027\u95dc\u4fc2\u5efa\u7acb\u6a21\u578b\uff0c\u4e26\u4e14\u5047\u8a2d\u56e0\u8b8a\u91cf\u548c\u81ea\u8b8a\u91cf\u4e4b\u9593\u5b58\u5728\u7dda\u6027\u95dc\u4fc2\u3002\u800c\u908f\u8f2f\u8ff4\u6b78\u4e5f\u5efa\u7acb\u5728\u4e00\u500b\u7dda\u6027\u6a21\u578b\u7684\u57fa\u790e\u4e0a\uff0c\u4f46\u662f\u5b83\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u901a\u904e\u4e00\u500b\u7a31\u70ba S \u5f62\u66f2\u7dda\uff08sigmoid \u51fd\u6578\uff09\u7684\u8f49\u63db\uff0c\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u6620\u5c04\u52300\u548c1\u4e4b\u9593\uff0c\u9019\u6a23\u9810\u6e2c\u7d50\u679c\u5c31\u8b8a\u6210\u4e86\u4e8c\u5143\u985e\u5225\u3002 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u9019\u500b\u908f\u8f2f\u8ff4\u6b78\u7684\u8f38\u51fa\u5c31\u76f8\u7576\u65bc\uff0c\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u7279\u5fb5\u5224\u65b7\u7d50\u679c\u662f1\u7684\u6a5f\u7387\u6709\u591a\u9ad8\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u908f\u8f2f\u8ff4\u6b78 (Logistic Regression) \u89e3\u91cb\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5 (odds ratio) \u90a3\u9ebc\u908f\u8f2f\u8ff4\u6b78\u8a72\u5982\u4f55\u89e3\u91cb\u5462\uff1f\u9996\u5148\u6211\u5011\u53ef\u4ee5\u8aaa\u9810\u6e2c\u51fa\u4f86\u7684 \u0177 \u76f8\u7576\u65bc\u662f y(i) \u7b49\u65bc1\u7684\u6a5f\u7387\u6709\u591a\u9ad8(\u4f9d\u64da\u4e0a\u9762\u7684\u516c\u5f0f)\u3002\u53e6\u5916\u9084\u53ef\u4ee5\u767c\u73fe\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u6211\u5011\u5982\u679c\u5427 P(y(i)=1) \u9664\u4ee5 P(y(i)=0) \u518d\u53d6 log \u4e4b\u5f8c\u5176\u5be6\u662f\u4e00\u500b\u7dda\u6027\u7684\u95dc\u4fc2\u3002 P(y(i)=1) \u9664\u4ee5 P(y(i)=0) \u5728\u7d71\u8a08\u4e0a\u6709\u500b\u540d\u8a5e\u7a31\u4e4b\u70ba\u52dd\u7b97\uff08odds\uff09\uff0c\u4e5f\u5c31\u662f\u300cY=1\u7684\u6a5f\u7387\u300d\u8207\u300cY=0\u7684\u6a5f\u7387\u300d\u7684\u6bd4\u7387\u3002\u5982\u679c\u4e8b\u4ef6\u767c\u751f\u7684\u6a5f\u7387\u662f p\uff0c\u90a3\u9ebc\u5176\u4e0d\u767c\u751f\u7684\u6a5f\u7387\u5c31\u662f 1-p\uff0c\u90a3\u9ebc\u6b64\u4e8b\u4ef6\u7684\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p)\u3002 \u4ee5\u9285\u677f\u7684\u4f8b\u5b50\u4f86\u8aaa\uff0c\u5047\u8a2d\u6211\u5011\u60f3\u8981\u9810\u6e2c\u4e00\u500b\u516c\u5e73\u7684\u9285\u677f\u7ffb\u8f49\u51fa\u73fe\u6b63\u9762\u7684\u6a5f\u7387\uff0c\u7531\u65bc\u6b63\u53cd\u9762\u51fa\u73fe\u7684\u6a5f\u7387\u76f8\u7b49\uff0c\u56e0\u6b64 p=1/2\u3002\u6839\u64da\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5176\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p) = (1/2) / (1/2) = 1\uff0c\u4e5f\u5c31\u662f\u8aaa\u7ffb\u8f49\u516c\u5e73\u9285\u677f\u51fa\u73fe\u6b63\u9762\u7684\u52dd\u7b97\u6bd4\u662f1\u3002 \u63a5\u8457\u518d\u4ee5\u4e00\u500b\u4e0d\u516c\u5e73\u7684\u9285\u677f\u70ba\u4f8b\uff0c\u5047\u8a2d\u9019\u500b\u9285\u677f\u6b63\u9762\u671d\u4e0a\u7684\u6a5f\u7387\u662f3/5\uff0c\u56e0\u6b64 p=3/5\u3002\u6839\u64da\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5176\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p) = (3/5) / (2/5) = 3/2\uff0c\u4e5f\u5c31\u662f\u8aaa\u7ffb\u8f49\u9019\u500b\u4e0d\u516c\u5e73\u7684\u9285\u677f\u51fa\u73fe\u6b63\u9762\u7684\u52dd\u7b97\u6bd4\u662f 3/2\u3002 \u57fa\u65bc\u4e0a\u8ff0\u4f8b\u5b50\u6211\u5011\u53ef\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u7d50\u8ad6\uff1a - \u7576 odds \u5927\u65bc1\u6642\uff0c\u8868\u793a\u4e8b\u4ef6\u7684\u767c\u751f\u6a5f\u7387\u8f03\u9ad8\uff0c\u6b64\u6642\u56e0\u8b8a\u6578 y \u70ba1\u7684\u6a5f\u7387\u8f03\u5927\u3002 - \u7576 odds \u4ecb\u65bc0\u548c1\u4e4b\u9593\u6642\uff0c\u8868\u793a\u4e8b\u4ef6\u7684\u767c\u751f\u6a5f\u7387\u8f03\u4f4e\uff0c\u6b64\u6642\u56e0\u8b8a\u6578 y \u70ba0\u7684\u6a5f\u7387\u8f03\u5927\u3002 \u5047\u8a2d\u5c0d\u6578\u52dd\u7b97\uff08log odds\uff09\u662f\u4e00\u500b\u7dda\u6027\u51fd\u6578\uff0c\u6211\u5011\u628a log \u642c\u79fb\u5230\u53f3\u908a\u8b8a\u6210\u53d6 exp \u8b8a\u6210\u4ee5\u4e0b\u5f0f\u5b50\uff1a \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u5229\u7528 odds ratio\uff08\u52dd\u7b97\u6bd4\uff09\u4f86\u89e3\u91cb\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002odds ratio \u662f\u6307\u7576\u4e00\u500b\u81ea\u8b8a\u6578 X \u7684\u503c\u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0c\u5c0d\u61c9\u7684\u52dd\u7b97\u6703\u4e58\u4e0a\u4e00\u500b\u500d\u6578\uff0c\u9019\u500b\u500d\u6578\u5373\u70ba odds ratio\u3002 \u5177\u9ad4\u4f86\u8aaa\uff0c\u5982\u679c\u4e00\u500b\u8b8a\u6578 X \u7684 odds ratio \u70ba 2\uff0c\u8868\u793a\u7576 X \u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0cY=1 \u7684\u6a5f\u7387\u76f8\u5c0d\u65bc Y=0 \u7684\u6a5f\u7387\u5c07\u6703\u589e\u52a0 2 \u500d\u3002\u800c\u5982\u679c odds ratio \u70ba 0.5\uff0c\u5247\u8868\u793a\u7576 X \u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0cY=1 \u7684\u6a5f\u7387\u76f8\u5c0d\u65bc Y=0 \u7684\u6a5f\u7387\u5c07\u6703\u6e1b\u5c11\u4e00\u534a\u3002 \u5982\u679c odds ratio \u8d8a\u5927\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u8d8a\u5927 \u5982\u679c odds ratio \u70ba 1\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u6c92\u6709\u5f71\u97ff \u5982\u679c odds ratio \u5c0f\u65bc 1\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u8207\u53cd\u61c9\u8b8a\u6578\u5448\u73fe\u53cd\u5411\u95dc\u4fc2\u3002 \u7136\u800c\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u6bcf\u500b\u81ea\u8b8a\u91cf\u90fd\u6703\u6709\u4e00\u500b odds ratio \u503c\uff0c\u53ef\u4ee5\u901a\u904e\u6bd4\u8f03 odds ratio \u503c\u7684\u5927\u5c0f\u4f86\u5224\u65b7\u54ea\u4e9b\u81ea\u8b8a\u91cf\u5c0d\u4e8b\u4ef6\u767c\u751f\u7684\u6a5f\u7387\u6709\u8f03\u5927\u7684\u5f71\u97ff\u3002\u5728 sklearn \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 LogisticRegression \u6a21\u578b\u7684 coef_ \u5c6c\u6027\u7372\u53d6\u7279\u5fb5\u7684\u4fc2\u6578\uff0c\u4e26\u5c07\u5176\u6307\u6578\u5316\u4ee5\u5f97\u5230 odds ratio\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u7c21\u55ae\u7684\u7bc4\u4f8b code\uff1a from sklearn.linear_model import LogisticRegression import numpy as np # \u8f09\u5165\u81ea\u5df1\u7684\u8cc7\u6599\u96c6 X = ... \u7565 y = ... \u7565 # \u5efa\u7acb Logistic Regression \u6a21\u578b\u4e26\u8a13\u7df4 model = LogisticRegression () model . fit ( X , y ) # \u7372\u53d6\u4fc2\u6578 coef = model . coef_ # \u5c07\u4fc2\u6578\u6307\u6578\u5316\u5f97\u5230 odds ratio odds_ratio = np . exp ( coef ) \u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0cX \u662f\u8a13\u7df4\u8cc7\u6599\uff0cy \u662f\u6bcf\u7b46\u8cc7\u6599\u5c0d\u61c9\u7684\u6a19\u7c64\u3002\u7372\u53d6 coef_ \u5c6c\u6027\u4e4b\u5f8c\uff0c\u53ef\u4ee5\u4f7f\u7528 np.exp() \u51fd\u6578\u5c07\u4fc2\u6578\u6307\u6578\u5316\u3002\u9019\u6a23\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7279\u5fb5\u7684 odds ratio \u503c\uff0c\u8fd1\u4e00\u6b65\u7684\u5206\u6790\u7576 X \u7684\u503c\u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0c\u6240\u5c0d\u61c9\u7684\u52dd\u7b97\u4f86\u89c0\u5bdf\u7279\u5fb5\u91cd\u8981\u6027\u3002 \u5c0f\u7d50 \u7dda\u6027\u8ff4\u6b78\u7528\u65bc\u9810\u6e2c\u4e00\u500b\u9023\u7e8c\u7684\u6578\u503c\uff0c\u4f8b\u5982\u9810\u6e2c\u80a1\u7968\u7684\u50f9\u683c\u6216\u623f\u5c4b\u7684\u50f9\u683c\u7b49\u3002\u5b83\u5047\u8a2d\u81ea\u8b8a\u6578\u548c\u56e0\u8b8a\u6578\u4e4b\u9593\u6709\u7dda\u6027\u95dc\u4fc2\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u7576\u81ea\u8b8a\u6578\u7684\u503c\u589e\u52a0\u4e00\u500b\u55ae\u4f4d\u6642\uff0c\u56e0\u8b8a\u6578\u7684\u503c\u4e5f\u6703\u6309\u6bd4\u4f8b\u589e\u52a0\u6216\u6e1b\u5c11\u3002 \u908f\u8f2f\u8ff4\u6b78\u7528\u65bc\u9810\u6e2c\u4e8c\u5143\u8b8a\u6578\uff0c\u4f8b\u5982\u9810\u6e2c\u67d0\u4eba\u662f\u5426\u60a3\u6709\u67d0\u7a2e\u75be\u75c5\u3001\u96fb\u5b50\u90f5\u4ef6\u662f\u5426\u70ba\u5783\u573e\u90f5\u4ef6\u7b49\u3002\u908f\u8f2f\u8ff4\u6b78\u4f7f\u7528 sigmoid \u51fd\u6578\u5c07\u8f38\u51fa\u9650\u5236\u57280\u52301\u4e4b\u9593\uff0c\u8868\u793a\u56e0\u8b8a\u6578\u5c6c\u65bc\u67d0\u500b\u985e\u5225\u7684\u6a5f\u7387\u3002\u5982\u679c\u6a5f\u7387\u5927\u65bc0.5\uff0c\u90a3\u9ebc\u6211\u5011\u5c31\u9810\u6e2c\u70ba1\uff0c\u5426\u5247\u9810\u6e2c\u70ba0\u3002 \u7dda\u6027\u8ff4\u6b78\u7684\u57fa\u672c\u6982\u5ff5\u548c\u5047\u8a2d\u662f\u5efa\u7acb\u5728\u6578\u5b78\u7d71\u8a08\u5b78\u7406\u8ad6\u4e0a\uff0c\u7406\u89e3\u548c\u638c\u63e1\u9019\u4e9b\u6982\u5ff5\u548c\u5047\u8a2d\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u66f4\u597d\u5730\u61c9\u7528\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u9032\u884c\u5be6\u969b\u554f\u984c\u7684\u89e3\u6c7a\u3002\u7d9c\u4e0a\u6240\u8ff0\uff0c\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u4fc2\u6578\u548c\u622a\u8ddd\u662f\u89e3\u91cb\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u548c\u6a21\u578b\u57fa\u6e96\u503c\u7684\u91cd\u8981\u56e0\u7d20\uff0c\u900f\u904e\u5c0d\u9019\u4e9b\u56e0\u7d20\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u884c\u70ba\u3002","title":"[Day 8] \u89e3\u91cb\u7dda\u6027\u6a21\u578b\uff1a\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#day-8","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a","title":"[Day 8] \u89e3\u91cb\u7dda\u6027\u6a21\u578b\uff1a\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#_1","text":"\u7dda\u6027\u8ff4\u6b78\u662f\u4e00\u7a2e\u7d71\u8a08\u5b78\u65b9\u6cd5\uff0c\u7528\u65bc\u5efa\u7acb\u81ea\u8b8a\u6578(x)\u548c\u61c9\u8b8a\u6578(y)\u4e4b\u9593\u7684\u7dda\u6027\u95dc\u4fc2\u6a21\u578b\u3002\u7dda\u6027\u8ff4\u6b78\u5047\u8a2d\u61c9\u8b8a\u6578\u662f\u7531\u4e00\u500b\u6216\u591a\u500b\u81ea\u8b8a\u6578\u7dda\u6027\u7d44\u5408\u800c\u6210\u7684\uff0c\u4e14\u81ea\u8b8a\u6578\u4e4b\u9593\u4e0d\u5b58\u5728\u591a\u91cd\u5171\u7dda\u6027\uff0c\u8aa4\u5dee\u9805\u662f\u7368\u7acb\u540c\u5206\u4f48\u7684\uff0c\u4e14\u5448\u73fe\u5e38\u614b\u5206\u4f48\u3002 \u5716\u7247\u4f86\u6e90\uff1a reliawiki \u5728\u7dda\u6027\u8ff4\u6b78\u4e2d\uff0c\u6211\u5011\u5047\u8a2d\u61c9\u8b8a\u6578\u548c\u81ea\u8b8a\u6578\u4e4b\u9593\u5b58\u5728\u4e00\u7a2e\u7dda\u6027\u95dc\u4fc2\uff0c\u4e26\u4f7f\u7528\u6700\u5c0f\u5e73\u65b9\u6cd5\u6216\u68af\u5ea6\u4e0b\u964d\u6cd5\u4f86\u627e\u5230\u6700\u4f73\u64ec\u5408\u76f4\u7dda\u3002\u6574\u500b\u7dda\u6027\u8ff4\u6b78\u7684\u76ee\u6a19\u5c31\u662f\u6700\u5c0f\u5316\u6211\u5011\u7684\u640d\u5931\u51fd\u6578\uff0c\u56e0\u6b64\u6700\u5f8c\u53ef\u4ee5\u7528\u9019\u689d\u76f4\u7dda\u9810\u6e2c\u65b0\u6578\u64da\u9ede\u7684\u503c\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u7dda\u6027\u8ff4\u6b78 (Linear Regression)","title":"\u7dda\u6027\u8ff4\u6b78\u6a21\u578b"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#_2","text":"\u63a5\u8457\u6211\u5011\u4f86\u63a2\u8a0e\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u4e00\u7a2e\u5e38\u898b\u7684\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\u662f\u4fc2\u6578\u89e3\u91cb\u3002\u9019\u7a2e\u65b9\u6cd5\u901a\u904e\u5206\u6790\u8ff4\u6b78\u6a21\u578b\u7684\u4fc2\u6578\uff0c\u4f86\u89e3\u91cb\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002\u5728\u7c21\u55ae\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u81ea\u8b8a\u6578\u7684\u4fc2\u6578\u53ef\u4ee5\u76f4\u63a5\u89e3\u91cb\u70ba\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u7a0b\u5ea6\uff0c\u4f8b\u5982\u7576\u81ea\u8b8a\u6578\u589e\u52a01\u500b\u55ae\u4f4d\u6642\uff0c\u61c9\u8b8a\u6578\u6703\u589e\u52a0\u591a\u5c11\u500b\u55ae\u4f4d\u3002\u5728\u591a\u5143\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u5247\u9700\u8981\u8003\u616e\u591a\u500b\u81ea\u8b8a\u6578\u7684\u5f71\u97ff\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u904e\u63a7\u5236\u5176\u4ed6\u8b8a\u6578\u7684\u5f71\u97ff\uff0c\u4f86\u5206\u6790\u67d0\u4e00\u500b\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002 \u53e6\u4e00\u7a2e\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\u662f\u622a\u8ddd\u89e3\u91cb\u3002\u622a\u8ddd\u5728\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\u8868\u793a\u7576\u6240\u6709\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\uff0c\u901a\u5e38\u88ab\u7a31\u70ba\u6a21\u578b\u7684\u57fa\u6e96\u503c\u3002\u622a\u8ddd\u7684\u89e3\u91cb\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u7576\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u500b\u7c21\u55ae\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u622a\u8ddd\u53ef\u4ee5\u89e3\u91cb\u70ba\u7576\u81ea\u8b8a\u6578\u7b49\u65bc0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\u3002\u5728\u591a\u5143\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u622a\u8ddd\u7684\u89e3\u91cb\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u7406\u89e3\u7576\u6240\u6709\u81ea\u8b8a\u6578\u5747\u70ba0\u6642\uff0c\u61c9\u8b8a\u6578\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\uff0c\u9019\u5c0d\u65bc\u7406\u89e3\u6a21\u578b\u7684\u57fa\u6e96\u503c\u548c\u6bd4\u8f03\u4e0d\u540c\u6a21\u578b\u7684\u8868\u73fe\u975e\u5e38\u91cd\u8981\u3002","title":"\u89e3\u91cb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5\uff08\u4fc2\u6578\u89e3\u91cb\u3001\u622a\u8ddd\u89e3\u91cb\uff09"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#_3","text":"diabetes \u8cc7\u6599\u96c6\u662f\u7531\u7f8e\u570b\u7cd6\u5c3f\u75c5\u8cc7\u6599\u96c6\u4e2d\u9078\u53d6\u7684442\u540d\u75c5\u60a3\u7684\u751f\u7269\u91ab\u5b78\u6578\u64da\u96c6\u5408\u3002\u9019\u4e9b\u6578\u64da\u753110\u500b\u751f\u7406\u7279\u5fb5\u548c1\u500b\u9810\u6e2c\u76ee\u6a19\uff08\u7cd6\u5c3f\u75c5\u60a3\u8005\u5728\u4e00\u5e74\u5f8c\u7684\u75be\u75c5\u9032\u5c55\u60c5\u6cc1\uff09\u7d44\u6210\u3002\u6bcf\u500b\u7279\u5fb5\u7684\u610f\u7fa9\u5982\u4e0b\uff1a Age\uff1a\u5e74\u9f61 Sex\uff1a\u6027\u5225\uff081\u8868\u793a\u7537\u6027\uff0c0\u8868\u793a\u5973\u6027\uff09 Body mass index (BMI)\uff1a\u8eab\u9ad4\u8cea\u91cf\u6307\u6578 Average blood pressure (BP)\uff1a\u5e73\u5747\u8840\u58d3 S1\uff1a\u7e3d\u81bd\u56fa\u9187 S2\uff1a\u4f4e\u5bc6\u5ea6\u8102\u86cb\u767d S3\uff1a\u9ad8\u5bc6\u5ea6\u8102\u86cb\u767d S4\uff1a\u7e3d\u81bd\u56fa\u9187/\u9ad8\u5bc6\u5ea6\u8102\u86cb\u767d S5\uff1a\u8840\u6e05\u7518\u6cb9\u4e09\u916f\u6c34\u5e73\u7684\u5c0d\u6578 S6\uff1a\u8840\u7cd6\u6c34\u5e73 from sklearn.datasets import load_diabetes from sklearn.model_selection import train_test_split # \u8f09\u5165Sklearn\u7cd6\u5c3f\u75c5\u9810\u6e2c\u8cc7\u6599\u96c610\u500b\u8f38\u5165\u7279\u5fb51\u500b\u8f38\u51fa diabetes = load_diabetes () X = diabetes . data # \u8f38\u5165\u7279\u5fb5 y = diabetes . target # \u8f38\u51fa # \u5207\u5206\u8a13\u7df4\u96c6\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.2 , random_state = 42 ) \u4f7f\u7528 Sklearn \u5efa\u7acb\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u3002 from sklearn.linear_model import LinearRegression # \u8a13\u7df4\u6a21\u578b linearModel = LinearRegression () linearModel . fit ( X_train , y_train ) \u6a21\u578b\u8a13\u7df4\u597d\u4ee5\u5f8c\uff0c\u5c31\u53ef\u4ee5\u89c0\u5bdf\u7dda\u6027\u6a21\u578b\u7684\u7279\u5fb5\u4fc2\u6578\u4ee5\u53ca\u622a\u8ddd\u3002 # \u53d6\u5f9710\u500b\u7279\u5fb5\u4fc2\u6578 print ( linearModel . coef_ ) # \u53d6\u5f97\u622a\u8ddd print ( linearModel . intercept_ ) \u5728\u672c\u4f8b\u5b50\u4e2d\u8f38\u5165\u6709\u5341\u500b\u7279\u5fb5\uff0c\u56e0\u6b64\u7dda\u6027\u8ff4\u6b78\u5f0f\u4e2d\u6bcf\u500b\u7279\u5fb5\u9805\u90fd\u6703\u5c0d\u61c9\u4e00\u500b\u4fc2\u6578\u3002\u5047\u8a2d\u6211\u5011\u5f9e\u6e2c\u8a66\u96c6\u4e2d\u63d0\u53d6\u4e00\u7b46\u8cc7\u6599\u9810\u6e2c\u3002\u7531\u65bc\u8f38\u5165\u7279\u5fb5\u5df2\u7d93\u904e\u6a19\u6e96\u5316\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5f88\u5feb\u5730\u89c0\u5bdf\u5404\u9805\u4fc2\u6578\u7684\u5927\u5c0f\u4f86\u8fa6\u5b9a\u7279\u5fb5\u91cd\u8981\u7a0b\u5ea6\u3002\u53ef\u4ee5\u767c\u73fe\u5728\u4ec0\u9ebc\u90fd\u4e0d\u8f38\u5165\u6642\u6703\u6709\u500b\u57fa\u5e95\u503c(\u622a\u8ddd)151.346\u3002","title":"[\u5be6\u4f5c] \u7dda\u6027\u8ff4\u6b78\uff1a\u7cd6\u5c3f\u75c5\u9810\u6e2c"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#_4","text":"\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u5dee\u5225\u5728\u65bc\u7dda\u6027\u8ff4\u6b78\u7684\u76ee\u6a19\u662f\u9810\u6e2c\u9023\u7e8c\u6578\u503c\u578b\u7684\u56e0\u8b8a\u91cf\u3002\u5b83\u57fa\u65bc\u7dda\u6027\u95dc\u4fc2\u5efa\u7acb\u6a21\u578b\uff0c\u4e26\u4e14\u5047\u8a2d\u56e0\u8b8a\u91cf\u548c\u81ea\u8b8a\u91cf\u4e4b\u9593\u5b58\u5728\u7dda\u6027\u95dc\u4fc2\u3002\u800c\u908f\u8f2f\u8ff4\u6b78\u4e5f\u5efa\u7acb\u5728\u4e00\u500b\u7dda\u6027\u6a21\u578b\u7684\u57fa\u790e\u4e0a\uff0c\u4f46\u662f\u5b83\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u901a\u904e\u4e00\u500b\u7a31\u70ba S \u5f62\u66f2\u7dda\uff08sigmoid \u51fd\u6578\uff09\u7684\u8f49\u63db\uff0c\u5c07\u7dda\u6027\u6a21\u578b\u7684\u8f38\u51fa\u6620\u5c04\u52300\u548c1\u4e4b\u9593\uff0c\u9019\u6a23\u9810\u6e2c\u7d50\u679c\u5c31\u8b8a\u6210\u4e86\u4e8c\u5143\u985e\u5225\u3002 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u7406\u89e3\u9019\u500b\u908f\u8f2f\u8ff4\u6b78\u7684\u8f38\u51fa\u5c31\u76f8\u7576\u65bc\uff0c\u6a21\u578b\u6839\u64da\u8f38\u5165\u7684\u7279\u5fb5\u5224\u65b7\u7d50\u679c\u662f1\u7684\u6a5f\u7387\u6709\u591a\u9ad8\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u908f\u8f2f\u8ff4\u6b78 (Logistic Regression)","title":"\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#odds-ratio","text":"\u90a3\u9ebc\u908f\u8f2f\u8ff4\u6b78\u8a72\u5982\u4f55\u89e3\u91cb\u5462\uff1f\u9996\u5148\u6211\u5011\u53ef\u4ee5\u8aaa\u9810\u6e2c\u51fa\u4f86\u7684 \u0177 \u76f8\u7576\u65bc\u662f y(i) \u7b49\u65bc1\u7684\u6a5f\u7387\u6709\u591a\u9ad8(\u4f9d\u64da\u4e0a\u9762\u7684\u516c\u5f0f)\u3002\u53e6\u5916\u9084\u53ef\u4ee5\u767c\u73fe\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u6211\u5011\u5982\u679c\u5427 P(y(i)=1) \u9664\u4ee5 P(y(i)=0) \u518d\u53d6 log \u4e4b\u5f8c\u5176\u5be6\u662f\u4e00\u500b\u7dda\u6027\u7684\u95dc\u4fc2\u3002 P(y(i)=1) \u9664\u4ee5 P(y(i)=0) \u5728\u7d71\u8a08\u4e0a\u6709\u500b\u540d\u8a5e\u7a31\u4e4b\u70ba\u52dd\u7b97\uff08odds\uff09\uff0c\u4e5f\u5c31\u662f\u300cY=1\u7684\u6a5f\u7387\u300d\u8207\u300cY=0\u7684\u6a5f\u7387\u300d\u7684\u6bd4\u7387\u3002\u5982\u679c\u4e8b\u4ef6\u767c\u751f\u7684\u6a5f\u7387\u662f p\uff0c\u90a3\u9ebc\u5176\u4e0d\u767c\u751f\u7684\u6a5f\u7387\u5c31\u662f 1-p\uff0c\u90a3\u9ebc\u6b64\u4e8b\u4ef6\u7684\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p)\u3002 \u4ee5\u9285\u677f\u7684\u4f8b\u5b50\u4f86\u8aaa\uff0c\u5047\u8a2d\u6211\u5011\u60f3\u8981\u9810\u6e2c\u4e00\u500b\u516c\u5e73\u7684\u9285\u677f\u7ffb\u8f49\u51fa\u73fe\u6b63\u9762\u7684\u6a5f\u7387\uff0c\u7531\u65bc\u6b63\u53cd\u9762\u51fa\u73fe\u7684\u6a5f\u7387\u76f8\u7b49\uff0c\u56e0\u6b64 p=1/2\u3002\u6839\u64da\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5176\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p) = (1/2) / (1/2) = 1\uff0c\u4e5f\u5c31\u662f\u8aaa\u7ffb\u8f49\u516c\u5e73\u9285\u677f\u51fa\u73fe\u6b63\u9762\u7684\u52dd\u7b97\u6bd4\u662f1\u3002 \u63a5\u8457\u518d\u4ee5\u4e00\u500b\u4e0d\u516c\u5e73\u7684\u9285\u677f\u70ba\u4f8b\uff0c\u5047\u8a2d\u9019\u500b\u9285\u677f\u6b63\u9762\u671d\u4e0a\u7684\u6a5f\u7387\u662f3/5\uff0c\u56e0\u6b64 p=3/5\u3002\u6839\u64da\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5176\u52dd\u7b97\u6bd4\u5c31\u662f p/(1-p) = (3/5) / (2/5) = 3/2\uff0c\u4e5f\u5c31\u662f\u8aaa\u7ffb\u8f49\u9019\u500b\u4e0d\u516c\u5e73\u7684\u9285\u677f\u51fa\u73fe\u6b63\u9762\u7684\u52dd\u7b97\u6bd4\u662f 3/2\u3002 \u57fa\u65bc\u4e0a\u8ff0\u4f8b\u5b50\u6211\u5011\u53ef\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u7d50\u8ad6\uff1a - \u7576 odds \u5927\u65bc1\u6642\uff0c\u8868\u793a\u4e8b\u4ef6\u7684\u767c\u751f\u6a5f\u7387\u8f03\u9ad8\uff0c\u6b64\u6642\u56e0\u8b8a\u6578 y \u70ba1\u7684\u6a5f\u7387\u8f03\u5927\u3002 - \u7576 odds \u4ecb\u65bc0\u548c1\u4e4b\u9593\u6642\uff0c\u8868\u793a\u4e8b\u4ef6\u7684\u767c\u751f\u6a5f\u7387\u8f03\u4f4e\uff0c\u6b64\u6642\u56e0\u8b8a\u6578 y \u70ba0\u7684\u6a5f\u7387\u8f03\u5927\u3002 \u5047\u8a2d\u5c0d\u6578\u52dd\u7b97\uff08log odds\uff09\u662f\u4e00\u500b\u7dda\u6027\u51fd\u6578\uff0c\u6211\u5011\u628a log \u642c\u79fb\u5230\u53f3\u908a\u8b8a\u6210\u53d6 exp \u8b8a\u6210\u4ee5\u4e0b\u5f0f\u5b50\uff1a \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u5229\u7528 odds ratio\uff08\u52dd\u7b97\u6bd4\uff09\u4f86\u89e3\u91cb\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u3002odds ratio \u662f\u6307\u7576\u4e00\u500b\u81ea\u8b8a\u6578 X \u7684\u503c\u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0c\u5c0d\u61c9\u7684\u52dd\u7b97\u6703\u4e58\u4e0a\u4e00\u500b\u500d\u6578\uff0c\u9019\u500b\u500d\u6578\u5373\u70ba odds ratio\u3002 \u5177\u9ad4\u4f86\u8aaa\uff0c\u5982\u679c\u4e00\u500b\u8b8a\u6578 X \u7684 odds ratio \u70ba 2\uff0c\u8868\u793a\u7576 X \u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0cY=1 \u7684\u6a5f\u7387\u76f8\u5c0d\u65bc Y=0 \u7684\u6a5f\u7387\u5c07\u6703\u589e\u52a0 2 \u500d\u3002\u800c\u5982\u679c odds ratio \u70ba 0.5\uff0c\u5247\u8868\u793a\u7576 X \u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0cY=1 \u7684\u6a5f\u7387\u76f8\u5c0d\u65bc Y=0 \u7684\u6a5f\u7387\u5c07\u6703\u6e1b\u5c11\u4e00\u534a\u3002 \u5982\u679c odds ratio \u8d8a\u5927\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u8d8a\u5927 \u5982\u679c odds ratio \u70ba 1\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u5c0d\u65bc\u53cd\u61c9\u8b8a\u6578\u6c92\u6709\u5f71\u97ff \u5982\u679c odds ratio \u5c0f\u65bc 1\uff0c\u8868\u793a\u8a72\u81ea\u8b8a\u6578\u8207\u53cd\u61c9\u8b8a\u6578\u5448\u73fe\u53cd\u5411\u95dc\u4fc2\u3002 \u7136\u800c\u5728\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u4e2d\uff0c\u6bcf\u500b\u81ea\u8b8a\u91cf\u90fd\u6703\u6709\u4e00\u500b odds ratio \u503c\uff0c\u53ef\u4ee5\u901a\u904e\u6bd4\u8f03 odds ratio \u503c\u7684\u5927\u5c0f\u4f86\u5224\u65b7\u54ea\u4e9b\u81ea\u8b8a\u91cf\u5c0d\u4e8b\u4ef6\u767c\u751f\u7684\u6a5f\u7387\u6709\u8f03\u5927\u7684\u5f71\u97ff\u3002\u5728 sklearn \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 LogisticRegression \u6a21\u578b\u7684 coef_ \u5c6c\u6027\u7372\u53d6\u7279\u5fb5\u7684\u4fc2\u6578\uff0c\u4e26\u5c07\u5176\u6307\u6578\u5316\u4ee5\u5f97\u5230 odds ratio\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u7c21\u55ae\u7684\u7bc4\u4f8b code\uff1a from sklearn.linear_model import LogisticRegression import numpy as np # \u8f09\u5165\u81ea\u5df1\u7684\u8cc7\u6599\u96c6 X = ... \u7565 y = ... \u7565 # \u5efa\u7acb Logistic Regression \u6a21\u578b\u4e26\u8a13\u7df4 model = LogisticRegression () model . fit ( X , y ) # \u7372\u53d6\u4fc2\u6578 coef = model . coef_ # \u5c07\u4fc2\u6578\u6307\u6578\u5316\u5f97\u5230 odds ratio odds_ratio = np . exp ( coef ) \u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0cX \u662f\u8a13\u7df4\u8cc7\u6599\uff0cy \u662f\u6bcf\u7b46\u8cc7\u6599\u5c0d\u61c9\u7684\u6a19\u7c64\u3002\u7372\u53d6 coef_ \u5c6c\u6027\u4e4b\u5f8c\uff0c\u53ef\u4ee5\u4f7f\u7528 np.exp() \u51fd\u6578\u5c07\u4fc2\u6578\u6307\u6578\u5316\u3002\u9019\u6a23\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7279\u5fb5\u7684 odds ratio \u503c\uff0c\u8fd1\u4e00\u6b65\u7684\u5206\u6790\u7576 X \u7684\u503c\u589e\u52a0 1 \u55ae\u4f4d\u6642\uff0c\u6240\u5c0d\u61c9\u7684\u52dd\u7b97\u4f86\u89c0\u5bdf\u7279\u5fb5\u91cd\u8981\u6027\u3002","title":"\u89e3\u91cb\u908f\u8f2f\u8ff4\u6b78\u6a21\u578b\u7684\u65b9\u6cd5 (odds ratio)"},{"location":"8.\u89e3\u91cb\u7dda\u6027\u6a21\u578b:\u63a2\u7d22\u7dda\u6027\u8ff4\u6b78\u548c\u908f\u8f2f\u8ff4\u6b78\u7684\u53ef\u89e3\u91cb\u6027/#_5","text":"\u7dda\u6027\u8ff4\u6b78\u7528\u65bc\u9810\u6e2c\u4e00\u500b\u9023\u7e8c\u7684\u6578\u503c\uff0c\u4f8b\u5982\u9810\u6e2c\u80a1\u7968\u7684\u50f9\u683c\u6216\u623f\u5c4b\u7684\u50f9\u683c\u7b49\u3002\u5b83\u5047\u8a2d\u81ea\u8b8a\u6578\u548c\u56e0\u8b8a\u6578\u4e4b\u9593\u6709\u7dda\u6027\u95dc\u4fc2\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u7576\u81ea\u8b8a\u6578\u7684\u503c\u589e\u52a0\u4e00\u500b\u55ae\u4f4d\u6642\uff0c\u56e0\u8b8a\u6578\u7684\u503c\u4e5f\u6703\u6309\u6bd4\u4f8b\u589e\u52a0\u6216\u6e1b\u5c11\u3002 \u908f\u8f2f\u8ff4\u6b78\u7528\u65bc\u9810\u6e2c\u4e8c\u5143\u8b8a\u6578\uff0c\u4f8b\u5982\u9810\u6e2c\u67d0\u4eba\u662f\u5426\u60a3\u6709\u67d0\u7a2e\u75be\u75c5\u3001\u96fb\u5b50\u90f5\u4ef6\u662f\u5426\u70ba\u5783\u573e\u90f5\u4ef6\u7b49\u3002\u908f\u8f2f\u8ff4\u6b78\u4f7f\u7528 sigmoid \u51fd\u6578\u5c07\u8f38\u51fa\u9650\u5236\u57280\u52301\u4e4b\u9593\uff0c\u8868\u793a\u56e0\u8b8a\u6578\u5c6c\u65bc\u67d0\u500b\u985e\u5225\u7684\u6a5f\u7387\u3002\u5982\u679c\u6a5f\u7387\u5927\u65bc0.5\uff0c\u90a3\u9ebc\u6211\u5011\u5c31\u9810\u6e2c\u70ba1\uff0c\u5426\u5247\u9810\u6e2c\u70ba0\u3002 \u7dda\u6027\u8ff4\u6b78\u7684\u57fa\u672c\u6982\u5ff5\u548c\u5047\u8a2d\u662f\u5efa\u7acb\u5728\u6578\u5b78\u7d71\u8a08\u5b78\u7406\u8ad6\u4e0a\uff0c\u7406\u89e3\u548c\u638c\u63e1\u9019\u4e9b\u6982\u5ff5\u548c\u5047\u8a2d\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u66f4\u597d\u5730\u61c9\u7528\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u9032\u884c\u5be6\u969b\u554f\u984c\u7684\u89e3\u6c7a\u3002\u7d9c\u4e0a\u6240\u8ff0\uff0c\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u4fc2\u6578\u548c\u622a\u8ddd\u662f\u89e3\u91cb\u81ea\u8b8a\u6578\u5c0d\u61c9\u8b8a\u6578\u7684\u5f71\u97ff\u548c\u6a21\u578b\u57fa\u6e96\u503c\u7684\u91cd\u8981\u56e0\u7d20\uff0c\u900f\u904e\u5c0d\u9019\u4e9b\u56e0\u7d20\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u7dda\u6027\u8ff4\u6b78\u6a21\u578b\u7684\u884c\u70ba\u3002","title":"\u5c0f\u7d50"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/","text":"[Day 9] \u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5\uff1a\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027 \u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u900f\u904e\u7279\u5fb5\u91cd\u8981\u6027\u4e86\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b \u6c7a\u7b56\u6a39 \u6c7a\u7b56\u6a39\u662f\u4e00\u7a2e\u76e3\u7763\u5f0f\u5b78\u7fd2\u6f14\u7b97\u6cd5\uff0c\u7528\u65bc\u89e3\u6c7a\u5206\u985e\u6216\u8ff4\u6b78\u554f\u984c\u3002\u8a72\u65b9\u6cd5\u900f\u904e\u5c0d\u8a13\u7df4\u96c6\u8cc7\u6599\u7684\u5206\u6790\u4f86\u5efa\u69cb\u4e00\u68f5\u6a39\u72c0\u7d50\u69cb\u7684\u6a21\u578b\uff0c\u5176\u4e2d\u6bcf\u500b\u5167\u90e8\u7bc0\u9ede\u90fd\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\uff0c\u6bcf\u500b\u8449\u5b50\u7bc0\u9ede\u4ee3\u8868\u4e00\u500b\u5206\u985e\u6216\u8ff4\u6b78\u7d50\u679c\u3002\u5c0d\u65bc\u65b0\u7684\u6578\u64da\u6a23\u672c\uff0c\u5b83\u53ef\u4ee5\u901a\u904e\u5f9e\u6839\u7bc0\u9ede\u958b\u59cb\u904d\u6b77\u6a39\u72c0\u6a21\u578b\uff0c\u4e26\u5c07\u5176\u6b78\u985e\u5230\u76f8\u61c9\u7684\u8449\u5b50\u7bc0\u9ede\u4e2d\u3002 Image source: freepik.com \u6c7a\u7b56\u6a39\u7684\u6982\u5ff5\u662f\u7d66\u5b9a\u4e00\u7d44\u8a13\u7df4\u8cc7\u6599\uff0c\u900f\u904e\u6240\u6709\u7684\u7279\u5fb5\u8a66\u6cd5\u627e\u5230\u5408\u9069\u7684\u7279\u5fb5\u5206\u6210\u5e7e\u7d44\u5f8c\u7d14\u5ea6\u7684\u5206\u6578\u8981\u8d8a\u5c0f\u8d8a\u597d\u3002\u8861\u91cf\u7d14\u5ea6(\u4e82\u5ea6)\u7684\u6307\u6a19\u5927\u81f4\u5206\u70ba Entropy \u8207 Gini index \u5169\u7a2e\u3002 Entropy\uff1a\u71b5\u662f\u4e00\u7a2e\u8861\u91cf\u7cfb\u7d71\u4e0d\u7a69\u5b9a\u7a0b\u5ea6\u7684\u6307\u6a19\uff0c\u71b5\u8d8a\u9ad8\u8868\u793a\u7cfb\u7d71\u8d8a\u4e0d\u7a69\u5b9a\u3002 Gini index\uff1a\u5409\u5c3c\u4fc2\u6578\u662f\u53e6\u4e00\u7a2e\u7528\u65bc\u8a08\u7b97\u4e82\u5ea6\u7684\u6307\u6a19\uff0c\u4e5f\u53ef\u4ee5\u7528\u65bc\u5224\u65b7\u6578\u64da\u96c6\u7684\u7d14\u5ea6\u3002\u6578\u503c\u8d8a\u5c0f\u8868\u793a\u6578\u64da\u96c6\u8d8a\u7d14\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u6c7a\u7b56\u6a39 (Decision tree) \u6c7a\u7b56\u6a39\u5982\u4f55\u89e3\u91cb\uff1f \u4ee5\u4e0b\u8209\u4f8b\u8aaa\u660e\u5982\u4f55\u900f\u904e\u5e74\u9f61\u3001\u6536\u5165\u3001\u662f\u5426\u70ba\u5b78\u751f\u4ee5\u53ca\u4fe1\u7528\u8a55\u7b49\u7279\u5fb5\uff0c\u4f86\u9810\u6e2c\u4e00\u500b\u4eba\u662f\u5426\u6703\u8cfc\u8cb7\u96fb\u8166\u3002\u6211\u5011\u7684\u76ee\u6a19\u662f\u5229\u7528\u4e0b\u9762\u9019\u5f35\u8868\u683c\u5efa\u7acb\u4e00\u68f5\u6c7a\u7b56\u6a39\uff0c\u4ee5\u4fbf\u672a\u4f86\u9810\u6e2c\u6642\u80fd\u5920\u4f9d\u64da\u6b64\u6a39\u9032\u884c\u5224\u65b7\u3002\u554f\u984c\u5728\u65bc\uff0c\u6211\u5011\u8a72\u5982\u4f55\u5229\u7528\u9019\u5f35\u8868\u683c\u4f86\u5efa\u7acb\u6c7a\u7b56\u6a39\u5462\uff1f \u5728\u5efa\u51fa\u9019\u68f5\u6a39\u4e4b\u524d\u6211\u5011\u8981\u5148\u7b97\u5728\u505a\u4efb\u4f55\u4e8b\u4e4b\u524d\u9019\u500b\u8cc7\u6599\u5230\u5e95\u6709\u591a\u4e82\uff1f\u5982\u679c\u7528 Entropy \u4f86\u7b97\u9019\u5341\u56db\u4eba\u7576\u4e2d\u6709\u4e5d\u4f4d\u6703\u8cb7\u96fb\u8166\uff0c\u53e6\u5916\u4e94\u4f4d\u4e0d\u6703\u8cb7\u96fb\u8166\u3002\u6211\u5011\u53ef\u4ee5\u8868\u793a\u6210 Info(9, 5) \u7b97\u51fa\u4f86\u7684\u4e82\u5ea6\u662f 0.94\u3002\u4e5f\u5c31\u4ee3\u8868\u5728\u6211\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u4e4b\u524d\u9019\u5341\u56db\u4f4d\u7e3d\u5171\u6709 0.94 \u9019\u9ebc\u4e82\u3002 \u63a5\u4e0b\u4f86\u8981\u505a\u7684\u662f\u4f7f\u7528\u7b2c\u4e00\u500b\u5e74\u9f61\u7279\u5fb5\u628a\u9019\u5341\u56db\u4f4d\u5206\u6210\u4e09\u7d44\uff0c\u4e26\u7b97\u7b97\u770b\u5206\u5b8c\u7d50\u679c\u6709\u591a\u4e82\u3002\u8a08\u7b97\u5b8c\u5f8c\u540c\u6642\u4e5f\u7b97\u770b\u770b\u6536\u5165\u3001\u662f\u5426\u5b78\u751f\u3001\u4fe1\u7528\u8a55\u7b49\u9019\u5e7e\u500b\u7279\u5fb5\u5206\u5b8c\u5f8c\u8a08\u7b97\u9019\u500b Entropy \u662f\u6700\u7d14\u7684\u3002\u5982\u679c\u6211\u5011\u7528\u5e74\u9f61\u628a\u4eba\u5206\u6210\u4e09\u7d44\uff0c\u6574\u9ad4\u7684\u4e82\u5ea6\u662f 0.694(\u8d8a\u5c0f\u8d8a\u597d)\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u6c42\u5f97\u4f7f\u7528\u5e74\u9f61\u9019\u500b\u7279\u5fb5\u5f97\u5230\u7684\u7d14\u5ea6\u9032\u6b65\u4e86 0.246\u3002 \u540c\u7406\u6211\u5011\u53ef\u4ee5\u8a08\u7b97\u53ca\u4ed6\u7684\u7279\u5fb5\u6240\u5e36\u4f86\u7684\u7d14\u5ea6\uff0c\u53ef\u4ee5\u767c\u73fe\u9019\u56db\u500b\u7279\u5fb5\u7b2c\u4e00\u500b\u6b65\u9a5f\u7528\u5e74\u9f61\u4f86\u5206\u6703\u8b93\u7d50\u679c\u662f\u6700\u7d14\u7684\u3002 Gain(\u5e74\u9f61) = 0.246 Gain(\u6536\u5165) = 0.029 Gain(\u662f\u5426\u5b78\u751f) = 0.151 Gain(\u4fe1\u7528) = 0.048 \u56e0\u6b64\u7b2c\u4e00\u6b65\u6703\u5c07\u5e74\u7d00\u5206\u70ba\u4e09\u7d44\uff0c\u63a5\u8457\u5728\u5e74\u8f15\u9019\u500b\u7bc0\u9ede\u6211\u5011\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u51fa\u4f7f\u7528\u662f\u5426\u5b78\u751f\u9019\u500b\u7279\u5fb5\u53ef\u4ee5\u5f88\u5b8c\u7f8e\u7684\u5c07\u9019\u4e94\u4eba\u5206\u958b\u3002 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u900f\u904e\u525b\u525b\u7684\u65b9\u6cd5\u4f9d\u5e8f\u8a08\u7b97\uff0c\u9078\u64c7\u6700\u9069\u5408\u7684\u7279\u5fb5\u9032\u884c\u6700\u4f73\u5206\u985e\u3002\u6700\u5f8c\u5efa\u7acb\u51fa\u9019\u68f5\u6a39\uff0c\u9032\u800c\u80fd\u5920\u63d0\u4f9b\u5f88\u597d\u7684\u89e3\u91cb\u6027\u3002 \u6c7a\u7b56\u6a39\u7684\u7279\u5fb5\u91cd\u8981\u6027 \u6c7a\u7b56\u6a39\u4e5f\u53ef\u4ee5\u900f\u904e\u7279\u5fb5\u91cd\u8981\u6027\u8a08\u7b97\u54ea\u4e9b\u7279\u5fb5\u662f\u91cd\u8981\u7684\u3002\u60f3\u60f3\u770b\u5982\u679c\u4f60\u5efa\u51fa\u4e00\u68f5\u6a39\uff0c\u4ec0\u9ebc\u53eb\u505a\u4e00\u500b\u7279\u5fb5\u5f88\u91cd\u8981\uff1f\u9996\u5148\u662f\u5982\u679c\u9019\u500b\u7279\u5fb5\u5f71\u97ff\u5f88\u591a\u6a23\u672c\u7684\u6c7a\u7b56\uff0c\u518d\u8005\u8a72\u7279\u5fb5\u900f\u904e\u4e82\u5ea6\u8a08\u7b97\u53ef\u4ee5\u8b93\u7d50\u679c\u5f88\u7d14\u7684\u8a71\u8a72\u7279\u5fb5\u626e\u6f14\u91cd\u8981\u89d2\u8272\u3002\u56e0\u6b64\u6211\u5011\u6703\u5e0c\u671b\u80fd\u5920\u900f\u904e\u4ee5\u4e0a\u5169\u9ede\u7d9c\u5408\u8003\u91cf\uff0c\u5408\u7406\u7684\u5224\u65b7\u54ea\u500b\u7279\u5fb5\u91cd\u8981\u3002 \u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5 X1 \u548c X2\uff0c\u5176\u539f\u59cb\u8cc7\u6599\u4e82\u5ea6\u70ba 0.9 \u7d93\u904e x1 \u7279\u5fb5\u4e0b\u53bb\u5207\u5272\u5f8c\u5f97\u5230\u7684\u7d14\u5ea6\u9032\u6b65\u4e86 0.26\u3002\u63a5\u4e0b\u4f86\u4e00\u6a23\u8a08\u7b97\u5de6\u908a\u5206\u679d\u900f\u904e x2 \u7279\u5fb5\u5207\u5272\u5f8c\u7d14\u5ea6\u9032\u6b65\u4e86 0.37\u3002\u7d93\u904e\u4ee5\u4e0a\u53cd\u8986\u8a08\u7b97\u6211\u5011\u53ef\u4ee5\u5f97\u77e5\u6bcf\u500b\u7bc0\u9ede\u900f\u904e\u67d0\u7279\u5fb5\u5207\u5272\u5f8c\u7d14\u5ea6\u6703\u9032\u6b65\u591a\u5c11\uff1f\u4e0b\u4e00\u6b65\u5c31\u662f\u8a08\u7b97\u6bcf\u500b\u7bc0\u9ede\u6709\u591a\u5c11\u7684\u8cc7\u6599\u6bd4\u4f8b\u6703\u7d93\u904e\uff0c\u4e4b\u5f8c\u5c31\u53ef\u4ee5\u8a08\u7b97 x1 \u8ddf x2 \u6709\u591a\u91cd\u8981\u4e86\u3002\u4ee5 x1 \u4f86\u8aaa\u7b2c\u4e00\u500b\u7bc0\u9ede\u6240\u6709\u6a23\u672c\u90fd\u6703\u88ab\u62ff\u4f86\u8a55\u4f30\u56e0\u6b64 100%\u00d70.26\uff0c\u63a5\u8457\u5728\u53e6\u500b\u7bc0\u9ede x1 \u6709\u767e\u5206\u4e4b\u4e03\u5341\u7684\u6a23\u672c\u6703\u88ab\u62ff\u4f86\u8a55\u4f30\uff0c\u4e14\u8a55\u4f30\u5b8c\u5f8c\u7d14\u5ea6\u5e73\u5747\u6703\u9032\u6b65 0.21 \u56e0\u6b64 70%\u00d70.21\u3002\u7d9c\u5408\u52a0\u8d77\u4f86 x1 \u7684\u91cd\u8981\u7a0b\u5ea6\u6709 0.407\u3002 [\u5be6\u4f5c] \u6c7a\u7b56\u6a39\u5206\u985e\u5668\u89e3\u91cb \u4ee5\u4e0b\u7bc4\u4f8b\u4f7f\u7528\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6\u3002\u7a0b\u5f0f\u78bc\u4e2d\u4f7f\u7528\u4e86 load_iris() \u51fd\u5f0f\u5c07\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6\u8f09\u5165\uff0c\u5c07\u8cc7\u6599\u5b58\u653e\u5728 X \u8207 y \u5169\u500b\u8b8a\u6578\u4e2d\uff0c\u5206\u5225\u4ee3\u8868\u8cc7\u6599\u96c6\u4e2d\u7684\u7279\u5fb5\u503c\u8207\u76ee\u6a19\u8b8a\u6578\u3002\u6700\u5f8c\u4f7f\u7528 train_test_split() \u51fd\u5f0f\u5c07\u8cc7\u6599\u96c6\u5207\u5206\u6210\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.datasets import load_iris from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6 iris = load_iris () X = iris . data y = iris . target # \u5207\u5206\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.3 , random_state = 42 , stratify = y ) \u63a5\u8457\u4f7f\u7528 sklearn \u4e2d\u7684 DecisionTreeClassifier \u5efa\u7acb\u4e86\u4e00\u500b\u6c7a\u7b56\u6a39\u6a21\u578b\u3002\u9996\u5148\uff0c\u4f7f\u7528 criterion = 'entropy' \u6307\u5b9a\u6a21\u578b\u4f7f\u7528\u8cc7\u8a0a\u71b5\u4f5c\u70ba\u5206\u88c2\u6a19\u6e96\uff0c\u9019\u8868\u793a\u6c7a\u7b56\u6a39\u6703\u512a\u5148\u9078\u64c7\u5206\u88c2\u5f8c\u7684\u5b50\u96c6\u66f4\u52a0\u7d14\u7cb9\uff08\u5373\u66f4\u5c11\u7684\u6df7\u4e82\uff09\u7684\u7279\u5fb5\u3002\u6b64\u5916\u6211\u5011\u53ef\u4ee5\u5c0d\u6a21\u578b\u9032\u884c\u4e00\u4e9b\u5ba2\u88fd\u5316\u7684\u8a2d\u5b9a\uff0cmax_depth=4 \u662f\u6307\u5b9a\u6c7a\u7b56\u6a39\u7684\u6700\u5927\u6df1\u5ea6\u70ba 4 \u5c64\uff0c\u9019\u8868\u793a\u6c7a\u7b56\u6a39\u6700\u591a\u53ef\u4ee5\u5206\u88c2\u51fa 4 \u5c64\u5b50\u6a39\u3002\u5404\u4f4d\u53ef\u4ee5\u8a66\u8457\u89c0\u5bdf\u96a8\u8457\u6a39\u6df1\u5ea6\u8d8a\u5927\u662f\u5426\u80fd\u5920\u8b93\u6a21\u578b\u8b8a\u5f97\u66f4\u6e96\u78ba\u3002 from sklearn.tree import DecisionTreeClassifier # \u5efa\u7acb DecisionTreeClassifier \u6a21\u578b decisionTreeModel = DecisionTreeClassifier ( criterion = 'entropy' , max_depth = 4 , random_state = 42 ) # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b decisionTreeModel . fit ( X_train , y_train ) \u8a13\u7df4\u7d50\u675f\u5f8c\u53ef\u4ee5\u900f\u904e get_depth() \u65b9\u6cd5\u67e5\u770b\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u6df1\u5ea6\u3002\u82e5\u5728\u5efa\u7acb\u6a21\u578b\u6642\u70ba\u7d66\u5b9a max_depth \u6578\u503c\uff0c\u5247\u6a21\u578b\u5728\u8a13\u7df4\u671f\u9593\u6a39\u6703\u4e0d\u65b7\u64f4\u5c55\uff0c\u76f4\u5230\u6240\u6709\u7684\u8449\u5b50\u7bc0\u9ede\u90fd\u662f\u7d14\u7684\uff08\u5373\u6a23\u672c\u5c6c\u65bc\u540c\u4e00\u500b\u985e\u5225\uff09\uff0c\u6216\u8005\u8449\u5b50\u7bc0\u9ede\u5305\u542b\u7684\u6a23\u672c\u6578\u5c0f\u65bc min_samples_split \u6240\u8a2d\u5b9a\u7684\u503c\u3002 max_depth\u53c3\u6578\u7684\u8a2d\u5b9a\u6703\u5f71\u97ff\u6c7a\u7b56\u6a39\u7684\u8907\u96dc\u5ea6\u548c\u904e\u64ec\u5408\u554f\u984c\uff0c\u901a\u5e38\u9700\u8981\u901a\u904e\u4ea4\u53c9\u9a57\u8b49\u7b49\u65b9\u5f0f\u9032\u884c\u8abf\u53c3\u3002 print ( '\u6c7a\u7b56\u6a39\u6700\u5927\u6df1\u5ea6: ' , decisionTreeModel . get_depth ()) \u57f7\u884c\u7d50\u679c\uff1a \u6c7a\u7b56\u6a39\u6700\u5927\u6df1\u5ea6: 4 plot_tree \u662f sklearn \u4e2d\u7528\u65bc\u7e6a\u88fd\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u8a72\u65b9\u6cd5\u53ef\u4ee5\u7e6a\u88fd\u51fa\u5df2\u64ec\u5408\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u6a39\u5f62\u7d50\u69cb\uff0c\u4ee5\u4fbf\u9032\u884c\u6a21\u578b\u7684\u89e3\u91cb\u548c\u8996\u89ba\u5316\u3002 from sklearn.tree import plot_tree import matplotlib.pyplot as plt plt . figure ( figsize = ( 12 , 10 )) plot_tree ( decisionTreeModel , feature_names = iris . feature_names , class_names = iris . target_names , filled = True ) plt . show () \u6211\u5011\u4e5f\u53ef\u4ee5\u900f\u904e feature_importances_ \u4f86\u53d6\u5f97\u6c7a\u7b56\u6a39\u6a21\u578b\u4e2d\u5404\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u503c\u3002\u91cd\u8981\u6027\u503c\u8d8a\u9ad8\u7684\u7279\u5fb5\uff0c\u8868\u793a\u5728\u6c7a\u7b56\u6a39\u4e2d\u5176\u5f71\u97ff\u529b\u8d8a\u5927\uff0c\u80fd\u5920\u5c0d\u9810\u6e2c\u7d50\u679c\u7522\u751f\u8f03\u5927\u7684\u5f71\u97ff\u3002 importances = decisionTreeModel . feature_importances_ indices = np . argsort ( importances )[:: - 1 ] for f in range ( X_train . shape [ 1 ]): print ( f ' { feature_names [ indices [ f ]] } : { importances [ indices [ f ]] } ' ) \u57f7\u884c\u7d50\u679c\uff1a petal length (cm): 0.6289008293445076 petal width (cm): 0.34266728207712693 sepal length (cm): 0.028431888578365407 sepal width (cm): 0.0 \u5f9e\u7d50\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u82b1\u74e3\u7684\u9577\u5ea6\uff08petal length\uff09\u662f\u5f71\u97ff\u9cf6\u5c3e\u82b1\u5206\u985e\u7684\u6700\u91cd\u8981\u7279\u5fb5\uff0c\u5176\u91cd\u8981\u6027\u5f97\u5206\u70ba 0.6289\uff0c\u5176\u6b21\u662f\u82b1\u74e3\u7684\u5bec\u5ea6\uff08petal width\uff09\uff0c\u5176\u5f97\u5206\u70ba 0.3427\u3002\u800c\u82b1\u843c\u9577\u5ea6\uff08sepal length\uff09\u5c0d\u5206\u985e\u5f71\u97ff\u76f8\u5c0d\u8f03\u5c0f\uff0c\u5f97\u5206\u50c5\u70ba 0.0284\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u82b1\u843c\u5bec\u5ea6\uff08sepal width\uff09\u7684\u5f97\u5206\u70ba 0\uff0c\u8868\u793a\u5728\u9019\u500b\u6a21\u578b\u4e2d\uff0c\u82b1\u843c\u5bec\u5ea6\u5c0d\u65bc\u9cf6\u5c3e\u82b1\u7684\u5206\u985e\u8ca2\u737b\u975e\u5e38\u5c0f\u6216\u8005\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8a08\u3002\u6211\u5011\u4e5f\u53ef\u5f9e\u8996\u89ba\u5316\u7684\u5716\u4e2d\u767c\u73fe\u78ba\u5be6\u82b1\u843c\u5bec\u5ea6\u6c92\u6709\u5728\u4efb\u4e00\u7bc0\u9ede\u4e2d\u51fa\u73fe\u3002 Reference cse352 DECISION TREE CLASSIFICATION","title":"[Day 9] \u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5\uff1a\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#day-9-xai","text":"\u7bc4\u4f8b\u7a0b\u5f0f\uff1a \u900f\u904e\u7279\u5fb5\u91cd\u8981\u6027\u4e86\u89e3\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u7684\u6c7a\u7b56\u904e\u7a0b","title":"[Day 9] \u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5\uff1a\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#_1","text":"\u6c7a\u7b56\u6a39\u662f\u4e00\u7a2e\u76e3\u7763\u5f0f\u5b78\u7fd2\u6f14\u7b97\u6cd5\uff0c\u7528\u65bc\u89e3\u6c7a\u5206\u985e\u6216\u8ff4\u6b78\u554f\u984c\u3002\u8a72\u65b9\u6cd5\u900f\u904e\u5c0d\u8a13\u7df4\u96c6\u8cc7\u6599\u7684\u5206\u6790\u4f86\u5efa\u69cb\u4e00\u68f5\u6a39\u72c0\u7d50\u69cb\u7684\u6a21\u578b\uff0c\u5176\u4e2d\u6bcf\u500b\u5167\u90e8\u7bc0\u9ede\u90fd\u4ee3\u8868\u4e00\u500b\u7279\u5fb5\uff0c\u6bcf\u500b\u8449\u5b50\u7bc0\u9ede\u4ee3\u8868\u4e00\u500b\u5206\u985e\u6216\u8ff4\u6b78\u7d50\u679c\u3002\u5c0d\u65bc\u65b0\u7684\u6578\u64da\u6a23\u672c\uff0c\u5b83\u53ef\u4ee5\u901a\u904e\u5f9e\u6839\u7bc0\u9ede\u958b\u59cb\u904d\u6b77\u6a39\u72c0\u6a21\u578b\uff0c\u4e26\u5c07\u5176\u6b78\u985e\u5230\u76f8\u61c9\u7684\u8449\u5b50\u7bc0\u9ede\u4e2d\u3002 Image source: freepik.com \u6c7a\u7b56\u6a39\u7684\u6982\u5ff5\u662f\u7d66\u5b9a\u4e00\u7d44\u8a13\u7df4\u8cc7\u6599\uff0c\u900f\u904e\u6240\u6709\u7684\u7279\u5fb5\u8a66\u6cd5\u627e\u5230\u5408\u9069\u7684\u7279\u5fb5\u5206\u6210\u5e7e\u7d44\u5f8c\u7d14\u5ea6\u7684\u5206\u6578\u8981\u8d8a\u5c0f\u8d8a\u597d\u3002\u8861\u91cf\u7d14\u5ea6(\u4e82\u5ea6)\u7684\u6307\u6a19\u5927\u81f4\u5206\u70ba Entropy \u8207 Gini index \u5169\u7a2e\u3002 Entropy\uff1a\u71b5\u662f\u4e00\u7a2e\u8861\u91cf\u7cfb\u7d71\u4e0d\u7a69\u5b9a\u7a0b\u5ea6\u7684\u6307\u6a19\uff0c\u71b5\u8d8a\u9ad8\u8868\u793a\u7cfb\u7d71\u8d8a\u4e0d\u7a69\u5b9a\u3002 Gini index\uff1a\u5409\u5c3c\u4fc2\u6578\u662f\u53e6\u4e00\u7a2e\u7528\u65bc\u8a08\u7b97\u4e82\u5ea6\u7684\u6307\u6a19\uff0c\u4e5f\u53ef\u4ee5\u7528\u65bc\u5224\u65b7\u6578\u64da\u96c6\u7684\u7d14\u5ea6\u3002\u6578\u503c\u8d8a\u5c0f\u8868\u793a\u6578\u64da\u96c6\u8d8a\u7d14\u3002 \u7406\u8ad6\u77e5\u8b58\u53ef\u4ee5\u53c3\u8003\u5168\u6c11\u760bAI\u7cfb\u52172.0 \u6c7a\u7b56\u6a39 (Decision tree)","title":"\u6c7a\u7b56\u6a39"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#_2","text":"\u4ee5\u4e0b\u8209\u4f8b\u8aaa\u660e\u5982\u4f55\u900f\u904e\u5e74\u9f61\u3001\u6536\u5165\u3001\u662f\u5426\u70ba\u5b78\u751f\u4ee5\u53ca\u4fe1\u7528\u8a55\u7b49\u7279\u5fb5\uff0c\u4f86\u9810\u6e2c\u4e00\u500b\u4eba\u662f\u5426\u6703\u8cfc\u8cb7\u96fb\u8166\u3002\u6211\u5011\u7684\u76ee\u6a19\u662f\u5229\u7528\u4e0b\u9762\u9019\u5f35\u8868\u683c\u5efa\u7acb\u4e00\u68f5\u6c7a\u7b56\u6a39\uff0c\u4ee5\u4fbf\u672a\u4f86\u9810\u6e2c\u6642\u80fd\u5920\u4f9d\u64da\u6b64\u6a39\u9032\u884c\u5224\u65b7\u3002\u554f\u984c\u5728\u65bc\uff0c\u6211\u5011\u8a72\u5982\u4f55\u5229\u7528\u9019\u5f35\u8868\u683c\u4f86\u5efa\u7acb\u6c7a\u7b56\u6a39\u5462\uff1f \u5728\u5efa\u51fa\u9019\u68f5\u6a39\u4e4b\u524d\u6211\u5011\u8981\u5148\u7b97\u5728\u505a\u4efb\u4f55\u4e8b\u4e4b\u524d\u9019\u500b\u8cc7\u6599\u5230\u5e95\u6709\u591a\u4e82\uff1f\u5982\u679c\u7528 Entropy \u4f86\u7b97\u9019\u5341\u56db\u4eba\u7576\u4e2d\u6709\u4e5d\u4f4d\u6703\u8cb7\u96fb\u8166\uff0c\u53e6\u5916\u4e94\u4f4d\u4e0d\u6703\u8cb7\u96fb\u8166\u3002\u6211\u5011\u53ef\u4ee5\u8868\u793a\u6210 Info(9, 5) \u7b97\u51fa\u4f86\u7684\u4e82\u5ea6\u662f 0.94\u3002\u4e5f\u5c31\u4ee3\u8868\u5728\u6211\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u4e4b\u524d\u9019\u5341\u56db\u4f4d\u7e3d\u5171\u6709 0.94 \u9019\u9ebc\u4e82\u3002 \u63a5\u4e0b\u4f86\u8981\u505a\u7684\u662f\u4f7f\u7528\u7b2c\u4e00\u500b\u5e74\u9f61\u7279\u5fb5\u628a\u9019\u5341\u56db\u4f4d\u5206\u6210\u4e09\u7d44\uff0c\u4e26\u7b97\u7b97\u770b\u5206\u5b8c\u7d50\u679c\u6709\u591a\u4e82\u3002\u8a08\u7b97\u5b8c\u5f8c\u540c\u6642\u4e5f\u7b97\u770b\u770b\u6536\u5165\u3001\u662f\u5426\u5b78\u751f\u3001\u4fe1\u7528\u8a55\u7b49\u9019\u5e7e\u500b\u7279\u5fb5\u5206\u5b8c\u5f8c\u8a08\u7b97\u9019\u500b Entropy \u662f\u6700\u7d14\u7684\u3002\u5982\u679c\u6211\u5011\u7528\u5e74\u9f61\u628a\u4eba\u5206\u6210\u4e09\u7d44\uff0c\u6574\u9ad4\u7684\u4e82\u5ea6\u662f 0.694(\u8d8a\u5c0f\u8d8a\u597d)\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u6c42\u5f97\u4f7f\u7528\u5e74\u9f61\u9019\u500b\u7279\u5fb5\u5f97\u5230\u7684\u7d14\u5ea6\u9032\u6b65\u4e86 0.246\u3002 \u540c\u7406\u6211\u5011\u53ef\u4ee5\u8a08\u7b97\u53ca\u4ed6\u7684\u7279\u5fb5\u6240\u5e36\u4f86\u7684\u7d14\u5ea6\uff0c\u53ef\u4ee5\u767c\u73fe\u9019\u56db\u500b\u7279\u5fb5\u7b2c\u4e00\u500b\u6b65\u9a5f\u7528\u5e74\u9f61\u4f86\u5206\u6703\u8b93\u7d50\u679c\u662f\u6700\u7d14\u7684\u3002 Gain(\u5e74\u9f61) = 0.246 Gain(\u6536\u5165) = 0.029 Gain(\u662f\u5426\u5b78\u751f) = 0.151 Gain(\u4fe1\u7528) = 0.048 \u56e0\u6b64\u7b2c\u4e00\u6b65\u6703\u5c07\u5e74\u7d00\u5206\u70ba\u4e09\u7d44\uff0c\u63a5\u8457\u5728\u5e74\u8f15\u9019\u500b\u7bc0\u9ede\u6211\u5011\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u51fa\u4f7f\u7528\u662f\u5426\u5b78\u751f\u9019\u500b\u7279\u5fb5\u53ef\u4ee5\u5f88\u5b8c\u7f8e\u7684\u5c07\u9019\u4e94\u4eba\u5206\u958b\u3002 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u900f\u904e\u525b\u525b\u7684\u65b9\u6cd5\u4f9d\u5e8f\u8a08\u7b97\uff0c\u9078\u64c7\u6700\u9069\u5408\u7684\u7279\u5fb5\u9032\u884c\u6700\u4f73\u5206\u985e\u3002\u6700\u5f8c\u5efa\u7acb\u51fa\u9019\u68f5\u6a39\uff0c\u9032\u800c\u80fd\u5920\u63d0\u4f9b\u5f88\u597d\u7684\u89e3\u91cb\u6027\u3002","title":"\u6c7a\u7b56\u6a39\u5982\u4f55\u89e3\u91cb\uff1f"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#_3","text":"\u6c7a\u7b56\u6a39\u4e5f\u53ef\u4ee5\u900f\u904e\u7279\u5fb5\u91cd\u8981\u6027\u8a08\u7b97\u54ea\u4e9b\u7279\u5fb5\u662f\u91cd\u8981\u7684\u3002\u60f3\u60f3\u770b\u5982\u679c\u4f60\u5efa\u51fa\u4e00\u68f5\u6a39\uff0c\u4ec0\u9ebc\u53eb\u505a\u4e00\u500b\u7279\u5fb5\u5f88\u91cd\u8981\uff1f\u9996\u5148\u662f\u5982\u679c\u9019\u500b\u7279\u5fb5\u5f71\u97ff\u5f88\u591a\u6a23\u672c\u7684\u6c7a\u7b56\uff0c\u518d\u8005\u8a72\u7279\u5fb5\u900f\u904e\u4e82\u5ea6\u8a08\u7b97\u53ef\u4ee5\u8b93\u7d50\u679c\u5f88\u7d14\u7684\u8a71\u8a72\u7279\u5fb5\u626e\u6f14\u91cd\u8981\u89d2\u8272\u3002\u56e0\u6b64\u6211\u5011\u6703\u5e0c\u671b\u80fd\u5920\u900f\u904e\u4ee5\u4e0a\u5169\u9ede\u7d9c\u5408\u8003\u91cf\uff0c\u5408\u7406\u7684\u5224\u65b7\u54ea\u500b\u7279\u5fb5\u91cd\u8981\u3002 \u5047\u8a2d\u6709\u5169\u500b\u7279\u5fb5 X1 \u548c X2\uff0c\u5176\u539f\u59cb\u8cc7\u6599\u4e82\u5ea6\u70ba 0.9 \u7d93\u904e x1 \u7279\u5fb5\u4e0b\u53bb\u5207\u5272\u5f8c\u5f97\u5230\u7684\u7d14\u5ea6\u9032\u6b65\u4e86 0.26\u3002\u63a5\u4e0b\u4f86\u4e00\u6a23\u8a08\u7b97\u5de6\u908a\u5206\u679d\u900f\u904e x2 \u7279\u5fb5\u5207\u5272\u5f8c\u7d14\u5ea6\u9032\u6b65\u4e86 0.37\u3002\u7d93\u904e\u4ee5\u4e0a\u53cd\u8986\u8a08\u7b97\u6211\u5011\u53ef\u4ee5\u5f97\u77e5\u6bcf\u500b\u7bc0\u9ede\u900f\u904e\u67d0\u7279\u5fb5\u5207\u5272\u5f8c\u7d14\u5ea6\u6703\u9032\u6b65\u591a\u5c11\uff1f\u4e0b\u4e00\u6b65\u5c31\u662f\u8a08\u7b97\u6bcf\u500b\u7bc0\u9ede\u6709\u591a\u5c11\u7684\u8cc7\u6599\u6bd4\u4f8b\u6703\u7d93\u904e\uff0c\u4e4b\u5f8c\u5c31\u53ef\u4ee5\u8a08\u7b97 x1 \u8ddf x2 \u6709\u591a\u91cd\u8981\u4e86\u3002\u4ee5 x1 \u4f86\u8aaa\u7b2c\u4e00\u500b\u7bc0\u9ede\u6240\u6709\u6a23\u672c\u90fd\u6703\u88ab\u62ff\u4f86\u8a55\u4f30\u56e0\u6b64 100%\u00d70.26\uff0c\u63a5\u8457\u5728\u53e6\u500b\u7bc0\u9ede x1 \u6709\u767e\u5206\u4e4b\u4e03\u5341\u7684\u6a23\u672c\u6703\u88ab\u62ff\u4f86\u8a55\u4f30\uff0c\u4e14\u8a55\u4f30\u5b8c\u5f8c\u7d14\u5ea6\u5e73\u5747\u6703\u9032\u6b65 0.21 \u56e0\u6b64 70%\u00d70.21\u3002\u7d9c\u5408\u52a0\u8d77\u4f86 x1 \u7684\u91cd\u8981\u7a0b\u5ea6\u6709 0.407\u3002","title":"\u6c7a\u7b56\u6a39\u7684\u7279\u5fb5\u91cd\u8981\u6027"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#_4","text":"\u4ee5\u4e0b\u7bc4\u4f8b\u4f7f\u7528\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6\u3002\u7a0b\u5f0f\u78bc\u4e2d\u4f7f\u7528\u4e86 load_iris() \u51fd\u5f0f\u5c07\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6\u8f09\u5165\uff0c\u5c07\u8cc7\u6599\u5b58\u653e\u5728 X \u8207 y \u5169\u500b\u8b8a\u6578\u4e2d\uff0c\u5206\u5225\u4ee3\u8868\u8cc7\u6599\u96c6\u4e2d\u7684\u7279\u5fb5\u503c\u8207\u76ee\u6a19\u8b8a\u6578\u3002\u6700\u5f8c\u4f7f\u7528 train_test_split() \u51fd\u5f0f\u5c07\u8cc7\u6599\u96c6\u5207\u5206\u6210\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6\u3002 from sklearn.datasets import load_iris from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split import numpy as np # \u8f09\u5165\u9cf6\u5c3e\u82b1\u6735\u8cc7\u6599\u96c6 iris = load_iris () X = iris . data y = iris . target # \u5207\u5206\u8a13\u7df4\u96c6\u8207\u6e2c\u8a66\u96c6 X_train , X_test , y_train , y_test = train_test_split ( X , y , test_size = 0.3 , random_state = 42 , stratify = y ) \u63a5\u8457\u4f7f\u7528 sklearn \u4e2d\u7684 DecisionTreeClassifier \u5efa\u7acb\u4e86\u4e00\u500b\u6c7a\u7b56\u6a39\u6a21\u578b\u3002\u9996\u5148\uff0c\u4f7f\u7528 criterion = 'entropy' \u6307\u5b9a\u6a21\u578b\u4f7f\u7528\u8cc7\u8a0a\u71b5\u4f5c\u70ba\u5206\u88c2\u6a19\u6e96\uff0c\u9019\u8868\u793a\u6c7a\u7b56\u6a39\u6703\u512a\u5148\u9078\u64c7\u5206\u88c2\u5f8c\u7684\u5b50\u96c6\u66f4\u52a0\u7d14\u7cb9\uff08\u5373\u66f4\u5c11\u7684\u6df7\u4e82\uff09\u7684\u7279\u5fb5\u3002\u6b64\u5916\u6211\u5011\u53ef\u4ee5\u5c0d\u6a21\u578b\u9032\u884c\u4e00\u4e9b\u5ba2\u88fd\u5316\u7684\u8a2d\u5b9a\uff0cmax_depth=4 \u662f\u6307\u5b9a\u6c7a\u7b56\u6a39\u7684\u6700\u5927\u6df1\u5ea6\u70ba 4 \u5c64\uff0c\u9019\u8868\u793a\u6c7a\u7b56\u6a39\u6700\u591a\u53ef\u4ee5\u5206\u88c2\u51fa 4 \u5c64\u5b50\u6a39\u3002\u5404\u4f4d\u53ef\u4ee5\u8a66\u8457\u89c0\u5bdf\u96a8\u8457\u6a39\u6df1\u5ea6\u8d8a\u5927\u662f\u5426\u80fd\u5920\u8b93\u6a21\u578b\u8b8a\u5f97\u66f4\u6e96\u78ba\u3002 from sklearn.tree import DecisionTreeClassifier # \u5efa\u7acb DecisionTreeClassifier \u6a21\u578b decisionTreeModel = DecisionTreeClassifier ( criterion = 'entropy' , max_depth = 4 , random_state = 42 ) # \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b decisionTreeModel . fit ( X_train , y_train ) \u8a13\u7df4\u7d50\u675f\u5f8c\u53ef\u4ee5\u900f\u904e get_depth() \u65b9\u6cd5\u67e5\u770b\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u6df1\u5ea6\u3002\u82e5\u5728\u5efa\u7acb\u6a21\u578b\u6642\u70ba\u7d66\u5b9a max_depth \u6578\u503c\uff0c\u5247\u6a21\u578b\u5728\u8a13\u7df4\u671f\u9593\u6a39\u6703\u4e0d\u65b7\u64f4\u5c55\uff0c\u76f4\u5230\u6240\u6709\u7684\u8449\u5b50\u7bc0\u9ede\u90fd\u662f\u7d14\u7684\uff08\u5373\u6a23\u672c\u5c6c\u65bc\u540c\u4e00\u500b\u985e\u5225\uff09\uff0c\u6216\u8005\u8449\u5b50\u7bc0\u9ede\u5305\u542b\u7684\u6a23\u672c\u6578\u5c0f\u65bc min_samples_split \u6240\u8a2d\u5b9a\u7684\u503c\u3002 max_depth\u53c3\u6578\u7684\u8a2d\u5b9a\u6703\u5f71\u97ff\u6c7a\u7b56\u6a39\u7684\u8907\u96dc\u5ea6\u548c\u904e\u64ec\u5408\u554f\u984c\uff0c\u901a\u5e38\u9700\u8981\u901a\u904e\u4ea4\u53c9\u9a57\u8b49\u7b49\u65b9\u5f0f\u9032\u884c\u8abf\u53c3\u3002 print ( '\u6c7a\u7b56\u6a39\u6700\u5927\u6df1\u5ea6: ' , decisionTreeModel . get_depth ()) \u57f7\u884c\u7d50\u679c\uff1a \u6c7a\u7b56\u6a39\u6700\u5927\u6df1\u5ea6: 4 plot_tree \u662f sklearn \u4e2d\u7528\u65bc\u7e6a\u88fd\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u65b9\u6cd5\u3002\u8a72\u65b9\u6cd5\u53ef\u4ee5\u7e6a\u88fd\u51fa\u5df2\u64ec\u5408\u6c7a\u7b56\u6a39\u6a21\u578b\u7684\u6a39\u5f62\u7d50\u69cb\uff0c\u4ee5\u4fbf\u9032\u884c\u6a21\u578b\u7684\u89e3\u91cb\u548c\u8996\u89ba\u5316\u3002 from sklearn.tree import plot_tree import matplotlib.pyplot as plt plt . figure ( figsize = ( 12 , 10 )) plot_tree ( decisionTreeModel , feature_names = iris . feature_names , class_names = iris . target_names , filled = True ) plt . show () \u6211\u5011\u4e5f\u53ef\u4ee5\u900f\u904e feature_importances_ \u4f86\u53d6\u5f97\u6c7a\u7b56\u6a39\u6a21\u578b\u4e2d\u5404\u500b\u7279\u5fb5\u7684\u91cd\u8981\u6027\u503c\u3002\u91cd\u8981\u6027\u503c\u8d8a\u9ad8\u7684\u7279\u5fb5\uff0c\u8868\u793a\u5728\u6c7a\u7b56\u6a39\u4e2d\u5176\u5f71\u97ff\u529b\u8d8a\u5927\uff0c\u80fd\u5920\u5c0d\u9810\u6e2c\u7d50\u679c\u7522\u751f\u8f03\u5927\u7684\u5f71\u97ff\u3002 importances = decisionTreeModel . feature_importances_ indices = np . argsort ( importances )[:: - 1 ] for f in range ( X_train . shape [ 1 ]): print ( f ' { feature_names [ indices [ f ]] } : { importances [ indices [ f ]] } ' ) \u57f7\u884c\u7d50\u679c\uff1a petal length (cm): 0.6289008293445076 petal width (cm): 0.34266728207712693 sepal length (cm): 0.028431888578365407 sepal width (cm): 0.0 \u5f9e\u7d50\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u82b1\u74e3\u7684\u9577\u5ea6\uff08petal length\uff09\u662f\u5f71\u97ff\u9cf6\u5c3e\u82b1\u5206\u985e\u7684\u6700\u91cd\u8981\u7279\u5fb5\uff0c\u5176\u91cd\u8981\u6027\u5f97\u5206\u70ba 0.6289\uff0c\u5176\u6b21\u662f\u82b1\u74e3\u7684\u5bec\u5ea6\uff08petal width\uff09\uff0c\u5176\u5f97\u5206\u70ba 0.3427\u3002\u800c\u82b1\u843c\u9577\u5ea6\uff08sepal length\uff09\u5c0d\u5206\u985e\u5f71\u97ff\u76f8\u5c0d\u8f03\u5c0f\uff0c\u5f97\u5206\u50c5\u70ba 0.0284\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u82b1\u843c\u5bec\u5ea6\uff08sepal width\uff09\u7684\u5f97\u5206\u70ba 0\uff0c\u8868\u793a\u5728\u9019\u500b\u6a21\u578b\u4e2d\uff0c\u82b1\u843c\u5bec\u5ea6\u5c0d\u65bc\u9cf6\u5c3e\u82b1\u7684\u5206\u985e\u8ca2\u737b\u975e\u5e38\u5c0f\u6216\u8005\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8a08\u3002\u6211\u5011\u4e5f\u53ef\u5f9e\u8996\u89ba\u5316\u7684\u5716\u4e2d\u767c\u73fe\u78ba\u5be6\u82b1\u843c\u5bec\u5ea6\u6c92\u6709\u5728\u4efb\u4e00\u7bc0\u9ede\u4e2d\u51fa\u73fe\u3002","title":"[\u5be6\u4f5c] \u6c7a\u7b56\u6a39\u5206\u985e\u5668\u89e3\u91cb"},{"location":"9.\u57fa\u65bc\u6a39\u72c0\u7d50\u69cb\u7684XAI\u65b9\u6cd5:\u6c7a\u7b56\u6a39\u7684\u53ef\u89e3\u91cb\u6027/#reference","text":"cse352 DECISION TREE CLASSIFICATION","title":"Reference"}]}